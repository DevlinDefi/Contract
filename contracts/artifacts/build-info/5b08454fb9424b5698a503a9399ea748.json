{
	"id": "5b08454fb9424b5698a503a9399ea748",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/LpPrice.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function token0() external view returns (address);\r\n\r\n    function token1() external view returns (address);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n}\r\n\r\ninterface Router {\r\n    function getAmountsOut(uint amountIn, address[] memory path) external\r\n        view\r\n        returns (uint[] memory amounts);\r\n}\r\n\r\ncontract LpUtils {\r\n    address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd;\r\n    address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7;\r\n    uint256 amount = 1000000000000000000;\r\n\r\n    function CalcLpPrice(IERC20 lpAddress, Router routerAddress, address busd) external view returns(uint256){\r\n        return (lpAddress.balanceOf(lpAddress.token0()));\r\n    }\r\n\r\n    function totalSupply(IERC20 lpAddress) external view returns(uint256){\r\n        return lpAddress.totalSupply();\r\n    }\r\n\r\n    function token0(IERC20 lpAddress) external view returns(address){\r\n        return lpAddress.token0();\r\n    }\r\n\r\n    function token1(IERC20 lpAddress) external view returns(address){\r\n        return lpAddress.token1();\r\n    }\r\n\r\n    function price(Router routerAddress, address token) external view returns(uint){\r\n        address[] memory path = new address[](3);\r\n        path[0] = token;\r\n        path[1] = WBNB;\r\n        path[2] = BUSD;\r\n        return routerAddress.getAmountsOut(amount,path)[2];\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/LpPrice.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LpPrice.sol\":60:8334  library Address {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LpPrice.sol\":60:8334  library Address {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bce477cb4ba7d6a1e6b549e3a4332e888164bc7e7a8c6c1eb7d7a3879cbfb77664736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bce477cb4ba7d6a1e6b549e3a4332e888164bc7e7a8c6c1eb7d7a3879cbfb77664736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC 0xE4 PUSH24 0xCB4BA7D6A1E6B549E3A4332E888164BC7E7A8C6C1EB7D7A3 DUP8 SWAP13 0xBF 0xB7 PUSH23 0x64736F6C63430008070033000000000000000000000000 ",
							"sourceMap": "60:8274:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bce477cb4ba7d6a1e6b549e3a4332e888164bc7e7a8c6c1eb7d7a3879cbfb77664736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC 0xE4 PUSH24 0xCB4BA7D6A1E6B549E3A4332E888164BC7E7A8C6C1EB7D7A3 DUP8 SWAP13 0xBF 0xB7 PUSH23 0x64736F6C63430008070033000000000000000000000000 ",
							"sourceMap": "60:8274:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bce477cb4ba7d6a1e6b549e3a4332e888164bc7e7a8c6c1eb7d7a3879cbfb77664736f6c63430008070033",
									".code": [
										{
											"begin": 60,
											"end": 8334,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0xe732197c4d67ed1bbe2503d0fe4a6da66d5e083c646cefb3af91fb7206e41dbe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e1124dee3d7583595bf475d061cf3b2b24633c94bda352f0cc5241cc032363b\",\"dweb:/ipfs/QmZ57BPeH51NKb418BM2HmgqwS343nPWKyYovu3dvpX7Yw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0xe732197c4d67ed1bbe2503d0fe4a6da66d5e083c646cefb3af91fb7206e41dbe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e1124dee3d7583595bf475d061cf3b2b24633c94bda352f0cc5241cc032363b\",\"dweb:/ipfs/QmZ57BPeH51NKb418BM2HmgqwS343nPWKyYovu3dvpX7Yw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"LpUtils": {
					"abi": [
						{
							"inputs": [],
							"name": "BUSD",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "lpAddress",
									"type": "address"
								},
								{
									"internalType": "contract Router",
									"name": "routerAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "busd",
									"type": "address"
								}
							],
							"name": "CalcLpPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WBNB",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract Router",
									"name": "routerAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "price",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "lpAddress",
									"type": "address"
								}
							],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "lpAddress",
									"type": "address"
								}
							],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "lpAddress",
									"type": "address"
								}
							],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LpPrice.sol\":8846:9873  contract LpUtils {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/LpPrice.sol\":8892:8934  0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n  0xae13d989dac2f0debff460ac112a837c89baa7cd\n    /* \"contracts/LpPrice.sol\":8870:8934  address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/LpPrice.sol\":8963:9005  0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n  0x78867bbeef44f2326bf8ddd1941a4439382ef2a7\n    /* \"contracts/LpPrice.sol\":8941:9005  address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n  0x01\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/LpPrice.sol\":9029:9048  1000000000000000000 */\n  0x0de0b6b3a7640000\n    /* \"contracts/LpPrice.sol\":9012:9048  uint256 amount = 1000000000000000000 */\n  0x02\n  sstore\n    /* \"contracts/LpPrice.sol\":8846:9873  contract LpUtils {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LpPrice.sol\":8846:9873  contract LpUtils {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x484f4ea9\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x484f4ea9\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x76bf39a3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8dd95002\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe4dc2aa4\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x20ae0b6d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2b00490d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x37823795\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/LpPrice.sol\":9057:9229  function CalcLpPrice(IERC20 lpAddress, Router routerAddress, address busd) external view returns(uint256){\r... */\n    tag_3:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":9595:9870  function price(Router routerAddress, address token) external view returns(uint){\r... */\n    tag_4:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":9479:9587  function token1(IERC20 lpAddress) external view returns(address){\r... */\n    tag_5:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":8941:9005  address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n    tag_6:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":9363:9471  function token0(IERC20 lpAddress) external view returns(address){\r... */\n    tag_7:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_32:\n      tag_33\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":8870:8934  address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n    tag_8:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":9237:9355  function totalSupply(IERC20 lpAddress) external view returns(uint256){\r... */\n    tag_9:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":9057:9229  function CalcLpPrice(IERC20 lpAddress, Router routerAddress, address busd) external view returns(uint256){\r... */\n    tag_14:\n        /* \"contracts/LpPrice.sol\":9154:9161  uint256 */\n      0x00\n        /* \"contracts/LpPrice.sol\":9181:9190  lpAddress */\n      dup4\n        /* \"contracts/LpPrice.sol\":9181:9200  lpAddress.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/LpPrice.sol\":9201:9210  lpAddress */\n      dup6\n        /* \"contracts/LpPrice.sol\":9201:9217  lpAddress.token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0dfe1681\n        /* \"contracts/LpPrice.sol\":9201:9219  lpAddress.token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_45\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_45:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n        /* \"contracts/LpPrice.sol\":9181:9220  lpAddress.balanceOf(lpAddress.token0()) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_48\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_48:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_51\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_51:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n        /* \"contracts/LpPrice.sol\":9173:9221  return (lpAddress.balanceOf(lpAddress.token0())) */\n      swap1\n      pop\n        /* \"contracts/LpPrice.sol\":9057:9229  function CalcLpPrice(IERC20 lpAddress, Router routerAddress, address busd) external view returns(uint256){\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":9595:9870  function price(Router routerAddress, address token) external view returns(uint){\r... */\n    tag_20:\n        /* \"contracts/LpPrice.sol\":9669:9673  uint */\n      0x00\n        /* \"contracts/LpPrice.sol\":9685:9706  address[] memory path */\n      dup1\n        /* \"contracts/LpPrice.sol\":9723:9724  3 */\n      0x03\n        /* \"contracts/LpPrice.sol\":9709:9725  new address[](3) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_55\n      jumpi\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n    tag_55:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_58\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_58:\n      pop\n        /* \"contracts/LpPrice.sol\":9685:9725  address[] memory path = new address[](3) */\n      swap1\n      pop\n        /* \"contracts/LpPrice.sol\":9746:9751  token */\n      dup3\n        /* \"contracts/LpPrice.sol\":9736:9740  path */\n      dup2\n        /* \"contracts/LpPrice.sol\":9741:9742  0 */\n      0x00\n        /* \"contracts/LpPrice.sol\":9736:9743  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_59\n      jumpi\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n    tag_59:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/LpPrice.sol\":9736:9751  path[0] = token */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":9772:9776  WBNB */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LpPrice.sol\":9762:9766  path */\n      dup2\n        /* \"contracts/LpPrice.sol\":9767:9768  1 */\n      0x01\n        /* \"contracts/LpPrice.sol\":9762:9769  path[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_62\n      jumpi\n      tag_63\n      tag_61\n      jump\t// in\n    tag_63:\n    tag_62:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/LpPrice.sol\":9762:9776  path[1] = WBNB */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":9797:9801  BUSD */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LpPrice.sol\":9787:9791  path */\n      dup2\n        /* \"contracts/LpPrice.sol\":9792:9793  2 */\n      0x02\n        /* \"contracts/LpPrice.sol\":9787:9794  path[2] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_64\n      jumpi\n      tag_65\n      tag_61\n      jump\t// in\n    tag_65:\n    tag_64:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/LpPrice.sol\":9787:9801  path[2] = BUSD */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":9819:9832  routerAddress */\n      dup4\n        /* \"contracts/LpPrice.sol\":9819:9846  routerAddress.getAmountsOut */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd06ca61f\n        /* \"contracts/LpPrice.sol\":9847:9853  amount */\n      sload(0x02)\n        /* \"contracts/LpPrice.sol\":9854:9858  path */\n      dup4\n        /* \"contracts/LpPrice.sol\":9819:9859  routerAddress.getAmountsOut(amount,path) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_66\n      swap3\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_70\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_70:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n        /* \"contracts/LpPrice.sol\":9860:9861  2 */\n      0x02\n        /* \"contracts/LpPrice.sol\":9819:9862  routerAddress.getAmountsOut(amount,path)[2] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_73\n      jumpi\n      tag_74\n      tag_61\n      jump\t// in\n    tag_74:\n    tag_73:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/LpPrice.sol\":9812:9862  return routerAddress.getAmountsOut(amount,path)[2] */\n      swap2\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":9595:9870  function price(Router routerAddress, address token) external view returns(uint){\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":9479:9587  function token1(IERC20 lpAddress) external view returns(address){\r... */\n    tag_25:\n        /* \"contracts/LpPrice.sol\":9535:9542  address */\n      0x00\n        /* \"contracts/LpPrice.sol\":9561:9570  lpAddress */\n      dup2\n        /* \"contracts/LpPrice.sol\":9561:9577  lpAddress.token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd21220a7\n        /* \"contracts/LpPrice.sol\":9561:9579  lpAddress.token1() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_78\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_78:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_79:\n        /* \"contracts/LpPrice.sol\":9554:9579  return lpAddress.token1() */\n      swap1\n      pop\n        /* \"contracts/LpPrice.sol\":9479:9587  function token1(IERC20 lpAddress) external view returns(address){\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":8941:9005  address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n    tag_29:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":9363:9471  function token0(IERC20 lpAddress) external view returns(address){\r... */\n    tag_33:\n        /* \"contracts/LpPrice.sol\":9419:9426  address */\n      0x00\n        /* \"contracts/LpPrice.sol\":9445:9454  lpAddress */\n      dup2\n        /* \"contracts/LpPrice.sol\":9445:9461  lpAddress.token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0dfe1681\n        /* \"contracts/LpPrice.sol\":9445:9463  lpAddress.token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_83\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_83:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_84:\n        /* \"contracts/LpPrice.sol\":9438:9463  return lpAddress.token0() */\n      swap1\n      pop\n        /* \"contracts/LpPrice.sol\":9363:9471  function token0(IERC20 lpAddress) external view returns(address){\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":8870:8934  address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n    tag_36:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":9237:9355  function totalSupply(IERC20 lpAddress) external view returns(uint256){\r... */\n    tag_40:\n        /* \"contracts/LpPrice.sol\":9298:9305  uint256 */\n      0x00\n        /* \"contracts/LpPrice.sol\":9324:9333  lpAddress */\n      dup2\n        /* \"contracts/LpPrice.sol\":9324:9345  lpAddress.totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"contracts/LpPrice.sol\":9324:9347  lpAddress.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_88\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_88:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_89:\n        /* \"contracts/LpPrice.sol\":9317:9347  return lpAddress.totalSupply() */\n      swap1\n      pop\n        /* \"contracts/LpPrice.sol\":9237:9355  function totalSupply(IERC20 lpAddress) external view returns(uint256){\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24:768   */\n    tag_91:\n        /* \"#utility.yul\":131:136   */\n      0x00\n        /* \"#utility.yul\":156:237   */\n      tag_93\n        /* \"#utility.yul\":172:236   */\n      tag_94\n        /* \"#utility.yul\":229:235   */\n      dup5\n        /* \"#utility.yul\":172:236   */\n      tag_95\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":156:237   */\n      tag_96\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":147:237   */\n      swap1\n      pop\n        /* \"#utility.yul\":257:262   */\n      dup1\n        /* \"#utility.yul\":286:292   */\n      dup4\n        /* \"#utility.yul\":279:284   */\n      dup3\n        /* \"#utility.yul\":272:293   */\n      mstore\n        /* \"#utility.yul\":320:324   */\n      0x20\n        /* \"#utility.yul\":313:318   */\n      dup3\n        /* \"#utility.yul\":309:325   */\n      add\n        /* \"#utility.yul\":302:325   */\n      swap1\n      pop\n        /* \"#utility.yul\":346:352   */\n      dup3\n        /* \"#utility.yul\":396:399   */\n      dup6\n        /* \"#utility.yul\":388:392   */\n      0x20\n        /* \"#utility.yul\":380:386   */\n      dup7\n        /* \"#utility.yul\":376:393   */\n      mul\n        /* \"#utility.yul\":371:374   */\n      dup3\n        /* \"#utility.yul\":367:394   */\n      add\n        /* \"#utility.yul\":364:400   */\n      gt\n        /* \"#utility.yul\":361:504   */\n      iszero\n      tag_97\n      jumpi\n        /* \"#utility.yul\":415:494   */\n      tag_98\n      tag_99\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":361:504   */\n    tag_97:\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":513:762   */\n    tag_100:\n        /* \"#utility.yul\":538:544   */\n      dup6\n        /* \"#utility.yul\":535:536   */\n      dup2\n        /* \"#utility.yul\":532:545   */\n      lt\n        /* \"#utility.yul\":513:762   */\n      iszero\n      tag_102\n      jumpi\n        /* \"#utility.yul\":606:609   */\n      dup2\n        /* \"#utility.yul\":635:683   */\n      tag_103\n        /* \"#utility.yul\":679:682   */\n      dup9\n        /* \"#utility.yul\":667:677   */\n      dup3\n        /* \"#utility.yul\":635:683   */\n      tag_104\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":630:633   */\n      dup5\n        /* \"#utility.yul\":623:684   */\n      mstore\n        /* \"#utility.yul\":713:717   */\n      0x20\n        /* \"#utility.yul\":708:711   */\n      dup5\n        /* \"#utility.yul\":704:718   */\n      add\n        /* \"#utility.yul\":697:718   */\n      swap4\n      pop\n        /* \"#utility.yul\":747:751   */\n      0x20\n        /* \"#utility.yul\":742:745   */\n      dup4\n        /* \"#utility.yul\":738:752   */\n      add\n        /* \"#utility.yul\":731:752   */\n      swap3\n      pop\n        /* \"#utility.yul\":573:762   */\n      pop\n        /* \"#utility.yul\":560:561   */\n      0x01\n        /* \"#utility.yul\":557:558   */\n      dup2\n        /* \"#utility.yul\":553:562   */\n      add\n        /* \"#utility.yul\":548:562   */\n      swap1\n      pop\n        /* \"#utility.yul\":513:762   */\n      jump(tag_100)\n    tag_102:\n        /* \"#utility.yul\":517:531   */\n      pop\n        /* \"#utility.yul\":137:768   */\n      pop\n      pop\n        /* \"#utility.yul\":24:768   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":774:913   */\n    tag_105:\n        /* \"#utility.yul\":820:825   */\n      0x00\n        /* \"#utility.yul\":858:864   */\n      dup2\n        /* \"#utility.yul\":845:865   */\n      calldataload\n        /* \"#utility.yul\":836:865   */\n      swap1\n      pop\n        /* \"#utility.yul\":874:907   */\n      tag_107\n        /* \"#utility.yul\":901:906   */\n      dup2\n        /* \"#utility.yul\":874:907   */\n      tag_108\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":774:913   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":919:1062   */\n    tag_109:\n        /* \"#utility.yul\":976:981   */\n      0x00\n        /* \"#utility.yul\":1007:1013   */\n      dup2\n        /* \"#utility.yul\":1001:1014   */\n      mload\n        /* \"#utility.yul\":992:1014   */\n      swap1\n      pop\n        /* \"#utility.yul\":1023:1056   */\n      tag_111\n        /* \"#utility.yul\":1050:1055   */\n      dup2\n        /* \"#utility.yul\":1023:1056   */\n      tag_108\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":919:1062   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1085:1470   */\n    tag_112:\n        /* \"#utility.yul\":1167:1172   */\n      0x00\n        /* \"#utility.yul\":1216:1219   */\n      dup3\n        /* \"#utility.yul\":1209:1213   */\n      0x1f\n        /* \"#utility.yul\":1201:1207   */\n      dup4\n        /* \"#utility.yul\":1197:1214   */\n      add\n        /* \"#utility.yul\":1193:1220   */\n      slt\n        /* \"#utility.yul\":1183:1305   */\n      tag_114\n      jumpi\n        /* \"#utility.yul\":1224:1303   */\n      tag_115\n      tag_116\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":1183:1305   */\n    tag_114:\n        /* \"#utility.yul\":1334:1340   */\n      dup2\n        /* \"#utility.yul\":1328:1341   */\n      mload\n        /* \"#utility.yul\":1359:1464   */\n      tag_117\n        /* \"#utility.yul\":1460:1463   */\n      dup5\n        /* \"#utility.yul\":1452:1458   */\n      dup3\n        /* \"#utility.yul\":1445:1449   */\n      0x20\n        /* \"#utility.yul\":1437:1443   */\n      dup7\n        /* \"#utility.yul\":1433:1450   */\n      add\n        /* \"#utility.yul\":1359:1464   */\n      tag_91\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":1350:1464   */\n      swap2\n      pop\n        /* \"#utility.yul\":1173:1470   */\n      pop\n        /* \"#utility.yul\":1085:1470   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1476:1643   */\n    tag_118:\n        /* \"#utility.yul\":1536:1541   */\n      0x00\n        /* \"#utility.yul\":1574:1580   */\n      dup2\n        /* \"#utility.yul\":1561:1581   */\n      calldataload\n        /* \"#utility.yul\":1552:1581   */\n      swap1\n      pop\n        /* \"#utility.yul\":1590:1637   */\n      tag_120\n        /* \"#utility.yul\":1631:1636   */\n      dup2\n        /* \"#utility.yul\":1590:1637   */\n      tag_121\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":1476:1643   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1649:1816   */\n    tag_122:\n        /* \"#utility.yul\":1709:1714   */\n      0x00\n        /* \"#utility.yul\":1747:1753   */\n      dup2\n        /* \"#utility.yul\":1734:1754   */\n      calldataload\n        /* \"#utility.yul\":1725:1754   */\n      swap1\n      pop\n        /* \"#utility.yul\":1763:1810   */\n      tag_124\n        /* \"#utility.yul\":1804:1809   */\n      dup2\n        /* \"#utility.yul\":1763:1810   */\n      tag_125\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":1649:1816   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1822:1965   */\n    tag_104:\n        /* \"#utility.yul\":1879:1884   */\n      0x00\n        /* \"#utility.yul\":1910:1916   */\n      dup2\n        /* \"#utility.yul\":1904:1917   */\n      mload\n        /* \"#utility.yul\":1895:1917   */\n      swap1\n      pop\n        /* \"#utility.yul\":1926:1959   */\n      tag_127\n        /* \"#utility.yul\":1953:1958   */\n      dup2\n        /* \"#utility.yul\":1926:1959   */\n      tag_128\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":1822:1965   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1971:2322   */\n    tag_47:\n        /* \"#utility.yul\":2041:2047   */\n      0x00\n        /* \"#utility.yul\":2090:2092   */\n      0x20\n        /* \"#utility.yul\":2078:2087   */\n      dup3\n        /* \"#utility.yul\":2069:2076   */\n      dup5\n        /* \"#utility.yul\":2065:2088   */\n      sub\n        /* \"#utility.yul\":2061:2093   */\n      slt\n        /* \"#utility.yul\":2058:2177   */\n      iszero\n      tag_130\n      jumpi\n        /* \"#utility.yul\":2096:2175   */\n      tag_131\n      tag_132\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":2058:2177   */\n    tag_130:\n        /* \"#utility.yul\":2216:2217   */\n      0x00\n        /* \"#utility.yul\":2241:2305   */\n      tag_133\n        /* \"#utility.yul\":2297:2304   */\n      dup5\n        /* \"#utility.yul\":2288:2294   */\n      dup3\n        /* \"#utility.yul\":2277:2286   */\n      dup6\n        /* \"#utility.yul\":2273:2295   */\n      add\n        /* \"#utility.yul\":2241:2305   */\n      tag_109\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":2231:2305   */\n      swap2\n      pop\n        /* \"#utility.yul\":2187:2315   */\n      pop\n        /* \"#utility.yul\":1971:2322   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2328:2882   */\n    tag_72:\n        /* \"#utility.yul\":2423:2429   */\n      0x00\n        /* \"#utility.yul\":2472:2474   */\n      0x20\n        /* \"#utility.yul\":2460:2469   */\n      dup3\n        /* \"#utility.yul\":2451:2458   */\n      dup5\n        /* \"#utility.yul\":2447:2470   */\n      sub\n        /* \"#utility.yul\":2443:2475   */\n      slt\n        /* \"#utility.yul\":2440:2559   */\n      iszero\n      tag_135\n      jumpi\n        /* \"#utility.yul\":2478:2557   */\n      tag_136\n      tag_132\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":2440:2559   */\n    tag_135:\n        /* \"#utility.yul\":2619:2620   */\n      0x00\n        /* \"#utility.yul\":2608:2617   */\n      dup3\n        /* \"#utility.yul\":2604:2621   */\n      add\n        /* \"#utility.yul\":2598:2622   */\n      mload\n        /* \"#utility.yul\":2649:2667   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2641:2647   */\n      dup2\n        /* \"#utility.yul\":2638:2668   */\n      gt\n        /* \"#utility.yul\":2635:2752   */\n      iszero\n      tag_137\n      jumpi\n        /* \"#utility.yul\":2671:2750   */\n      tag_138\n      tag_139\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":2635:2752   */\n    tag_137:\n        /* \"#utility.yul\":2776:2865   */\n      tag_140\n        /* \"#utility.yul\":2857:2864   */\n      dup5\n        /* \"#utility.yul\":2848:2854   */\n      dup3\n        /* \"#utility.yul\":2837:2846   */\n      dup6\n        /* \"#utility.yul\":2833:2855   */\n      add\n        /* \"#utility.yul\":2776:2865   */\n      tag_112\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":2766:2865   */\n      swap2\n      pop\n        /* \"#utility.yul\":2569:2875   */\n      pop\n        /* \"#utility.yul\":2328:2882   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2888:3245   */\n    tag_24:\n        /* \"#utility.yul\":2961:2967   */\n      0x00\n        /* \"#utility.yul\":3010:3012   */\n      0x20\n        /* \"#utility.yul\":2998:3007   */\n      dup3\n        /* \"#utility.yul\":2989:2996   */\n      dup5\n        /* \"#utility.yul\":2985:3008   */\n      sub\n        /* \"#utility.yul\":2981:3013   */\n      slt\n        /* \"#utility.yul\":2978:3097   */\n      iszero\n      tag_142\n      jumpi\n        /* \"#utility.yul\":3016:3095   */\n      tag_143\n      tag_132\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":2978:3097   */\n    tag_142:\n        /* \"#utility.yul\":3136:3137   */\n      0x00\n        /* \"#utility.yul\":3161:3228   */\n      tag_144\n        /* \"#utility.yul\":3220:3227   */\n      dup5\n        /* \"#utility.yul\":3211:3217   */\n      dup3\n        /* \"#utility.yul\":3200:3209   */\n      dup6\n        /* \"#utility.yul\":3196:3218   */\n      add\n        /* \"#utility.yul\":3161:3228   */\n      tag_118\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":3151:3228   */\n      swap2\n      pop\n        /* \"#utility.yul\":3107:3238   */\n      pop\n        /* \"#utility.yul\":2888:3245   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3251:3926   */\n    tag_13:\n        /* \"#utility.yul\":3356:3362   */\n      0x00\n        /* \"#utility.yul\":3364:3370   */\n      dup1\n        /* \"#utility.yul\":3372:3378   */\n      0x00\n        /* \"#utility.yul\":3421:3423   */\n      0x60\n        /* \"#utility.yul\":3409:3418   */\n      dup5\n        /* \"#utility.yul\":3400:3407   */\n      dup7\n        /* \"#utility.yul\":3396:3419   */\n      sub\n        /* \"#utility.yul\":3392:3424   */\n      slt\n        /* \"#utility.yul\":3389:3508   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":3427:3506   */\n      tag_147\n      tag_132\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":3389:3508   */\n    tag_146:\n        /* \"#utility.yul\":3547:3548   */\n      0x00\n        /* \"#utility.yul\":3572:3639   */\n      tag_148\n        /* \"#utility.yul\":3631:3638   */\n      dup7\n        /* \"#utility.yul\":3622:3628   */\n      dup3\n        /* \"#utility.yul\":3611:3620   */\n      dup8\n        /* \"#utility.yul\":3607:3629   */\n      add\n        /* \"#utility.yul\":3572:3639   */\n      tag_118\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":3562:3639   */\n      swap4\n      pop\n        /* \"#utility.yul\":3518:3649   */\n      pop\n        /* \"#utility.yul\":3688:3690   */\n      0x20\n        /* \"#utility.yul\":3714:3781   */\n      tag_149\n        /* \"#utility.yul\":3773:3780   */\n      dup7\n        /* \"#utility.yul\":3764:3770   */\n      dup3\n        /* \"#utility.yul\":3753:3762   */\n      dup8\n        /* \"#utility.yul\":3749:3771   */\n      add\n        /* \"#utility.yul\":3714:3781   */\n      tag_122\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":3704:3781   */\n      swap3\n      pop\n        /* \"#utility.yul\":3659:3791   */\n      pop\n        /* \"#utility.yul\":3830:3832   */\n      0x40\n        /* \"#utility.yul\":3856:3909   */\n      tag_150\n        /* \"#utility.yul\":3901:3908   */\n      dup7\n        /* \"#utility.yul\":3892:3898   */\n      dup3\n        /* \"#utility.yul\":3881:3890   */\n      dup8\n        /* \"#utility.yul\":3877:3899   */\n      add\n        /* \"#utility.yul\":3856:3909   */\n      tag_105\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":3846:3909   */\n      swap2\n      pop\n        /* \"#utility.yul\":3801:3919   */\n      pop\n        /* \"#utility.yul\":3251:3926   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3932:4434   */\n    tag_19:\n        /* \"#utility.yul\":4014:4020   */\n      0x00\n        /* \"#utility.yul\":4022:4028   */\n      dup1\n        /* \"#utility.yul\":4071:4073   */\n      0x40\n        /* \"#utility.yul\":4059:4068   */\n      dup4\n        /* \"#utility.yul\":4050:4057   */\n      dup6\n        /* \"#utility.yul\":4046:4069   */\n      sub\n        /* \"#utility.yul\":4042:4074   */\n      slt\n        /* \"#utility.yul\":4039:4158   */\n      iszero\n      tag_152\n      jumpi\n        /* \"#utility.yul\":4077:4156   */\n      tag_153\n      tag_132\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":4039:4158   */\n    tag_152:\n        /* \"#utility.yul\":4197:4198   */\n      0x00\n        /* \"#utility.yul\":4222:4289   */\n      tag_154\n        /* \"#utility.yul\":4281:4288   */\n      dup6\n        /* \"#utility.yul\":4272:4278   */\n      dup3\n        /* \"#utility.yul\":4261:4270   */\n      dup7\n        /* \"#utility.yul\":4257:4279   */\n      add\n        /* \"#utility.yul\":4222:4289   */\n      tag_122\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":4212:4289   */\n      swap3\n      pop\n        /* \"#utility.yul\":4168:4299   */\n      pop\n        /* \"#utility.yul\":4338:4340   */\n      0x20\n        /* \"#utility.yul\":4364:4417   */\n      tag_155\n        /* \"#utility.yul\":4409:4416   */\n      dup6\n        /* \"#utility.yul\":4400:4406   */\n      dup3\n        /* \"#utility.yul\":4389:4398   */\n      dup7\n        /* \"#utility.yul\":4385:4407   */\n      add\n        /* \"#utility.yul\":4364:4417   */\n      tag_105\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":4354:4417   */\n      swap2\n      pop\n        /* \"#utility.yul\":4309:4427   */\n      pop\n        /* \"#utility.yul\":3932:4434   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4440:4791   */\n    tag_53:\n        /* \"#utility.yul\":4510:4516   */\n      0x00\n        /* \"#utility.yul\":4559:4561   */\n      0x20\n        /* \"#utility.yul\":4547:4556   */\n      dup3\n        /* \"#utility.yul\":4538:4545   */\n      dup5\n        /* \"#utility.yul\":4534:4557   */\n      sub\n        /* \"#utility.yul\":4530:4562   */\n      slt\n        /* \"#utility.yul\":4527:4646   */\n      iszero\n      tag_157\n      jumpi\n        /* \"#utility.yul\":4565:4644   */\n      tag_158\n      tag_132\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":4527:4646   */\n    tag_157:\n        /* \"#utility.yul\":4685:4686   */\n      0x00\n        /* \"#utility.yul\":4710:4774   */\n      tag_159\n        /* \"#utility.yul\":4766:4773   */\n      dup5\n        /* \"#utility.yul\":4757:4763   */\n      dup3\n        /* \"#utility.yul\":4746:4755   */\n      dup6\n        /* \"#utility.yul\":4742:4764   */\n      add\n        /* \"#utility.yul\":4710:4774   */\n      tag_104\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":4700:4774   */\n      swap2\n      pop\n        /* \"#utility.yul\":4656:4784   */\n      pop\n        /* \"#utility.yul\":4440:4791   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4797:4976   */\n    tag_160:\n        /* \"#utility.yul\":4866:4876   */\n      0x00\n        /* \"#utility.yul\":4887:4933   */\n      tag_162\n        /* \"#utility.yul\":4929:4932   */\n      dup4\n        /* \"#utility.yul\":4921:4927   */\n      dup4\n        /* \"#utility.yul\":4887:4933   */\n      tag_163\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":4965:4969   */\n      0x20\n        /* \"#utility.yul\":4960:4963   */\n      dup4\n        /* \"#utility.yul\":4956:4970   */\n      add\n        /* \"#utility.yul\":4942:4970   */\n      swap1\n      pop\n        /* \"#utility.yul\":4797:4976   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4982:5090   */\n    tag_163:\n        /* \"#utility.yul\":5059:5083   */\n      tag_165\n        /* \"#utility.yul\":5077:5082   */\n      dup2\n        /* \"#utility.yul\":5059:5083   */\n      tag_166\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":5054:5057   */\n      dup3\n        /* \"#utility.yul\":5047:5084   */\n      mstore\n        /* \"#utility.yul\":4982:5090   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5096:5214   */\n    tag_167:\n        /* \"#utility.yul\":5183:5207   */\n      tag_169\n        /* \"#utility.yul\":5201:5206   */\n      dup2\n        /* \"#utility.yul\":5183:5207   */\n      tag_166\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":5178:5181   */\n      dup3\n        /* \"#utility.yul\":5171:5208   */\n      mstore\n        /* \"#utility.yul\":5096:5214   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5250:5982   */\n    tag_170:\n        /* \"#utility.yul\":5369:5372   */\n      0x00\n        /* \"#utility.yul\":5398:5452   */\n      tag_172\n        /* \"#utility.yul\":5446:5451   */\n      dup3\n        /* \"#utility.yul\":5398:5452   */\n      tag_173\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":5468:5554   */\n      tag_174\n        /* \"#utility.yul\":5547:5553   */\n      dup2\n        /* \"#utility.yul\":5542:5545   */\n      dup6\n        /* \"#utility.yul\":5468:5554   */\n      tag_175\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":5461:5554   */\n      swap4\n      pop\n        /* \"#utility.yul\":5578:5634   */\n      tag_176\n        /* \"#utility.yul\":5628:5633   */\n      dup4\n        /* \"#utility.yul\":5578:5634   */\n      tag_177\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":5657:5664   */\n      dup1\n        /* \"#utility.yul\":5688:5689   */\n      0x00\n        /* \"#utility.yul\":5673:5957   */\n    tag_178:\n        /* \"#utility.yul\":5698:5704   */\n      dup4\n        /* \"#utility.yul\":5695:5696   */\n      dup2\n        /* \"#utility.yul\":5692:5705   */\n      lt\n        /* \"#utility.yul\":5673:5957   */\n      iszero\n      tag_180\n      jumpi\n        /* \"#utility.yul\":5774:5780   */\n      dup2\n        /* \"#utility.yul\":5768:5781   */\n      mload\n        /* \"#utility.yul\":5801:5864   */\n      tag_181\n        /* \"#utility.yul\":5860:5863   */\n      dup9\n        /* \"#utility.yul\":5845:5858   */\n      dup3\n        /* \"#utility.yul\":5801:5864   */\n      tag_160\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":5794:5864   */\n      swap8\n      pop\n        /* \"#utility.yul\":5887:5947   */\n      tag_182\n        /* \"#utility.yul\":5940:5946   */\n      dup4\n        /* \"#utility.yul\":5887:5947   */\n      tag_183\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":5877:5947   */\n      swap3\n      pop\n        /* \"#utility.yul\":5733:5957   */\n      pop\n        /* \"#utility.yul\":5720:5721   */\n      0x01\n        /* \"#utility.yul\":5717:5718   */\n      dup2\n        /* \"#utility.yul\":5713:5722   */\n      add\n        /* \"#utility.yul\":5708:5722   */\n      swap1\n      pop\n        /* \"#utility.yul\":5673:5957   */\n      jump(tag_178)\n    tag_180:\n        /* \"#utility.yul\":5677:5691   */\n      pop\n        /* \"#utility.yul\":5973:5976   */\n      dup6\n        /* \"#utility.yul\":5966:5976   */\n      swap4\n      pop\n        /* \"#utility.yul\":5374:5982   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":5250:5982   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5988:6106   */\n    tag_184:\n        /* \"#utility.yul\":6075:6099   */\n      tag_186\n        /* \"#utility.yul\":6093:6098   */\n      dup2\n        /* \"#utility.yul\":6075:6099   */\n      tag_187\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":6070:6073   */\n      dup3\n        /* \"#utility.yul\":6063:6100   */\n      mstore\n        /* \"#utility.yul\":5988:6106   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6112:6334   */\n    tag_27:\n        /* \"#utility.yul\":6205:6209   */\n      0x00\n        /* \"#utility.yul\":6243:6245   */\n      0x20\n        /* \"#utility.yul\":6232:6241   */\n      dup3\n        /* \"#utility.yul\":6228:6246   */\n      add\n        /* \"#utility.yul\":6220:6246   */\n      swap1\n      pop\n        /* \"#utility.yul\":6256:6327   */\n      tag_189\n        /* \"#utility.yul\":6324:6325   */\n      0x00\n        /* \"#utility.yul\":6313:6322   */\n      dup4\n        /* \"#utility.yul\":6309:6326   */\n      add\n        /* \"#utility.yul\":6300:6306   */\n      dup5\n        /* \"#utility.yul\":6256:6327   */\n      tag_167\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":6112:6334   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6340:6562   */\n    tag_16:\n        /* \"#utility.yul\":6433:6437   */\n      0x00\n        /* \"#utility.yul\":6471:6473   */\n      0x20\n        /* \"#utility.yul\":6460:6469   */\n      dup3\n        /* \"#utility.yul\":6456:6474   */\n      add\n        /* \"#utility.yul\":6448:6474   */\n      swap1\n      pop\n        /* \"#utility.yul\":6484:6555   */\n      tag_191\n        /* \"#utility.yul\":6552:6553   */\n      0x00\n        /* \"#utility.yul\":6541:6550   */\n      dup4\n        /* \"#utility.yul\":6537:6554   */\n      add\n        /* \"#utility.yul\":6528:6534   */\n      dup5\n        /* \"#utility.yul\":6484:6555   */\n      tag_184\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":6340:6562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6568:7051   */\n    tag_67:\n        /* \"#utility.yul\":6739:6743   */\n      0x00\n        /* \"#utility.yul\":6777:6779   */\n      0x40\n        /* \"#utility.yul\":6766:6775   */\n      dup3\n        /* \"#utility.yul\":6762:6780   */\n      add\n        /* \"#utility.yul\":6754:6780   */\n      swap1\n      pop\n        /* \"#utility.yul\":6790:6861   */\n      tag_193\n        /* \"#utility.yul\":6858:6859   */\n      0x00\n        /* \"#utility.yul\":6847:6856   */\n      dup4\n        /* \"#utility.yul\":6843:6860   */\n      add\n        /* \"#utility.yul\":6834:6840   */\n      dup6\n        /* \"#utility.yul\":6790:6861   */\n      tag_184\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":6908:6917   */\n      dup2\n        /* \"#utility.yul\":6902:6906   */\n      dup2\n        /* \"#utility.yul\":6898:6918   */\n      sub\n        /* \"#utility.yul\":6893:6895   */\n      0x20\n        /* \"#utility.yul\":6882:6891   */\n      dup4\n        /* \"#utility.yul\":6878:6896   */\n      add\n        /* \"#utility.yul\":6871:6919   */\n      mstore\n        /* \"#utility.yul\":6936:7044   */\n      tag_194\n        /* \"#utility.yul\":7039:7043   */\n      dup2\n        /* \"#utility.yul\":7030:7036   */\n      dup5\n        /* \"#utility.yul\":6936:7044   */\n      tag_170\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":6928:7044   */\n      swap1\n      pop\n        /* \"#utility.yul\":6568:7051   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7057:7186   */\n    tag_96:\n        /* \"#utility.yul\":7091:7097   */\n      0x00\n        /* \"#utility.yul\":7118:7138   */\n      tag_196\n      tag_197\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":7108:7138   */\n      swap1\n      pop\n        /* \"#utility.yul\":7147:7180   */\n      tag_198\n        /* \"#utility.yul\":7175:7179   */\n      dup3\n        /* \"#utility.yul\":7167:7173   */\n      dup3\n        /* \"#utility.yul\":7147:7180   */\n      tag_199\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":7057:7186   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7192:7267   */\n    tag_197:\n        /* \"#utility.yul\":7225:7231   */\n      0x00\n        /* \"#utility.yul\":7258:7260   */\n      0x40\n        /* \"#utility.yul\":7252:7261   */\n      mload\n        /* \"#utility.yul\":7242:7261   */\n      swap1\n      pop\n        /* \"#utility.yul\":7192:7267   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7273:7584   */\n    tag_95:\n        /* \"#utility.yul\":7350:7354   */\n      0x00\n        /* \"#utility.yul\":7440:7458   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7432:7438   */\n      dup3\n        /* \"#utility.yul\":7429:7459   */\n      gt\n        /* \"#utility.yul\":7426:7482   */\n      iszero\n      tag_202\n      jumpi\n        /* \"#utility.yul\":7462:7480   */\n      tag_203\n      tag_57\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":7426:7482   */\n    tag_202:\n        /* \"#utility.yul\":7512:7516   */\n      0x20\n        /* \"#utility.yul\":7504:7510   */\n      dup3\n        /* \"#utility.yul\":7500:7517   */\n      mul\n        /* \"#utility.yul\":7492:7517   */\n      swap1\n      pop\n        /* \"#utility.yul\":7572:7576   */\n      0x20\n        /* \"#utility.yul\":7566:7570   */\n      dup2\n        /* \"#utility.yul\":7562:7577   */\n      add\n        /* \"#utility.yul\":7554:7577   */\n      swap1\n      pop\n        /* \"#utility.yul\":7273:7584   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7590:7722   */\n    tag_177:\n        /* \"#utility.yul\":7657:7661   */\n      0x00\n        /* \"#utility.yul\":7680:7683   */\n      dup2\n        /* \"#utility.yul\":7672:7683   */\n      swap1\n      pop\n        /* \"#utility.yul\":7710:7714   */\n      0x20\n        /* \"#utility.yul\":7705:7708   */\n      dup3\n        /* \"#utility.yul\":7701:7715   */\n      add\n        /* \"#utility.yul\":7693:7715   */\n      swap1\n      pop\n        /* \"#utility.yul\":7590:7722   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7728:7842   */\n    tag_173:\n        /* \"#utility.yul\":7795:7801   */\n      0x00\n        /* \"#utility.yul\":7829:7834   */\n      dup2\n        /* \"#utility.yul\":7823:7835   */\n      mload\n        /* \"#utility.yul\":7813:7835   */\n      swap1\n      pop\n        /* \"#utility.yul\":7728:7842   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7848:7961   */\n    tag_183:\n        /* \"#utility.yul\":7918:7922   */\n      0x00\n        /* \"#utility.yul\":7950:7954   */\n      0x20\n        /* \"#utility.yul\":7945:7948   */\n      dup3\n        /* \"#utility.yul\":7941:7955   */\n      add\n        /* \"#utility.yul\":7933:7955   */\n      swap1\n      pop\n        /* \"#utility.yul\":7848:7961   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7967:8151   */\n    tag_175:\n        /* \"#utility.yul\":8066:8077   */\n      0x00\n        /* \"#utility.yul\":8100:8106   */\n      dup3\n        /* \"#utility.yul\":8095:8098   */\n      dup3\n        /* \"#utility.yul\":8088:8107   */\n      mstore\n        /* \"#utility.yul\":8140:8144   */\n      0x20\n        /* \"#utility.yul\":8135:8138   */\n      dup3\n        /* \"#utility.yul\":8131:8145   */\n      add\n        /* \"#utility.yul\":8116:8145   */\n      swap1\n      pop\n        /* \"#utility.yul\":7967:8151   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8157:8253   */\n    tag_166:\n        /* \"#utility.yul\":8194:8201   */\n      0x00\n        /* \"#utility.yul\":8223:8247   */\n      tag_209\n        /* \"#utility.yul\":8241:8246   */\n      dup3\n        /* \"#utility.yul\":8223:8247   */\n      tag_210\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":8212:8247   */\n      swap1\n      pop\n        /* \"#utility.yul\":8157:8253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8259:8369   */\n    tag_211:\n        /* \"#utility.yul\":8310:8317   */\n      0x00\n        /* \"#utility.yul\":8339:8363   */\n      tag_213\n        /* \"#utility.yul\":8357:8362   */\n      dup3\n        /* \"#utility.yul\":8339:8363   */\n      tag_166\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":8328:8363   */\n      swap1\n      pop\n        /* \"#utility.yul\":8259:8369   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8375:8485   */\n    tag_214:\n        /* \"#utility.yul\":8426:8433   */\n      0x00\n        /* \"#utility.yul\":8455:8479   */\n      tag_216\n        /* \"#utility.yul\":8473:8478   */\n      dup3\n        /* \"#utility.yul\":8455:8479   */\n      tag_166\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":8444:8479   */\n      swap1\n      pop\n        /* \"#utility.yul\":8375:8485   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8491:8617   */\n    tag_210:\n        /* \"#utility.yul\":8528:8535   */\n      0x00\n        /* \"#utility.yul\":8568:8610   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":8561:8566   */\n      dup3\n        /* \"#utility.yul\":8557:8611   */\n      and\n        /* \"#utility.yul\":8546:8611   */\n      swap1\n      pop\n        /* \"#utility.yul\":8491:8617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8623:8700   */\n    tag_187:\n        /* \"#utility.yul\":8660:8667   */\n      0x00\n        /* \"#utility.yul\":8689:8694   */\n      dup2\n        /* \"#utility.yul\":8678:8694   */\n      swap1\n      pop\n        /* \"#utility.yul\":8623:8700   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8706:8987   */\n    tag_199:\n        /* \"#utility.yul\":8789:8816   */\n      tag_220\n        /* \"#utility.yul\":8811:8815   */\n      dup3\n        /* \"#utility.yul\":8789:8816   */\n      tag_221\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":8781:8787   */\n      dup2\n        /* \"#utility.yul\":8777:8817   */\n      add\n        /* \"#utility.yul\":8919:8925   */\n      dup2\n        /* \"#utility.yul\":8907:8917   */\n      dup2\n        /* \"#utility.yul\":8904:8926   */\n      lt\n        /* \"#utility.yul\":8883:8901   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8871:8881   */\n      dup3\n        /* \"#utility.yul\":8868:8902   */\n      gt\n        /* \"#utility.yul\":8865:8927   */\n      or\n        /* \"#utility.yul\":8862:8950   */\n      iszero\n      tag_222\n      jumpi\n        /* \"#utility.yul\":8930:8948   */\n      tag_223\n      tag_57\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":8862:8950   */\n    tag_222:\n        /* \"#utility.yul\":8970:8980   */\n      dup1\n        /* \"#utility.yul\":8966:8968   */\n      0x40\n        /* \"#utility.yul\":8959:8981   */\n      mstore\n        /* \"#utility.yul\":8749:8987   */\n      pop\n        /* \"#utility.yul\":8706:8987   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8993:9173   */\n    tag_61:\n        /* \"#utility.yul\":9041:9118   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9038:9039   */\n      0x00\n        /* \"#utility.yul\":9031:9119   */\n      mstore\n        /* \"#utility.yul\":9138:9142   */\n      0x32\n        /* \"#utility.yul\":9135:9136   */\n      0x04\n        /* \"#utility.yul\":9128:9143   */\n      mstore\n        /* \"#utility.yul\":9162:9166   */\n      0x24\n        /* \"#utility.yul\":9159:9160   */\n      0x00\n        /* \"#utility.yul\":9152:9167   */\n      revert\n        /* \"#utility.yul\":9179:9359   */\n    tag_57:\n        /* \"#utility.yul\":9227:9304   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9224:9225   */\n      0x00\n        /* \"#utility.yul\":9217:9305   */\n      mstore\n        /* \"#utility.yul\":9324:9328   */\n      0x41\n        /* \"#utility.yul\":9321:9322   */\n      0x04\n        /* \"#utility.yul\":9314:9329   */\n      mstore\n        /* \"#utility.yul\":9348:9352   */\n      0x24\n        /* \"#utility.yul\":9345:9346   */\n      0x00\n        /* \"#utility.yul\":9338:9353   */\n      revert\n        /* \"#utility.yul\":9365:9482   */\n    tag_116:\n        /* \"#utility.yul\":9474:9475   */\n      0x00\n        /* \"#utility.yul\":9471:9472   */\n      dup1\n        /* \"#utility.yul\":9464:9476   */\n      revert\n        /* \"#utility.yul\":9488:9605   */\n    tag_99:\n        /* \"#utility.yul\":9597:9598   */\n      0x00\n        /* \"#utility.yul\":9594:9595   */\n      dup1\n        /* \"#utility.yul\":9587:9599   */\n      revert\n        /* \"#utility.yul\":9611:9728   */\n    tag_139:\n        /* \"#utility.yul\":9720:9721   */\n      0x00\n        /* \"#utility.yul\":9717:9718   */\n      dup1\n        /* \"#utility.yul\":9710:9722   */\n      revert\n        /* \"#utility.yul\":9734:9851   */\n    tag_132:\n        /* \"#utility.yul\":9843:9844   */\n      0x00\n        /* \"#utility.yul\":9840:9841   */\n      dup1\n        /* \"#utility.yul\":9833:9845   */\n      revert\n        /* \"#utility.yul\":9857:9959   */\n    tag_221:\n        /* \"#utility.yul\":9898:9904   */\n      0x00\n        /* \"#utility.yul\":9949:9951   */\n      0x1f\n        /* \"#utility.yul\":9945:9952   */\n      not\n        /* \"#utility.yul\":9940:9942   */\n      0x1f\n        /* \"#utility.yul\":9933:9938   */\n      dup4\n        /* \"#utility.yul\":9929:9943   */\n      add\n        /* \"#utility.yul\":9925:9953   */\n      and\n        /* \"#utility.yul\":9915:9953   */\n      swap1\n      pop\n        /* \"#utility.yul\":9857:9959   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9965:10087   */\n    tag_108:\n        /* \"#utility.yul\":10038:10062   */\n      tag_232\n        /* \"#utility.yul\":10056:10061   */\n      dup2\n        /* \"#utility.yul\":10038:10062   */\n      tag_166\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":10031:10036   */\n      dup2\n        /* \"#utility.yul\":10028:10063   */\n      eq\n        /* \"#utility.yul\":10018:10081   */\n      tag_233\n      jumpi\n        /* \"#utility.yul\":10077:10078   */\n      0x00\n        /* \"#utility.yul\":10074:10075   */\n      dup1\n        /* \"#utility.yul\":10067:10079   */\n      revert\n        /* \"#utility.yul\":10018:10081   */\n    tag_233:\n        /* \"#utility.yul\":9965:10087   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10093:10243   */\n    tag_121:\n        /* \"#utility.yul\":10180:10218   */\n      tag_235\n        /* \"#utility.yul\":10212:10217   */\n      dup2\n        /* \"#utility.yul\":10180:10218   */\n      tag_211\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":10173:10178   */\n      dup2\n        /* \"#utility.yul\":10170:10219   */\n      eq\n        /* \"#utility.yul\":10160:10237   */\n      tag_236\n      jumpi\n        /* \"#utility.yul\":10233:10234   */\n      0x00\n        /* \"#utility.yul\":10230:10231   */\n      dup1\n        /* \"#utility.yul\":10223:10235   */\n      revert\n        /* \"#utility.yul\":10160:10237   */\n    tag_236:\n        /* \"#utility.yul\":10093:10243   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10249:10399   */\n    tag_125:\n        /* \"#utility.yul\":10336:10374   */\n      tag_238\n        /* \"#utility.yul\":10368:10373   */\n      dup2\n        /* \"#utility.yul\":10336:10374   */\n      tag_214\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":10329:10334   */\n      dup2\n        /* \"#utility.yul\":10326:10375   */\n      eq\n        /* \"#utility.yul\":10316:10393   */\n      tag_239\n      jumpi\n        /* \"#utility.yul\":10389:10390   */\n      0x00\n        /* \"#utility.yul\":10386:10387   */\n      dup1\n        /* \"#utility.yul\":10379:10391   */\n      revert\n        /* \"#utility.yul\":10316:10393   */\n    tag_239:\n        /* \"#utility.yul\":10249:10399   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10405:10527   */\n    tag_128:\n        /* \"#utility.yul\":10478:10502   */\n      tag_241\n        /* \"#utility.yul\":10496:10501   */\n      dup2\n        /* \"#utility.yul\":10478:10502   */\n      tag_187\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":10471:10476   */\n      dup2\n        /* \"#utility.yul\":10468:10503   */\n      eq\n        /* \"#utility.yul\":10458:10521   */\n      tag_242\n      jumpi\n        /* \"#utility.yul\":10517:10518   */\n      0x00\n        /* \"#utility.yul\":10514:10515   */\n      dup1\n        /* \"#utility.yul\":10507:10519   */\n      revert\n        /* \"#utility.yul\":10458:10521   */\n    tag_242:\n        /* \"#utility.yul\":10405:10527   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c7f64e722159301964838e9f3807e34a716df13dc03ce970489e1c870f2ae96f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405273ae13d989dac2f0debff460ac112a837c89baa7cd6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507378867bbeef44f2326bf8ddd1941a4439382ef2a7600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550670de0b6b3a76400006002553480156100c557600080fd5b50610c75806100d56000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063484f4ea91161005b578063484f4ea91461011257806376bf39a3146101305780638dd9500214610160578063e4dc2aa41461017e5761007d565b806320ae0b6d146100825780632b00490d146100b257806337823795146100e2575b600080fd5b61009c6004803603810190610097919061087c565b6101ae565b6040516100a991906109fa565b60405180910390f35b6100cc60048036038101906100c791906108cf565b6102bf565b6040516100d991906109fa565b60405180910390f35b6100fc60048036038101906100f7919061084f565b6104f3565b60405161010991906109df565b60405180910390f35b61011a61057a565b60405161012791906109df565b60405180910390f35b61014a6004803603810190610145919061084f565b6105a0565b60405161015791906109df565b60405180910390f35b610168610627565b60405161017591906109df565b60405180910390f35b6101986004803603810190610193919061084f565b61064b565b6040516101a591906109fa565b60405180910390f35b60008373ffffffffffffffffffffffffffffffffffffffff166370a082318573ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561021257600080fd5b505afa158015610226573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024a91906107d9565b6040518263ffffffff1660e01b815260040161026691906109df565b60206040518083038186803b15801561027e57600080fd5b505afa158015610292573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b6919061090f565b90509392505050565b600080600367ffffffffffffffff8111156102dd576102dc610b8f565b5b60405190808252806020026020018201604052801561030b5781602001602082028036833780820191505090505b509050828160008151811061032357610322610b60565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160018151811061039257610391610b60565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160028151811061040357610402610b60565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508373ffffffffffffffffffffffffffffffffffffffff1663d06ca61f600254836040518363ffffffff1660e01b815260040161047a929190610a15565b60006040518083038186803b15801561049257600080fd5b505afa1580156104a6573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906104cf9190610806565b6002815181106104e2576104e1610b60565b5b602002602001015191505092915050565b60008173ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b15801561053b57600080fd5b505afa15801561054f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057391906107d9565b9050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008173ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156105e857600080fd5b505afa1580156105fc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062091906107d9565b9050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008173ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561069357600080fd5b505afa1580156106a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cb919061090f565b9050919050565b60006106e56106e084610a6a565b610a45565b9050808382526020820190508285602086028201111561070857610707610bc3565b5b60005b85811015610738578161071e88826107c4565b84526020840193506020830192505060018101905061070b565b5050509392505050565b60008135905061075181610be3565b92915050565b60008151905061076681610be3565b92915050565b600082601f83011261078157610780610bbe565b5b81516107918482602086016106d2565b91505092915050565b6000813590506107a981610bfa565b92915050565b6000813590506107be81610c11565b92915050565b6000815190506107d381610c28565b92915050565b6000602082840312156107ef576107ee610bcd565b5b60006107fd84828501610757565b91505092915050565b60006020828403121561081c5761081b610bcd565b5b600082015167ffffffffffffffff81111561083a57610839610bc8565b5b6108468482850161076c565b91505092915050565b60006020828403121561086557610864610bcd565b5b60006108738482850161079a565b91505092915050565b60008060006060848603121561089557610894610bcd565b5b60006108a38682870161079a565b93505060206108b4868287016107af565b92505060406108c586828701610742565b9150509250925092565b600080604083850312156108e6576108e5610bcd565b5b60006108f4858286016107af565b925050602061090585828601610742565b9150509250929050565b60006020828403121561092557610924610bcd565b5b6000610933848285016107c4565b91505092915050565b60006109488383610954565b60208301905092915050565b61095d81610acf565b82525050565b61096c81610acf565b82525050565b600061097d82610aa6565b6109878185610abe565b935061099283610a96565b8060005b838110156109c35781516109aa888261093c565b97506109b583610ab1565b925050600181019050610996565b5085935050505092915050565b6109d981610b25565b82525050565b60006020820190506109f46000830184610963565b92915050565b6000602082019050610a0f60008301846109d0565b92915050565b6000604082019050610a2a60008301856109d0565b8181036020830152610a3c8184610972565b90509392505050565b6000610a4f610a60565b9050610a5b8282610b2f565b919050565b6000604051905090565b600067ffffffffffffffff821115610a8557610a84610b8f565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b6000610ada82610b05565b9050919050565b6000610aec82610acf565b9050919050565b6000610afe82610acf565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b610b3882610bd2565b810181811067ffffffffffffffff82111715610b5757610b56610b8f565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b610bec81610acf565b8114610bf757600080fd5b50565b610c0381610ae1565b8114610c0e57600080fd5b50565b610c1a81610af3565b8114610c2557600080fd5b50565b610c3181610b25565b8114610c3c57600080fd5b5056fea2646970667358221220c7f64e722159301964838e9f3807e34a716df13dc03ce970489e1c870f2ae96f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0xAE13D989DAC2F0DEBFF460AC112A837C89BAA7CD PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x78867BBEEF44F2326BF8DDD1941A4439382EF2A7 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0xC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC75 DUP1 PUSH2 0xD5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x484F4EA9 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x484F4EA9 EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x76BF39A3 EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x8DD95002 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0xE4DC2AA4 EQ PUSH2 0x17E JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x20AE0B6D EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x2B00490D EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x37823795 EQ PUSH2 0xE2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x87C JUMP JUMPDEST PUSH2 0x1AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x9FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x8CF JUMP JUMPDEST PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD9 SWAP2 SWAP1 PUSH2 0x9FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0x84F JUMP JUMPDEST PUSH2 0x4F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x109 SWAP2 SWAP1 PUSH2 0x9DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11A PUSH2 0x57A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x127 SWAP2 SWAP1 PUSH2 0x9DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x145 SWAP2 SWAP1 PUSH2 0x84F JUMP JUMPDEST PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x157 SWAP2 SWAP1 PUSH2 0x9DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x168 PUSH2 0x627 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x9DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x198 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x193 SWAP2 SWAP1 PUSH2 0x84F JUMP JUMPDEST PUSH2 0x64B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x9FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x226 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x7D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x9DF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x27E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x292 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x90F JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2DD JUMPI PUSH2 0x2DC PUSH2 0xB8F JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x30B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x323 JUMPI PUSH2 0x322 PUSH2 0xB60 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x392 JUMPI PUSH2 0x391 PUSH2 0xB60 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x403 JUMPI PUSH2 0x402 PUSH2 0xB60 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD06CA61F PUSH1 0x2 SLOAD DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47A SWAP3 SWAP2 SWAP1 PUSH2 0xA15 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4CF SWAP2 SWAP1 PUSH2 0x806 JUMP JUMPDEST PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x4E2 JUMPI PUSH2 0x4E1 PUSH2 0xB60 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x53B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x54F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x573 SWAP2 SWAP1 PUSH2 0x7D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5FC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x620 SWAP2 SWAP1 PUSH2 0x7D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x693 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6A7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6CB SWAP2 SWAP1 PUSH2 0x90F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6E5 PUSH2 0x6E0 DUP5 PUSH2 0xA6A JUMP JUMPDEST PUSH2 0xA45 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x708 JUMPI PUSH2 0x707 PUSH2 0xBC3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x738 JUMPI DUP2 PUSH2 0x71E DUP9 DUP3 PUSH2 0x7C4 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x70B JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x751 DUP2 PUSH2 0xBE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x766 DUP2 PUSH2 0xBE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x781 JUMPI PUSH2 0x780 PUSH2 0xBBE JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x791 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x6D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7A9 DUP2 PUSH2 0xBFA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7BE DUP2 PUSH2 0xC11 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x7D3 DUP2 PUSH2 0xC28 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7EF JUMPI PUSH2 0x7EE PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7FD DUP5 DUP3 DUP6 ADD PUSH2 0x757 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x81C JUMPI PUSH2 0x81B PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x83A JUMPI PUSH2 0x839 PUSH2 0xBC8 JUMP JUMPDEST JUMPDEST PUSH2 0x846 DUP5 DUP3 DUP6 ADD PUSH2 0x76C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x865 JUMPI PUSH2 0x864 PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x873 DUP5 DUP3 DUP6 ADD PUSH2 0x79A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x895 JUMPI PUSH2 0x894 PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8A3 DUP7 DUP3 DUP8 ADD PUSH2 0x79A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x8B4 DUP7 DUP3 DUP8 ADD PUSH2 0x7AF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x8C5 DUP7 DUP3 DUP8 ADD PUSH2 0x742 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8E6 JUMPI PUSH2 0x8E5 PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8F4 DUP6 DUP3 DUP7 ADD PUSH2 0x7AF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x905 DUP6 DUP3 DUP7 ADD PUSH2 0x742 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x925 JUMPI PUSH2 0x924 PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x933 DUP5 DUP3 DUP6 ADD PUSH2 0x7C4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x948 DUP4 DUP4 PUSH2 0x954 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x95D DUP2 PUSH2 0xACF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x96C DUP2 PUSH2 0xACF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x97D DUP3 PUSH2 0xAA6 JUMP JUMPDEST PUSH2 0x987 DUP2 DUP6 PUSH2 0xABE JUMP JUMPDEST SWAP4 POP PUSH2 0x992 DUP4 PUSH2 0xA96 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9C3 JUMPI DUP2 MLOAD PUSH2 0x9AA DUP9 DUP3 PUSH2 0x93C JUMP JUMPDEST SWAP8 POP PUSH2 0x9B5 DUP4 PUSH2 0xAB1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x996 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9D9 DUP2 PUSH2 0xB25 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9F4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x963 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA0F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xA2A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x9D0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xA3C DUP2 DUP5 PUSH2 0x972 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA4F PUSH2 0xA60 JUMP JUMPDEST SWAP1 POP PUSH2 0xA5B DUP3 DUP3 PUSH2 0xB2F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xA85 JUMPI PUSH2 0xA84 PUSH2 0xB8F JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADA DUP3 PUSH2 0xB05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAEC DUP3 PUSH2 0xACF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFE DUP3 PUSH2 0xACF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB38 DUP3 PUSH2 0xBD2 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xB57 JUMPI PUSH2 0xB56 PUSH2 0xB8F JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBEC DUP2 PUSH2 0xACF JUMP JUMPDEST DUP2 EQ PUSH2 0xBF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xC03 DUP2 PUSH2 0xAE1 JUMP JUMPDEST DUP2 EQ PUSH2 0xC0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xC1A DUP2 PUSH2 0xAF3 JUMP JUMPDEST DUP2 EQ PUSH2 0xC25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xC31 DUP2 PUSH2 0xB25 JUMP JUMPDEST DUP2 EQ PUSH2 0xC3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0xF6 0x4E PUSH19 0x2159301964838E9F3807E34A716DF13DC03CE9 PUSH17 0x489E1C870F2AE96F64736F6C6343000807 STOP CALLER ",
							"sourceMap": "8846:1027:0:-:0;;;8892:42;8870:64;;;;;;;;;;;;;;;;;;;;8963:42;8941:64;;;;;;;;;;;;;;;;;;;;9029:19;9012:36;;8846:1027;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BUSD_335": {
									"entryPoint": 1402,
									"id": 335,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@CalcLpPrice_360": {
									"entryPoint": 430,
									"id": 360,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@WBNB_332": {
									"entryPoint": 1575,
									"id": 332,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@price_447": {
									"entryPoint": 703,
									"id": 447,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@token0_386": {
									"entryPoint": 1440,
									"id": 386,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@token1_399": {
									"entryPoint": 1267,
									"id": 399,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_373": {
									"entryPoint": 1611,
									"id": 373,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1746,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1879,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$317": {
									"entryPoint": 1946,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_Router_$329": {
									"entryPoint": 1967,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1988,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 2009,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 2054,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$317": {
									"entryPoint": 2127,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$317t_contract$_Router_$329t_address": {
									"entryPoint": 2172,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_contract$_Router_$329t_address": {
									"entryPoint": 2255,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 2364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 2388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2403,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 2418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2554,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 2581,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 2629,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 2656,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 2666,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 2710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 2726,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 2737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 2750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$317": {
									"entryPoint": 2785,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_Router_$329": {
									"entryPoint": 2803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2821,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2853,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 2863,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 2912,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2959,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 3006,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 3011,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 3016,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3021,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3026,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 3043,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$317": {
									"entryPoint": 3066,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_Router_$329": {
									"entryPoint": 3089,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3112,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10530:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "137:631:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "147:90:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "229:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "172:56:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "172:64:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "156:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "156:81:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "147:5:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "246:16:1",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "257:5:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "250:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "286:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "272:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "272:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "272:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "302:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "313:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "309:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "309:16:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "302:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "335:17:1",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "346:6:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "339:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "401:103:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "415:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "415:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "415:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "371:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "380:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "388:4:1",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "376:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "376:17:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "367:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "367:27:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "396:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "364:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "364:36:1"
															},
															"nodeType": "YulIf",
															"src": "361:143:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "573:189:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "588:21:1",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "606:3:1"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "592:10:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "630:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "667:10:1"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "679:3:1"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256_fromMemory",
																						"nodeType": "YulIdentifier",
																						"src": "635:31:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "635:48:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "623:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "623:61:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "623:61:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "697:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "713:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "704:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "704:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "697:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "731:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "742:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "738:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "738:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "731:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "535:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "538:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "532:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "546:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "548:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "557:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "560:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "553:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "553:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "548:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "517:14:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "519:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "528:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "523:1:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "513:249:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "107:6:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "123:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "131:5:1",
														"type": ""
													}
												],
												"src": "24:744:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "826:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "836:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "858:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "845:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "836:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "901:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "874:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "874:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "874:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "804:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "812:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "820:5:1",
														"type": ""
													}
												],
												"src": "774:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "982:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "992:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1007:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1001:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1001:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "992:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1050:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1023:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1023:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1023:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "960:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "968:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "976:5:1",
														"type": ""
													}
												],
												"src": "919:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1173:297:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1222:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "1224:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1224:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1224:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1201:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1209:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1197:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1197:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1216:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1193:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1193:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1186:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1186:35:1"
															},
															"nodeType": "YulIf",
															"src": "1183:122:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1314:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1334:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1328:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1328:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1318:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1350:114:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1437:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1445:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1433:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1433:17:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1452:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1460:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1359:73:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1359:105:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1350:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1151:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1159:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1167:5:1",
														"type": ""
													}
												],
												"src": "1085:385:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1542:101:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1552:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1574:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1561:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1561:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1552:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1631:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$317",
																	"nodeType": "YulIdentifier",
																	"src": "1590:40:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1590:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1590:47:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$317",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1520:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1528:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1536:5:1",
														"type": ""
													}
												],
												"src": "1476:167:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1715:101:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1725:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1747:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1734:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1734:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1725:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1804:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_Router_$329",
																	"nodeType": "YulIdentifier",
																	"src": "1763:40:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1763:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1763:47:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_Router_$329",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1693:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1701:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1709:5:1",
														"type": ""
													}
												],
												"src": "1649:167:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1885:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1895:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1910:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1904:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1904:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1895:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1953:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1926:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1926:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1926:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1863:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1871:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1879:5:1",
														"type": ""
													}
												],
												"src": "1822:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2048:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2094:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2096:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2096:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2096:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2069:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2078:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2065:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2065:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2090:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2061:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2061:32:1"
															},
															"nodeType": "YulIf",
															"src": "2058:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2187:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2202:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2216:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2206:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2231:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2277:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2288:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2273:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2273:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2297:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2241:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2241:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2231:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2018:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2029:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2041:6:1",
														"type": ""
													}
												],
												"src": "1971:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2430:452:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2476:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2478:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2478:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2478:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2451:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2460:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2447:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2447:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2472:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2443:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2443:32:1"
															},
															"nodeType": "YulIf",
															"src": "2440:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2569:306:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2584:38:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2608:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2619:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2604:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2604:17:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2598:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2598:24:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2588:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2669:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "2671:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2671:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2671:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2641:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2649:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2638:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2638:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "2635:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2766:99:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2837:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2848:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2833:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2833:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2857:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2776:56:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2776:89:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2766:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2400:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2411:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2423:6:1",
														"type": ""
													}
												],
												"src": "2328:554:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2968:277:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3014:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3016:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3016:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3016:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2989:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2998:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2985:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2985:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3010:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2981:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2981:32:1"
															},
															"nodeType": "YulIf",
															"src": "2978:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3107:131:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3122:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3136:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3126:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3151:77:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3200:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3211:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3196:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3196:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3220:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$317",
																			"nodeType": "YulIdentifier",
																			"src": "3161:34:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3161:67:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3151:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$317",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2938:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2949:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2961:6:1",
														"type": ""
													}
												],
												"src": "2888:357:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3379:547:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3425:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3427:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3427:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3427:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3400:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3409:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3396:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3396:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3421:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3392:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3392:32:1"
															},
															"nodeType": "YulIf",
															"src": "3389:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3518:131:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3533:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3547:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3537:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3562:77:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3611:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3622:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3607:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3607:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3631:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$317",
																			"nodeType": "YulIdentifier",
																			"src": "3572:34:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3572:67:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3562:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3659:132:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3674:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3688:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3678:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3704:77:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3753:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3764:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3749:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3749:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3773:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_Router_$329",
																			"nodeType": "YulIdentifier",
																			"src": "3714:34:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3714:67:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3704:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3801:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3816:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3830:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3820:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3846:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3881:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3892:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3877:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3877:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3901:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3856:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3856:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3846:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$317t_contract$_Router_$329t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3333:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3344:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3356:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3364:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3372:6:1",
														"type": ""
													}
												],
												"src": "3251:675:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4029:405:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4075:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4077:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4077:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4077:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4050:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4059:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4046:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4046:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4071:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4042:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4042:32:1"
															},
															"nodeType": "YulIf",
															"src": "4039:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "4168:131:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4183:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4197:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4187:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4212:77:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4261:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4272:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4257:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4257:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4281:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_Router_$329",
																			"nodeType": "YulIdentifier",
																			"src": "4222:34:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4222:67:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4212:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4309:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4324:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4338:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4328:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4354:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4389:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4400:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4385:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4385:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4409:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4364:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4364:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4354:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_Router_$329t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3991:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4002:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4014:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4022:6:1",
														"type": ""
													}
												],
												"src": "3932:502:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4517:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4563:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4565:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4565:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4565:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4538:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4547:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4534:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4534:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4559:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4530:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4530:32:1"
															},
															"nodeType": "YulIf",
															"src": "4527:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "4656:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4671:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4685:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4675:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4700:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4746:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4757:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4742:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4742:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4766:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4710:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4710:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4700:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4487:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4498:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4510:6:1",
														"type": ""
													}
												],
												"src": "4440:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4877:99:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4921:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4929:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4887:33:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4887:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4887:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4942:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4960:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4965:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4956:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4956:14:1"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "4942:10:1"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4850:6:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4858:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "4866:10:1",
														"type": ""
													}
												],
												"src": "4797:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5037:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5054:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5077:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5059:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5059:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5047:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5047:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5047:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5025:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5032:3:1",
														"type": ""
													}
												],
												"src": "4982:108:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5161:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5178:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5201:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5183:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5183:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5171:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5171:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5171:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5149:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5156:3:1",
														"type": ""
													}
												],
												"src": "5096:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5374:608:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5384:68:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5446:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5398:47:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5398:54:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5388:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5461:93:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5542:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5547:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5468:73:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5468:86:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5461:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5563:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5628:5:1"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5578:49:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5578:56:1"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "5567:7:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5643:21:1",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "5657:7:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "5647:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5733:224:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5747:34:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "5774:6:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "5768:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5768:13:1"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "5751:13:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5794:70:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "5845:13:1"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "5860:3:1"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nodeType": "YulIdentifier",
																				"src": "5801:43:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5801:63:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "5794:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5877:70:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "5940:6:1"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "5887:52:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5887:60:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5877:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5695:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5698:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5692:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5692:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5706:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5708:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "5717:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5720:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5713:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5713:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "5708:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5677:14:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5679:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "5688:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "5683:1:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "5673:284:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5966:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "5973:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5966:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5353:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5360:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5369:3:1",
														"type": ""
													}
												],
												"src": "5250:732:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6053:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6070:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6093:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6075:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6075:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6063:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6063:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6063:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6041:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6048:3:1",
														"type": ""
													}
												],
												"src": "5988:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6210:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6220:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6232:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6243:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6228:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6228:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6220:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6300:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6313:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6324:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6309:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6309:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6256:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6256:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6256:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6182:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6194:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6205:4:1",
														"type": ""
													}
												],
												"src": "6112:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6438:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6448:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6460:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6471:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6456:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6456:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6448:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6528:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6541:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6552:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6537:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6537:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6484:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6484:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6484:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6410:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6422:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6433:4:1",
														"type": ""
													}
												],
												"src": "6340:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6744:307:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6754:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6766:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6777:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6762:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6762:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6754:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6834:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6847:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6858:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6843:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6843:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6790:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6790:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6790:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6882:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6893:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6878:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6878:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6902:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6908:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6898:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6898:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6871:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6871:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6871:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6928:116:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7030:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7039:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6936:93:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6936:108:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6928:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6708:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6720:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6728:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6739:4:1",
														"type": ""
													}
												],
												"src": "6568:483:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7098:88:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7108:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "7118:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7118:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "7108:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7167:6:1"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7175:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "7147:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7147:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7147:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7082:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7091:6:1",
														"type": ""
													}
												],
												"src": "7057:129:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7232:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7242:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7258:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7252:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7252:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "7242:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7225:6:1",
														"type": ""
													}
												],
												"src": "7192:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7355:229:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7460:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7462:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7462:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7462:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7432:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7440:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7429:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7429:30:1"
															},
															"nodeType": "YulIf",
															"src": "7426:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7492:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7504:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7512:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7500:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7500:17:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7492:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7554:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7566:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7572:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7562:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7562:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7554:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7339:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7350:4:1",
														"type": ""
													}
												],
												"src": "7273:311:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7662:60:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7672:11:1",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "7680:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "7672:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7693:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "7705:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7710:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7701:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7701:14:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "7693:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "7649:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7657:4:1",
														"type": ""
													}
												],
												"src": "7590:132:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7802:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7813:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7829:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7823:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7823:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "7813:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7785:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7795:6:1",
														"type": ""
													}
												],
												"src": "7728:114:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7923:38:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7933:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "7945:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7950:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7941:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7941:14:1"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "7933:4:1"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "7910:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "7918:4:1",
														"type": ""
													}
												],
												"src": "7848:113:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8078:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8095:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8100:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8088:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8088:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8088:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8116:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8135:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8140:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8131:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8131:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "8116:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8050:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8055:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "8066:11:1",
														"type": ""
													}
												],
												"src": "7967:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8202:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8212:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8241:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "8223:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8223:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8212:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8184:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8194:7:1",
														"type": ""
													}
												],
												"src": "8157:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8318:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8328:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8357:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "8339:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8339:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8328:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$317",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8300:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8310:7:1",
														"type": ""
													}
												],
												"src": "8259:110:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8434:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8444:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8473:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "8455:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8455:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8444:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_Router_$329",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8416:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8426:7:1",
														"type": ""
													}
												],
												"src": "8375:110:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8536:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8546:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8561:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8568:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8557:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8557:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8546:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8518:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8528:7:1",
														"type": ""
													}
												],
												"src": "8491:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8668:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8678:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "8689:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8678:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8650:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8660:7:1",
														"type": ""
													}
												],
												"src": "8623:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8749:238:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8759:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "8781:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "8811:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "8789:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8789:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8777:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8777:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "8763:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8928:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "8930:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8930:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8930:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "8871:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8883:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8868:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8868:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "8907:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8919:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "8904:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8904:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "8865:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8865:62:1"
															},
															"nodeType": "YulIf",
															"src": "8862:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8966:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "8970:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8959:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8959:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8959:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8735:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "8743:4:1",
														"type": ""
													}
												],
												"src": "8706:281:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9021:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9038:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9041:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9031:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9031:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9031:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9135:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9138:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9128:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9128:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9128:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9159:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9162:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9152:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9152:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9152:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "8993:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9207:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9224:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9227:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9217:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9217:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9217:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9321:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9324:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9314:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9314:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9314:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9345:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9348:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9338:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9338:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9338:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "9179:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9454:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9471:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9474:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9464:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9464:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9464:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "9365:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9577:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9594:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9597:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9587:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9587:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9587:12:1"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "9488:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9700:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9717:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9720:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9710:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9710:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9710:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "9611:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9823:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9840:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9843:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9833:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9833:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9833:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "9734:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9905:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9915:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9933:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9940:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9929:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9929:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9949:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "9945:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9945:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9925:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9925:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "9915:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9888:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "9898:6:1",
														"type": ""
													}
												],
												"src": "9857:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10008:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10065:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10074:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10077:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10067:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10067:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10067:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10031:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10056:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "10038:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10038:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "10028:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10028:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10021:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10021:43:1"
															},
															"nodeType": "YulIf",
															"src": "10018:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10001:5:1",
														"type": ""
													}
												],
												"src": "9965:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10150:93:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10221:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10230:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10233:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10223:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10223:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10223:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10173:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10212:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$317",
																					"nodeType": "YulIdentifier",
																					"src": "10180:31:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10180:38:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "10170:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10170:49:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10163:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10163:57:1"
															},
															"nodeType": "YulIf",
															"src": "10160:77:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$317",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10143:5:1",
														"type": ""
													}
												],
												"src": "10093:150:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10306:93:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10377:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10386:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10389:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10379:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10379:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10379:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10329:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10368:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_Router_$329",
																					"nodeType": "YulIdentifier",
																					"src": "10336:31:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10336:38:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "10326:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10326:49:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10319:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10319:57:1"
															},
															"nodeType": "YulIf",
															"src": "10316:77:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_Router_$329",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10299:5:1",
														"type": ""
													}
												],
												"src": "10249:150:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10448:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10505:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10514:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10517:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10507:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10507:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10507:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10471:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10496:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "10478:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10478:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "10468:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10468:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10461:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10461:43:1"
															},
															"nodeType": "YulIf",
															"src": "10458:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10441:5:1",
														"type": ""
													}
												],
												"src": "10405:122:1"
											}
										]
									},
									"contents": "{\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_contract$_IERC20_$317(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$317(value)\n    }\n\n    function abi_decode_t_contract$_Router_$329(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_Router_$329(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$317(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$317(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$317t_contract$_Router_$329t_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$317(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_Router_$329(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_Router_$329t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_Router_$329(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$317(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_Router_$329(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IERC20_$317(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$317(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_Router_$329(value) {\n        if iszero(eq(value, cleanup_t_contract$_Router_$329(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061007d5760003560e01c8063484f4ea91161005b578063484f4ea91461011257806376bf39a3146101305780638dd9500214610160578063e4dc2aa41461017e5761007d565b806320ae0b6d146100825780632b00490d146100b257806337823795146100e2575b600080fd5b61009c6004803603810190610097919061087c565b6101ae565b6040516100a991906109fa565b60405180910390f35b6100cc60048036038101906100c791906108cf565b6102bf565b6040516100d991906109fa565b60405180910390f35b6100fc60048036038101906100f7919061084f565b6104f3565b60405161010991906109df565b60405180910390f35b61011a61057a565b60405161012791906109df565b60405180910390f35b61014a6004803603810190610145919061084f565b6105a0565b60405161015791906109df565b60405180910390f35b610168610627565b60405161017591906109df565b60405180910390f35b6101986004803603810190610193919061084f565b61064b565b6040516101a591906109fa565b60405180910390f35b60008373ffffffffffffffffffffffffffffffffffffffff166370a082318573ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561021257600080fd5b505afa158015610226573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024a91906107d9565b6040518263ffffffff1660e01b815260040161026691906109df565b60206040518083038186803b15801561027e57600080fd5b505afa158015610292573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b6919061090f565b90509392505050565b600080600367ffffffffffffffff8111156102dd576102dc610b8f565b5b60405190808252806020026020018201604052801561030b5781602001602082028036833780820191505090505b509050828160008151811061032357610322610b60565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160018151811061039257610391610b60565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160028151811061040357610402610b60565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508373ffffffffffffffffffffffffffffffffffffffff1663d06ca61f600254836040518363ffffffff1660e01b815260040161047a929190610a15565b60006040518083038186803b15801561049257600080fd5b505afa1580156104a6573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906104cf9190610806565b6002815181106104e2576104e1610b60565b5b602002602001015191505092915050565b60008173ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b15801561053b57600080fd5b505afa15801561054f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057391906107d9565b9050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008173ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156105e857600080fd5b505afa1580156105fc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062091906107d9565b9050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008173ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561069357600080fd5b505afa1580156106a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cb919061090f565b9050919050565b60006106e56106e084610a6a565b610a45565b9050808382526020820190508285602086028201111561070857610707610bc3565b5b60005b85811015610738578161071e88826107c4565b84526020840193506020830192505060018101905061070b565b5050509392505050565b60008135905061075181610be3565b92915050565b60008151905061076681610be3565b92915050565b600082601f83011261078157610780610bbe565b5b81516107918482602086016106d2565b91505092915050565b6000813590506107a981610bfa565b92915050565b6000813590506107be81610c11565b92915050565b6000815190506107d381610c28565b92915050565b6000602082840312156107ef576107ee610bcd565b5b60006107fd84828501610757565b91505092915050565b60006020828403121561081c5761081b610bcd565b5b600082015167ffffffffffffffff81111561083a57610839610bc8565b5b6108468482850161076c565b91505092915050565b60006020828403121561086557610864610bcd565b5b60006108738482850161079a565b91505092915050565b60008060006060848603121561089557610894610bcd565b5b60006108a38682870161079a565b93505060206108b4868287016107af565b92505060406108c586828701610742565b9150509250925092565b600080604083850312156108e6576108e5610bcd565b5b60006108f4858286016107af565b925050602061090585828601610742565b9150509250929050565b60006020828403121561092557610924610bcd565b5b6000610933848285016107c4565b91505092915050565b60006109488383610954565b60208301905092915050565b61095d81610acf565b82525050565b61096c81610acf565b82525050565b600061097d82610aa6565b6109878185610abe565b935061099283610a96565b8060005b838110156109c35781516109aa888261093c565b97506109b583610ab1565b925050600181019050610996565b5085935050505092915050565b6109d981610b25565b82525050565b60006020820190506109f46000830184610963565b92915050565b6000602082019050610a0f60008301846109d0565b92915050565b6000604082019050610a2a60008301856109d0565b8181036020830152610a3c8184610972565b90509392505050565b6000610a4f610a60565b9050610a5b8282610b2f565b919050565b6000604051905090565b600067ffffffffffffffff821115610a8557610a84610b8f565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b6000610ada82610b05565b9050919050565b6000610aec82610acf565b9050919050565b6000610afe82610acf565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b610b3882610bd2565b810181811067ffffffffffffffff82111715610b5757610b56610b8f565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b610bec81610acf565b8114610bf757600080fd5b50565b610c0381610ae1565b8114610c0e57600080fd5b50565b610c1a81610af3565b8114610c2557600080fd5b50565b610c3181610b25565b8114610c3c57600080fd5b5056fea2646970667358221220c7f64e722159301964838e9f3807e34a716df13dc03ce970489e1c870f2ae96f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x484F4EA9 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x484F4EA9 EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x76BF39A3 EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x8DD95002 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0xE4DC2AA4 EQ PUSH2 0x17E JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x20AE0B6D EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x2B00490D EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x37823795 EQ PUSH2 0xE2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x87C JUMP JUMPDEST PUSH2 0x1AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x9FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x8CF JUMP JUMPDEST PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD9 SWAP2 SWAP1 PUSH2 0x9FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0x84F JUMP JUMPDEST PUSH2 0x4F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x109 SWAP2 SWAP1 PUSH2 0x9DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11A PUSH2 0x57A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x127 SWAP2 SWAP1 PUSH2 0x9DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x145 SWAP2 SWAP1 PUSH2 0x84F JUMP JUMPDEST PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x157 SWAP2 SWAP1 PUSH2 0x9DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x168 PUSH2 0x627 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x9DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x198 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x193 SWAP2 SWAP1 PUSH2 0x84F JUMP JUMPDEST PUSH2 0x64B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x9FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x226 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x7D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x9DF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x27E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x292 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x90F JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2DD JUMPI PUSH2 0x2DC PUSH2 0xB8F JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x30B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x323 JUMPI PUSH2 0x322 PUSH2 0xB60 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x392 JUMPI PUSH2 0x391 PUSH2 0xB60 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x403 JUMPI PUSH2 0x402 PUSH2 0xB60 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD06CA61F PUSH1 0x2 SLOAD DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47A SWAP3 SWAP2 SWAP1 PUSH2 0xA15 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4CF SWAP2 SWAP1 PUSH2 0x806 JUMP JUMPDEST PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x4E2 JUMPI PUSH2 0x4E1 PUSH2 0xB60 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x53B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x54F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x573 SWAP2 SWAP1 PUSH2 0x7D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5FC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x620 SWAP2 SWAP1 PUSH2 0x7D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x693 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6A7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6CB SWAP2 SWAP1 PUSH2 0x90F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6E5 PUSH2 0x6E0 DUP5 PUSH2 0xA6A JUMP JUMPDEST PUSH2 0xA45 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x708 JUMPI PUSH2 0x707 PUSH2 0xBC3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x738 JUMPI DUP2 PUSH2 0x71E DUP9 DUP3 PUSH2 0x7C4 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x70B JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x751 DUP2 PUSH2 0xBE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x766 DUP2 PUSH2 0xBE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x781 JUMPI PUSH2 0x780 PUSH2 0xBBE JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x791 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x6D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7A9 DUP2 PUSH2 0xBFA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7BE DUP2 PUSH2 0xC11 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x7D3 DUP2 PUSH2 0xC28 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7EF JUMPI PUSH2 0x7EE PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7FD DUP5 DUP3 DUP6 ADD PUSH2 0x757 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x81C JUMPI PUSH2 0x81B PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x83A JUMPI PUSH2 0x839 PUSH2 0xBC8 JUMP JUMPDEST JUMPDEST PUSH2 0x846 DUP5 DUP3 DUP6 ADD PUSH2 0x76C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x865 JUMPI PUSH2 0x864 PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x873 DUP5 DUP3 DUP6 ADD PUSH2 0x79A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x895 JUMPI PUSH2 0x894 PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8A3 DUP7 DUP3 DUP8 ADD PUSH2 0x79A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x8B4 DUP7 DUP3 DUP8 ADD PUSH2 0x7AF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x8C5 DUP7 DUP3 DUP8 ADD PUSH2 0x742 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8E6 JUMPI PUSH2 0x8E5 PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8F4 DUP6 DUP3 DUP7 ADD PUSH2 0x7AF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x905 DUP6 DUP3 DUP7 ADD PUSH2 0x742 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x925 JUMPI PUSH2 0x924 PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x933 DUP5 DUP3 DUP6 ADD PUSH2 0x7C4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x948 DUP4 DUP4 PUSH2 0x954 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x95D DUP2 PUSH2 0xACF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x96C DUP2 PUSH2 0xACF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x97D DUP3 PUSH2 0xAA6 JUMP JUMPDEST PUSH2 0x987 DUP2 DUP6 PUSH2 0xABE JUMP JUMPDEST SWAP4 POP PUSH2 0x992 DUP4 PUSH2 0xA96 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9C3 JUMPI DUP2 MLOAD PUSH2 0x9AA DUP9 DUP3 PUSH2 0x93C JUMP JUMPDEST SWAP8 POP PUSH2 0x9B5 DUP4 PUSH2 0xAB1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x996 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9D9 DUP2 PUSH2 0xB25 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9F4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x963 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA0F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xA2A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x9D0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xA3C DUP2 DUP5 PUSH2 0x972 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA4F PUSH2 0xA60 JUMP JUMPDEST SWAP1 POP PUSH2 0xA5B DUP3 DUP3 PUSH2 0xB2F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xA85 JUMPI PUSH2 0xA84 PUSH2 0xB8F JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADA DUP3 PUSH2 0xB05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAEC DUP3 PUSH2 0xACF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFE DUP3 PUSH2 0xACF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB38 DUP3 PUSH2 0xBD2 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xB57 JUMPI PUSH2 0xB56 PUSH2 0xB8F JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBEC DUP2 PUSH2 0xACF JUMP JUMPDEST DUP2 EQ PUSH2 0xBF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xC03 DUP2 PUSH2 0xAE1 JUMP JUMPDEST DUP2 EQ PUSH2 0xC0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xC1A DUP2 PUSH2 0xAF3 JUMP JUMPDEST DUP2 EQ PUSH2 0xC25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xC31 DUP2 PUSH2 0xB25 JUMP JUMPDEST DUP2 EQ PUSH2 0xC3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0xF6 0x4E PUSH19 0x2159301964838E9F3807E34A716DF13DC03CE9 PUSH17 0x489E1C870F2AE96F64736F6C6343000807 STOP CALLER ",
							"sourceMap": "8846:1027:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9057:172;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9595:275;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9479:108;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8941:64;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9363:108;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8870:64;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9237:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9057:172;9154:7;9181:9;:19;;;9201:9;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9181:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9173:48;;9057:172;;;;;:::o;9595:275::-;9669:4;9685:21;9723:1;9709:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9685:40;;9746:5;9736:4;9741:1;9736:7;;;;;;;;:::i;:::-;;;;;;;:15;;;;;;;;;;;9772:4;;;;;;;;;;9762;9767:1;9762:7;;;;;;;;:::i;:::-;;;;;;;:14;;;;;;;;;;;9797:4;;;;;;;;;;;9787;9792:1;9787:7;;;;;;;;:::i;:::-;;;;;;;:14;;;;;;;;;;;9819:13;:27;;;9847:6;;9854:4;9819:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9860:1;9819:43;;;;;;;;:::i;:::-;;;;;;;;9812:50;;;9595:275;;;;:::o;9479:108::-;9535:7;9561:9;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9554:25;;9479:108;;;:::o;8941:64::-;;;;;;;;;;;;;:::o;9363:108::-;9419:7;9445:9;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9438:25;;9363:108;;;:::o;8870:64::-;;;;;;;;;;;;:::o;9237:118::-;9298:7;9324:9;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9317:30;;9237:118;;;:::o;24:744:1:-;131:5;156:81;172:64;229:6;172:64;:::i;:::-;156:81;:::i;:::-;147:90;;257:5;286:6;279:5;272:21;320:4;313:5;309:16;302:23;;346:6;396:3;388:4;380:6;376:17;371:3;367:27;364:36;361:143;;;415:79;;:::i;:::-;361:143;528:1;513:249;538:6;535:1;532:13;513:249;;;606:3;635:48;679:3;667:10;635:48;:::i;:::-;630:3;623:61;713:4;708:3;704:14;697:21;;747:4;742:3;738:14;731:21;;573:189;560:1;557;553:9;548:14;;513:249;;;517:14;137:631;;24:744;;;;;:::o;774:139::-;820:5;858:6;845:20;836:29;;874:33;901:5;874:33;:::i;:::-;774:139;;;;:::o;919:143::-;976:5;1007:6;1001:13;992:22;;1023:33;1050:5;1023:33;:::i;:::-;919:143;;;;:::o;1085:385::-;1167:5;1216:3;1209:4;1201:6;1197:17;1193:27;1183:122;;1224:79;;:::i;:::-;1183:122;1334:6;1328:13;1359:105;1460:3;1452:6;1445:4;1437:6;1433:17;1359:105;:::i;:::-;1350:114;;1173:297;1085:385;;;;:::o;1476:167::-;1536:5;1574:6;1561:20;1552:29;;1590:47;1631:5;1590:47;:::i;:::-;1476:167;;;;:::o;1649:::-;1709:5;1747:6;1734:20;1725:29;;1763:47;1804:5;1763:47;:::i;:::-;1649:167;;;;:::o;1822:143::-;1879:5;1910:6;1904:13;1895:22;;1926:33;1953:5;1926:33;:::i;:::-;1822:143;;;;:::o;1971:351::-;2041:6;2090:2;2078:9;2069:7;2065:23;2061:32;2058:119;;;2096:79;;:::i;:::-;2058:119;2216:1;2241:64;2297:7;2288:6;2277:9;2273:22;2241:64;:::i;:::-;2231:74;;2187:128;1971:351;;;;:::o;2328:554::-;2423:6;2472:2;2460:9;2451:7;2447:23;2443:32;2440:119;;;2478:79;;:::i;:::-;2440:119;2619:1;2608:9;2604:17;2598:24;2649:18;2641:6;2638:30;2635:117;;;2671:79;;:::i;:::-;2635:117;2776:89;2857:7;2848:6;2837:9;2833:22;2776:89;:::i;:::-;2766:99;;2569:306;2328:554;;;;:::o;2888:357::-;2961:6;3010:2;2998:9;2989:7;2985:23;2981:32;2978:119;;;3016:79;;:::i;:::-;2978:119;3136:1;3161:67;3220:7;3211:6;3200:9;3196:22;3161:67;:::i;:::-;3151:77;;3107:131;2888:357;;;;:::o;3251:675::-;3356:6;3364;3372;3421:2;3409:9;3400:7;3396:23;3392:32;3389:119;;;3427:79;;:::i;:::-;3389:119;3547:1;3572:67;3631:7;3622:6;3611:9;3607:22;3572:67;:::i;:::-;3562:77;;3518:131;3688:2;3714:67;3773:7;3764:6;3753:9;3749:22;3714:67;:::i;:::-;3704:77;;3659:132;3830:2;3856:53;3901:7;3892:6;3881:9;3877:22;3856:53;:::i;:::-;3846:63;;3801:118;3251:675;;;;;:::o;3932:502::-;4014:6;4022;4071:2;4059:9;4050:7;4046:23;4042:32;4039:119;;;4077:79;;:::i;:::-;4039:119;4197:1;4222:67;4281:7;4272:6;4261:9;4257:22;4222:67;:::i;:::-;4212:77;;4168:131;4338:2;4364:53;4409:7;4400:6;4389:9;4385:22;4364:53;:::i;:::-;4354:63;;4309:118;3932:502;;;;;:::o;4440:351::-;4510:6;4559:2;4547:9;4538:7;4534:23;4530:32;4527:119;;;4565:79;;:::i;:::-;4527:119;4685:1;4710:64;4766:7;4757:6;4746:9;4742:22;4710:64;:::i;:::-;4700:74;;4656:128;4440:351;;;;:::o;4797:179::-;4866:10;4887:46;4929:3;4921:6;4887:46;:::i;:::-;4965:4;4960:3;4956:14;4942:28;;4797:179;;;;:::o;4982:108::-;5059:24;5077:5;5059:24;:::i;:::-;5054:3;5047:37;4982:108;;:::o;5096:118::-;5183:24;5201:5;5183:24;:::i;:::-;5178:3;5171:37;5096:118;;:::o;5250:732::-;5369:3;5398:54;5446:5;5398:54;:::i;:::-;5468:86;5547:6;5542:3;5468:86;:::i;:::-;5461:93;;5578:56;5628:5;5578:56;:::i;:::-;5657:7;5688:1;5673:284;5698:6;5695:1;5692:13;5673:284;;;5774:6;5768:13;5801:63;5860:3;5845:13;5801:63;:::i;:::-;5794:70;;5887:60;5940:6;5887:60;:::i;:::-;5877:70;;5733:224;5720:1;5717;5713:9;5708:14;;5673:284;;;5677:14;5973:3;5966:10;;5374:608;;;5250:732;;;;:::o;5988:118::-;6075:24;6093:5;6075:24;:::i;:::-;6070:3;6063:37;5988:118;;:::o;6112:222::-;6205:4;6243:2;6232:9;6228:18;6220:26;;6256:71;6324:1;6313:9;6309:17;6300:6;6256:71;:::i;:::-;6112:222;;;;:::o;6340:::-;6433:4;6471:2;6460:9;6456:18;6448:26;;6484:71;6552:1;6541:9;6537:17;6528:6;6484:71;:::i;:::-;6340:222;;;;:::o;6568:483::-;6739:4;6777:2;6766:9;6762:18;6754:26;;6790:71;6858:1;6847:9;6843:17;6834:6;6790:71;:::i;:::-;6908:9;6902:4;6898:20;6893:2;6882:9;6878:18;6871:48;6936:108;7039:4;7030:6;6936:108;:::i;:::-;6928:116;;6568:483;;;;;:::o;7057:129::-;7091:6;7118:20;;:::i;:::-;7108:30;;7147:33;7175:4;7167:6;7147:33;:::i;:::-;7057:129;;;:::o;7192:75::-;7225:6;7258:2;7252:9;7242:19;;7192:75;:::o;7273:311::-;7350:4;7440:18;7432:6;7429:30;7426:56;;;7462:18;;:::i;:::-;7426:56;7512:4;7504:6;7500:17;7492:25;;7572:4;7566;7562:15;7554:23;;7273:311;;;:::o;7590:132::-;7657:4;7680:3;7672:11;;7710:4;7705:3;7701:14;7693:22;;7590:132;;;:::o;7728:114::-;7795:6;7829:5;7823:12;7813:22;;7728:114;;;:::o;7848:113::-;7918:4;7950;7945:3;7941:14;7933:22;;7848:113;;;:::o;7967:184::-;8066:11;8100:6;8095:3;8088:19;8140:4;8135:3;8131:14;8116:29;;7967:184;;;;:::o;8157:96::-;8194:7;8223:24;8241:5;8223:24;:::i;:::-;8212:35;;8157:96;;;:::o;8259:110::-;8310:7;8339:24;8357:5;8339:24;:::i;:::-;8328:35;;8259:110;;;:::o;8375:::-;8426:7;8455:24;8473:5;8455:24;:::i;:::-;8444:35;;8375:110;;;:::o;8491:126::-;8528:7;8568:42;8561:5;8557:54;8546:65;;8491:126;;;:::o;8623:77::-;8660:7;8689:5;8678:16;;8623:77;;;:::o;8706:281::-;8789:27;8811:4;8789:27;:::i;:::-;8781:6;8777:40;8919:6;8907:10;8904:22;8883:18;8871:10;8868:34;8865:62;8862:88;;;8930:18;;:::i;:::-;8862:88;8970:10;8966:2;8959:22;8749:238;8706:281;;:::o;8993:180::-;9041:77;9038:1;9031:88;9138:4;9135:1;9128:15;9162:4;9159:1;9152:15;9179:180;9227:77;9224:1;9217:88;9324:4;9321:1;9314:15;9348:4;9345:1;9338:15;9365:117;9474:1;9471;9464:12;9488:117;9597:1;9594;9587:12;9611:117;9720:1;9717;9710:12;9734:117;9843:1;9840;9833:12;9857:102;9898:6;9949:2;9945:7;9940:2;9933:5;9929:14;9925:28;9915:38;;9857:102;;;:::o;9965:122::-;10038:24;10056:5;10038:24;:::i;:::-;10031:5;10028:35;10018:63;;10077:1;10074;10067:12;10018:63;9965:122;:::o;10093:150::-;10180:38;10212:5;10180:38;:::i;:::-;10173:5;10170:49;10160:77;;10233:1;10230;10223:12;10160:77;10093:150;:::o;10249:::-;10336:38;10368:5;10336:38;:::i;:::-;10329:5;10326:49;10316:77;;10389:1;10386;10379:12;10316:77;10249:150;:::o;10405:122::-;10478:24;10496:5;10478:24;:::i;:::-;10471:5;10468:35;10458:63;;10517:1;10514;10507:12;10458:63;10405:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "637800",
								"executionCost": "71310",
								"totalCost": "709110"
							},
							"external": {
								"BUSD()": "2514",
								"CalcLpPrice(address,address,address)": "infinite",
								"WBNB()": "2555",
								"price(address,address)": "infinite",
								"token0(address)": "infinite",
								"token1(address)": "infinite",
								"totalSupply(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 8846,
									"end": 9873,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 8846,
									"end": 9873,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8846,
									"end": 9873,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8892,
									"end": 8934,
									"name": "PUSH",
									"source": 0,
									"value": "AE13D989DAC2F0DEBFF460AC112A837C89BAA7CD"
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8963,
									"end": 9005,
									"name": "PUSH",
									"source": 0,
									"value": "78867BBEEF44F2326BF8DDD1941A4439382EF2A7"
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9029,
									"end": 9048,
									"name": "PUSH",
									"source": 0,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 9012,
									"end": 9048,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 9012,
									"end": 9048,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9873,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9873,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9873,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9873,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8846,
									"end": 9873,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9873,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8846,
									"end": 9873,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9873,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9873,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8846,
									"end": 9873,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9873,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9873,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8846,
									"end": 9873,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9873,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8846,
									"end": 9873,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8846,
									"end": 9873,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9873,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8846,
									"end": 9873,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c7f64e722159301964838e9f3807e34a716df13dc03ce970489e1c870f2ae96f64736f6c63430008070033",
									".code": [
										{
											"begin": 8846,
											"end": 9873,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "PUSH",
											"source": 0,
											"value": "484F4EA9"
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "PUSH",
											"source": 0,
											"value": "484F4EA9"
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "PUSH",
											"source": 0,
											"value": "76BF39A3"
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "PUSH",
											"source": 0,
											"value": "8DD95002"
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "PUSH",
											"source": 0,
											"value": "E4DC2AA4"
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "PUSH",
											"source": 0,
											"value": "20AE0B6D"
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "PUSH",
											"source": 0,
											"value": "2B00490D"
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "PUSH",
											"source": 0,
											"value": "37823795"
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9873,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9229,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9057,
											"end": 9229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 9057,
											"end": 9229,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9057,
											"end": 9229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9229,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9229,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9229,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 9057,
											"end": 9229,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 9057,
											"end": 9229,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9057,
											"end": 9229,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 9057,
											"end": 9229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 9057,
											"end": 9229,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9057,
											"end": 9229,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 9057,
											"end": 9229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9229,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9057,
											"end": 9229,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 9057,
											"end": 9229,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 9057,
											"end": 9229,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9057,
											"end": 9229,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 9057,
											"end": 9229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9229,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9057,
											"end": 9229,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9229,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9229,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9229,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9595,
											"end": 9870,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9595,
											"end": 9870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9595,
											"end": 9870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 9595,
											"end": 9870,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9595,
											"end": 9870,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9595,
											"end": 9870,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9595,
											"end": 9870,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9595,
											"end": 9870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9595,
											"end": 9870,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9595,
											"end": 9870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9595,
											"end": 9870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 9595,
											"end": 9870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9595,
											"end": 9870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9595,
											"end": 9870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 9595,
											"end": 9870,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9595,
											"end": 9870,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 9595,
											"end": 9870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9595,
											"end": 9870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9595,
											"end": 9870,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9595,
											"end": 9870,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 9595,
											"end": 9870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9595,
											"end": 9870,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9595,
											"end": 9870,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9595,
											"end": 9870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 9595,
											"end": 9870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9595,
											"end": 9870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9595,
											"end": 9870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 9595,
											"end": 9870,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9595,
											"end": 9870,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 9595,
											"end": 9870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9595,
											"end": 9870,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9595,
											"end": 9870,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9595,
											"end": 9870,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9595,
											"end": 9870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9595,
											"end": 9870,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9595,
											"end": 9870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9595,
											"end": 9870,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9479,
											"end": 9587,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 9479,
											"end": 9587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9479,
											"end": 9587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 9479,
											"end": 9587,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9479,
											"end": 9587,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9479,
											"end": 9587,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9479,
											"end": 9587,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9479,
											"end": 9587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9479,
											"end": 9587,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9479,
											"end": 9587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9479,
											"end": 9587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 9479,
											"end": 9587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9479,
											"end": 9587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9479,
											"end": 9587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9479,
											"end": 9587,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9479,
											"end": 9587,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 9479,
											"end": 9587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9479,
											"end": 9587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 9479,
											"end": 9587,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9479,
											"end": 9587,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 9479,
											"end": 9587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9479,
											"end": 9587,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9479,
											"end": 9587,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9479,
											"end": 9587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 9479,
											"end": 9587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9479,
											"end": 9587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9479,
											"end": 9587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 9479,
											"end": 9587,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9479,
											"end": 9587,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 9479,
											"end": 9587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9479,
											"end": 9587,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9479,
											"end": 9587,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9479,
											"end": 9587,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9479,
											"end": 9587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9479,
											"end": 9587,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9479,
											"end": 9587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9479,
											"end": 9587,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9363,
											"end": 9471,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 9363,
											"end": 9471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9363,
											"end": 9471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 9363,
											"end": 9471,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9363,
											"end": 9471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9363,
											"end": 9471,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9363,
											"end": 9471,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9363,
											"end": 9471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9363,
											"end": 9471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9363,
											"end": 9471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9363,
											"end": 9471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9363,
											"end": 9471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9363,
											"end": 9471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9363,
											"end": 9471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9363,
											"end": 9471,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9363,
											"end": 9471,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9363,
											"end": 9471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9363,
											"end": 9471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 9363,
											"end": 9471,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9363,
											"end": 9471,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 9363,
											"end": 9471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9363,
											"end": 9471,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9363,
											"end": 9471,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9363,
											"end": 9471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 9363,
											"end": 9471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9363,
											"end": 9471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9363,
											"end": 9471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 9363,
											"end": 9471,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9363,
											"end": 9471,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 9363,
											"end": 9471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9363,
											"end": 9471,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9363,
											"end": 9471,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9363,
											"end": 9471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9363,
											"end": 9471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9363,
											"end": 9471,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9363,
											"end": 9471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9363,
											"end": 9471,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9237,
											"end": 9355,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9237,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9237,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 9237,
											"end": 9355,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9237,
											"end": 9355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9237,
											"end": 9355,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9237,
											"end": 9355,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9237,
											"end": 9355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9237,
											"end": 9355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9237,
											"end": 9355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9237,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 9237,
											"end": 9355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9237,
											"end": 9355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9237,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9237,
											"end": 9355,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9237,
											"end": 9355,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 9237,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9237,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9237,
											"end": 9355,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9237,
											"end": 9355,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 9237,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9237,
											"end": 9355,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9237,
											"end": 9355,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9237,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 9237,
											"end": 9355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9237,
											"end": 9355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9237,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 9237,
											"end": 9355,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9237,
											"end": 9355,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 9237,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9237,
											"end": 9355,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9237,
											"end": 9355,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9237,
											"end": 9355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9237,
											"end": 9355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9237,
											"end": 9355,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9237,
											"end": 9355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9237,
											"end": 9355,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9229,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 9057,
											"end": 9229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9154,
											"end": 9161,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9181,
											"end": 9190,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9200,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9181,
											"end": 9200,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9200,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 9201,
											"end": 9210,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9217,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9201,
											"end": 9217,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9217,
											"name": "PUSH",
											"source": 0,
											"value": "DFE1681"
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 9181,
											"end": 9220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9173,
											"end": 9221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9173,
											"end": 9221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9229,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9229,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9229,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9229,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9229,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9229,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9595,
											"end": 9870,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9595,
											"end": 9870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9669,
											"end": 9673,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9685,
											"end": 9706,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9723,
											"end": 9724,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9685,
											"end": 9725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9685,
											"end": 9725,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9751,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9736,
											"end": 9740,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9741,
											"end": 9742,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9736,
											"end": 9743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9736,
											"end": 9743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9736,
											"end": 9743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9736,
											"end": 9743,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9736,
											"end": 9743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 9736,
											"end": 9743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9736,
											"end": 9743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 9736,
											"end": 9743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 9736,
											"end": 9743,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9736,
											"end": 9743,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 9736,
											"end": 9743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9736,
											"end": 9743,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 9736,
											"end": 9743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9736,
											"end": 9743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9736,
											"end": 9743,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9736,
											"end": 9743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9736,
											"end": 9743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9736,
											"end": 9743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9736,
											"end": 9751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9736,
											"end": 9751,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9736,
											"end": 9751,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9736,
											"end": 9751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9736,
											"end": 9751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9736,
											"end": 9751,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9736,
											"end": 9751,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9736,
											"end": 9751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9736,
											"end": 9751,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9736,
											"end": 9751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9736,
											"end": 9751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9772,
											"end": 9776,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9772,
											"end": 9776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9772,
											"end": 9776,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9772,
											"end": 9776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9772,
											"end": 9776,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9772,
											"end": 9776,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9772,
											"end": 9776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9772,
											"end": 9776,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9772,
											"end": 9776,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9772,
											"end": 9776,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9762,
											"end": 9766,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9767,
											"end": 9768,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9762,
											"end": 9769,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9762,
											"end": 9769,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9762,
											"end": 9769,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9762,
											"end": 9769,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9762,
											"end": 9769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 9762,
											"end": 9769,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9762,
											"end": 9769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 9762,
											"end": 9769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 9762,
											"end": 9769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9762,
											"end": 9769,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 9762,
											"end": 9769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9762,
											"end": 9769,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 9762,
											"end": 9769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9762,
											"end": 9769,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9762,
											"end": 9769,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9762,
											"end": 9769,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9762,
											"end": 9769,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9762,
											"end": 9769,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9762,
											"end": 9776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9762,
											"end": 9776,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9762,
											"end": 9776,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9762,
											"end": 9776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9762,
											"end": 9776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9762,
											"end": 9776,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9762,
											"end": 9776,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9762,
											"end": 9776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9762,
											"end": 9776,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9762,
											"end": 9776,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9762,
											"end": 9776,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9801,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9797,
											"end": 9801,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9797,
											"end": 9801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9801,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9801,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9797,
											"end": 9801,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9801,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9801,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9797,
											"end": 9801,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9787,
											"end": 9791,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9792,
											"end": 9793,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9787,
											"end": 9794,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9787,
											"end": 9794,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9787,
											"end": 9794,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9787,
											"end": 9794,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9787,
											"end": 9794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 9787,
											"end": 9794,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9787,
											"end": 9794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 9787,
											"end": 9794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 9787,
											"end": 9794,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9787,
											"end": 9794,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 9787,
											"end": 9794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9787,
											"end": 9794,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 9787,
											"end": 9794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9787,
											"end": 9794,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9787,
											"end": 9794,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9787,
											"end": 9794,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9787,
											"end": 9794,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9787,
											"end": 9794,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9787,
											"end": 9801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9787,
											"end": 9801,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9787,
											"end": 9801,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9787,
											"end": 9801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9787,
											"end": 9801,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9787,
											"end": 9801,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9787,
											"end": 9801,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9787,
											"end": 9801,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9787,
											"end": 9801,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9787,
											"end": 9801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9787,
											"end": 9801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9846,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9819,
											"end": 9846,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9846,
											"name": "PUSH",
											"source": 0,
											"value": "D06CA61F"
										},
										{
											"begin": 9847,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9847,
											"end": 9853,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9854,
											"end": 9858,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 9819,
											"end": 9859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9860,
											"end": 9861,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9819,
											"end": 9862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9862,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9862,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 9819,
											"end": 9862,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 9819,
											"end": 9862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 9819,
											"end": 9862,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9819,
											"end": 9862,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 9819,
											"end": 9862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9862,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 9819,
											"end": 9862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9862,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9819,
											"end": 9862,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9862,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9819,
											"end": 9862,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9862,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9862,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9812,
											"end": 9862,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9812,
											"end": 9862,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9812,
											"end": 9862,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9595,
											"end": 9870,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9595,
											"end": 9870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9595,
											"end": 9870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9595,
											"end": 9870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9595,
											"end": 9870,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9479,
											"end": 9587,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 9479,
											"end": 9587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9535,
											"end": 9542,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9561,
											"end": 9570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9577,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9561,
											"end": 9577,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9577,
											"name": "PUSH",
											"source": 0,
											"value": "D21220A7"
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9554,
											"end": 9579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9554,
											"end": 9579,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9479,
											"end": 9587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9479,
											"end": 9587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9479,
											"end": 9587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9479,
											"end": 9587,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9363,
											"end": 9471,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 9363,
											"end": 9471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9419,
											"end": 9426,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9445,
											"end": 9454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9461,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9445,
											"end": 9461,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9461,
											"name": "PUSH",
											"source": 0,
											"value": "DFE1681"
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9438,
											"end": 9463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9438,
											"end": 9463,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9363,
											"end": 9471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9363,
											"end": 9471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9363,
											"end": 9471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9363,
											"end": 9471,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9237,
											"end": 9355,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9237,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9298,
											"end": 9305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9324,
											"end": 9333,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9345,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9324,
											"end": 9345,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9345,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 9324,
											"end": 9347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9317,
											"end": 9347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9317,
											"end": 9347,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9237,
											"end": 9355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9237,
											"end": 9355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9237,
											"end": 9355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9237,
											"end": 9355,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24,
											"end": 768,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 24,
											"end": 768,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 131,
											"end": 136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 229,
											"end": 235,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 172,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 156,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 147,
											"end": 237,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 147,
											"end": 237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 257,
											"end": 262,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 286,
											"end": 292,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 272,
											"end": 293,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 320,
											"end": 324,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 313,
											"end": 318,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 309,
											"end": 325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 302,
											"end": 325,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 302,
											"end": 325,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 346,
											"end": 352,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 396,
											"end": 399,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 388,
											"end": 392,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 380,
											"end": 386,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 376,
											"end": 393,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 367,
											"end": 394,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 364,
											"end": 400,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 361,
											"end": 504,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 361,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 361,
											"end": 504,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 415,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 361,
											"end": 504,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 361,
											"end": 504,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 538,
											"end": 544,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 535,
											"end": 536,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 532,
											"end": 545,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 513,
											"end": 762,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 513,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 606,
											"end": 609,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 635,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 679,
											"end": 682,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 667,
											"end": 677,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 635,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 635,
											"end": 683,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 635,
											"end": 683,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 635,
											"end": 683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 630,
											"end": 633,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 623,
											"end": 684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 713,
											"end": 717,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 708,
											"end": 711,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 704,
											"end": 718,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 697,
											"end": 718,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 697,
											"end": 718,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 747,
											"end": 751,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 742,
											"end": 745,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 738,
											"end": 752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 731,
											"end": 752,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 731,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 573,
											"end": 762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 560,
											"end": 561,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 557,
											"end": 558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 553,
											"end": 562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 548,
											"end": 562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 548,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 513,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 513,
											"end": 762,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 517,
											"end": 531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 137,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 137,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 774,
											"end": 913,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 774,
											"end": 913,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 820,
											"end": 825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 858,
											"end": 864,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 845,
											"end": 865,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 865,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 874,
											"end": 907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 901,
											"end": 906,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 874,
											"end": 907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 874,
											"end": 907,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 874,
											"end": 907,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 874,
											"end": 907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 774,
											"end": 913,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 774,
											"end": 913,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 774,
											"end": 913,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 774,
											"end": 913,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 774,
											"end": 913,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 919,
											"end": 1062,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 919,
											"end": 1062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 976,
											"end": 981,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1007,
											"end": 1013,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1001,
											"end": 1014,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 992,
											"end": 1014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 992,
											"end": 1014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 1050,
											"end": 1055,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 919,
											"end": 1062,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 919,
											"end": 1062,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 919,
											"end": 1062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 919,
											"end": 1062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 919,
											"end": 1062,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1085,
											"end": 1470,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 1085,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1167,
											"end": 1172,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1216,
											"end": 1219,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1213,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1201,
											"end": 1207,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1220,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1183,
											"end": 1305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 1183,
											"end": 1305,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1224,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 1224,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 1224,
											"end": 1303,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1224,
											"end": 1303,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 1224,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1183,
											"end": 1305,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 1183,
											"end": 1305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1334,
											"end": 1340,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1341,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 1460,
											"end": 1463,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1458,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1445,
											"end": 1449,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1437,
											"end": 1443,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1433,
											"end": 1450,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1359,
											"end": 1464,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1359,
											"end": 1464,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 1359,
											"end": 1464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1350,
											"end": 1464,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1350,
											"end": 1464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1173,
											"end": 1470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1470,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1470,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1470,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1476,
											"end": 1643,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 1476,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1536,
											"end": 1541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1574,
											"end": 1580,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1581,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1581,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1581,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1590,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 1631,
											"end": 1636,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1590,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 1590,
											"end": 1637,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1590,
											"end": 1637,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 1590,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1643,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1643,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1643,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1649,
											"end": 1816,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 1649,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1709,
											"end": 1714,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1747,
											"end": 1753,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1734,
											"end": 1754,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1725,
											"end": 1754,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1725,
											"end": 1754,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1763,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1763,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 1763,
											"end": 1810,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1763,
											"end": 1810,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 1763,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1816,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1816,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1816,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1816,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1816,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1822,
											"end": 1965,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 1822,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 1884,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1910,
											"end": 1916,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1904,
											"end": 1917,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1917,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1926,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 1953,
											"end": 1958,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1926,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 1926,
											"end": 1959,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1926,
											"end": 1959,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 1926,
											"end": 1959,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1822,
											"end": 1965,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1822,
											"end": 1965,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1822,
											"end": 1965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1822,
											"end": 1965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1822,
											"end": 1965,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1971,
											"end": 2322,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1971,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2047,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2090,
											"end": 2092,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2078,
											"end": 2087,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2069,
											"end": 2076,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2088,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2061,
											"end": 2093,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2058,
											"end": 2177,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2058,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 2058,
											"end": 2177,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 2096,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 2096,
											"end": 2175,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2096,
											"end": 2175,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 2096,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2058,
											"end": 2177,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 2058,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2216,
											"end": 2217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2241,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 2297,
											"end": 2304,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2294,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2277,
											"end": 2286,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2273,
											"end": 2295,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2241,
											"end": 2305,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2241,
											"end": 2305,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 2241,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2231,
											"end": 2305,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2231,
											"end": 2305,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2315,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 2322,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 2322,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 2322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 2322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 2322,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2328,
											"end": 2882,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2328,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2429,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2472,
											"end": 2474,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2469,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2458,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2447,
											"end": 2470,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2443,
											"end": 2475,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2619,
											"end": 2620,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2608,
											"end": 2617,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2604,
											"end": 2621,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2622,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2667,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2641,
											"end": 2647,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2638,
											"end": 2668,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2635,
											"end": 2752,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2635,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 2635,
											"end": 2752,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2671,
											"end": 2750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 2671,
											"end": 2750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 2671,
											"end": 2750,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2671,
											"end": 2750,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 2671,
											"end": 2750,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2635,
											"end": 2752,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 2635,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2776,
											"end": 2865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2857,
											"end": 2864,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2854,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2837,
											"end": 2846,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2833,
											"end": 2855,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2776,
											"end": 2865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2776,
											"end": 2865,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2776,
											"end": 2865,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2776,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2865,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2569,
											"end": 2875,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2882,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2882,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2882,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2888,
											"end": 3245,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2888,
											"end": 3245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 2967,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3010,
											"end": 3012,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2998,
											"end": 3007,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 2996,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3008,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 3013,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 3097,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 2978,
											"end": 3097,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 3016,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 3016,
											"end": 3095,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3016,
											"end": 3095,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 3016,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 3097,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 2978,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3136,
											"end": 3137,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3161,
											"end": 3228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 3220,
											"end": 3227,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3217,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3200,
											"end": 3209,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3218,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3161,
											"end": 3228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 3161,
											"end": 3228,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3161,
											"end": 3228,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 3161,
											"end": 3228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3151,
											"end": 3228,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3151,
											"end": 3228,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3107,
											"end": 3238,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 3245,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 3245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 3245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 3245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 3245,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3251,
											"end": 3926,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3251,
											"end": 3926,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3356,
											"end": 3362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3364,
											"end": 3370,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3372,
											"end": 3378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3421,
											"end": 3423,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3409,
											"end": 3418,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3419,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3424,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3389,
											"end": 3508,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3389,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 3389,
											"end": 3508,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3427,
											"end": 3506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 3427,
											"end": 3506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 3427,
											"end": 3506,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3427,
											"end": 3506,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 3427,
											"end": 3506,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3389,
											"end": 3508,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 3389,
											"end": 3508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3547,
											"end": 3548,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3572,
											"end": 3639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3622,
											"end": 3628,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3611,
											"end": 3620,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3629,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3572,
											"end": 3639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 3572,
											"end": 3639,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3572,
											"end": 3639,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 3572,
											"end": 3639,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3562,
											"end": 3639,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3562,
											"end": 3639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3518,
											"end": 3649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3688,
											"end": 3690,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3714,
											"end": 3781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 3773,
											"end": 3780,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 3770,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3753,
											"end": 3762,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 3771,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 3714,
											"end": 3781,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3714,
											"end": 3781,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 3714,
											"end": 3781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3704,
											"end": 3781,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3704,
											"end": 3781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3659,
											"end": 3791,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3830,
											"end": 3832,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3856,
											"end": 3909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 3901,
											"end": 3908,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 3898,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3881,
											"end": 3890,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3856,
											"end": 3909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3856,
											"end": 3909,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3856,
											"end": 3909,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 3856,
											"end": 3909,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3909,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3909,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3801,
											"end": 3919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3251,
											"end": 3926,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3251,
											"end": 3926,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3251,
											"end": 3926,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3251,
											"end": 3926,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3251,
											"end": 3926,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3251,
											"end": 3926,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3932,
											"end": 4434,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3932,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4020,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4022,
											"end": 4028,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4073,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4059,
											"end": 4068,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4050,
											"end": 4057,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4069,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4042,
											"end": 4074,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4158,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4158,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 4039,
											"end": 4158,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4077,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 4077,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 4077,
											"end": 4156,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4077,
											"end": 4156,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 4077,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4158,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 4039,
											"end": 4158,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4222,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 4281,
											"end": 4288,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4272,
											"end": 4278,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4261,
											"end": 4270,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4257,
											"end": 4279,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4222,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 4222,
											"end": 4289,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4222,
											"end": 4289,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 4222,
											"end": 4289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4212,
											"end": 4289,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4212,
											"end": 4289,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4168,
											"end": 4299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4338,
											"end": 4340,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4364,
											"end": 4417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 4409,
											"end": 4416,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4400,
											"end": 4406,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4389,
											"end": 4398,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4385,
											"end": 4407,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4364,
											"end": 4417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 4364,
											"end": 4417,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4364,
											"end": 4417,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 4364,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4354,
											"end": 4417,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4354,
											"end": 4417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4309,
											"end": 4427,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3932,
											"end": 4434,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3932,
											"end": 4434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3932,
											"end": 4434,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3932,
											"end": 4434,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3932,
											"end": 4434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3932,
											"end": 4434,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4440,
											"end": 4791,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 4440,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4516,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4559,
											"end": 4561,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4547,
											"end": 4556,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4538,
											"end": 4545,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4534,
											"end": 4557,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4530,
											"end": 4562,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4527,
											"end": 4646,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4527,
											"end": 4646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 4527,
											"end": 4646,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4565,
											"end": 4644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 4565,
											"end": 4644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 4565,
											"end": 4644,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4565,
											"end": 4644,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 4565,
											"end": 4644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4527,
											"end": 4646,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 4527,
											"end": 4646,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 4686,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4710,
											"end": 4774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 4766,
											"end": 4773,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4763,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4755,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4742,
											"end": 4764,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4710,
											"end": 4774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4710,
											"end": 4774,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4710,
											"end": 4774,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 4710,
											"end": 4774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4700,
											"end": 4774,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4700,
											"end": 4774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4656,
											"end": 4784,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4440,
											"end": 4791,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4440,
											"end": 4791,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4440,
											"end": 4791,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4440,
											"end": 4791,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4440,
											"end": 4791,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4797,
											"end": 4976,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 4797,
											"end": 4976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4866,
											"end": 4876,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4887,
											"end": 4933,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 4929,
											"end": 4932,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4921,
											"end": 4927,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4887,
											"end": 4933,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 4887,
											"end": 4933,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4887,
											"end": 4933,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 4887,
											"end": 4933,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4965,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4960,
											"end": 4963,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4956,
											"end": 4970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4942,
											"end": 4970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4942,
											"end": 4970,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4797,
											"end": 4976,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4797,
											"end": 4976,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4797,
											"end": 4976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4797,
											"end": 4976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4797,
											"end": 4976,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4982,
											"end": 5090,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 4982,
											"end": 5090,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5059,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 5077,
											"end": 5082,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5059,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 5059,
											"end": 5083,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5059,
											"end": 5083,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 5059,
											"end": 5083,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5054,
											"end": 5057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5047,
											"end": 5084,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4982,
											"end": 5090,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4982,
											"end": 5090,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4982,
											"end": 5090,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5096,
											"end": 5214,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 5096,
											"end": 5214,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5183,
											"end": 5207,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 5201,
											"end": 5206,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5183,
											"end": 5207,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 5183,
											"end": 5207,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5183,
											"end": 5207,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 5183,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5178,
											"end": 5181,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5171,
											"end": 5208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5096,
											"end": 5214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5096,
											"end": 5214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5096,
											"end": 5214,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5250,
											"end": 5982,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 5250,
											"end": 5982,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5369,
											"end": 5372,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5398,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 5446,
											"end": 5451,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5398,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 5398,
											"end": 5452,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5398,
											"end": 5452,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 5398,
											"end": 5452,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5468,
											"end": 5554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 5547,
											"end": 5553,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5542,
											"end": 5545,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5468,
											"end": 5554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 5468,
											"end": 5554,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5468,
											"end": 5554,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 5468,
											"end": 5554,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5461,
											"end": 5554,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5461,
											"end": 5554,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 5628,
											"end": 5633,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 5578,
											"end": 5634,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5578,
											"end": 5634,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 5578,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5657,
											"end": 5664,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5688,
											"end": 5689,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5673,
											"end": 5957,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 5673,
											"end": 5957,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5698,
											"end": 5704,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5695,
											"end": 5696,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5692,
											"end": 5705,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5673,
											"end": 5957,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5673,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 5673,
											"end": 5957,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5774,
											"end": 5780,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5768,
											"end": 5781,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5801,
											"end": 5864,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 5860,
											"end": 5863,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5845,
											"end": 5858,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5801,
											"end": 5864,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 5801,
											"end": 5864,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5801,
											"end": 5864,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 5801,
											"end": 5864,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5794,
											"end": 5864,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 5794,
											"end": 5864,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5887,
											"end": 5947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 5940,
											"end": 5946,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5887,
											"end": 5947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 5887,
											"end": 5947,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5887,
											"end": 5947,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 5887,
											"end": 5947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5877,
											"end": 5947,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5877,
											"end": 5947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5733,
											"end": 5957,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5720,
											"end": 5721,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5717,
											"end": 5718,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5713,
											"end": 5722,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5708,
											"end": 5722,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5708,
											"end": 5722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5673,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 5673,
											"end": 5957,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5673,
											"end": 5957,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 5673,
											"end": 5957,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5973,
											"end": 5976,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5966,
											"end": 5976,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5966,
											"end": 5976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5982,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5982,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5982,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5250,
											"end": 5982,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5250,
											"end": 5982,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5250,
											"end": 5982,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5250,
											"end": 5982,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5250,
											"end": 5982,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5988,
											"end": 6106,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 5988,
											"end": 6106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6075,
											"end": 6099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 6093,
											"end": 6098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6075,
											"end": 6099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 6075,
											"end": 6099,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6075,
											"end": 6099,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 6075,
											"end": 6099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6073,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6063,
											"end": 6100,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5988,
											"end": 6106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5988,
											"end": 6106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5988,
											"end": 6106,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6112,
											"end": 6334,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 6112,
											"end": 6334,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6205,
											"end": 6209,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6243,
											"end": 6245,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6232,
											"end": 6241,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6246,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6220,
											"end": 6246,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6220,
											"end": 6246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6256,
											"end": 6327,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 6324,
											"end": 6325,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6313,
											"end": 6322,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6309,
											"end": 6326,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6300,
											"end": 6306,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6256,
											"end": 6327,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 6256,
											"end": 6327,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6256,
											"end": 6327,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 6256,
											"end": 6327,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6112,
											"end": 6334,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6112,
											"end": 6334,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6112,
											"end": 6334,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6112,
											"end": 6334,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6112,
											"end": 6334,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6340,
											"end": 6562,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 6340,
											"end": 6562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6437,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6471,
											"end": 6473,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6460,
											"end": 6469,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6456,
											"end": 6474,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6448,
											"end": 6474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6448,
											"end": 6474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6484,
											"end": 6555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 6552,
											"end": 6553,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6541,
											"end": 6550,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6537,
											"end": 6554,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6528,
											"end": 6534,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6484,
											"end": 6555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 6484,
											"end": 6555,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6484,
											"end": 6555,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 6484,
											"end": 6555,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6340,
											"end": 6562,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6340,
											"end": 6562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6340,
											"end": 6562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6340,
											"end": 6562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6340,
											"end": 6562,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6568,
											"end": 7051,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 6568,
											"end": 7051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6739,
											"end": 6743,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6777,
											"end": 6779,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6766,
											"end": 6775,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6762,
											"end": 6780,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6754,
											"end": 6780,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6754,
											"end": 6780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 6861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 6858,
											"end": 6859,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6847,
											"end": 6856,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6843,
											"end": 6860,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6840,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 6861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 6790,
											"end": 6861,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6790,
											"end": 6861,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 6790,
											"end": 6861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6908,
											"end": 6917,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6902,
											"end": 6906,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6898,
											"end": 6918,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6893,
											"end": 6895,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6882,
											"end": 6891,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6878,
											"end": 6896,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6871,
											"end": 6919,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6936,
											"end": 7044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 7039,
											"end": 7043,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7030,
											"end": 7036,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6936,
											"end": 7044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 6936,
											"end": 7044,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6936,
											"end": 7044,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 6936,
											"end": 7044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6928,
											"end": 7044,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6928,
											"end": 7044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6568,
											"end": 7051,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6568,
											"end": 7051,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6568,
											"end": 7051,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6568,
											"end": 7051,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6568,
											"end": 7051,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6568,
											"end": 7051,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7057,
											"end": 7186,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 7057,
											"end": 7186,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7091,
											"end": 7097,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7118,
											"end": 7138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 7118,
											"end": 7138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 7118,
											"end": 7138,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7118,
											"end": 7138,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 7118,
											"end": 7138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7108,
											"end": 7138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7108,
											"end": 7138,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7147,
											"end": 7180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 7175,
											"end": 7179,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7167,
											"end": 7173,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7147,
											"end": 7180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 7147,
											"end": 7180,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7147,
											"end": 7180,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 7147,
											"end": 7180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7057,
											"end": 7186,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7057,
											"end": 7186,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7057,
											"end": 7186,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7057,
											"end": 7186,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7192,
											"end": 7267,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 7192,
											"end": 7267,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7225,
											"end": 7231,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7258,
											"end": 7260,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7252,
											"end": 7261,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7242,
											"end": 7261,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7242,
											"end": 7261,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7192,
											"end": 7267,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7192,
											"end": 7267,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7273,
											"end": 7584,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 7273,
											"end": 7584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7350,
											"end": 7354,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7440,
											"end": 7458,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7432,
											"end": 7438,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7429,
											"end": 7459,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7426,
											"end": 7482,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7426,
											"end": 7482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 7426,
											"end": 7482,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7462,
											"end": 7480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 7462,
											"end": 7480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 7462,
											"end": 7480,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7462,
											"end": 7480,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 7462,
											"end": 7480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7426,
											"end": 7482,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 7426,
											"end": 7482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7512,
											"end": 7516,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7504,
											"end": 7510,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7500,
											"end": 7517,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7492,
											"end": 7517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7492,
											"end": 7517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7576,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7566,
											"end": 7570,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7577,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7554,
											"end": 7577,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7554,
											"end": 7577,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7273,
											"end": 7584,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7273,
											"end": 7584,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7273,
											"end": 7584,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7273,
											"end": 7584,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7590,
											"end": 7722,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 7590,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7657,
											"end": 7661,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7680,
											"end": 7683,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7672,
											"end": 7683,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7672,
											"end": 7683,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7710,
											"end": 7714,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7705,
											"end": 7708,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7701,
											"end": 7715,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7693,
											"end": 7715,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7693,
											"end": 7715,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7590,
											"end": 7722,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7590,
											"end": 7722,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7590,
											"end": 7722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7590,
											"end": 7722,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7728,
											"end": 7842,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 7728,
											"end": 7842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7801,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7829,
											"end": 7834,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7835,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7813,
											"end": 7835,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7813,
											"end": 7835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7728,
											"end": 7842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7728,
											"end": 7842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7728,
											"end": 7842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7728,
											"end": 7842,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7848,
											"end": 7961,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 7848,
											"end": 7961,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7918,
											"end": 7922,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7950,
											"end": 7954,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7945,
											"end": 7948,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7941,
											"end": 7955,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7933,
											"end": 7955,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7933,
											"end": 7955,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7848,
											"end": 7961,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7848,
											"end": 7961,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7848,
											"end": 7961,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7848,
											"end": 7961,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7967,
											"end": 8151,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 7967,
											"end": 8151,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8066,
											"end": 8077,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8100,
											"end": 8106,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8095,
											"end": 8098,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8088,
											"end": 8107,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8140,
											"end": 8144,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8135,
											"end": 8138,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8131,
											"end": 8145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8116,
											"end": 8145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8116,
											"end": 8145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7967,
											"end": 8151,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7967,
											"end": 8151,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7967,
											"end": 8151,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7967,
											"end": 8151,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7967,
											"end": 8151,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8157,
											"end": 8253,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 8157,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8194,
											"end": 8201,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8223,
											"end": 8247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 8241,
											"end": 8246,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8223,
											"end": 8247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 8223,
											"end": 8247,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8223,
											"end": 8247,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 8223,
											"end": 8247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8212,
											"end": 8247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8212,
											"end": 8247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8157,
											"end": 8253,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8157,
											"end": 8253,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8157,
											"end": 8253,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8157,
											"end": 8253,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8259,
											"end": 8369,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 8259,
											"end": 8369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8310,
											"end": 8317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8339,
											"end": 8363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 8357,
											"end": 8362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8339,
											"end": 8363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 8339,
											"end": 8363,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8339,
											"end": 8363,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 8339,
											"end": 8363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8328,
											"end": 8363,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8328,
											"end": 8363,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8259,
											"end": 8369,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8259,
											"end": 8369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8259,
											"end": 8369,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8259,
											"end": 8369,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8375,
											"end": 8485,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 8375,
											"end": 8485,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8426,
											"end": 8433,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8455,
											"end": 8479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 8473,
											"end": 8478,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8455,
											"end": 8479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 8455,
											"end": 8479,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8455,
											"end": 8479,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 8455,
											"end": 8479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8444,
											"end": 8479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8444,
											"end": 8479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8375,
											"end": 8485,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8375,
											"end": 8485,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8375,
											"end": 8485,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8375,
											"end": 8485,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8491,
											"end": 8617,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 8491,
											"end": 8617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8528,
											"end": 8535,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8568,
											"end": 8610,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8561,
											"end": 8566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8557,
											"end": 8611,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8546,
											"end": 8611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8546,
											"end": 8611,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8491,
											"end": 8617,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8491,
											"end": 8617,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8491,
											"end": 8617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8491,
											"end": 8617,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8623,
											"end": 8700,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 8623,
											"end": 8700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8660,
											"end": 8667,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8689,
											"end": 8694,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8678,
											"end": 8694,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8678,
											"end": 8694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8623,
											"end": 8700,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8623,
											"end": 8700,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8623,
											"end": 8700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8623,
											"end": 8700,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8706,
											"end": 8987,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 8706,
											"end": 8987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8789,
											"end": 8816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 8811,
											"end": 8815,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8789,
											"end": 8816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 8789,
											"end": 8816,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8789,
											"end": 8816,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 8789,
											"end": 8816,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8781,
											"end": 8787,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8777,
											"end": 8817,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8919,
											"end": 8925,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8907,
											"end": 8917,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8904,
											"end": 8926,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8883,
											"end": 8901,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8871,
											"end": 8881,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8868,
											"end": 8902,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8865,
											"end": 8927,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 8862,
											"end": 8950,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8862,
											"end": 8950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 8862,
											"end": 8950,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8930,
											"end": 8948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 8930,
											"end": 8948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 8930,
											"end": 8948,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8930,
											"end": 8948,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 8930,
											"end": 8948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8862,
											"end": 8950,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 8862,
											"end": 8950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8970,
											"end": 8980,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8966,
											"end": 8968,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8959,
											"end": 8981,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8749,
											"end": 8987,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8706,
											"end": 8987,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8706,
											"end": 8987,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8706,
											"end": 8987,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8993,
											"end": 9173,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 8993,
											"end": 9173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9041,
											"end": 9118,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9038,
											"end": 9039,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9031,
											"end": 9119,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9138,
											"end": 9142,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 9135,
											"end": 9136,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9128,
											"end": 9143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9162,
											"end": 9166,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9159,
											"end": 9160,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9152,
											"end": 9167,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9179,
											"end": 9359,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 9179,
											"end": 9359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9227,
											"end": 9304,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9224,
											"end": 9225,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9217,
											"end": 9305,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9324,
											"end": 9328,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 9321,
											"end": 9322,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9314,
											"end": 9329,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9348,
											"end": 9352,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9345,
											"end": 9346,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9338,
											"end": 9353,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9365,
											"end": 9482,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 9365,
											"end": 9482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9474,
											"end": 9475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9471,
											"end": 9472,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9464,
											"end": 9476,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9488,
											"end": 9605,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 9488,
											"end": 9605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9597,
											"end": 9598,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9594,
											"end": 9595,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9587,
											"end": 9599,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9611,
											"end": 9728,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 9611,
											"end": 9728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9720,
											"end": 9721,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9717,
											"end": 9718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9710,
											"end": 9722,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9851,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 9734,
											"end": 9851,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9843,
											"end": 9844,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9840,
											"end": 9841,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9833,
											"end": 9845,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9857,
											"end": 9959,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 9857,
											"end": 9959,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9898,
											"end": 9904,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9949,
											"end": 9951,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 9945,
											"end": 9952,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 9940,
											"end": 9942,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 9933,
											"end": 9938,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9929,
											"end": 9943,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9925,
											"end": 9953,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9915,
											"end": 9953,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9915,
											"end": 9953,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9857,
											"end": 9959,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9857,
											"end": 9959,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9857,
											"end": 9959,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9857,
											"end": 9959,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9965,
											"end": 10087,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 9965,
											"end": 10087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10038,
											"end": 10062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 10056,
											"end": 10061,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10038,
											"end": 10062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 10038,
											"end": 10062,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10038,
											"end": 10062,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 10038,
											"end": 10062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10031,
											"end": 10036,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10028,
											"end": 10063,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10018,
											"end": 10081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 10018,
											"end": 10081,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10078,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10074,
											"end": 10075,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10067,
											"end": 10079,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10018,
											"end": 10081,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 10018,
											"end": 10081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9965,
											"end": 10087,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9965,
											"end": 10087,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10093,
											"end": 10243,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 10093,
											"end": 10243,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10180,
											"end": 10218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 10212,
											"end": 10217,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10180,
											"end": 10218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 10180,
											"end": 10218,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10180,
											"end": 10218,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 10180,
											"end": 10218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10173,
											"end": 10178,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10170,
											"end": 10219,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10160,
											"end": 10237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 10160,
											"end": 10237,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10233,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10230,
											"end": 10231,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10223,
											"end": 10235,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10160,
											"end": 10237,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 10160,
											"end": 10237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10093,
											"end": 10243,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10093,
											"end": 10243,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10249,
											"end": 10399,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 10249,
											"end": 10399,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10336,
											"end": 10374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 10368,
											"end": 10373,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10336,
											"end": 10374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 10336,
											"end": 10374,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10336,
											"end": 10374,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 10336,
											"end": 10374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10329,
											"end": 10334,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10326,
											"end": 10375,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10393,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 10316,
											"end": 10393,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10389,
											"end": 10390,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10386,
											"end": 10387,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10379,
											"end": 10391,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10393,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 10316,
											"end": 10393,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10249,
											"end": 10399,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10249,
											"end": 10399,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10405,
											"end": 10527,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 10405,
											"end": 10527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10478,
											"end": 10502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 10496,
											"end": 10501,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10478,
											"end": 10502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 10478,
											"end": 10502,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10478,
											"end": 10502,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 10478,
											"end": 10502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10471,
											"end": 10476,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10468,
											"end": 10503,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10458,
											"end": 10521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 10458,
											"end": 10521,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10517,
											"end": 10518,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10514,
											"end": 10515,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10507,
											"end": 10519,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10458,
											"end": 10521,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 10458,
											"end": 10521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10405,
											"end": 10527,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10405,
											"end": 10527,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"BUSD()": "484f4ea9",
							"CalcLpPrice(address,address,address)": "20ae0b6d",
							"WBNB()": "8dd95002",
							"price(address,address)": "2b00490d",
							"token0(address)": "76bf39a3",
							"token1(address)": "37823795",
							"totalSupply(address)": "e4dc2aa4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BUSD\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"lpAddress\",\"type\":\"address\"},{\"internalType\":\"contract Router\",\"name\":\"routerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"busd\",\"type\":\"address\"}],\"name\":\"CalcLpPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WBNB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Router\",\"name\":\"routerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"lpAddress\",\"type\":\"address\"}],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"lpAddress\",\"type\":\"address\"}],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"lpAddress\",\"type\":\"address\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"LpUtils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0xe732197c4d67ed1bbe2503d0fe4a6da66d5e083c646cefb3af91fb7206e41dbe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e1124dee3d7583595bf475d061cf3b2b24633c94bda352f0cc5241cc032363b\",\"dweb:/ipfs/QmZ57BPeH51NKb418BM2HmgqwS343nPWKyYovu3dvpX7Yw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 332,
								"contract": "contracts/LpPrice.sol:LpUtils",
								"label": "WBNB",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 335,
								"contract": "contracts/LpPrice.sol:LpUtils",
								"label": "BUSD",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 338,
								"contract": "contracts/LpPrice.sol:LpUtils",
								"label": "amount",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Router": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getAmountsOut(uint256,address[])": "d06ca61f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"Router\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0xe732197c4d67ed1bbe2503d0fe4a6da66d5e083c646cefb3af91fb7206e41dbe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e1124dee3d7583595bf475d061cf3b2b24633c94bda352f0cc5241cc032363b\",\"dweb:/ipfs/QmZ57BPeH51NKb418BM2HmgqwS343nPWKyYovu3dvpX7Yw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/LpPrice.sol:243:44:\n    |\n243 |     function CalcLpPrice(IERC20 lpAddress, Router routerAddress, address busd) external view returns(uint256){\n    |                                            ^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 9116,
					"file": "contracts/LpPrice.sol",
					"start": 9096
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/LpPrice.sol:243:66:\n    |\n243 |     function CalcLpPrice(IERC20 lpAddress, Router routerAddress, address busd) external view returns(uint256){\n    |                                                                  ^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 9130,
					"file": "contracts/LpPrice.sol",
					"start": 9118
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/LpPrice.sol": {
				"ast": {
					"absolutePath": "contracts/LpPrice.sol",
					"exportedSymbols": {
						"Address": [
							293
						],
						"IERC20": [
							317
						],
						"LpUtils": [
							448
						],
						"Router": [
							329
						]
					},
					"id": 449,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 293,
							"linearizedBaseContracts": [
								293
							],
							"name": "Address",
							"nameLocation": "68:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "1134:260:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 9,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4,
																"src": "1363:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 10,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1363:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1363:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1363:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 8,
												"id": 14,
												"nodeType": "Return",
												"src": "1356:30:0"
											}
										]
									},
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "83:979:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 16,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1077:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1096:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "1088:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1088:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1087:17:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "1128:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 6,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1128:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1127:6:0"
									},
									"scope": 293,
									"src": "1068:326:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "2400:246:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 27,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2427:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$293",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$293",
																				"typeString": "library Address"
																			}
																		],
																		"id": 26,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2419:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 25,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2419:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2419:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2419:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 30,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "2444:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2419:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2452:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 24,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2411:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2411:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 34,
												"nodeType": "ExpressionStatement",
												"src": "2411:73:0"
											},
											{
												"assignments": [
													36,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 36,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2503:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 49,
														"src": "2498:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 35,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2498:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 43,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2546:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 37,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "2516:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2516:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 40,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 39,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "2538:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2516:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2516:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2497:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 45,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "2568:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2577:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2560:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2560:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "2560:78:0"
											}
										]
									},
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "1402:921:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 50,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2338:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2364:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "2348:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2348:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2383:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "2375:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2375:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2347:43:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2400:0:0"
									},
									"scope": 293,
									"src": "2329:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "3497:86:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 61,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "3528:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 62,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "3536:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3542:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 60,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															67,
															87
														],
														"referencedDeclaration": 87,
														"src": "3515:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3515:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 59,
												"id": 65,
												"nodeType": "Return",
												"src": "3508:67:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "2654:748:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3417:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3438:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "3430:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3430:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3459:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "3446:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 54,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3446:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3429:35:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "3483:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 57,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3483:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3482:14:0"
									},
									"scope": 293,
									"src": "3408:175:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "3964:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 80,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "4004:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 81,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "4012:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4018:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 83,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 74,
															"src": "4021:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 79,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															107,
															157
														],
														"referencedDeclaration": 157,
														"src": "3982:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3982:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 78,
												"id": 85,
												"nodeType": "Return",
												"src": "3975:59:0"
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "3591:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3822:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3853:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3845:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3845:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3883:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3870:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 71,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3870:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3912:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3898:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 73,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3898:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3834:97:0"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3950:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 76,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3950:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3949:14:0"
									},
									"scope": 293,
									"src": "3813:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "4564:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 100,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "4604:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 101,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "4612:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 102,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "4618:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4625:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 99,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															107,
															157
														],
														"referencedDeclaration": 157,
														"src": "4582:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4582:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 98,
												"id": 105,
												"nodeType": "Return",
												"src": "4575:94:0"
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "4050:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4426:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4466:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "4458:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4458:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4496:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "4483:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 91,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4483:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4519:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "4511:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 93,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4511:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4447:84:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "4550:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 96,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4550:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4549:14:0"
									},
									"scope": 293,
									"src": "4417:260:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "5117:326:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 124,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5144:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$293",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$293",
																				"typeString": "library Address"
																			}
																		],
																		"id": 123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5136:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 122,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5136:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5136:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5136:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 127,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "5161:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5136:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5168:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 121,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5128:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5128:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "5128:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 134,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 110,
																	"src": "5239:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 133,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "5228:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5228:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5248:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 132,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5220:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5220:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 138,
												"nodeType": "ExpressionStatement",
												"src": "5220:60:0"
											},
											{
												"assignments": [
													140,
													142
												],
												"declarations": [
													{
														"constant": false,
														"id": 140,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5299:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 156,
														"src": "5294:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 139,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5294:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 142,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5321:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 156,
														"src": "5308:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 141,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5308:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 149,
												"initialValue": {
													"arguments": [
														{
															"id": 147,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "5361:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 143,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "5335:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5335:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 145,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "5354:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5335:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5335:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5293:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 151,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "5401:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 152,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "5410:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 153,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "5422:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 150,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "5384:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5384:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 120,
												"id": 155,
												"nodeType": "Return",
												"src": "5377:58:0"
											}
										]
									},
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "4685:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4942:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4982:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "4974:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4974:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5012:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "4999:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 111,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4999:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5035:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "5027:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5027:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5065:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "5051:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 115,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5051:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4963:121:0"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "5103:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 118,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5103:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5102:14:0"
									},
									"scope": 293,
									"src": "4933:510:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "5728:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 168,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "5765:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 169,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "5773:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5779:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 167,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															174,
															209
														],
														"referencedDeclaration": 209,
														"src": "5746:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5746:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 166,
												"id": 172,
												"nodeType": "Return",
												"src": "5739:80:0"
											}
										]
									},
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "5451:171:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5637:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5664:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "5656:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5656:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "5672:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5672:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5655:35:0"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "5714:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 164,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5714:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5713:14:0"
									},
									"scope": 293,
									"src": "5628:199:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "6181:233:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 188,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 177,
																	"src": "6211:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 187,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "6200:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6200:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6220:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 186,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6192:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6192:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "6192:67:0"
											},
											{
												"assignments": [
													194,
													196
												],
												"declarations": [
													{
														"constant": false,
														"id": 194,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6278:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 208,
														"src": "6273:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 193,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6273:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 196,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6300:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 208,
														"src": "6287:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 195,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6287:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 201,
												"initialValue": {
													"arguments": [
														{
															"id": 199,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "6332:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 197,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "6314:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6314:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6314:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6272:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 203,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "6372:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 204,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "6381:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 205,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "6393:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 202,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "6355:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6355:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 185,
												"id": 207,
												"nodeType": "Return",
												"src": "6348:58:0"
											}
										]
									},
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "5835:178:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6028:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6065:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "6057:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6057:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6095:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "6082:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 178,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6082:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6124:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "6110:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 180,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6110:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6046:97:0"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "6167:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 183,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6167:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6166:14:0"
									},
									"scope": 293,
									"src": "6019:395:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 225,
										"nodeType": "Block",
										"src": "6698:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 220,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "6737:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 221,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "6745:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6751:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 219,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															226,
															261
														],
														"referencedDeclaration": 261,
														"src": "6716:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6716:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 218,
												"id": 224,
												"nodeType": "Return",
												"src": "6709:84:0"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "6422:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6610:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6639:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "6631:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6631:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6660:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "6647:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 213,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6647:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6630:35:0"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "6684:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 216,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6684:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6683:14:0"
									},
									"scope": 293,
									"src": "6601:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "7154:237:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 240,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 229,
																	"src": "7184:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 239,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "7173:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7173:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 238,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7165:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7165:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 244,
												"nodeType": "ExpressionStatement",
												"src": "7165:69:0"
											},
											{
												"assignments": [
													246,
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 246,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7253:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "7248:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 245,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7248:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7275:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "7262:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 247,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7262:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 253,
												"initialValue": {
													"arguments": [
														{
															"id": 251,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "7309:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 249,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "7289:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7289:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7289:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7247:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 255,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "7349:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 256,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "7358:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 257,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "7370:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 254,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "7332:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7332:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 237,
												"id": 259,
												"nodeType": "Return",
												"src": "7325:58:0"
											}
										]
									},
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "6809:180:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7004:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7043:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "7035:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7035:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7073:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "7060:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 230,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7060:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7102:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "7088:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 232,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7088:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7024:97:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "7140:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 235,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7140:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7139:14:0"
									},
									"scope": 293,
									"src": "6995:396:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 291,
										"nodeType": "Block",
										"src": "7783:548:0",
										"statements": [
											{
												"condition": {
													"id": 273,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 264,
													"src": "7798:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 289,
													"nodeType": "Block",
													"src": "7857:467:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 277,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 266,
																		"src": "7943:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7943:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7963:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7943:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 287,
																"nodeType": "Block",
																"src": "8258:55:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 284,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 268,
																					"src": "8284:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 283,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8277:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8277:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 286,
																		"nodeType": "ExpressionStatement",
																		"src": "8277:20:0"
																	}
																]
															},
															"id": 288,
															"nodeType": "IfStatement",
															"src": "7939:374:0",
															"trueBody": {
																"id": 282,
																"nodeType": "Block",
																"src": "7966:286:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8089:148:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8112:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8141:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8135:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8135:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8116:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8185:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8189:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8181:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8181:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8202:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8174:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8174:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8174:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 266,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8141:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 266,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8189:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 281,
																		"nodeType": "InlineAssembly",
																		"src": "8080:157:0"
																	}
																]
															}
														}
													]
												},
												"id": 290,
												"nodeType": "IfStatement",
												"src": "7794:530:0",
												"trueBody": {
													"id": 276,
													"nodeType": "Block",
													"src": "7807:44:0",
													"statements": [
														{
															"expression": {
																"id": 274,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 266,
																"src": "7829:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 272,
															"id": 275,
															"nodeType": "Return",
															"src": "7822:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "7399:214:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7628:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "7655:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7655:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7691:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "7678:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 265,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7678:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7726:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "7712:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 267,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7712:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7644:101:0"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "7769:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 270,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7769:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7768:14:0"
									},
									"scope": 293,
									"src": "7619:712:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 449,
							"src": "60:8274:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 317,
							"linearizedBaseContracts": [
								317
							],
							"name": "IERC20",
							"nameLocation": "8348:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 294,
										"nodeType": "StructuredDocumentation",
										"src": "8362:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 299,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "8445:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8456:2:0"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "8482:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8482:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8481:9:0"
									},
									"scope": 317,
									"src": "8436:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0dfe1681",
									"id": 304,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "8508:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8514:2:0"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "8540:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8540:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8539:9:0"
									},
									"scope": 317,
									"src": "8499:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d21220a7",
									"id": 309,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "8566:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8572:2:0"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "8598:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8598:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8597:9:0"
									},
									"scope": 317,
									"src": "8557:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 316,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "8624:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8642:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "8634:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8633:17:0"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "8674:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8674:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8673:9:0"
									},
									"scope": 317,
									"src": "8615:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 449,
							"src": "8338:348:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 329,
							"linearizedBaseContracts": [
								329
							],
							"name": "Router",
							"nameLocation": "8700:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d06ca61f",
									"id": 328,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "8723:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "8742:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "8737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 318,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8737:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "8769:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "8752:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 320,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "8752:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 321,
													"nodeType": "ArrayTypeName",
													"src": "8752:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8736:38:0"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "8830:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "8816:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 324,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "8816:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 325,
													"nodeType": "ArrayTypeName",
													"src": "8816:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8815:23:0"
									},
									"scope": 329,
									"src": "8714:125:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 449,
							"src": "8690:152:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 448,
							"linearizedBaseContracts": [
								448
							],
							"name": "LpUtils",
							"nameLocation": "8855:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8dd95002",
									"id": 332,
									"mutability": "mutable",
									"name": "WBNB",
									"nameLocation": "8885:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 448,
									"src": "8870:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 330,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "8870:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307861653133643938396461433266306445624666343630614331313261383337433839424161376364",
										"id": 331,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8892:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "484f4ea9",
									"id": 335,
									"mutability": "mutable",
									"name": "BUSD",
									"nameLocation": "8956:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 448,
									"src": "8941:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 333,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "8941:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307837383836374262456546343466323332366246384444643139343161343433393338324546324137",
										"id": 334,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8963:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 338,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "9020:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 448,
									"src": "9012:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 336,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9012:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030303030303030303030303030303030",
										"id": 337,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9029:19:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1000000000000000000"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "9162:67:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 353,
																			"name": "lpAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 341,
																			"src": "9201:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$317",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "token0",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 304,
																		"src": "9201:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																			"typeString": "function () view external returns (address)"
																		}
																	},
																	"id": 355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9201:18:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 351,
																	"name": "lpAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 341,
																	"src": "9181:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$317",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 316,
																"src": "9181:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9181:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 357,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "9180:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 350,
												"id": 358,
												"nodeType": "Return",
												"src": "9173:48:0"
											}
										]
									},
									"functionSelector": "20ae0b6d",
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "CalcLpPrice",
									"nameLocation": "9066:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "lpAddress",
												"nameLocation": "9085:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "9078:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$317",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 340,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 339,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 317,
														"src": "9078:6:0"
													},
													"referencedDeclaration": 317,
													"src": "9078:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$317",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "routerAddress",
												"nameLocation": "9103:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "9096:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_Router_$329",
													"typeString": "contract Router"
												},
												"typeName": {
													"id": 343,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 342,
														"name": "Router",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 329,
														"src": "9096:6:0"
													},
													"referencedDeclaration": 329,
													"src": "9096:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Router_$329",
														"typeString": "contract Router"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "busd",
												"nameLocation": "9126:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "9118:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9118:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9077:54:0"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "9154:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9154:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9153:9:0"
									},
									"scope": 448,
									"src": "9057:172:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 372,
										"nodeType": "Block",
										"src": "9306:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 368,
															"name": "lpAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "9324:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$317",
																"typeString": "contract IERC20"
															}
														},
														"id": 369,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 299,
														"src": "9324:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9324:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 367,
												"id": 371,
												"nodeType": "Return",
												"src": "9317:30:0"
											}
										]
									},
									"functionSelector": "e4dc2aa4",
									"id": 373,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "9246:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "lpAddress",
												"nameLocation": "9265:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "9258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$317",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 362,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 361,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 317,
														"src": "9258:6:0"
													},
													"referencedDeclaration": 317,
													"src": "9258:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$317",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9257:18:0"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "9298:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9298:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9297:9:0"
									},
									"scope": 448,
									"src": "9237:118:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 385,
										"nodeType": "Block",
										"src": "9427:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 381,
															"name": "lpAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "9445:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$317",
																"typeString": "contract IERC20"
															}
														},
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "token0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 304,
														"src": "9445:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9445:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 380,
												"id": 384,
												"nodeType": "Return",
												"src": "9438:25:0"
											}
										]
									},
									"functionSelector": "76bf39a3",
									"id": 386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "9372:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "lpAddress",
												"nameLocation": "9386:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "9379:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$317",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 375,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 374,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 317,
														"src": "9379:6:0"
													},
													"referencedDeclaration": 317,
													"src": "9379:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$317",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9378:18:0"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "9419:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9419:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9418:9:0"
									},
									"scope": 448,
									"src": "9363:108:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "9543:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 394,
															"name": "lpAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "9561:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$317",
																"typeString": "contract IERC20"
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "token1",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 309,
														"src": "9561:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9561:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 393,
												"id": 397,
												"nodeType": "Return",
												"src": "9554:25:0"
											}
										]
									},
									"functionSelector": "37823795",
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "9488:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "lpAddress",
												"nameLocation": "9502:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "9495:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$317",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 388,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 387,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 317,
														"src": "9495:6:0"
													},
													"referencedDeclaration": 317,
													"src": "9495:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$317",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9494:18:0"
									},
									"returnParameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "9535:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9535:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9534:9:0"
									},
									"scope": 448,
									"src": "9479:108:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "9674:196:0",
										"statements": [
											{
												"assignments": [
													413
												],
												"declarations": [
													{
														"constant": false,
														"id": 413,
														"mutability": "mutable",
														"name": "path",
														"nameLocation": "9702:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 446,
														"src": "9685:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 411,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9685:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 412,
															"nodeType": "ArrayTypeName",
															"src": "9685:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 419,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "33",
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9723:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															}
														],
														"id": 416,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "9709:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 414,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9713:7:0",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 415,
															"nodeType": "ArrayTypeName",
															"src": "9713:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9709:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9685:40:0"
											},
											{
												"expression": {
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 420,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "9736:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 422,
														"indexExpression": {
															"hexValue": "30",
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9741:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9736:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 423,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "9746:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9736:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "9736:15:0"
											},
											{
												"expression": {
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 426,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "9762:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 428,
														"indexExpression": {
															"hexValue": "31",
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9767:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9762:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 429,
														"name": "WBNB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "9772:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9762:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 431,
												"nodeType": "ExpressionStatement",
												"src": "9762:14:0"
											},
											{
												"expression": {
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 432,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "9787:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 434,
														"indexExpression": {
															"hexValue": "32",
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9792:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9787:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 435,
														"name": "BUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "9797:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9787:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 437,
												"nodeType": "ExpressionStatement",
												"src": "9787:14:0"
											},
											{
												"expression": {
													"baseExpression": {
														"arguments": [
															{
																"id": 440,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 338,
																"src": "9847:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 441,
																"name": "path",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 413,
																"src": "9854:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															],
															"expression": {
																"id": 438,
																"name": "routerAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "9819:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Router_$329",
																	"typeString": "contract Router"
																}
															},
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getAmountsOut",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 328,
															"src": "9819:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
															}
														},
														"id": 442,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9819:40:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"id": 444,
													"indexExpression": {
														"hexValue": "32",
														"id": 443,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9860:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9819:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 408,
												"id": 445,
												"nodeType": "Return",
												"src": "9812:50:0"
											}
										]
									},
									"functionSelector": "2b00490d",
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "price",
									"nameLocation": "9604:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "routerAddress",
												"nameLocation": "9617:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "9610:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_Router_$329",
													"typeString": "contract Router"
												},
												"typeName": {
													"id": 401,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 400,
														"name": "Router",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 329,
														"src": "9610:6:0"
													},
													"referencedDeclaration": 329,
													"src": "9610:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Router_$329",
														"typeString": "contract Router"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9640:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "9632:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9632:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9609:37:0"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "9669:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9669:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9668:6:0"
									},
									"scope": 448,
									"src": "9595:275:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 449,
							"src": "8846:1027:0",
							"usedErrors": []
						}
					],
					"src": "33:9840:0"
				},
				"id": 0
			}
		}
	}
}
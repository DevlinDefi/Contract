{
	"id": "eae772d82c817285defa8b5293111d26",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/LpPrice.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function token0() external view returns (address);\r\n\r\n    function token1() external view returns (address);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n}\r\n\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\ninterface Router {\r\n    function getAmountsOut(uint amountIn, address[] memory path) external\r\n        view\r\n        returns (uint[] memory amounts);\r\n}\r\n\r\ncontract LpUtils {\r\n\r\n    uint256 amount = 1000000000000000000;\r\n\r\n    function CalcLpPrice(IERC20 lpAddress, Router routerAddress) external view returns(uint256){\r\n        uint256 totalSupply = lpAddress.totalSupply();\r\n\r\n        //uint256 price0 = Router.getAmountsOut(amount,[lpAddress.token0(), busd]);\r\n\r\n        return totalSupply;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/LpPrice.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LpPrice.sol\":412:8686  library Address {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LpPrice.sol\":412:8686  library Address {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220dc809e12b6fdfcfed7fb9f7601579f4ae972ae2fe3dcaebeaffffc5b4e04789c64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dc809e12b6fdfcfed7fb9f7601579f4ae972ae2fe3dcaebeaffffc5b4e04789c64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC DUP1 SWAP15 SLT 0xB6 REVERT 0xFC INVALID 0xD7 0xFB SWAP16 PUSH23 0x1579F4AE972AE2FE3DCAEBEAFFFFC5B4E04789C64736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "412:8274:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dc809e12b6fdfcfed7fb9f7601579f4ae972ae2fe3dcaebeaffffc5b4e04789c64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC DUP1 SWAP15 SLT 0xB6 REVERT 0xFC INVALID 0xD7 0xFB SWAP16 PUSH23 0x1579F4AE972AE2FE3DCAEBEAFFFFC5B4E04789C64736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "412:8274:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dc809e12b6fdfcfed7fb9f7601579f4ae972ae2fe3dcaebeaffffc5b4e04789c64736f6c63430008070033",
									".code": [
										{
											"begin": 412,
											"end": 8686,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 412,
											"end": 8686,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 412,
											"end": 8686,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 412,
											"end": 8686,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 412,
											"end": 8686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 412,
											"end": 8686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 412,
											"end": 8686,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 412,
											"end": 8686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 412,
											"end": 8686,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0xf5bf5630930183962da5a309da62c8da60bab424d8631622b75fa64b365b46e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60654c38abd08d6f83fcb23aa67d935bcc213d56b27ff657c6c836a62f843af1\",\"dweb:/ipfs/QmYqb7k3iYSXN6V8F9Wys62GvvQ7JAhKwL53cFk8Ubc8yp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0xf5bf5630930183962da5a309da62c8da60bab424d8631622b75fa64b365b46e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60654c38abd08d6f83fcb23aa67d935bcc213d56b27ff657c6c836a62f843af1\",\"dweb:/ipfs/QmYqb7k3iYSXN6V8F9Wys62GvvQ7JAhKwL53cFk8Ubc8yp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"LpUtils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "lpAddress",
									"type": "address"
								},
								{
									"internalType": "contract Router",
									"name": "routerAddress",
									"type": "address"
								}
							],
							"name": "CalcLpPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LpPrice.sol\":8846:9193  contract LpUtils {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/LpPrice.sol\":8889:8908  1000000000000000000 */\n  0x0de0b6b3a7640000\n    /* \"contracts/LpPrice.sol\":8872:8908  uint256 amount = 1000000000000000000 */\n  0x00\n  sstore\n    /* \"contracts/LpPrice.sol\":8846:9193  contract LpUtils {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LpPrice.sol\":8846:9193  contract LpUtils {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x344e49d9\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/LpPrice.sol\":8917:9190  function CalcLpPrice(IERC20 lpAddress, Router routerAddress) external view returns(uint256){\r... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"contracts/LpPrice.sol\":9000:9007  uint256 */\n      0x00\n        /* \"contracts/LpPrice.sol\":9019:9038  uint256 totalSupply */\n      dup1\n        /* \"contracts/LpPrice.sol\":9041:9050  lpAddress */\n      dup4\n        /* \"contracts/LpPrice.sol\":9041:9062  lpAddress.totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"contracts/LpPrice.sol\":9041:9064  lpAddress.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_13\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_13:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n        /* \"contracts/LpPrice.sol\":9019:9064  uint256 totalSupply = lpAddress.totalSupply() */\n      swap1\n      pop\n        /* \"contracts/LpPrice.sol\":9171:9182  totalSupply */\n      dup1\n        /* \"contracts/LpPrice.sol\":9164:9182  return totalSupply */\n      swap2\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":8917:9190  function CalcLpPrice(IERC20 lpAddress, Router routerAddress) external view returns(uint256){\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:172   */\n    tag_17:\n        /* \"#utility.yul\":66:71   */\n      0x00\n        /* \"#utility.yul\":104:110   */\n      dup2\n        /* \"#utility.yul\":91:111   */\n      calldataload\n        /* \"#utility.yul\":82:111   */\n      swap1\n      pop\n        /* \"#utility.yul\":120:166   */\n      tag_19\n        /* \"#utility.yul\":160:165   */\n      dup2\n        /* \"#utility.yul\":120:166   */\n      tag_20\n      jump\t// in\n    tag_19:\n        /* \"#utility.yul\":7:172   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":178:345   */\n    tag_21:\n        /* \"#utility.yul\":238:243   */\n      0x00\n        /* \"#utility.yul\":276:282   */\n      dup2\n        /* \"#utility.yul\":263:283   */\n      calldataload\n        /* \"#utility.yul\":254:283   */\n      swap1\n      pop\n        /* \"#utility.yul\":292:339   */\n      tag_23\n        /* \"#utility.yul\":333:338   */\n      dup2\n        /* \"#utility.yul\":292:339   */\n      tag_24\n      jump\t// in\n    tag_23:\n        /* \"#utility.yul\":178:345   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":351:494   */\n    tag_25:\n        /* \"#utility.yul\":408:413   */\n      0x00\n        /* \"#utility.yul\":439:445   */\n      dup2\n        /* \"#utility.yul\":433:446   */\n      mload\n        /* \"#utility.yul\":424:446   */\n      swap1\n      pop\n        /* \"#utility.yul\":455:488   */\n      tag_27\n        /* \"#utility.yul\":482:487   */\n      dup2\n        /* \"#utility.yul\":455:488   */\n      tag_28\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":351:494   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":500:1028   */\n    tag_6:\n        /* \"#utility.yul\":595:601   */\n      0x00\n        /* \"#utility.yul\":603:609   */\n      dup1\n        /* \"#utility.yul\":652:654   */\n      0x40\n        /* \"#utility.yul\":640:649   */\n      dup4\n        /* \"#utility.yul\":631:638   */\n      dup6\n        /* \"#utility.yul\":627:650   */\n      sub\n        /* \"#utility.yul\":623:655   */\n      slt\n        /* \"#utility.yul\":620:739   */\n      iszero\n      tag_30\n      jumpi\n        /* \"#utility.yul\":658:737   */\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":620:739   */\n    tag_30:\n        /* \"#utility.yul\":778:779   */\n      0x00\n        /* \"#utility.yul\":803:869   */\n      tag_33\n        /* \"#utility.yul\":861:868   */\n      dup6\n        /* \"#utility.yul\":852:858   */\n      dup3\n        /* \"#utility.yul\":841:850   */\n      dup7\n        /* \"#utility.yul\":837:859   */\n      add\n        /* \"#utility.yul\":803:869   */\n      tag_17\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":793:869   */\n      swap3\n      pop\n        /* \"#utility.yul\":749:879   */\n      pop\n        /* \"#utility.yul\":918:920   */\n      0x20\n        /* \"#utility.yul\":944:1011   */\n      tag_34\n        /* \"#utility.yul\":1003:1010   */\n      dup6\n        /* \"#utility.yul\":994:1000   */\n      dup3\n        /* \"#utility.yul\":983:992   */\n      dup7\n        /* \"#utility.yul\":979:1001   */\n      add\n        /* \"#utility.yul\":944:1011   */\n      tag_21\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":934:1011   */\n      swap2\n      pop\n        /* \"#utility.yul\":889:1021   */\n      pop\n        /* \"#utility.yul\":500:1028   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1034:1385   */\n    tag_15:\n        /* \"#utility.yul\":1104:1110   */\n      0x00\n        /* \"#utility.yul\":1153:1155   */\n      0x20\n        /* \"#utility.yul\":1141:1150   */\n      dup3\n        /* \"#utility.yul\":1132:1139   */\n      dup5\n        /* \"#utility.yul\":1128:1151   */\n      sub\n        /* \"#utility.yul\":1124:1156   */\n      slt\n        /* \"#utility.yul\":1121:1240   */\n      iszero\n      tag_36\n      jumpi\n        /* \"#utility.yul\":1159:1238   */\n      tag_37\n      tag_32\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":1121:1240   */\n    tag_36:\n        /* \"#utility.yul\":1279:1280   */\n      0x00\n        /* \"#utility.yul\":1304:1368   */\n      tag_38\n        /* \"#utility.yul\":1360:1367   */\n      dup5\n        /* \"#utility.yul\":1351:1357   */\n      dup3\n        /* \"#utility.yul\":1340:1349   */\n      dup6\n        /* \"#utility.yul\":1336:1358   */\n      add\n        /* \"#utility.yul\":1304:1368   */\n      tag_25\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":1294:1368   */\n      swap2\n      pop\n        /* \"#utility.yul\":1250:1378   */\n      pop\n        /* \"#utility.yul\":1034:1385   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1391:1509   */\n    tag_39:\n        /* \"#utility.yul\":1478:1502   */\n      tag_41\n        /* \"#utility.yul\":1496:1501   */\n      dup2\n        /* \"#utility.yul\":1478:1502   */\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":1473:1476   */\n      dup3\n        /* \"#utility.yul\":1466:1503   */\n      mstore\n        /* \"#utility.yul\":1391:1509   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1515:1737   */\n    tag_9:\n        /* \"#utility.yul\":1608:1612   */\n      0x00\n        /* \"#utility.yul\":1646:1648   */\n      0x20\n        /* \"#utility.yul\":1635:1644   */\n      dup3\n        /* \"#utility.yul\":1631:1649   */\n      add\n        /* \"#utility.yul\":1623:1649   */\n      swap1\n      pop\n        /* \"#utility.yul\":1659:1730   */\n      tag_44\n        /* \"#utility.yul\":1727:1728   */\n      0x00\n        /* \"#utility.yul\":1716:1725   */\n      dup4\n        /* \"#utility.yul\":1712:1729   */\n      add\n        /* \"#utility.yul\":1703:1709   */\n      dup5\n        /* \"#utility.yul\":1659:1730   */\n      tag_39\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":1515:1737   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1824:1920   */\n    tag_47:\n        /* \"#utility.yul\":1861:1868   */\n      0x00\n        /* \"#utility.yul\":1890:1914   */\n      tag_49\n        /* \"#utility.yul\":1908:1913   */\n      dup3\n        /* \"#utility.yul\":1890:1914   */\n      tag_50\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":1879:1914   */\n      swap1\n      pop\n        /* \"#utility.yul\":1824:1920   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1926:2035   */\n    tag_51:\n        /* \"#utility.yul\":1976:1983   */\n      0x00\n        /* \"#utility.yul\":2005:2029   */\n      tag_53\n        /* \"#utility.yul\":2023:2028   */\n      dup3\n        /* \"#utility.yul\":2005:2029   */\n      tag_47\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":1994:2029   */\n      swap1\n      pop\n        /* \"#utility.yul\":1926:2035   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2041:2151   */\n    tag_54:\n        /* \"#utility.yul\":2092:2099   */\n      0x00\n        /* \"#utility.yul\":2121:2145   */\n      tag_56\n        /* \"#utility.yul\":2139:2144   */\n      dup3\n        /* \"#utility.yul\":2121:2145   */\n      tag_47\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":2110:2145   */\n      swap1\n      pop\n        /* \"#utility.yul\":2041:2151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2157:2283   */\n    tag_50:\n        /* \"#utility.yul\":2194:2201   */\n      0x00\n        /* \"#utility.yul\":2234:2276   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2227:2232   */\n      dup3\n        /* \"#utility.yul\":2223:2277   */\n      and\n        /* \"#utility.yul\":2212:2277   */\n      swap1\n      pop\n        /* \"#utility.yul\":2157:2283   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2289:2366   */\n    tag_42:\n        /* \"#utility.yul\":2326:2333   */\n      0x00\n        /* \"#utility.yul\":2355:2360   */\n      dup2\n        /* \"#utility.yul\":2344:2360   */\n      swap1\n      pop\n        /* \"#utility.yul\":2289:2366   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2495:2612   */\n    tag_32:\n        /* \"#utility.yul\":2604:2605   */\n      0x00\n        /* \"#utility.yul\":2601:2602   */\n      dup1\n        /* \"#utility.yul\":2594:2606   */\n      revert\n        /* \"#utility.yul\":2618:2766   */\n    tag_20:\n        /* \"#utility.yul\":2704:2741   */\n      tag_63\n        /* \"#utility.yul\":2735:2740   */\n      dup2\n        /* \"#utility.yul\":2704:2741   */\n      tag_51\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":2697:2702   */\n      dup2\n        /* \"#utility.yul\":2694:2742   */\n      eq\n        /* \"#utility.yul\":2684:2760   */\n      tag_64\n      jumpi\n        /* \"#utility.yul\":2756:2757   */\n      0x00\n        /* \"#utility.yul\":2753:2754   */\n      dup1\n        /* \"#utility.yul\":2746:2758   */\n      revert\n        /* \"#utility.yul\":2684:2760   */\n    tag_64:\n        /* \"#utility.yul\":2618:2766   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2772:2922   */\n    tag_24:\n        /* \"#utility.yul\":2859:2897   */\n      tag_66\n        /* \"#utility.yul\":2891:2896   */\n      dup2\n        /* \"#utility.yul\":2859:2897   */\n      tag_54\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":2852:2857   */\n      dup2\n        /* \"#utility.yul\":2849:2898   */\n      eq\n        /* \"#utility.yul\":2839:2916   */\n      tag_67\n      jumpi\n        /* \"#utility.yul\":2912:2913   */\n      0x00\n        /* \"#utility.yul\":2909:2910   */\n      dup1\n        /* \"#utility.yul\":2902:2914   */\n      revert\n        /* \"#utility.yul\":2839:2916   */\n    tag_67:\n        /* \"#utility.yul\":2772:2922   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2928:3050   */\n    tag_28:\n        /* \"#utility.yul\":3001:3025   */\n      tag_69\n        /* \"#utility.yul\":3019:3024   */\n      dup2\n        /* \"#utility.yul\":3001:3025   */\n      tag_42\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":2994:2999   */\n      dup2\n        /* \"#utility.yul\":2991:3026   */\n      eq\n        /* \"#utility.yul\":2981:3044   */\n      tag_70\n      jumpi\n        /* \"#utility.yul\":3040:3041   */\n      0x00\n        /* \"#utility.yul\":3037:3038   */\n      dup1\n        /* \"#utility.yul\":3030:3042   */\n      revert\n        /* \"#utility.yul\":2981:3044   */\n    tag_70:\n        /* \"#utility.yul\":2928:3050   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220836e2bfdf680397425e6878bed00f34cbca68bcde79354773910d5a11357dd1864736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052670de0b6b3a764000060005534801561001c57600080fd5b506102a38061002c6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063344e49d914610030575b600080fd5b61004a6004803603810190610045919061012c565b610060565b60405161005791906101a8565b60405180910390f35b6000808373ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156100a957600080fd5b505afa1580156100bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e1919061016c565b90508091505092915050565b6000813590506100fc81610228565b92915050565b6000813590506101118161023f565b92915050565b60008151905061012681610256565b92915050565b6000806040838503121561014357610142610223565b5b6000610151858286016100ed565b925050602061016285828601610102565b9150509250929050565b60006020828403121561018257610181610223565b5b600061019084828501610117565b91505092915050565b6101a281610219565b82525050565b60006020820190506101bd6000830184610199565b92915050565b60006101ce826101f9565b9050919050565b60006101e0826101c3565b9050919050565b60006101f2826101c3565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b610231816101d5565b811461023c57600080fd5b50565b610248816101e7565b811461025357600080fd5b50565b61025f81610219565b811461026a57600080fd5b5056fea2646970667358221220836e2bfdf680397425e6878bed00f34cbca68bcde79354773910d5a11357dd1864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x0 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A3 DUP1 PUSH2 0x2C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x344E49D9 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x12C JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x1A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0x16C JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFC DUP2 PUSH2 0x228 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x111 DUP2 PUSH2 0x23F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x126 DUP2 PUSH2 0x256 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x143 JUMPI PUSH2 0x142 PUSH2 0x223 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x151 DUP6 DUP3 DUP7 ADD PUSH2 0xED JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x162 DUP6 DUP3 DUP7 ADD PUSH2 0x102 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x182 JUMPI PUSH2 0x181 PUSH2 0x223 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x190 DUP5 DUP3 DUP6 ADD PUSH2 0x117 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A2 DUP2 PUSH2 0x219 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x199 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CE DUP3 PUSH2 0x1F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E0 DUP3 PUSH2 0x1C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F2 DUP3 PUSH2 0x1C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x231 DUP2 PUSH2 0x1D5 JUMP JUMPDEST DUP2 EQ PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x248 DUP2 PUSH2 0x1E7 JUMP JUMPDEST DUP2 EQ PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x25F DUP2 PUSH2 0x219 JUMP JUMPDEST DUP2 EQ PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 PUSH15 0x2BFDF680397425E6878BED00F34CBC 0xA6 DUP12 0xCD 0xE7 SWAP4 SLOAD PUSH24 0x3910D5A11357DD1864736F6C634300080700330000000000 ",
							"sourceMap": "8846:347:0:-:0;;;8889:19;8872:36;;8846:347;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@CalcLpPrice_352": {
									"entryPoint": 96,
									"id": 352,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$25": {
									"entryPoint": 237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_Router_$329": {
									"entryPoint": 258,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$25t_contract$_Router_$329": {
									"entryPoint": 300,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 409,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 424,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 451,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$25": {
									"entryPoint": 469,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_Router_$329": {
									"entryPoint": 487,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 505,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 547,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$25": {
									"entryPoint": 552,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_Router_$329": {
									"entryPoint": 575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 598,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3053:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "72:100:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "82:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "104:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "91:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "91:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "82:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "160:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$25",
																	"nodeType": "YulIdentifier",
																	"src": "120:39:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:46:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "50:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "58:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "66:5:1",
														"type": ""
													}
												],
												"src": "7:165:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "244:101:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "254:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "276:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "263:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "263:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "254:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "333:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_Router_$329",
																	"nodeType": "YulIdentifier",
																	"src": "292:40:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "292:47:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_Router_$329",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "222:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "230:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "238:5:1",
														"type": ""
													}
												],
												"src": "178:167:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "414:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "424:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "439:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "433:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "424:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "482:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "455:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "455:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "455:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "392:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "400:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "408:5:1",
														"type": ""
													}
												],
												"src": "351:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "610:418:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "656:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "658:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "658:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "658:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "631:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "640:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "652:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "623:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "623:32:1"
															},
															"nodeType": "YulIf",
															"src": "620:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "749:130:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "764:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "778:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "768:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "793:76:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "841:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "852:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "837:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "837:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "861:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$25",
																			"nodeType": "YulIdentifier",
																			"src": "803:33:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "803:66:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "793:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "889:132:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "904:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "918:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "908:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "934:77:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "983:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "994:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "979:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "979:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1003:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_Router_$329",
																			"nodeType": "YulIdentifier",
																			"src": "944:34:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "944:67:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "934:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$25t_contract$_Router_$329",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "572:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "583:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "595:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "603:6:1",
														"type": ""
													}
												],
												"src": "500:528:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1111:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1157:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1159:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1159:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1159:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1132:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1141:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1128:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1128:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1153:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1124:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1124:32:1"
															},
															"nodeType": "YulIf",
															"src": "1121:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1250:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1265:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1279:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1269:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1294:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1340:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1351:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1336:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1336:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1360:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1304:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1304:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1294:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1081:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1092:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1104:6:1",
														"type": ""
													}
												],
												"src": "1034:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1456:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1473:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1496:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1478:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1478:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1466:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1466:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1444:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1451:3:1",
														"type": ""
													}
												],
												"src": "1391:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1635:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1646:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1631:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1631:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1623:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1703:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1716:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1727:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1712:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1712:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1659:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1659:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1659:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1585:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1597:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1608:4:1",
														"type": ""
													}
												],
												"src": "1515:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1783:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1793:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1809:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1803:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1803:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1793:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1776:6:1",
														"type": ""
													}
												],
												"src": "1743:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1869:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1879:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1908:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1890:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1890:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1879:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1851:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1861:7:1",
														"type": ""
													}
												],
												"src": "1824:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1984:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1994:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2023:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2005:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2005:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1994:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1966:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1976:7:1",
														"type": ""
													}
												],
												"src": "1926:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2100:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2110:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2139:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2121:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2121:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2110:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_Router_$329",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2082:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2092:7:1",
														"type": ""
													}
												],
												"src": "2041:110:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2202:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2212:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2227:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2234:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2223:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2223:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2212:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2184:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2194:7:1",
														"type": ""
													}
												],
												"src": "2157:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2334:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2344:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2355:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2344:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2316:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2326:7:1",
														"type": ""
													}
												],
												"src": "2289:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2461:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2478:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2481:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2471:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2471:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2471:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2372:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2584:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2601:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2604:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2594:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2594:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2594:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "2495:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2674:92:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2744:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2753:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2756:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2746:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2746:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2746:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2697:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2735:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$25",
																					"nodeType": "YulIdentifier",
																					"src": "2704:30:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2704:37:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2694:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2694:48:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2687:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2687:56:1"
															},
															"nodeType": "YulIf",
															"src": "2684:76:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2667:5:1",
														"type": ""
													}
												],
												"src": "2618:148:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2829:93:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2900:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2909:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2912:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2902:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2902:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2902:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2852:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2891:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_Router_$329",
																					"nodeType": "YulIdentifier",
																					"src": "2859:31:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2859:38:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2849:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2849:49:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2842:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2842:57:1"
															},
															"nodeType": "YulIf",
															"src": "2839:77:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_Router_$329",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2822:5:1",
														"type": ""
													}
												],
												"src": "2772:150:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2971:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3028:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3037:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3040:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3030:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3030:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3030:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2994:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3019:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3001:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3001:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2991:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2991:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2984:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2984:43:1"
															},
															"nodeType": "YulIf",
															"src": "2981:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2964:5:1",
														"type": ""
													}
												],
												"src": "2928:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_contract$_IERC20_$25(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$25(value)\n    }\n\n    function abi_decode_t_contract$_Router_$329(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_Router_$329(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$25t_contract$_Router_$329(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$25(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_Router_$329(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$25(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_Router_$329(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_contract$_IERC20_$25(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$25(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_Router_$329(value) {\n        if iszero(eq(value, cleanup_t_contract$_Router_$329(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063344e49d914610030575b600080fd5b61004a6004803603810190610045919061012c565b610060565b60405161005791906101a8565b60405180910390f35b6000808373ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156100a957600080fd5b505afa1580156100bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e1919061016c565b90508091505092915050565b6000813590506100fc81610228565b92915050565b6000813590506101118161023f565b92915050565b60008151905061012681610256565b92915050565b6000806040838503121561014357610142610223565b5b6000610151858286016100ed565b925050602061016285828601610102565b9150509250929050565b60006020828403121561018257610181610223565b5b600061019084828501610117565b91505092915050565b6101a281610219565b82525050565b60006020820190506101bd6000830184610199565b92915050565b60006101ce826101f9565b9050919050565b60006101e0826101c3565b9050919050565b60006101f2826101c3565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b610231816101d5565b811461023c57600080fd5b50565b610248816101e7565b811461025357600080fd5b50565b61025f81610219565b811461026a57600080fd5b5056fea2646970667358221220836e2bfdf680397425e6878bed00f34cbca68bcde79354773910d5a11357dd1864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x344E49D9 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x12C JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x1A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0x16C JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFC DUP2 PUSH2 0x228 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x111 DUP2 PUSH2 0x23F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x126 DUP2 PUSH2 0x256 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x143 JUMPI PUSH2 0x142 PUSH2 0x223 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x151 DUP6 DUP3 DUP7 ADD PUSH2 0xED JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x162 DUP6 DUP3 DUP7 ADD PUSH2 0x102 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x182 JUMPI PUSH2 0x181 PUSH2 0x223 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x190 DUP5 DUP3 DUP6 ADD PUSH2 0x117 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A2 DUP2 PUSH2 0x219 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x199 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CE DUP3 PUSH2 0x1F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E0 DUP3 PUSH2 0x1C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F2 DUP3 PUSH2 0x1C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x231 DUP2 PUSH2 0x1D5 JUMP JUMPDEST DUP2 EQ PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x248 DUP2 PUSH2 0x1E7 JUMP JUMPDEST DUP2 EQ PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x25F DUP2 PUSH2 0x219 JUMP JUMPDEST DUP2 EQ PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 PUSH15 0x2BFDF680397425E6878BED00F34CBC 0xA6 DUP12 0xCD 0xE7 SWAP4 SLOAD PUSH24 0x3910D5A11357DD1864736F6C634300080700330000000000 ",
							"sourceMap": "8846:347:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8917:273;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;9000:7;9019:19;9041:9;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9019:45;;9171:11;9164:18;;;8917:273;;;;:::o;7:165:1:-;66:5;104:6;91:20;82:29;;120:46;160:5;120:46;:::i;:::-;7:165;;;;:::o;178:167::-;238:5;276:6;263:20;254:29;;292:47;333:5;292:47;:::i;:::-;178:167;;;;:::o;351:143::-;408:5;439:6;433:13;424:22;;455:33;482:5;455:33;:::i;:::-;351:143;;;;:::o;500:528::-;595:6;603;652:2;640:9;631:7;627:23;623:32;620:119;;;658:79;;:::i;:::-;620:119;778:1;803:66;861:7;852:6;841:9;837:22;803:66;:::i;:::-;793:76;;749:130;918:2;944:67;1003:7;994:6;983:9;979:22;944:67;:::i;:::-;934:77;;889:132;500:528;;;;;:::o;1034:351::-;1104:6;1153:2;1141:9;1132:7;1128:23;1124:32;1121:119;;;1159:79;;:::i;:::-;1121:119;1279:1;1304:64;1360:7;1351:6;1340:9;1336:22;1304:64;:::i;:::-;1294:74;;1250:128;1034:351;;;;:::o;1391:118::-;1478:24;1496:5;1478:24;:::i;:::-;1473:3;1466:37;1391:118;;:::o;1515:222::-;1608:4;1646:2;1635:9;1631:18;1623:26;;1659:71;1727:1;1716:9;1712:17;1703:6;1659:71;:::i;:::-;1515:222;;;;:::o;1824:96::-;1861:7;1890:24;1908:5;1890:24;:::i;:::-;1879:35;;1824:96;;;:::o;1926:109::-;1976:7;2005:24;2023:5;2005:24;:::i;:::-;1994:35;;1926:109;;;:::o;2041:110::-;2092:7;2121:24;2139:5;2121:24;:::i;:::-;2110:35;;2041:110;;;:::o;2157:126::-;2194:7;2234:42;2227:5;2223:54;2212:65;;2157:126;;;:::o;2289:77::-;2326:7;2355:5;2344:16;;2289:77;;;:::o;2495:117::-;2604:1;2601;2594:12;2618:148;2704:37;2735:5;2704:37;:::i;:::-;2697:5;2694:48;2684:76;;2756:1;2753;2746:12;2684:76;2618:148;:::o;2772:150::-;2859:38;2891:5;2859:38;:::i;:::-;2852:5;2849:49;2839:77;;2912:1;2909;2902:12;2839:77;2772:150;:::o;2928:122::-;3001:24;3019:5;3001:24;:::i;:::-;2994:5;2991:35;2981:63;;3040:1;3037;3030:12;2981:63;2928:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "135000",
								"executionCost": "22289",
								"totalCost": "157289"
							},
							"external": {
								"CalcLpPrice(address,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 8846,
									"end": 9193,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 8846,
									"end": 9193,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8846,
									"end": 9193,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8889,
									"end": 8908,
									"name": "PUSH",
									"source": 0,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 8872,
									"end": 8908,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8872,
									"end": 8908,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9193,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9193,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9193,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9193,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8846,
									"end": 9193,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9193,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8846,
									"end": 9193,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9193,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9193,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8846,
									"end": 9193,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9193,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9193,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8846,
									"end": 9193,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9193,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8846,
									"end": 9193,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8846,
									"end": 9193,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9193,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8846,
									"end": 9193,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220836e2bfdf680397425e6878bed00f34cbca68bcde79354773910d5a11357dd1864736f6c63430008070033",
									".code": [
										{
											"begin": 8846,
											"end": 9193,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8846,
											"end": 9193,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8846,
											"end": 9193,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9193,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9193,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8846,
											"end": 9193,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8846,
											"end": 9193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9193,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9193,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8846,
											"end": 9193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9193,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9193,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8846,
											"end": 9193,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9193,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8846,
											"end": 9193,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8846,
											"end": 9193,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9193,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 8846,
											"end": 9193,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9193,
											"name": "PUSH",
											"source": 0,
											"value": "344E49D9"
										},
										{
											"begin": 8846,
											"end": 9193,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8846,
											"end": 9193,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9193,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8846,
											"end": 9193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8846,
											"end": 9193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9193,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8917,
											"end": 9190,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8917,
											"end": 9190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8917,
											"end": 9190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8917,
											"end": 9190,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8917,
											"end": 9190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8917,
											"end": 9190,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8917,
											"end": 9190,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8917,
											"end": 9190,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8917,
											"end": 9190,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8917,
											"end": 9190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8917,
											"end": 9190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8917,
											"end": 9190,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8917,
											"end": 9190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8917,
											"end": 9190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8917,
											"end": 9190,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8917,
											"end": 9190,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8917,
											"end": 9190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8917,
											"end": 9190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 8917,
											"end": 9190,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8917,
											"end": 9190,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8917,
											"end": 9190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8917,
											"end": 9190,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8917,
											"end": 9190,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8917,
											"end": 9190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8917,
											"end": 9190,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8917,
											"end": 9190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8917,
											"end": 9190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 8917,
											"end": 9190,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8917,
											"end": 9190,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8917,
											"end": 9190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8917,
											"end": 9190,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8917,
											"end": 9190,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8917,
											"end": 9190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8917,
											"end": 9190,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8917,
											"end": 9190,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8917,
											"end": 9190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8917,
											"end": 9190,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8917,
											"end": 9190,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 8917,
											"end": 9190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9000,
											"end": 9007,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9019,
											"end": 9038,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9050,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9062,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9041,
											"end": 9062,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9062,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9019,
											"end": 9064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9019,
											"end": 9064,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9182,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9182,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9182,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8917,
											"end": 9190,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8917,
											"end": 9190,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8917,
											"end": 9190,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8917,
											"end": 9190,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8917,
											"end": 9190,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 172,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 7,
											"end": 172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 66,
											"end": 71,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 104,
											"end": 110,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 91,
											"end": 111,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 82,
											"end": 111,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 111,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 120,
											"end": 166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 160,
											"end": 165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 120,
											"end": 166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 120,
											"end": 166,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 120,
											"end": 166,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 120,
											"end": 166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 172,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 172,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 172,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 178,
											"end": 345,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 178,
											"end": 345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 238,
											"end": 243,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 282,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 263,
											"end": 283,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 254,
											"end": 283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 254,
											"end": 283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 292,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 333,
											"end": 338,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 292,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 292,
											"end": 339,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 292,
											"end": 339,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 292,
											"end": 339,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 178,
											"end": 345,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 178,
											"end": 345,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 178,
											"end": 345,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 178,
											"end": 345,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 178,
											"end": 345,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 351,
											"end": 494,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 351,
											"end": 494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 408,
											"end": 413,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 439,
											"end": 445,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 433,
											"end": 446,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 424,
											"end": 446,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 424,
											"end": 446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 455,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 482,
											"end": 487,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 455,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 455,
											"end": 488,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 455,
											"end": 488,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 455,
											"end": 488,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 351,
											"end": 494,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 351,
											"end": 494,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 351,
											"end": 494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 351,
											"end": 494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 351,
											"end": 494,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 500,
											"end": 1028,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 500,
											"end": 1028,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 595,
											"end": 601,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 603,
											"end": 609,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 652,
											"end": 654,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 640,
											"end": 649,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 631,
											"end": 638,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 627,
											"end": 650,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 623,
											"end": 655,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 620,
											"end": 739,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 620,
											"end": 739,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 620,
											"end": 739,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 658,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 658,
											"end": 737,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 658,
											"end": 737,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 658,
											"end": 737,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 620,
											"end": 739,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 620,
											"end": 739,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 778,
											"end": 779,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 803,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 861,
											"end": 868,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 852,
											"end": 858,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 841,
											"end": 850,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 837,
											"end": 859,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 803,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 803,
											"end": 869,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 803,
											"end": 869,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 803,
											"end": 869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 793,
											"end": 869,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 793,
											"end": 869,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 749,
											"end": 879,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 918,
											"end": 920,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 944,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1003,
											"end": 1010,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 994,
											"end": 1000,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 983,
											"end": 992,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 979,
											"end": 1001,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 944,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 944,
											"end": 1011,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 944,
											"end": 1011,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 944,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 934,
											"end": 1011,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 934,
											"end": 1011,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 889,
											"end": 1021,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 500,
											"end": 1028,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 500,
											"end": 1028,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 500,
											"end": 1028,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 500,
											"end": 1028,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 500,
											"end": 1028,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 500,
											"end": 1028,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1034,
											"end": 1385,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1034,
											"end": 1385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1110,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1153,
											"end": 1155,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1141,
											"end": 1150,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1139,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1128,
											"end": 1151,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1240,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1121,
											"end": 1240,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1159,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1159,
											"end": 1238,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1159,
											"end": 1238,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1159,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1240,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1121,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1280,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1304,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1360,
											"end": 1367,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1340,
											"end": 1349,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1336,
											"end": 1358,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1304,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1304,
											"end": 1368,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1304,
											"end": 1368,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1304,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1368,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1368,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1034,
											"end": 1385,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1034,
											"end": 1385,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1034,
											"end": 1385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1034,
											"end": 1385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1034,
											"end": 1385,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1391,
											"end": 1509,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1391,
											"end": 1509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1496,
											"end": 1501,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1478,
											"end": 1502,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1478,
											"end": 1502,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1478,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1473,
											"end": 1476,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 1503,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1509,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1515,
											"end": 1737,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1515,
											"end": 1737,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1608,
											"end": 1612,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1648,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1635,
											"end": 1644,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1631,
											"end": 1649,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1649,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1659,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1727,
											"end": 1728,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1716,
											"end": 1725,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1729,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1709,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1659,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1659,
											"end": 1730,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1659,
											"end": 1730,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1659,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1737,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1737,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1737,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1824,
											"end": 1920,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1824,
											"end": 1920,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1861,
											"end": 1868,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1890,
											"end": 1914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1908,
											"end": 1913,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1890,
											"end": 1914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1890,
											"end": 1914,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1890,
											"end": 1914,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1890,
											"end": 1914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 1914,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 1914,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1920,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1920,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1920,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1983,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2005,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2023,
											"end": 2028,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2005,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2005,
											"end": 2029,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2005,
											"end": 2029,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2005,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1994,
											"end": 2029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1994,
											"end": 2029,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1926,
											"end": 2035,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2041,
											"end": 2151,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2041,
											"end": 2151,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2092,
											"end": 2099,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2121,
											"end": 2145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2139,
											"end": 2144,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2121,
											"end": 2145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2121,
											"end": 2145,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2121,
											"end": 2145,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2121,
											"end": 2145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2151,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2151,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2151,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2151,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2157,
											"end": 2283,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2157,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2194,
											"end": 2201,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2234,
											"end": 2276,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2227,
											"end": 2232,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2277,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2277,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2277,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2157,
											"end": 2283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2157,
											"end": 2283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2157,
											"end": 2283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2157,
											"end": 2283,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2289,
											"end": 2366,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2289,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2326,
											"end": 2333,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2355,
											"end": 2360,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2344,
											"end": 2360,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2344,
											"end": 2360,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2289,
											"end": 2366,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2289,
											"end": 2366,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2289,
											"end": 2366,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2289,
											"end": 2366,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2495,
											"end": 2612,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2495,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2604,
											"end": 2605,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2601,
											"end": 2602,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2594,
											"end": 2606,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2766,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2618,
											"end": 2766,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2704,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2735,
											"end": 2740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2704,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2704,
											"end": 2741,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2704,
											"end": 2741,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2704,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2702,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2694,
											"end": 2742,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2684,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2684,
											"end": 2760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2756,
											"end": 2757,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2753,
											"end": 2754,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2758,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2684,
											"end": 2760,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2684,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2766,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2772,
											"end": 2922,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2772,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2859,
											"end": 2897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2891,
											"end": 2896,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2859,
											"end": 2897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2859,
											"end": 2897,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2859,
											"end": 2897,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2859,
											"end": 2897,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2857,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2898,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2839,
											"end": 2916,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 2913,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2909,
											"end": 2910,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2902,
											"end": 2914,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2916,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2839,
											"end": 2916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2772,
											"end": 2922,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2772,
											"end": 2922,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2928,
											"end": 3050,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2928,
											"end": 3050,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3001,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3019,
											"end": 3024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3001,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3001,
											"end": 3025,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3001,
											"end": 3025,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3001,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2994,
											"end": 2999,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2991,
											"end": 3026,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2981,
											"end": 3044,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3040,
											"end": 3041,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3037,
											"end": 3038,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3030,
											"end": 3042,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 3044,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2981,
											"end": 3044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2928,
											"end": 3050,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2928,
											"end": 3050,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"CalcLpPrice(address,address)": "344e49d9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"lpAddress\",\"type\":\"address\"},{\"internalType\":\"contract Router\",\"name\":\"routerAddress\",\"type\":\"address\"}],\"name\":\"CalcLpPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"LpUtils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0xf5bf5630930183962da5a309da62c8da60bab424d8631622b75fa64b365b46e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60654c38abd08d6f83fcb23aa67d935bcc213d56b27ff657c6c836a62f843af1\",\"dweb:/ipfs/QmYqb7k3iYSXN6V8F9Wys62GvvQ7JAhKwL53cFk8Ubc8yp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 332,
								"contract": "contracts/LpPrice.sol:LpUtils",
								"label": "amount",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Router": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getAmountsOut(uint256,address[])": "d06ca61f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"Router\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0xf5bf5630930183962da5a309da62c8da60bab424d8631622b75fa64b365b46e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60654c38abd08d6f83fcb23aa67d935bcc213d56b27ff657c6c836a62f843af1\",\"dweb:/ipfs/QmYqb7k3iYSXN6V8F9Wys62GvvQ7JAhKwL53cFk8Ubc8yp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/LpPrice.sol:242:44:\n    |\n242 |     function CalcLpPrice(IERC20 lpAddress, Router routerAddress) external view returns(uint256){\n    |                                            ^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 8976,
					"file": "contracts/LpPrice.sol",
					"start": 8956
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/LpPrice.sol": {
				"ast": {
					"absolutePath": "contracts/LpPrice.sol",
					"exportedSymbols": {
						"Address": [
							317
						],
						"IERC20": [
							25
						],
						"LpUtils": [
							353
						],
						"Router": [
							329
						]
					},
					"id": 354,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 25,
							"linearizedBaseContracts": [
								25
							],
							"name": "IERC20",
							"nameLocation": "70:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "84:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 7,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "167:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "178:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 7,
												"src": "204:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "204:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "203:9:0"
									},
									"scope": 25,
									"src": "158:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0dfe1681",
									"id": 12,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "230:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "236:2:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "262:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "261:9:0"
									},
									"scope": 25,
									"src": "221:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d21220a7",
									"id": 17,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "288:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "294:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "320:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "320:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "319:9:0"
									},
									"scope": 25,
									"src": "279:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 24,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "346:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "364:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "356:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:17:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "396:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "396:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "395:9:0"
									},
									"scope": 25,
									"src": "337:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 354,
							"src": "60:348:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 317,
							"linearizedBaseContracts": [
								317
							],
							"name": "Address",
							"nameLocation": "420:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1486:260:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 33,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "1715:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1715:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 35,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1715:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1737:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1715:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 32,
												"id": 38,
												"nodeType": "Return",
												"src": "1708:30:0"
											}
										]
									},
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "435:979:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1429:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1448:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1440:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1440:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1439:17:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1480:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 30,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1480:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:6:0"
									},
									"scope": 317,
									"src": "1420:326:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "2752:246:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 51,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2779:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$317",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$317",
																				"typeString": "library Address"
																			}
																		],
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2771:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 49,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2771:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 52,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2771:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2771:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 54,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "2796:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2771:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2804:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 48,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2763:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2763:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "2763:73:0"
											},
											{
												"assignments": [
													60,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 60,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2855:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 73,
														"src": "2850:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 59,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2850:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 67,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2898:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 61,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2868:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2868:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 63,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "2890:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2868:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2868:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2849:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 69,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 60,
															"src": "2920:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2929:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2912:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2912:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "2912:78:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1754:921:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2690:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2716:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "2700:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 42,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2700:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2735:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "2727:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2699:43:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2752:0:0"
									},
									"scope": 317,
									"src": "2681:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "3849:86:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 85,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "3880:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 86,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "3888:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3894:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 84,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															91,
															111
														],
														"referencedDeclaration": 111,
														"src": "3867:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3867:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 83,
												"id": 89,
												"nodeType": "Return",
												"src": "3860:67:0"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "3006:748:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3769:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3790:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3782:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3782:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3811:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3798:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 78,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3798:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3781:35:0"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3835:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 81,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3835:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3834:14:0"
									},
									"scope": 317,
									"src": "3760:175:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "4316:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 104,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "4356:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 105,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 96,
															"src": "4364:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4370:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 107,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "4373:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 103,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															131,
															181
														],
														"referencedDeclaration": 181,
														"src": "4334:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4334:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 102,
												"id": 109,
												"nodeType": "Return",
												"src": "4327:59:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "3943:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4174:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4205:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4197:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4197:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4235:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4222:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 95,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4222:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4264:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4250:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 97,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4250:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4186:97:0"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4302:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 100,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4302:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4301:14:0"
									},
									"scope": 317,
									"src": "4165:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "4916:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 124,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "4956:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 125,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "4964:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 126,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "4970:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4977:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 123,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															131,
															181
														],
														"referencedDeclaration": 181,
														"src": "4934:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4934:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 122,
												"id": 129,
												"nodeType": "Return",
												"src": "4927:94:0"
											}
										]
									},
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "4402:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4778:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4818:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "4810:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4810:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4848:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "4835:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 115,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4835:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4871:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "4863:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4863:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4799:84:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "4902:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 120,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4902:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4901:14:0"
									},
									"scope": 317,
									"src": "4769:260:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "5469:326:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 148,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5496:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$317",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$317",
																				"typeString": "library Address"
																			}
																		],
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5488:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 146,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5488:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5488:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5488:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 151,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 138,
																"src": "5513:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5488:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5520:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 145,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5480:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5480:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "5480:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 158,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 134,
																	"src": "5591:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 157,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "5580:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5580:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5600:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 156,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5572:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5572:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "5572:60:0"
											},
											{
												"assignments": [
													164,
													166
												],
												"declarations": [
													{
														"constant": false,
														"id": 164,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5651:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 180,
														"src": "5646:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 163,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5646:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 166,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5673:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 180,
														"src": "5660:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 165,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5660:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 173,
												"initialValue": {
													"arguments": [
														{
															"id": 171,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "5713:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 167,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 134,
																"src": "5687:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5687:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 169,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 138,
																"src": "5706:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5687:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5687:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5645:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 175,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 164,
															"src": "5753:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 176,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 166,
															"src": "5762:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 177,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "5774:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 174,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "5736:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5736:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 144,
												"id": 179,
												"nodeType": "Return",
												"src": "5729:58:0"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "5037:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5294:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5334:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5326:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5364:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5351:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 135,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5351:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5387:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5379:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5379:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5417:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5403:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 139,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5403:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5315:121:0"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5455:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 142,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5455:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5454:14:0"
									},
									"scope": 317,
									"src": "5285:510:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 197,
										"nodeType": "Block",
										"src": "6080:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 192,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "6117:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 193,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "6125:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6131:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 191,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															198,
															233
														],
														"referencedDeclaration": 233,
														"src": "6098:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6098:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 190,
												"id": 196,
												"nodeType": "Return",
												"src": "6091:80:0"
											}
										]
									},
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "5803:171:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5989:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6016:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "6008:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6037:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "6024:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 185,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6024:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:35:0"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "6066:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 188,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6065:14:0"
									},
									"scope": 317,
									"src": "5980:199:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 232,
										"nodeType": "Block",
										"src": "6533:233:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 212,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "6563:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 211,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "6552:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6552:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6572:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 210,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6544:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6544:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "6544:67:0"
											},
											{
												"assignments": [
													218,
													220
												],
												"declarations": [
													{
														"constant": false,
														"id": 218,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6630:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 232,
														"src": "6625:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 217,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6625:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 220,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6652:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 232,
														"src": "6639:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 219,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6639:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 225,
												"initialValue": {
													"arguments": [
														{
															"id": 223,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "6684:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 221,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "6666:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 222,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6666:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6666:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6624:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 227,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "6724:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 228,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 220,
															"src": "6733:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 229,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "6745:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 226,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "6707:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6707:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 209,
												"id": 231,
												"nodeType": "Return",
												"src": "6700:58:0"
											}
										]
									},
									"documentation": {
										"id": 199,
										"nodeType": "StructuredDocumentation",
										"src": "6187:178:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6380:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6417:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "6409:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6409:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6447:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "6434:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 202,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6434:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6476:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "6462:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 204,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6462:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:97:0"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "6519:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 207,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6519:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6518:14:0"
									},
									"scope": 317,
									"src": "6371:395:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 249,
										"nodeType": "Block",
										"src": "7050:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 244,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "7089:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 245,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 238,
															"src": "7097:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7103:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 243,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															250,
															285
														],
														"referencedDeclaration": 285,
														"src": "7068:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7068:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 242,
												"id": 248,
												"nodeType": "Return",
												"src": "7061:84:0"
											}
										]
									},
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "6774:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6962:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6991:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "6983:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6983:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7012:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "6999:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 237,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6999:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6982:35:0"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "7036:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 240,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7036:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7035:14:0"
									},
									"scope": 317,
									"src": "6953:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "7506:237:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 264,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 253,
																	"src": "7536:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 263,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "7525:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7525:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7545:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 262,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7517:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7517:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 268,
												"nodeType": "ExpressionStatement",
												"src": "7517:69:0"
											},
											{
												"assignments": [
													270,
													272
												],
												"declarations": [
													{
														"constant": false,
														"id": 270,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7605:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 284,
														"src": "7600:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 269,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7600:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 272,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7627:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 284,
														"src": "7614:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 271,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7614:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 277,
												"initialValue": {
													"arguments": [
														{
															"id": 275,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "7661:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 273,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 253,
															"src": "7641:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7641:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7641:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7599:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 279,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 270,
															"src": "7701:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 280,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "7710:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 281,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "7722:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 278,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "7684:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7684:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 261,
												"id": 283,
												"nodeType": "Return",
												"src": "7677:58:0"
											}
										]
									},
									"documentation": {
										"id": 251,
										"nodeType": "StructuredDocumentation",
										"src": "7161:180:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7356:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7395:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7387:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7387:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7425:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7412:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 254,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7412:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7454:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7440:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 256,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7440:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7376:97:0"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7492:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 259,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7492:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7491:14:0"
									},
									"scope": 317,
									"src": "7347:396:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 315,
										"nodeType": "Block",
										"src": "8135:548:0",
										"statements": [
											{
												"condition": {
													"id": 297,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 288,
													"src": "8150:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 313,
													"nodeType": "Block",
													"src": "8209:467:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 301,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "8295:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "8295:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8315:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8295:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 311,
																"nodeType": "Block",
																"src": "8610:55:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 308,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 292,
																					"src": "8636:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 307,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8629:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 309,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8629:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 310,
																		"nodeType": "ExpressionStatement",
																		"src": "8629:20:0"
																	}
																]
															},
															"id": 312,
															"nodeType": "IfStatement",
															"src": "8291:374:0",
															"trueBody": {
																"id": 306,
																"nodeType": "Block",
																"src": "8318:286:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8441:148:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8464:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8493:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8487:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8487:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8468:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8537:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8541:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8533:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8533:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8554:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8526:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8526:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8526:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 290,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8493:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 290,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8541:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 305,
																		"nodeType": "InlineAssembly",
																		"src": "8432:157:0"
																	}
																]
															}
														}
													]
												},
												"id": 314,
												"nodeType": "IfStatement",
												"src": "8146:530:0",
												"trueBody": {
													"id": 300,
													"nodeType": "Block",
													"src": "8159:44:0",
													"statements": [
														{
															"expression": {
																"id": 298,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "8181:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 296,
															"id": 299,
															"nodeType": "Return",
															"src": "8174:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "7751:214:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7980:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8012:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "8007:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 287,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8007:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8043:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "8030:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8030:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8078:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "8064:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8064:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7996:101:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "8121:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 294,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8121:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8120:14:0"
									},
									"scope": 317,
									"src": "7971:712:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 354,
							"src": "412:8274:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 329,
							"linearizedBaseContracts": [
								329
							],
							"name": "Router",
							"nameLocation": "8700:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d06ca61f",
									"id": 328,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "8723:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "8742:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "8737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 318,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8737:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "8769:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "8752:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 320,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "8752:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 321,
													"nodeType": "ArrayTypeName",
													"src": "8752:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8736:38:0"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "8830:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "8816:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 324,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "8816:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 325,
													"nodeType": "ArrayTypeName",
													"src": "8816:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8815:23:0"
									},
									"scope": 329,
									"src": "8714:125:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 354,
							"src": "8690:152:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 353,
							"linearizedBaseContracts": [
								353
							],
							"name": "LpUtils",
							"nameLocation": "8855:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 332,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "8880:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 353,
									"src": "8872:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 330,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8872:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030303030303030303030303030303030",
										"id": 331,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8889:19:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1000000000000000000"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "9008:182:0",
										"statements": [
											{
												"assignments": [
													344
												],
												"declarations": [
													{
														"constant": false,
														"id": 344,
														"mutability": "mutable",
														"name": "totalSupply",
														"nameLocation": "9027:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 351,
														"src": "9019:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 343,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9019:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 348,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 345,
															"name": "lpAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "9041:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$25",
																"typeString": "contract IERC20"
															}
														},
														"id": 346,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "9041:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9041:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9019:45:0"
											},
											{
												"expression": {
													"id": 349,
													"name": "totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 344,
													"src": "9171:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 342,
												"id": 350,
												"nodeType": "Return",
												"src": "9164:18:0"
											}
										]
									},
									"functionSelector": "344e49d9",
									"id": 352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "CalcLpPrice",
									"nameLocation": "8926:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "lpAddress",
												"nameLocation": "8945:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "8938:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$25",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 334,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 333,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 25,
														"src": "8938:6:0"
													},
													"referencedDeclaration": 25,
													"src": "8938:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$25",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "routerAddress",
												"nameLocation": "8963:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "8956:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_Router_$329",
													"typeString": "contract Router"
												},
												"typeName": {
													"id": 337,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 336,
														"name": "Router",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 329,
														"src": "8956:6:0"
													},
													"referencedDeclaration": 329,
													"src": "8956:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Router_$329",
														"typeString": "contract Router"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8937:40:0"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "9000:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9000:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8999:9:0"
									},
									"scope": 353,
									"src": "8917:273:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 354,
							"src": "8846:347:0",
							"usedErrors": []
						}
					],
					"src": "33:9160:0"
				},
				"id": 0
			}
		}
	}
}
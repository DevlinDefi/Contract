{
	"id": "867d0d423f671f40d98c90f6f891986f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/LpPrice.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     * - Subtraction cannot overflow.\r\n     *\r\n     * _Available since v2.4.0._\r\n     */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     *\r\n     * _Available since v2.4.0._\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        // Solidity only automatically asserts when dividing by 0\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts with custom message when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     *\r\n     * _Available since v2.4.0._\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    \r\n    function balanceOf(address account) external view returns (uint256);\r\n}\r\n\r\ninterface LP {\r\n\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function token0() external view returns (IERC20);\r\n\r\n    function token1() external view returns (IERC20);\r\n}\r\n\r\ninterface Router {\r\n    function getAmountsOut(uint amountIn, address[] memory path) external\r\n        view\r\n        returns (uint[] memory amounts);\r\n}\r\n\r\ncontract LpUtils {\r\n    using SafeMath for uint256;\r\n    address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd;\r\n    address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7;\r\n    uint256 amount = 1000000000000000000;\r\n\r\n    function price(Router routerAddress, address token) internal view returns(uint256){\r\n        address[] memory path = new address[](3);\r\n        path[0] = token;\r\n        path[1] = WBNB;\r\n        path[2] = BUSD;\r\n        return routerAddress.getAmountsOut(amount,path)[2];\r\n    }\r\n\r\n    function WBNBPrice(Router routerAddress, address token) external view returns(uint256){\r\n        address[] memory path = new address[](2);\r\n        path[0] = token;\r\n        path[2] = BUSD;\r\n        return routerAddress.getAmountsOut(amount,path)[1];\r\n    }\r\n\r\n    // function CalcLpPrice(LP lpAddress, Router routerAddress) external view returns(uint256){\r\n    //     uint256 phase1;\r\n    //     uint256 phase2;\r\n    //     if(address(WBNB) != address(lpAddress.token0())){\r\n    //         phase1 = (lpAddress.token0().balanceOf(address(lpAddress)).mul(price(routerAddress,address(lpAddress.token0()))));\r\n    //     }else{\r\n    //         phase1 = (lpAddress.token0().balanceOf(address(lpAddress)).mul(WBNBPrice(routerAddress,address(lpAddress.token0()))));\r\n    //     }\r\n\r\n    //     if(address(WBNB) != address(lpAddress.token1())){\r\n    //         phase2 = (lpAddress.token1().balanceOf(address(lpAddress)).mul(price(routerAddress,address(lpAddress.token1()))));\r\n    //     }else{\r\n    //         phase2 = (lpAddress.token1().balanceOf(address(lpAddress)).mul(WBNBPrice(routerAddress,address(lpAddress.token1()))));\r\n    //     }\r\n        \r\n    //     return (phase2);\r\n    // }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/LpPrice.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LpPrice.sol\":60:8334  library Address {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LpPrice.sol\":60:8334  library Address {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209353b25e845ceabd03b7acc3695ba095874974071273b49026d82a5f669f94f164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209353b25e845ceabd03b7acc3695ba095874974071273b49026d82a5f669f94f164736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 MSTORE8 0xB2 0x5E DUP5 0x5C 0xEA 0xBD SUB 0xB7 0xAC 0xC3 PUSH10 0x5BA095874974071273B4 SWAP1 0x26 0xD8 0x2A 0x5F PUSH7 0x9F94F164736F6C PUSH4 0x43000807 STOP CALLER ",
							"sourceMap": "60:8274:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209353b25e845ceabd03b7acc3695ba095874974071273b49026d82a5f669f94f164736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 MSTORE8 0xB2 0x5E DUP5 0x5C 0xEA 0xBD SUB 0xB7 0xAC 0xC3 PUSH10 0x5BA095874974071273B4 SWAP1 0x26 0xD8 0x2A 0x5F PUSH7 0x9F94F164736F6C PUSH4 0x43000807 STOP CALLER ",
							"sourceMap": "60:8274:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209353b25e845ceabd03b7acc3695ba095874974071273b49026d82a5f669f94f164736f6c63430008070033",
									".code": [
										{
											"begin": 60,
											"end": 8334,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0x6ae54261b087c814d47d50442c4885f9a3113cb1833da7a5a3e584e4c1a74148\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6d9cd857b7aec5885f41061ef7310dec3e5f8b33001e6cd446df9c9cabb7acf\",\"dweb:/ipfs/QmYYYaTX3hCaKwkdcowf6WrNeuwE3qyrxwkX4Y62PTWPvQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0x6ae54261b087c814d47d50442c4885f9a3113cb1833da7a5a3e584e4c1a74148\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6d9cd857b7aec5885f41061ef7310dec3e5f8b33001e6cd446df9c9cabb7acf\",\"dweb:/ipfs/QmYYYaTX3hCaKwkdcowf6WrNeuwE3qyrxwkX4Y62PTWPvQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"LP": {
					"abi": [
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"LP\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0x6ae54261b087c814d47d50442c4885f9a3113cb1833da7a5a3e584e4c1a74148\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6d9cd857b7aec5885f41061ef7310dec3e5f8b33001e6cd446df9c9cabb7acf\",\"dweb:/ipfs/QmYYYaTX3hCaKwkdcowf6WrNeuwE3qyrxwkX4Y62PTWPvQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"LpUtils": {
					"abi": [
						{
							"inputs": [],
							"name": "BUSD",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WBNB",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract Router",
									"name": "routerAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "WBNBPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LpPrice.sol\":13649:15367  contract LpUtils {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/LpPrice.sol\":13728:13770  0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n  0xae13d989dac2f0debff460ac112a837c89baa7cd\n    /* \"contracts/LpPrice.sol\":13706:13770  address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/LpPrice.sol\":13799:13841  0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n  0x78867bbeef44f2326bf8ddd1941a4439382ef2a7\n    /* \"contracts/LpPrice.sol\":13777:13841  address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n  0x01\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/LpPrice.sol\":13865:13884  1000000000000000000 */\n  0x0de0b6b3a7640000\n    /* \"contracts/LpPrice.sol\":13848:13884  uint256 amount = 1000000000000000000 */\n  0x02\n  sstore\n    /* \"contracts/LpPrice.sol\":13649:15367  contract LpUtils {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LpPrice.sol\":13649:15367  contract LpUtils {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x303289bb\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x484f4ea9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8dd95002\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/LpPrice.sol\":14179:14436  function WBNBPrice(Router routerAddress, address token) external view returns(uint256){\r... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":13777:13841  address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":13706:13770  address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n    tag_5:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":14179:14436  function WBNBPrice(Router routerAddress, address token) external view returns(uint256){\r... */\n    tag_9:\n        /* \"contracts/LpPrice.sol\":14257:14264  uint256 */\n      0x00\n        /* \"contracts/LpPrice.sol\":14276:14297  address[] memory path */\n      dup1\n        /* \"contracts/LpPrice.sol\":14314:14315  2 */\n      0x02\n        /* \"contracts/LpPrice.sol\":14300:14316  new address[](2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_20\n      jumpi\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n    tag_20:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_23\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_23:\n      pop\n        /* \"contracts/LpPrice.sol\":14276:14316  address[] memory path = new address[](2) */\n      swap1\n      pop\n        /* \"contracts/LpPrice.sol\":14337:14342  token */\n      dup3\n        /* \"contracts/LpPrice.sol\":14327:14331  path */\n      dup2\n        /* \"contracts/LpPrice.sol\":14332:14333  0 */\n      0x00\n        /* \"contracts/LpPrice.sol\":14327:14334  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_24\n      jumpi\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n    tag_24:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/LpPrice.sol\":14327:14342  path[0] = token */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":14363:14367  BUSD */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LpPrice.sol\":14353:14357  path */\n      dup2\n        /* \"contracts/LpPrice.sol\":14358:14359  2 */\n      0x02\n        /* \"contracts/LpPrice.sol\":14353:14360  path[2] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_27\n      jumpi\n      tag_28\n      tag_26\n      jump\t// in\n    tag_28:\n    tag_27:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/LpPrice.sol\":14353:14367  path[2] = BUSD */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":14385:14398  routerAddress */\n      dup4\n        /* \"contracts/LpPrice.sol\":14385:14412  routerAddress.getAmountsOut */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd06ca61f\n        /* \"contracts/LpPrice.sol\":14413:14419  amount */\n      sload(0x02)\n        /* \"contracts/LpPrice.sol\":14420:14424  path */\n      dup4\n        /* \"contracts/LpPrice.sol\":14385:14425  routerAddress.getAmountsOut(amount,path) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_29\n      swap3\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_33\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_33:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n        /* \"contracts/LpPrice.sol\":14426:14427  1 */\n      0x01\n        /* \"contracts/LpPrice.sol\":14385:14428  routerAddress.getAmountsOut(amount,path)[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_36\n      jumpi\n      tag_37\n      tag_26\n      jump\t// in\n    tag_37:\n    tag_36:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/LpPrice.sol\":14378:14428  return routerAddress.getAmountsOut(amount,path)[1] */\n      swap2\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":14179:14436  function WBNBPrice(Router routerAddress, address token) external view returns(uint256){\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":13777:13841  address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n    tag_13:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":13706:13770  address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n    tag_17:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":24:768   */\n    tag_39:\n        /* \"#utility.yul\":131:136   */\n      0x00\n        /* \"#utility.yul\":156:237   */\n      tag_41\n        /* \"#utility.yul\":172:236   */\n      tag_42\n        /* \"#utility.yul\":229:235   */\n      dup5\n        /* \"#utility.yul\":172:236   */\n      tag_43\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":156:237   */\n      tag_44\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":147:237   */\n      swap1\n      pop\n        /* \"#utility.yul\":257:262   */\n      dup1\n        /* \"#utility.yul\":286:292   */\n      dup4\n        /* \"#utility.yul\":279:284   */\n      dup3\n        /* \"#utility.yul\":272:293   */\n      mstore\n        /* \"#utility.yul\":320:324   */\n      0x20\n        /* \"#utility.yul\":313:318   */\n      dup3\n        /* \"#utility.yul\":309:325   */\n      add\n        /* \"#utility.yul\":302:325   */\n      swap1\n      pop\n        /* \"#utility.yul\":346:352   */\n      dup3\n        /* \"#utility.yul\":396:399   */\n      dup6\n        /* \"#utility.yul\":388:392   */\n      0x20\n        /* \"#utility.yul\":380:386   */\n      dup7\n        /* \"#utility.yul\":376:393   */\n      mul\n        /* \"#utility.yul\":371:374   */\n      dup3\n        /* \"#utility.yul\":367:394   */\n      add\n        /* \"#utility.yul\":364:400   */\n      gt\n        /* \"#utility.yul\":361:504   */\n      iszero\n      tag_45\n      jumpi\n        /* \"#utility.yul\":415:494   */\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":361:504   */\n    tag_45:\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":513:762   */\n    tag_48:\n        /* \"#utility.yul\":538:544   */\n      dup6\n        /* \"#utility.yul\":535:536   */\n      dup2\n        /* \"#utility.yul\":532:545   */\n      lt\n        /* \"#utility.yul\":513:762   */\n      iszero\n      tag_50\n      jumpi\n        /* \"#utility.yul\":606:609   */\n      dup2\n        /* \"#utility.yul\":635:683   */\n      tag_51\n        /* \"#utility.yul\":679:682   */\n      dup9\n        /* \"#utility.yul\":667:677   */\n      dup3\n        /* \"#utility.yul\":635:683   */\n      tag_52\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":630:633   */\n      dup5\n        /* \"#utility.yul\":623:684   */\n      mstore\n        /* \"#utility.yul\":713:717   */\n      0x20\n        /* \"#utility.yul\":708:711   */\n      dup5\n        /* \"#utility.yul\":704:718   */\n      add\n        /* \"#utility.yul\":697:718   */\n      swap4\n      pop\n        /* \"#utility.yul\":747:751   */\n      0x20\n        /* \"#utility.yul\":742:745   */\n      dup4\n        /* \"#utility.yul\":738:752   */\n      add\n        /* \"#utility.yul\":731:752   */\n      swap3\n      pop\n        /* \"#utility.yul\":573:762   */\n      pop\n        /* \"#utility.yul\":560:561   */\n      0x01\n        /* \"#utility.yul\":557:558   */\n      dup2\n        /* \"#utility.yul\":553:562   */\n      add\n        /* \"#utility.yul\":548:562   */\n      swap1\n      pop\n        /* \"#utility.yul\":513:762   */\n      jump(tag_48)\n    tag_50:\n        /* \"#utility.yul\":517:531   */\n      pop\n        /* \"#utility.yul\":137:768   */\n      pop\n      pop\n        /* \"#utility.yul\":24:768   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":774:913   */\n    tag_53:\n        /* \"#utility.yul\":820:825   */\n      0x00\n        /* \"#utility.yul\":858:864   */\n      dup2\n        /* \"#utility.yul\":845:865   */\n      calldataload\n        /* \"#utility.yul\":836:865   */\n      swap1\n      pop\n        /* \"#utility.yul\":874:907   */\n      tag_55\n        /* \"#utility.yul\":901:906   */\n      dup2\n        /* \"#utility.yul\":874:907   */\n      tag_56\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":774:913   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":936:1321   */\n    tag_57:\n        /* \"#utility.yul\":1018:1023   */\n      0x00\n        /* \"#utility.yul\":1067:1070   */\n      dup3\n        /* \"#utility.yul\":1060:1064   */\n      0x1f\n        /* \"#utility.yul\":1052:1058   */\n      dup4\n        /* \"#utility.yul\":1048:1065   */\n      add\n        /* \"#utility.yul\":1044:1071   */\n      slt\n        /* \"#utility.yul\":1034:1156   */\n      tag_59\n      jumpi\n        /* \"#utility.yul\":1075:1154   */\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":1034:1156   */\n    tag_59:\n        /* \"#utility.yul\":1185:1191   */\n      dup2\n        /* \"#utility.yul\":1179:1192   */\n      mload\n        /* \"#utility.yul\":1210:1315   */\n      tag_62\n        /* \"#utility.yul\":1311:1314   */\n      dup5\n        /* \"#utility.yul\":1303:1309   */\n      dup3\n        /* \"#utility.yul\":1296:1300   */\n      0x20\n        /* \"#utility.yul\":1288:1294   */\n      dup7\n        /* \"#utility.yul\":1284:1301   */\n      add\n        /* \"#utility.yul\":1210:1315   */\n      tag_39\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1201:1315   */\n      swap2\n      pop\n        /* \"#utility.yul\":1024:1321   */\n      pop\n        /* \"#utility.yul\":936:1321   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1327:1494   */\n    tag_63:\n        /* \"#utility.yul\":1387:1392   */\n      0x00\n        /* \"#utility.yul\":1425:1431   */\n      dup2\n        /* \"#utility.yul\":1412:1432   */\n      calldataload\n        /* \"#utility.yul\":1403:1432   */\n      swap1\n      pop\n        /* \"#utility.yul\":1441:1488   */\n      tag_65\n        /* \"#utility.yul\":1482:1487   */\n      dup2\n        /* \"#utility.yul\":1441:1488   */\n      tag_66\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":1327:1494   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1500:1643   */\n    tag_52:\n        /* \"#utility.yul\":1557:1562   */\n      0x00\n        /* \"#utility.yul\":1588:1594   */\n      dup2\n        /* \"#utility.yul\":1582:1595   */\n      mload\n        /* \"#utility.yul\":1573:1595   */\n      swap1\n      pop\n        /* \"#utility.yul\":1604:1637   */\n      tag_68\n        /* \"#utility.yul\":1631:1636   */\n      dup2\n        /* \"#utility.yul\":1604:1637   */\n      tag_69\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1500:1643   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1649:2203   */\n    tag_35:\n        /* \"#utility.yul\":1744:1750   */\n      0x00\n        /* \"#utility.yul\":1793:1795   */\n      0x20\n        /* \"#utility.yul\":1781:1790   */\n      dup3\n        /* \"#utility.yul\":1772:1779   */\n      dup5\n        /* \"#utility.yul\":1768:1791   */\n      sub\n        /* \"#utility.yul\":1764:1796   */\n      slt\n        /* \"#utility.yul\":1761:1880   */\n      iszero\n      tag_71\n      jumpi\n        /* \"#utility.yul\":1799:1878   */\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":1761:1880   */\n    tag_71:\n        /* \"#utility.yul\":1940:1941   */\n      0x00\n        /* \"#utility.yul\":1929:1938   */\n      dup3\n        /* \"#utility.yul\":1925:1942   */\n      add\n        /* \"#utility.yul\":1919:1943   */\n      mload\n        /* \"#utility.yul\":1970:1988   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1962:1968   */\n      dup2\n        /* \"#utility.yul\":1959:1989   */\n      gt\n        /* \"#utility.yul\":1956:2073   */\n      iszero\n      tag_74\n      jumpi\n        /* \"#utility.yul\":1992:2071   */\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":1956:2073   */\n    tag_74:\n        /* \"#utility.yul\":2097:2186   */\n      tag_77\n        /* \"#utility.yul\":2178:2185   */\n      dup5\n        /* \"#utility.yul\":2169:2175   */\n      dup3\n        /* \"#utility.yul\":2158:2167   */\n      dup6\n        /* \"#utility.yul\":2154:2176   */\n      add\n        /* \"#utility.yul\":2097:2186   */\n      tag_57\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":2087:2186   */\n      swap2\n      pop\n        /* \"#utility.yul\":1890:2196   */\n      pop\n        /* \"#utility.yul\":1649:2203   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2209:2711   */\n    tag_8:\n        /* \"#utility.yul\":2291:2297   */\n      0x00\n        /* \"#utility.yul\":2299:2305   */\n      dup1\n        /* \"#utility.yul\":2348:2350   */\n      0x40\n        /* \"#utility.yul\":2336:2345   */\n      dup4\n        /* \"#utility.yul\":2327:2334   */\n      dup6\n        /* \"#utility.yul\":2323:2346   */\n      sub\n        /* \"#utility.yul\":2319:2351   */\n      slt\n        /* \"#utility.yul\":2316:2435   */\n      iszero\n      tag_79\n      jumpi\n        /* \"#utility.yul\":2354:2433   */\n      tag_80\n      tag_73\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":2316:2435   */\n    tag_79:\n        /* \"#utility.yul\":2474:2475   */\n      0x00\n        /* \"#utility.yul\":2499:2566   */\n      tag_81\n        /* \"#utility.yul\":2558:2565   */\n      dup6\n        /* \"#utility.yul\":2549:2555   */\n      dup3\n        /* \"#utility.yul\":2538:2547   */\n      dup7\n        /* \"#utility.yul\":2534:2556   */\n      add\n        /* \"#utility.yul\":2499:2566   */\n      tag_63\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":2489:2566   */\n      swap3\n      pop\n        /* \"#utility.yul\":2445:2576   */\n      pop\n        /* \"#utility.yul\":2615:2617   */\n      0x20\n        /* \"#utility.yul\":2641:2694   */\n      tag_82\n        /* \"#utility.yul\":2686:2693   */\n      dup6\n        /* \"#utility.yul\":2677:2683   */\n      dup3\n        /* \"#utility.yul\":2666:2675   */\n      dup7\n        /* \"#utility.yul\":2662:2684   */\n      add\n        /* \"#utility.yul\":2641:2694   */\n      tag_53\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":2631:2694   */\n      swap2\n      pop\n        /* \"#utility.yul\":2586:2704   */\n      pop\n        /* \"#utility.yul\":2209:2711   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2717:2896   */\n    tag_83:\n        /* \"#utility.yul\":2786:2796   */\n      0x00\n        /* \"#utility.yul\":2807:2853   */\n      tag_85\n        /* \"#utility.yul\":2849:2852   */\n      dup4\n        /* \"#utility.yul\":2841:2847   */\n      dup4\n        /* \"#utility.yul\":2807:2853   */\n      tag_86\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":2885:2889   */\n      0x20\n        /* \"#utility.yul\":2880:2883   */\n      dup4\n        /* \"#utility.yul\":2876:2890   */\n      add\n        /* \"#utility.yul\":2862:2890   */\n      swap1\n      pop\n        /* \"#utility.yul\":2717:2896   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2902:3010   */\n    tag_86:\n        /* \"#utility.yul\":2979:3003   */\n      tag_88\n        /* \"#utility.yul\":2997:3002   */\n      dup2\n        /* \"#utility.yul\":2979:3003   */\n      tag_89\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":2974:2977   */\n      dup3\n        /* \"#utility.yul\":2967:3004   */\n      mstore\n        /* \"#utility.yul\":2902:3010   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3016:3134   */\n    tag_90:\n        /* \"#utility.yul\":3103:3127   */\n      tag_92\n        /* \"#utility.yul\":3121:3126   */\n      dup2\n        /* \"#utility.yul\":3103:3127   */\n      tag_89\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":3098:3101   */\n      dup3\n        /* \"#utility.yul\":3091:3128   */\n      mstore\n        /* \"#utility.yul\":3016:3134   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3170:3902   */\n    tag_93:\n        /* \"#utility.yul\":3289:3292   */\n      0x00\n        /* \"#utility.yul\":3318:3372   */\n      tag_95\n        /* \"#utility.yul\":3366:3371   */\n      dup3\n        /* \"#utility.yul\":3318:3372   */\n      tag_96\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":3388:3474   */\n      tag_97\n        /* \"#utility.yul\":3467:3473   */\n      dup2\n        /* \"#utility.yul\":3462:3465   */\n      dup6\n        /* \"#utility.yul\":3388:3474   */\n      tag_98\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":3381:3474   */\n      swap4\n      pop\n        /* \"#utility.yul\":3498:3554   */\n      tag_99\n        /* \"#utility.yul\":3548:3553   */\n      dup4\n        /* \"#utility.yul\":3498:3554   */\n      tag_100\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":3577:3584   */\n      dup1\n        /* \"#utility.yul\":3608:3609   */\n      0x00\n        /* \"#utility.yul\":3593:3877   */\n    tag_101:\n        /* \"#utility.yul\":3618:3624   */\n      dup4\n        /* \"#utility.yul\":3615:3616   */\n      dup2\n        /* \"#utility.yul\":3612:3625   */\n      lt\n        /* \"#utility.yul\":3593:3877   */\n      iszero\n      tag_103\n      jumpi\n        /* \"#utility.yul\":3694:3700   */\n      dup2\n        /* \"#utility.yul\":3688:3701   */\n      mload\n        /* \"#utility.yul\":3721:3784   */\n      tag_104\n        /* \"#utility.yul\":3780:3783   */\n      dup9\n        /* \"#utility.yul\":3765:3778   */\n      dup3\n        /* \"#utility.yul\":3721:3784   */\n      tag_83\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":3714:3784   */\n      swap8\n      pop\n        /* \"#utility.yul\":3807:3867   */\n      tag_105\n        /* \"#utility.yul\":3860:3866   */\n      dup4\n        /* \"#utility.yul\":3807:3867   */\n      tag_106\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":3797:3867   */\n      swap3\n      pop\n        /* \"#utility.yul\":3653:3877   */\n      pop\n        /* \"#utility.yul\":3640:3641   */\n      0x01\n        /* \"#utility.yul\":3637:3638   */\n      dup2\n        /* \"#utility.yul\":3633:3642   */\n      add\n        /* \"#utility.yul\":3628:3642   */\n      swap1\n      pop\n        /* \"#utility.yul\":3593:3877   */\n      jump(tag_101)\n    tag_103:\n        /* \"#utility.yul\":3597:3611   */\n      pop\n        /* \"#utility.yul\":3893:3896   */\n      dup6\n        /* \"#utility.yul\":3886:3896   */\n      swap4\n      pop\n        /* \"#utility.yul\":3294:3902   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3170:3902   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3908:4026   */\n    tag_107:\n        /* \"#utility.yul\":3995:4019   */\n      tag_109\n        /* \"#utility.yul\":4013:4018   */\n      dup2\n        /* \"#utility.yul\":3995:4019   */\n      tag_110\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":3990:3993   */\n      dup3\n        /* \"#utility.yul\":3983:4020   */\n      mstore\n        /* \"#utility.yul\":3908:4026   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4032:4254   */\n    tag_15:\n        /* \"#utility.yul\":4125:4129   */\n      0x00\n        /* \"#utility.yul\":4163:4165   */\n      0x20\n        /* \"#utility.yul\":4152:4161   */\n      dup3\n        /* \"#utility.yul\":4148:4166   */\n      add\n        /* \"#utility.yul\":4140:4166   */\n      swap1\n      pop\n        /* \"#utility.yul\":4176:4247   */\n      tag_112\n        /* \"#utility.yul\":4244:4245   */\n      0x00\n        /* \"#utility.yul\":4233:4242   */\n      dup4\n        /* \"#utility.yul\":4229:4246   */\n      add\n        /* \"#utility.yul\":4220:4226   */\n      dup5\n        /* \"#utility.yul\":4176:4247   */\n      tag_90\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":4032:4254   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4260:4482   */\n    tag_11:\n        /* \"#utility.yul\":4353:4357   */\n      0x00\n        /* \"#utility.yul\":4391:4393   */\n      0x20\n        /* \"#utility.yul\":4380:4389   */\n      dup3\n        /* \"#utility.yul\":4376:4394   */\n      add\n        /* \"#utility.yul\":4368:4394   */\n      swap1\n      pop\n        /* \"#utility.yul\":4404:4475   */\n      tag_114\n        /* \"#utility.yul\":4472:4473   */\n      0x00\n        /* \"#utility.yul\":4461:4470   */\n      dup4\n        /* \"#utility.yul\":4457:4474   */\n      add\n        /* \"#utility.yul\":4448:4454   */\n      dup5\n        /* \"#utility.yul\":4404:4475   */\n      tag_107\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":4260:4482   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4488:4971   */\n    tag_30:\n        /* \"#utility.yul\":4659:4663   */\n      0x00\n        /* \"#utility.yul\":4697:4699   */\n      0x40\n        /* \"#utility.yul\":4686:4695   */\n      dup3\n        /* \"#utility.yul\":4682:4700   */\n      add\n        /* \"#utility.yul\":4674:4700   */\n      swap1\n      pop\n        /* \"#utility.yul\":4710:4781   */\n      tag_116\n        /* \"#utility.yul\":4778:4779   */\n      0x00\n        /* \"#utility.yul\":4767:4776   */\n      dup4\n        /* \"#utility.yul\":4763:4780   */\n      add\n        /* \"#utility.yul\":4754:4760   */\n      dup6\n        /* \"#utility.yul\":4710:4781   */\n      tag_107\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":4828:4837   */\n      dup2\n        /* \"#utility.yul\":4822:4826   */\n      dup2\n        /* \"#utility.yul\":4818:4838   */\n      sub\n        /* \"#utility.yul\":4813:4815   */\n      0x20\n        /* \"#utility.yul\":4802:4811   */\n      dup4\n        /* \"#utility.yul\":4798:4816   */\n      add\n        /* \"#utility.yul\":4791:4839   */\n      mstore\n        /* \"#utility.yul\":4856:4964   */\n      tag_117\n        /* \"#utility.yul\":4959:4963   */\n      dup2\n        /* \"#utility.yul\":4950:4956   */\n      dup5\n        /* \"#utility.yul\":4856:4964   */\n      tag_93\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":4848:4964   */\n      swap1\n      pop\n        /* \"#utility.yul\":4488:4971   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4977:5106   */\n    tag_44:\n        /* \"#utility.yul\":5011:5017   */\n      0x00\n        /* \"#utility.yul\":5038:5058   */\n      tag_119\n      tag_120\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":5028:5058   */\n      swap1\n      pop\n        /* \"#utility.yul\":5067:5100   */\n      tag_121\n        /* \"#utility.yul\":5095:5099   */\n      dup3\n        /* \"#utility.yul\":5087:5093   */\n      dup3\n        /* \"#utility.yul\":5067:5100   */\n      tag_122\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":4977:5106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5112:5187   */\n    tag_120:\n        /* \"#utility.yul\":5145:5151   */\n      0x00\n        /* \"#utility.yul\":5178:5180   */\n      0x40\n        /* \"#utility.yul\":5172:5181   */\n      mload\n        /* \"#utility.yul\":5162:5181   */\n      swap1\n      pop\n        /* \"#utility.yul\":5112:5187   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":5193:5504   */\n    tag_43:\n        /* \"#utility.yul\":5270:5274   */\n      0x00\n        /* \"#utility.yul\":5360:5378   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5352:5358   */\n      dup3\n        /* \"#utility.yul\":5349:5379   */\n      gt\n        /* \"#utility.yul\":5346:5402   */\n      iszero\n      tag_125\n      jumpi\n        /* \"#utility.yul\":5382:5400   */\n      tag_126\n      tag_22\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":5346:5402   */\n    tag_125:\n        /* \"#utility.yul\":5432:5436   */\n      0x20\n        /* \"#utility.yul\":5424:5430   */\n      dup3\n        /* \"#utility.yul\":5420:5437   */\n      mul\n        /* \"#utility.yul\":5412:5437   */\n      swap1\n      pop\n        /* \"#utility.yul\":5492:5496   */\n      0x20\n        /* \"#utility.yul\":5486:5490   */\n      dup2\n        /* \"#utility.yul\":5482:5497   */\n      add\n        /* \"#utility.yul\":5474:5497   */\n      swap1\n      pop\n        /* \"#utility.yul\":5193:5504   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5510:5642   */\n    tag_100:\n        /* \"#utility.yul\":5577:5581   */\n      0x00\n        /* \"#utility.yul\":5600:5603   */\n      dup2\n        /* \"#utility.yul\":5592:5603   */\n      swap1\n      pop\n        /* \"#utility.yul\":5630:5634   */\n      0x20\n        /* \"#utility.yul\":5625:5628   */\n      dup3\n        /* \"#utility.yul\":5621:5635   */\n      add\n        /* \"#utility.yul\":5613:5635   */\n      swap1\n      pop\n        /* \"#utility.yul\":5510:5642   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5648:5762   */\n    tag_96:\n        /* \"#utility.yul\":5715:5721   */\n      0x00\n        /* \"#utility.yul\":5749:5754   */\n      dup2\n        /* \"#utility.yul\":5743:5755   */\n      mload\n        /* \"#utility.yul\":5733:5755   */\n      swap1\n      pop\n        /* \"#utility.yul\":5648:5762   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5768:5881   */\n    tag_106:\n        /* \"#utility.yul\":5838:5842   */\n      0x00\n        /* \"#utility.yul\":5870:5874   */\n      0x20\n        /* \"#utility.yul\":5865:5868   */\n      dup3\n        /* \"#utility.yul\":5861:5875   */\n      add\n        /* \"#utility.yul\":5853:5875   */\n      swap1\n      pop\n        /* \"#utility.yul\":5768:5881   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5887:6071   */\n    tag_98:\n        /* \"#utility.yul\":5986:5997   */\n      0x00\n        /* \"#utility.yul\":6020:6026   */\n      dup3\n        /* \"#utility.yul\":6015:6018   */\n      dup3\n        /* \"#utility.yul\":6008:6027   */\n      mstore\n        /* \"#utility.yul\":6060:6064   */\n      0x20\n        /* \"#utility.yul\":6055:6058   */\n      dup3\n        /* \"#utility.yul\":6051:6065   */\n      add\n        /* \"#utility.yul\":6036:6065   */\n      swap1\n      pop\n        /* \"#utility.yul\":5887:6071   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6077:6173   */\n    tag_89:\n        /* \"#utility.yul\":6114:6121   */\n      0x00\n        /* \"#utility.yul\":6143:6167   */\n      tag_132\n        /* \"#utility.yul\":6161:6166   */\n      dup3\n        /* \"#utility.yul\":6143:6167   */\n      tag_133\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":6132:6167   */\n      swap1\n      pop\n        /* \"#utility.yul\":6077:6173   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6179:6289   */\n    tag_134:\n        /* \"#utility.yul\":6230:6237   */\n      0x00\n        /* \"#utility.yul\":6259:6283   */\n      tag_136\n        /* \"#utility.yul\":6277:6282   */\n      dup3\n        /* \"#utility.yul\":6259:6283   */\n      tag_89\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":6248:6283   */\n      swap1\n      pop\n        /* \"#utility.yul\":6179:6289   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6295:6421   */\n    tag_133:\n        /* \"#utility.yul\":6332:6339   */\n      0x00\n        /* \"#utility.yul\":6372:6414   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6365:6370   */\n      dup3\n        /* \"#utility.yul\":6361:6415   */\n      and\n        /* \"#utility.yul\":6350:6415   */\n      swap1\n      pop\n        /* \"#utility.yul\":6295:6421   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6427:6504   */\n    tag_110:\n        /* \"#utility.yul\":6464:6471   */\n      0x00\n        /* \"#utility.yul\":6493:6498   */\n      dup2\n        /* \"#utility.yul\":6482:6498   */\n      swap1\n      pop\n        /* \"#utility.yul\":6427:6504   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6510:6791   */\n    tag_122:\n        /* \"#utility.yul\":6593:6620   */\n      tag_140\n        /* \"#utility.yul\":6615:6619   */\n      dup3\n        /* \"#utility.yul\":6593:6620   */\n      tag_141\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":6585:6591   */\n      dup2\n        /* \"#utility.yul\":6581:6621   */\n      add\n        /* \"#utility.yul\":6723:6729   */\n      dup2\n        /* \"#utility.yul\":6711:6721   */\n      dup2\n        /* \"#utility.yul\":6708:6730   */\n      lt\n        /* \"#utility.yul\":6687:6705   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6675:6685   */\n      dup3\n        /* \"#utility.yul\":6672:6706   */\n      gt\n        /* \"#utility.yul\":6669:6731   */\n      or\n        /* \"#utility.yul\":6666:6754   */\n      iszero\n      tag_142\n      jumpi\n        /* \"#utility.yul\":6734:6752   */\n      tag_143\n      tag_22\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":6666:6754   */\n    tag_142:\n        /* \"#utility.yul\":6774:6784   */\n      dup1\n        /* \"#utility.yul\":6770:6772   */\n      0x40\n        /* \"#utility.yul\":6763:6785   */\n      mstore\n        /* \"#utility.yul\":6553:6791   */\n      pop\n        /* \"#utility.yul\":6510:6791   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6797:6977   */\n    tag_26:\n        /* \"#utility.yul\":6845:6922   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6842:6843   */\n      0x00\n        /* \"#utility.yul\":6835:6923   */\n      mstore\n        /* \"#utility.yul\":6942:6946   */\n      0x32\n        /* \"#utility.yul\":6939:6940   */\n      0x04\n        /* \"#utility.yul\":6932:6947   */\n      mstore\n        /* \"#utility.yul\":6966:6970   */\n      0x24\n        /* \"#utility.yul\":6963:6964   */\n      0x00\n        /* \"#utility.yul\":6956:6971   */\n      revert\n        /* \"#utility.yul\":6983:7163   */\n    tag_22:\n        /* \"#utility.yul\":7031:7108   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7028:7029   */\n      0x00\n        /* \"#utility.yul\":7021:7109   */\n      mstore\n        /* \"#utility.yul\":7128:7132   */\n      0x41\n        /* \"#utility.yul\":7125:7126   */\n      0x04\n        /* \"#utility.yul\":7118:7133   */\n      mstore\n        /* \"#utility.yul\":7152:7156   */\n      0x24\n        /* \"#utility.yul\":7149:7150   */\n      0x00\n        /* \"#utility.yul\":7142:7157   */\n      revert\n        /* \"#utility.yul\":7169:7286   */\n    tag_61:\n        /* \"#utility.yul\":7278:7279   */\n      0x00\n        /* \"#utility.yul\":7275:7276   */\n      dup1\n        /* \"#utility.yul\":7268:7280   */\n      revert\n        /* \"#utility.yul\":7292:7409   */\n    tag_47:\n        /* \"#utility.yul\":7401:7402   */\n      0x00\n        /* \"#utility.yul\":7398:7399   */\n      dup1\n        /* \"#utility.yul\":7391:7403   */\n      revert\n        /* \"#utility.yul\":7415:7532   */\n    tag_76:\n        /* \"#utility.yul\":7524:7525   */\n      0x00\n        /* \"#utility.yul\":7521:7522   */\n      dup1\n        /* \"#utility.yul\":7514:7526   */\n      revert\n        /* \"#utility.yul\":7538:7655   */\n    tag_73:\n        /* \"#utility.yul\":7647:7648   */\n      0x00\n        /* \"#utility.yul\":7644:7645   */\n      dup1\n        /* \"#utility.yul\":7637:7649   */\n      revert\n        /* \"#utility.yul\":7661:7763   */\n    tag_141:\n        /* \"#utility.yul\":7702:7708   */\n      0x00\n        /* \"#utility.yul\":7753:7755   */\n      0x1f\n        /* \"#utility.yul\":7749:7756   */\n      not\n        /* \"#utility.yul\":7744:7746   */\n      0x1f\n        /* \"#utility.yul\":7737:7742   */\n      dup4\n        /* \"#utility.yul\":7733:7747   */\n      add\n        /* \"#utility.yul\":7729:7757   */\n      and\n        /* \"#utility.yul\":7719:7757   */\n      swap1\n      pop\n        /* \"#utility.yul\":7661:7763   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7769:7891   */\n    tag_56:\n        /* \"#utility.yul\":7842:7866   */\n      tag_152\n        /* \"#utility.yul\":7860:7865   */\n      dup2\n        /* \"#utility.yul\":7842:7866   */\n      tag_89\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":7835:7840   */\n      dup2\n        /* \"#utility.yul\":7832:7867   */\n      eq\n        /* \"#utility.yul\":7822:7885   */\n      tag_153\n      jumpi\n        /* \"#utility.yul\":7881:7882   */\n      0x00\n        /* \"#utility.yul\":7878:7879   */\n      dup1\n        /* \"#utility.yul\":7871:7883   */\n      revert\n        /* \"#utility.yul\":7822:7885   */\n    tag_153:\n        /* \"#utility.yul\":7769:7891   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7897:8047   */\n    tag_66:\n        /* \"#utility.yul\":7984:8022   */\n      tag_155\n        /* \"#utility.yul\":8016:8021   */\n      dup2\n        /* \"#utility.yul\":7984:8022   */\n      tag_134\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":7977:7982   */\n      dup2\n        /* \"#utility.yul\":7974:8023   */\n      eq\n        /* \"#utility.yul\":7964:8041   */\n      tag_156\n      jumpi\n        /* \"#utility.yul\":8037:8038   */\n      0x00\n        /* \"#utility.yul\":8034:8035   */\n      dup1\n        /* \"#utility.yul\":8027:8039   */\n      revert\n        /* \"#utility.yul\":7964:8041   */\n    tag_156:\n        /* \"#utility.yul\":7897:8047   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8053:8175   */\n    tag_69:\n        /* \"#utility.yul\":8126:8150   */\n      tag_158\n        /* \"#utility.yul\":8144:8149   */\n      dup2\n        /* \"#utility.yul\":8126:8150   */\n      tag_110\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":8119:8124   */\n      dup2\n        /* \"#utility.yul\":8116:8151   */\n      eq\n        /* \"#utility.yul\":8106:8169   */\n      tag_159\n      jumpi\n        /* \"#utility.yul\":8165:8166   */\n      0x00\n        /* \"#utility.yul\":8162:8163   */\n      dup1\n        /* \"#utility.yul\":8155:8167   */\n      revert\n        /* \"#utility.yul\":8106:8169   */\n    tag_159:\n        /* \"#utility.yul\":8053:8175   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203a79314ee275f85e1cf618e352c5e92c4d9e7815c9cfb0962f4d5da7c77dd61c64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405273ae13d989dac2f0debff460ac112a837c89baa7cd6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507378867bbeef44f2326bf8ddd1941a4439382ef2a7600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550670de0b6b3a76400006002553480156100c557600080fd5b50610737806100d56000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063303289bb14610046578063484f4ea9146100765780638dd9500214610094575b600080fd5b610060600480360381019061005b91906103e7565b6100b2565b60405161006d91906104e5565b60405180910390f35b61007e610277565b60405161008b91906104ca565b60405180910390f35b61009c61029d565b6040516100a991906104ca565b60405180910390f35b600080600267ffffffffffffffff8111156100d0576100cf610668565b5b6040519080825280602002602001820160405280156100fe5781602001602082028036833780820191505090505b509050828160008151811061011657610115610639565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160028151811061018757610186610639565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508373ffffffffffffffffffffffffffffffffffffffff1663d06ca61f600254836040518363ffffffff1660e01b81526004016101fe929190610500565b60006040518083038186803b15801561021657600080fd5b505afa15801561022a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610253919061039e565b60018151811061026657610265610639565b5b602002602001015191505092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006102d46102cf84610555565b610530565b905080838252602082019050828560208602820111156102f7576102f661069c565b5b60005b85811015610327578161030d8882610389565b8452602084019350602083019250506001810190506102fa565b5050509392505050565b600081359050610340816106bc565b92915050565b600082601f83011261035b5761035a610697565b5b815161036b8482602086016102c1565b91505092915050565b600081359050610383816106d3565b92915050565b600081519050610398816106ea565b92915050565b6000602082840312156103b4576103b36106a6565b5b600082015167ffffffffffffffff8111156103d2576103d16106a1565b5b6103de84828501610346565b91505092915050565b600080604083850312156103fe576103fd6106a6565b5b600061040c85828601610374565b925050602061041d85828601610331565b9150509250929050565b6000610433838361043f565b60208301905092915050565b610448816105ba565b82525050565b610457816105ba565b82525050565b600061046882610591565b61047281856105a9565b935061047d83610581565b8060005b838110156104ae5781516104958882610427565b97506104a08361059c565b925050600181019050610481565b5085935050505092915050565b6104c4816105fe565b82525050565b60006020820190506104df600083018461044e565b92915050565b60006020820190506104fa60008301846104bb565b92915050565b600060408201905061051560008301856104bb565b8181036020830152610527818461045d565b90509392505050565b600061053a61054b565b90506105468282610608565b919050565b6000604051905090565b600067ffffffffffffffff8211156105705761056f610668565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b60006105c5826105de565b9050919050565b60006105d7826105ba565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b610611826106ab565b810181811067ffffffffffffffff821117156106305761062f610668565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6106c5816105ba565b81146106d057600080fd5b50565b6106dc816105cc565b81146106e757600080fd5b50565b6106f3816105fe565b81146106fe57600080fd5b5056fea26469706673582212203a79314ee275f85e1cf618e352c5e92c4d9e7815c9cfb0962f4d5da7c77dd61c64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0xAE13D989DAC2F0DEBFF460AC112A837C89BAA7CD PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x78867BBEEF44F2326BF8DDD1941A4439382EF2A7 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0xC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x737 DUP1 PUSH2 0xD5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x303289BB EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x484F4EA9 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0x8DD95002 EQ PUSH2 0x94 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x3E7 JUMP JUMPDEST PUSH2 0xB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x4E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0x277 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x4CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH2 0x29D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x4CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD0 JUMPI PUSH2 0xCF PUSH2 0x668 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xFE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x116 JUMPI PUSH2 0x115 PUSH2 0x639 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x187 JUMPI PUSH2 0x186 PUSH2 0x639 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD06CA61F PUSH1 0x2 SLOAD DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FE SWAP3 SWAP2 SWAP1 PUSH2 0x500 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x22A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x39E JUMP JUMPDEST PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x266 JUMPI PUSH2 0x265 PUSH2 0x639 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D4 PUSH2 0x2CF DUP5 PUSH2 0x555 JUMP JUMPDEST PUSH2 0x530 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x2F7 JUMPI PUSH2 0x2F6 PUSH2 0x69C JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x327 JUMPI DUP2 PUSH2 0x30D DUP9 DUP3 PUSH2 0x389 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2FA JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x340 DUP2 PUSH2 0x6BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x35B JUMPI PUSH2 0x35A PUSH2 0x697 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x36B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x383 DUP2 PUSH2 0x6D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x398 DUP2 PUSH2 0x6EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B4 JUMPI PUSH2 0x3B3 PUSH2 0x6A6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D2 JUMPI PUSH2 0x3D1 PUSH2 0x6A1 JUMP JUMPDEST JUMPDEST PUSH2 0x3DE DUP5 DUP3 DUP6 ADD PUSH2 0x346 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3FE JUMPI PUSH2 0x3FD PUSH2 0x6A6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x40C DUP6 DUP3 DUP7 ADD PUSH2 0x374 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x41D DUP6 DUP3 DUP7 ADD PUSH2 0x331 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x433 DUP4 DUP4 PUSH2 0x43F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x448 DUP2 PUSH2 0x5BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x457 DUP2 PUSH2 0x5BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x468 DUP3 PUSH2 0x591 JUMP JUMPDEST PUSH2 0x472 DUP2 DUP6 PUSH2 0x5A9 JUMP JUMPDEST SWAP4 POP PUSH2 0x47D DUP4 PUSH2 0x581 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4AE JUMPI DUP2 MLOAD PUSH2 0x495 DUP9 DUP3 PUSH2 0x427 JUMP JUMPDEST SWAP8 POP PUSH2 0x4A0 DUP4 PUSH2 0x59C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x481 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4C4 DUP2 PUSH2 0x5FE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4DF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x44E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4FA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x515 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4BB JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x527 DUP2 DUP5 PUSH2 0x45D JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53A PUSH2 0x54B JUMP JUMPDEST SWAP1 POP PUSH2 0x546 DUP3 DUP3 PUSH2 0x608 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x570 JUMPI PUSH2 0x56F PUSH2 0x668 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C5 DUP3 PUSH2 0x5DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D7 DUP3 PUSH2 0x5BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x611 DUP3 PUSH2 0x6AB JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x630 JUMPI PUSH2 0x62F PUSH2 0x668 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6C5 DUP2 PUSH2 0x5BA JUMP JUMPDEST DUP2 EQ PUSH2 0x6D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x6DC DUP2 PUSH2 0x5CC JUMP JUMPDEST DUP2 EQ PUSH2 0x6E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x6F3 DUP2 PUSH2 0x5FE JUMP JUMPDEST DUP2 EQ PUSH2 0x6FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE PUSH26 0x314EE275F85E1CF618E352C5E92C4D9E7815C9CFB0962F4D5DA7 0xC7 PUSH30 0xD61C64736F6C634300080700330000000000000000000000000000000000 ",
							"sourceMap": "13649:1718:0:-:0;;;13728:42;13706:64;;;;;;;;;;;;;;;;;;;;13799:42;13777:64;;;;;;;;;;;;;;;;;;;;13865:19;13848:36;;13649:1718;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BUSD_533": {
									"entryPoint": 631,
									"id": 533,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@WBNBPrice_626": {
									"entryPoint": 178,
									"id": 626,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@WBNB_530": {
									"entryPoint": 669,
									"id": 530,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 705,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 817,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 838,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_Router_$524": {
									"entryPoint": 884,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 926,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_Router_$524t_address": {
									"entryPoint": 999,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 1063,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 1087,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 1117,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1226,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 1280,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1355,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1365,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 1409,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 1425,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 1436,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 1449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1466,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_Router_$524": {
									"entryPoint": 1484,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1502,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1534,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1544,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 1593,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1640,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1687,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 1692,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1697,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1702,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1707,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 1724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_Router_$524": {
									"entryPoint": 1747,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1770,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8178:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "137:631:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "147:90:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "229:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "172:56:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "172:64:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "156:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "156:81:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "147:5:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "246:16:1",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "257:5:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "250:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "286:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "272:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "272:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "272:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "302:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "313:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "309:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "309:16:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "302:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "335:17:1",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "346:6:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "339:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "401:103:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "415:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "415:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "415:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "371:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "380:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "388:4:1",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "376:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "376:17:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "367:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "367:27:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "396:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "364:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "364:36:1"
															},
															"nodeType": "YulIf",
															"src": "361:143:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "573:189:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "588:21:1",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "606:3:1"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "592:10:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "630:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "667:10:1"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "679:3:1"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256_fromMemory",
																						"nodeType": "YulIdentifier",
																						"src": "635:31:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "635:48:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "623:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "623:61:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "623:61:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "697:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "713:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "704:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "704:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "697:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "731:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "742:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "738:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "738:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "731:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "535:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "538:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "532:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "546:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "548:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "557:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "560:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "553:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "553:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "548:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "517:14:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "519:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "528:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "523:1:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "513:249:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "107:6:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "123:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "131:5:1",
														"type": ""
													}
												],
												"src": "24:744:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "826:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "836:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "858:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "845:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "836:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "901:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "874:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "874:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "874:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "804:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "812:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "820:5:1",
														"type": ""
													}
												],
												"src": "774:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1024:297:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1073:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "1075:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1075:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1075:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1052:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1060:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1048:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1048:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1067:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1044:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1044:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1037:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1037:35:1"
															},
															"nodeType": "YulIf",
															"src": "1034:122:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1165:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1185:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1179:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1179:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1169:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1201:114:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1288:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1296:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1284:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1284:17:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1303:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1311:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1210:73:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1210:105:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1201:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1002:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1010:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1018:5:1",
														"type": ""
													}
												],
												"src": "936:385:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1393:101:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1403:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1425:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1412:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1403:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1482:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_Router_$524",
																	"nodeType": "YulIdentifier",
																	"src": "1441:40:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1441:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1441:47:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_Router_$524",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1371:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1379:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1387:5:1",
														"type": ""
													}
												],
												"src": "1327:167:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1563:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1573:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1588:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1582:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1573:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1631:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1604:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1604:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1604:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1541:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1549:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1557:5:1",
														"type": ""
													}
												],
												"src": "1500:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1751:452:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1797:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1799:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1799:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1799:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1772:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1781:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1768:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1768:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1793:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1764:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1764:32:1"
															},
															"nodeType": "YulIf",
															"src": "1761:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1890:306:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1905:38:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1929:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1940:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1925:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1925:17:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1919:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1919:24:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1909:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1990:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1992:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1992:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1992:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1962:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1970:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1959:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1959:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "1956:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2087:99:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2158:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2169:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2154:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2154:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2178:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2097:56:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2097:89:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2087:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1721:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1732:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1744:6:1",
														"type": ""
													}
												],
												"src": "1649:554:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2306:405:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2352:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2354:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2354:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2354:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2327:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2336:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2323:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2323:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2348:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2319:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2319:32:1"
															},
															"nodeType": "YulIf",
															"src": "2316:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2445:131:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2460:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2474:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2464:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2489:77:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2538:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2549:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2534:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2534:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2558:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_Router_$524",
																			"nodeType": "YulIdentifier",
																			"src": "2499:34:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2499:67:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2489:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2586:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2601:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2615:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2605:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2631:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2666:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2677:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2662:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2662:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2686:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2641:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2641:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2631:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_Router_$524t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2268:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2279:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2291:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2299:6:1",
														"type": ""
													}
												],
												"src": "2209:502:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2797:99:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2841:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2849:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2807:33:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2807:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2807:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2862:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2880:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2885:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2876:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2876:14:1"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "2862:10:1"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2770:6:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2778:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "2786:10:1",
														"type": ""
													}
												],
												"src": "2717:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2957:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2974:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2997:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2979:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2979:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2967:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2967:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2967:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2945:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2952:3:1",
														"type": ""
													}
												],
												"src": "2902:108:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3081:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3098:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3121:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3103:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3103:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3091:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3091:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3091:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3069:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3076:3:1",
														"type": ""
													}
												],
												"src": "3016:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3294:608:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3304:68:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3366:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3318:47:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3318:54:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3308:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3381:93:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3462:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3467:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3388:73:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3388:86:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3381:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3483:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3548:5:1"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3498:49:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3498:56:1"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "3487:7:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3563:21:1",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "3577:7:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "3567:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3653:224:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3667:34:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "3694:6:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "3688:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3688:13:1"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "3671:13:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3714:70:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "3765:13:1"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "3780:3:1"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nodeType": "YulIdentifier",
																				"src": "3721:43:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3721:63:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3714:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3797:70:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "3860:6:1"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3807:52:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3807:60:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3797:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3615:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3618:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3612:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3612:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3626:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3628:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3637:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3640:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3633:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3633:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3628:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3597:14:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3599:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "3608:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "3603:1:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "3593:284:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3886:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "3893:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3886:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3273:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3280:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3289:3:1",
														"type": ""
													}
												],
												"src": "3170:732:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3973:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3990:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4013:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3995:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3995:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3983:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3983:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3983:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3961:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3968:3:1",
														"type": ""
													}
												],
												"src": "3908:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4130:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4140:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4152:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4163:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4148:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4148:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4140:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4220:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4233:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4244:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4229:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4229:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4176:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4176:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4176:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4102:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4114:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4125:4:1",
														"type": ""
													}
												],
												"src": "4032:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4358:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4368:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4380:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4391:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4376:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4376:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4368:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4448:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4461:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4472:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4457:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4457:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4404:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4404:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4404:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4330:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4342:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4353:4:1",
														"type": ""
													}
												],
												"src": "4260:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4664:307:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4674:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4686:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4697:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4682:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4682:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4674:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4754:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4767:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4778:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4763:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4763:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4710:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4710:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4710:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4802:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4813:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4798:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4798:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4822:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4828:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4818:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4818:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4791:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4791:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4791:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4848:116:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4950:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4959:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4856:93:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4856:108:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4848:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4628:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4640:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4648:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4659:4:1",
														"type": ""
													}
												],
												"src": "4488:483:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5018:88:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5028:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "5038:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5038:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "5028:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5087:6:1"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "5095:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "5067:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5067:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5067:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5002:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5011:6:1",
														"type": ""
													}
												],
												"src": "4977:129:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5152:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5162:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5178:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5172:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5172:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "5162:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5145:6:1",
														"type": ""
													}
												],
												"src": "5112:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5275:229:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5380:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5382:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5382:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5382:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5352:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5360:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5349:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5349:30:1"
															},
															"nodeType": "YulIf",
															"src": "5346:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5412:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5424:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5432:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5420:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5420:17:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5412:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5474:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "5486:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5492:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5482:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5482:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5474:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5259:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5270:4:1",
														"type": ""
													}
												],
												"src": "5193:311:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5582:60:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5592:11:1",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "5600:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "5592:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5613:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "5625:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5630:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5621:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5621:14:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "5613:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "5569:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5577:4:1",
														"type": ""
													}
												],
												"src": "5510:132:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5722:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5733:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5749:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5743:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5743:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5733:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5705:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5715:6:1",
														"type": ""
													}
												],
												"src": "5648:114:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5843:38:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5853:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "5865:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5870:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5861:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5861:14:1"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "5853:4:1"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "5830:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "5838:4:1",
														"type": ""
													}
												],
												"src": "5768:113:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5998:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6015:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6020:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6008:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6008:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6008:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6036:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6055:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6060:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6051:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6051:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "6036:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5970:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5975:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5986:11:1",
														"type": ""
													}
												],
												"src": "5887:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6122:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6132:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6161:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6143:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6143:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6132:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6104:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6114:7:1",
														"type": ""
													}
												],
												"src": "6077:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6238:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6248:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6277:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "6259:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6259:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6248:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_Router_$524",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6220:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6230:7:1",
														"type": ""
													}
												],
												"src": "6179:110:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6340:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6350:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6365:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6372:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6361:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6361:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6350:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6322:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6332:7:1",
														"type": ""
													}
												],
												"src": "6295:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6472:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6482:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6493:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6482:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6454:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6464:7:1",
														"type": ""
													}
												],
												"src": "6427:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6553:238:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6563:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6585:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "6615:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "6593:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6593:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6581:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6581:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "6567:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6732:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6734:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6734:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6734:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "6675:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6687:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6672:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6672:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "6711:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6723:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6708:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6708:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6669:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6669:62:1"
															},
															"nodeType": "YulIf",
															"src": "6666:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6770:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "6774:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6763:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6763:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6763:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6539:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6547:4:1",
														"type": ""
													}
												],
												"src": "6510:281:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6825:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6842:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6845:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6835:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6835:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6835:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6939:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6942:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6932:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6932:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6932:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6963:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6966:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6956:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6956:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6956:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "6797:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7011:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7028:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7031:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7021:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7021:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7021:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7125:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7128:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7118:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7118:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7118:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7149:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7152:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7142:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7142:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7142:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "6983:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7258:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7275:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7278:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7268:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7268:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7268:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "7169:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7381:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7398:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7401:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7391:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7391:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7391:12:1"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "7292:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7504:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7521:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7524:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7514:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7514:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7514:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "7415:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7627:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7644:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7647:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7637:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7637:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7637:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "7538:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7709:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7719:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7737:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7744:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7733:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7733:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7753:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "7749:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7749:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7729:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7729:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "7719:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7692:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "7702:6:1",
														"type": ""
													}
												],
												"src": "7661:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7812:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7869:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7878:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7881:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7871:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7871:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7871:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7835:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7860:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "7842:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7842:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7832:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7832:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7825:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7825:43:1"
															},
															"nodeType": "YulIf",
															"src": "7822:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7805:5:1",
														"type": ""
													}
												],
												"src": "7769:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7954:93:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8025:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8034:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8037:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8027:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8027:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8027:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7977:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8016:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_Router_$524",
																					"nodeType": "YulIdentifier",
																					"src": "7984:31:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7984:38:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7974:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7974:49:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7967:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7967:57:1"
															},
															"nodeType": "YulIf",
															"src": "7964:77:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_Router_$524",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7947:5:1",
														"type": ""
													}
												],
												"src": "7897:150:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8096:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8153:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8162:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8165:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8155:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8155:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8155:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8119:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8144:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "8126:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8126:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8116:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8116:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8109:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8109:43:1"
															},
															"nodeType": "YulIf",
															"src": "8106:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8089:5:1",
														"type": ""
													}
												],
												"src": "8053:122:1"
											}
										]
									},
									"contents": "{\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_contract$_Router_$524(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_Router_$524(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_Router_$524t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_Router_$524(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_Router_$524(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_Router_$524(value) {\n        if iszero(eq(value, cleanup_t_contract$_Router_$524(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c8063303289bb14610046578063484f4ea9146100765780638dd9500214610094575b600080fd5b610060600480360381019061005b91906103e7565b6100b2565b60405161006d91906104e5565b60405180910390f35b61007e610277565b60405161008b91906104ca565b60405180910390f35b61009c61029d565b6040516100a991906104ca565b60405180910390f35b600080600267ffffffffffffffff8111156100d0576100cf610668565b5b6040519080825280602002602001820160405280156100fe5781602001602082028036833780820191505090505b509050828160008151811061011657610115610639565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160028151811061018757610186610639565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508373ffffffffffffffffffffffffffffffffffffffff1663d06ca61f600254836040518363ffffffff1660e01b81526004016101fe929190610500565b60006040518083038186803b15801561021657600080fd5b505afa15801561022a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610253919061039e565b60018151811061026657610265610639565b5b602002602001015191505092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006102d46102cf84610555565b610530565b905080838252602082019050828560208602820111156102f7576102f661069c565b5b60005b85811015610327578161030d8882610389565b8452602084019350602083019250506001810190506102fa565b5050509392505050565b600081359050610340816106bc565b92915050565b600082601f83011261035b5761035a610697565b5b815161036b8482602086016102c1565b91505092915050565b600081359050610383816106d3565b92915050565b600081519050610398816106ea565b92915050565b6000602082840312156103b4576103b36106a6565b5b600082015167ffffffffffffffff8111156103d2576103d16106a1565b5b6103de84828501610346565b91505092915050565b600080604083850312156103fe576103fd6106a6565b5b600061040c85828601610374565b925050602061041d85828601610331565b9150509250929050565b6000610433838361043f565b60208301905092915050565b610448816105ba565b82525050565b610457816105ba565b82525050565b600061046882610591565b61047281856105a9565b935061047d83610581565b8060005b838110156104ae5781516104958882610427565b97506104a08361059c565b925050600181019050610481565b5085935050505092915050565b6104c4816105fe565b82525050565b60006020820190506104df600083018461044e565b92915050565b60006020820190506104fa60008301846104bb565b92915050565b600060408201905061051560008301856104bb565b8181036020830152610527818461045d565b90509392505050565b600061053a61054b565b90506105468282610608565b919050565b6000604051905090565b600067ffffffffffffffff8211156105705761056f610668565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b60006105c5826105de565b9050919050565b60006105d7826105ba565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b610611826106ab565b810181811067ffffffffffffffff821117156106305761062f610668565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6106c5816105ba565b81146106d057600080fd5b50565b6106dc816105cc565b81146106e757600080fd5b50565b6106f3816105fe565b81146106fe57600080fd5b5056fea26469706673582212203a79314ee275f85e1cf618e352c5e92c4d9e7815c9cfb0962f4d5da7c77dd61c64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x303289BB EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x484F4EA9 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0x8DD95002 EQ PUSH2 0x94 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x3E7 JUMP JUMPDEST PUSH2 0xB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x4E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0x277 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x4CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH2 0x29D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x4CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD0 JUMPI PUSH2 0xCF PUSH2 0x668 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xFE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x116 JUMPI PUSH2 0x115 PUSH2 0x639 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x187 JUMPI PUSH2 0x186 PUSH2 0x639 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD06CA61F PUSH1 0x2 SLOAD DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FE SWAP3 SWAP2 SWAP1 PUSH2 0x500 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x22A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x39E JUMP JUMPDEST PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x266 JUMPI PUSH2 0x265 PUSH2 0x639 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D4 PUSH2 0x2CF DUP5 PUSH2 0x555 JUMP JUMPDEST PUSH2 0x530 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x2F7 JUMPI PUSH2 0x2F6 PUSH2 0x69C JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x327 JUMPI DUP2 PUSH2 0x30D DUP9 DUP3 PUSH2 0x389 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2FA JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x340 DUP2 PUSH2 0x6BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x35B JUMPI PUSH2 0x35A PUSH2 0x697 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x36B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x383 DUP2 PUSH2 0x6D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x398 DUP2 PUSH2 0x6EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B4 JUMPI PUSH2 0x3B3 PUSH2 0x6A6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D2 JUMPI PUSH2 0x3D1 PUSH2 0x6A1 JUMP JUMPDEST JUMPDEST PUSH2 0x3DE DUP5 DUP3 DUP6 ADD PUSH2 0x346 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3FE JUMPI PUSH2 0x3FD PUSH2 0x6A6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x40C DUP6 DUP3 DUP7 ADD PUSH2 0x374 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x41D DUP6 DUP3 DUP7 ADD PUSH2 0x331 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x433 DUP4 DUP4 PUSH2 0x43F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x448 DUP2 PUSH2 0x5BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x457 DUP2 PUSH2 0x5BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x468 DUP3 PUSH2 0x591 JUMP JUMPDEST PUSH2 0x472 DUP2 DUP6 PUSH2 0x5A9 JUMP JUMPDEST SWAP4 POP PUSH2 0x47D DUP4 PUSH2 0x581 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4AE JUMPI DUP2 MLOAD PUSH2 0x495 DUP9 DUP3 PUSH2 0x427 JUMP JUMPDEST SWAP8 POP PUSH2 0x4A0 DUP4 PUSH2 0x59C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x481 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4C4 DUP2 PUSH2 0x5FE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4DF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x44E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4FA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x515 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4BB JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x527 DUP2 DUP5 PUSH2 0x45D JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53A PUSH2 0x54B JUMP JUMPDEST SWAP1 POP PUSH2 0x546 DUP3 DUP3 PUSH2 0x608 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x570 JUMPI PUSH2 0x56F PUSH2 0x668 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C5 DUP3 PUSH2 0x5DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D7 DUP3 PUSH2 0x5BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x611 DUP3 PUSH2 0x6AB JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x630 JUMPI PUSH2 0x62F PUSH2 0x668 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6C5 DUP2 PUSH2 0x5BA JUMP JUMPDEST DUP2 EQ PUSH2 0x6D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x6DC DUP2 PUSH2 0x5CC JUMP JUMPDEST DUP2 EQ PUSH2 0x6E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x6F3 DUP2 PUSH2 0x5FE JUMP JUMPDEST DUP2 EQ PUSH2 0x6FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE PUSH26 0x314EE275F85E1CF618E352C5E92C4D9E7815C9CFB0962F4D5DA7 0xC7 PUSH30 0xD61C64736F6C634300080700330000000000000000000000000000000000 ",
							"sourceMap": "13649:1718:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14179:257;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13777:64;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13706;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14179:257;14257:7;14276:21;14314:1;14300:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14276:40;;14337:5;14327:4;14332:1;14327:7;;;;;;;;:::i;:::-;;;;;;;:15;;;;;;;;;;;14363:4;;;;;;;;;;;14353;14358:1;14353:7;;;;;;;;:::i;:::-;;;;;;;:14;;;;;;;;;;;14385:13;:27;;;14413:6;;14420:4;14385:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14426:1;14385:43;;;;;;;;:::i;:::-;;;;;;;;14378:50;;;14179:257;;;;:::o;13777:64::-;;;;;;;;;;;;;:::o;13706:::-;;;;;;;;;;;;:::o;24:744:1:-;131:5;156:81;172:64;229:6;172:64;:::i;:::-;156:81;:::i;:::-;147:90;;257:5;286:6;279:5;272:21;320:4;313:5;309:16;302:23;;346:6;396:3;388:4;380:6;376:17;371:3;367:27;364:36;361:143;;;415:79;;:::i;:::-;361:143;528:1;513:249;538:6;535:1;532:13;513:249;;;606:3;635:48;679:3;667:10;635:48;:::i;:::-;630:3;623:61;713:4;708:3;704:14;697:21;;747:4;742:3;738:14;731:21;;573:189;560:1;557;553:9;548:14;;513:249;;;517:14;137:631;;24:744;;;;;:::o;774:139::-;820:5;858:6;845:20;836:29;;874:33;901:5;874:33;:::i;:::-;774:139;;;;:::o;936:385::-;1018:5;1067:3;1060:4;1052:6;1048:17;1044:27;1034:122;;1075:79;;:::i;:::-;1034:122;1185:6;1179:13;1210:105;1311:3;1303:6;1296:4;1288:6;1284:17;1210:105;:::i;:::-;1201:114;;1024:297;936:385;;;;:::o;1327:167::-;1387:5;1425:6;1412:20;1403:29;;1441:47;1482:5;1441:47;:::i;:::-;1327:167;;;;:::o;1500:143::-;1557:5;1588:6;1582:13;1573:22;;1604:33;1631:5;1604:33;:::i;:::-;1500:143;;;;:::o;1649:554::-;1744:6;1793:2;1781:9;1772:7;1768:23;1764:32;1761:119;;;1799:79;;:::i;:::-;1761:119;1940:1;1929:9;1925:17;1919:24;1970:18;1962:6;1959:30;1956:117;;;1992:79;;:::i;:::-;1956:117;2097:89;2178:7;2169:6;2158:9;2154:22;2097:89;:::i;:::-;2087:99;;1890:306;1649:554;;;;:::o;2209:502::-;2291:6;2299;2348:2;2336:9;2327:7;2323:23;2319:32;2316:119;;;2354:79;;:::i;:::-;2316:119;2474:1;2499:67;2558:7;2549:6;2538:9;2534:22;2499:67;:::i;:::-;2489:77;;2445:131;2615:2;2641:53;2686:7;2677:6;2666:9;2662:22;2641:53;:::i;:::-;2631:63;;2586:118;2209:502;;;;;:::o;2717:179::-;2786:10;2807:46;2849:3;2841:6;2807:46;:::i;:::-;2885:4;2880:3;2876:14;2862:28;;2717:179;;;;:::o;2902:108::-;2979:24;2997:5;2979:24;:::i;:::-;2974:3;2967:37;2902:108;;:::o;3016:118::-;3103:24;3121:5;3103:24;:::i;:::-;3098:3;3091:37;3016:118;;:::o;3170:732::-;3289:3;3318:54;3366:5;3318:54;:::i;:::-;3388:86;3467:6;3462:3;3388:86;:::i;:::-;3381:93;;3498:56;3548:5;3498:56;:::i;:::-;3577:7;3608:1;3593:284;3618:6;3615:1;3612:13;3593:284;;;3694:6;3688:13;3721:63;3780:3;3765:13;3721:63;:::i;:::-;3714:70;;3807:60;3860:6;3807:60;:::i;:::-;3797:70;;3653:224;3640:1;3637;3633:9;3628:14;;3593:284;;;3597:14;3893:3;3886:10;;3294:608;;;3170:732;;;;:::o;3908:118::-;3995:24;4013:5;3995:24;:::i;:::-;3990:3;3983:37;3908:118;;:::o;4032:222::-;4125:4;4163:2;4152:9;4148:18;4140:26;;4176:71;4244:1;4233:9;4229:17;4220:6;4176:71;:::i;:::-;4032:222;;;;:::o;4260:::-;4353:4;4391:2;4380:9;4376:18;4368:26;;4404:71;4472:1;4461:9;4457:17;4448:6;4404:71;:::i;:::-;4260:222;;;;:::o;4488:483::-;4659:4;4697:2;4686:9;4682:18;4674:26;;4710:71;4778:1;4767:9;4763:17;4754:6;4710:71;:::i;:::-;4828:9;4822:4;4818:20;4813:2;4802:9;4798:18;4791:48;4856:108;4959:4;4950:6;4856:108;:::i;:::-;4848:116;;4488:483;;;;;:::o;4977:129::-;5011:6;5038:20;;:::i;:::-;5028:30;;5067:33;5095:4;5087:6;5067:33;:::i;:::-;4977:129;;;:::o;5112:75::-;5145:6;5178:2;5172:9;5162:19;;5112:75;:::o;5193:311::-;5270:4;5360:18;5352:6;5349:30;5346:56;;;5382:18;;:::i;:::-;5346:56;5432:4;5424:6;5420:17;5412:25;;5492:4;5486;5482:15;5474:23;;5193:311;;;:::o;5510:132::-;5577:4;5600:3;5592:11;;5630:4;5625:3;5621:14;5613:22;;5510:132;;;:::o;5648:114::-;5715:6;5749:5;5743:12;5733:22;;5648:114;;;:::o;5768:113::-;5838:4;5870;5865:3;5861:14;5853:22;;5768:113;;;:::o;5887:184::-;5986:11;6020:6;6015:3;6008:19;6060:4;6055:3;6051:14;6036:29;;5887:184;;;;:::o;6077:96::-;6114:7;6143:24;6161:5;6143:24;:::i;:::-;6132:35;;6077:96;;;:::o;6179:110::-;6230:7;6259:24;6277:5;6259:24;:::i;:::-;6248:35;;6179:110;;;:::o;6295:126::-;6332:7;6372:42;6365:5;6361:54;6350:65;;6295:126;;;:::o;6427:77::-;6464:7;6493:5;6482:16;;6427:77;;;:::o;6510:281::-;6593:27;6615:4;6593:27;:::i;:::-;6585:6;6581:40;6723:6;6711:10;6708:22;6687:18;6675:10;6672:34;6669:62;6666:88;;;6734:18;;:::i;:::-;6666:88;6774:10;6770:2;6763:22;6553:238;6510:281;;:::o;6797:180::-;6845:77;6842:1;6835:88;6942:4;6939:1;6932:15;6966:4;6963:1;6956:15;6983:180;7031:77;7028:1;7021:88;7128:4;7125:1;7118:15;7152:4;7149:1;7142:15;7169:117;7278:1;7275;7268:12;7292:117;7401:1;7398;7391:12;7415:117;7524:1;7521;7514:12;7538:117;7647:1;7644;7637:12;7661:102;7702:6;7753:2;7749:7;7744:2;7737:5;7733:14;7729:28;7719:38;;7661:102;;;:::o;7769:122::-;7842:24;7860:5;7842:24;:::i;:::-;7835:5;7832:35;7822:63;;7881:1;7878;7871:12;7822:63;7769:122;:::o;7897:150::-;7984:38;8016:5;7984:38;:::i;:::-;7977:5;7974:49;7964:77;;8037:1;8034;8027:12;7964:77;7897:150;:::o;8053:122::-;8126:24;8144:5;8126:24;:::i;:::-;8119:5;8116:35;8106:63;;8165:1;8162;8155:12;8106:63;8053:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "369400",
								"executionCost": "71045",
								"totalCost": "440445"
							},
							"external": {
								"BUSD()": "2514",
								"WBNB()": "2533",
								"WBNBPrice(address,address)": "infinite"
							},
							"internal": {
								"price(contract Router,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 13649,
									"end": 15367,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 13649,
									"end": 15367,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13649,
									"end": 15367,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13728,
									"end": 13770,
									"name": "PUSH",
									"source": 0,
									"value": "AE13D989DAC2F0DEBFF460AC112A837C89BAA7CD"
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 13706,
									"end": 13770,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13799,
									"end": 13841,
									"name": "PUSH",
									"source": 0,
									"value": "78867BBEEF44F2326BF8DDD1941A4439382EF2A7"
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 13777,
									"end": 13841,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13865,
									"end": 13884,
									"name": "PUSH",
									"source": 0,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 13848,
									"end": 13884,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 13848,
									"end": 13884,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 13649,
									"end": 15367,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 13649,
									"end": 15367,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13649,
									"end": 15367,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 13649,
									"end": 15367,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 13649,
									"end": 15367,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 13649,
									"end": 15367,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13649,
									"end": 15367,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13649,
									"end": 15367,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 13649,
									"end": 15367,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 13649,
									"end": 15367,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13649,
									"end": 15367,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13649,
									"end": 15367,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13649,
									"end": 15367,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13649,
									"end": 15367,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13649,
									"end": 15367,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13649,
									"end": 15367,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 13649,
									"end": 15367,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13649,
									"end": 15367,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203a79314ee275f85e1cf618e352c5e92c4d9e7815c9cfb0962f4d5da7c77dd61c64736f6c63430008070033",
									".code": [
										{
											"begin": 13649,
											"end": 15367,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 13649,
											"end": 15367,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13649,
											"end": 15367,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15367,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15367,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15367,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13649,
											"end": 15367,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15367,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13649,
											"end": 15367,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15367,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15367,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13649,
											"end": 15367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15367,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15367,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13649,
											"end": 15367,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15367,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13649,
											"end": 15367,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15367,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13649,
											"end": 15367,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15367,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 13649,
											"end": 15367,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15367,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15367,
											"name": "PUSH",
											"source": 0,
											"value": "303289BB"
										},
										{
											"begin": 13649,
											"end": 15367,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13649,
											"end": 15367,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15367,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15367,
											"name": "PUSH",
											"source": 0,
											"value": "484F4EA9"
										},
										{
											"begin": 13649,
											"end": 15367,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13649,
											"end": 15367,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15367,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15367,
											"name": "PUSH",
											"source": 0,
											"value": "8DD95002"
										},
										{
											"begin": 13649,
											"end": 15367,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13649,
											"end": 15367,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15367,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13649,
											"end": 15367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15367,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13649,
											"end": 15367,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 15367,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14257,
											"end": 14264,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14276,
											"end": 14297,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14314,
											"end": 14315,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14276,
											"end": 14316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14276,
											"end": 14316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14337,
											"end": 14342,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 14331,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14332,
											"end": 14333,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14327,
											"end": 14334,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 14334,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 14334,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 14334,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 14334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 14327,
											"end": 14334,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 14334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 14327,
											"end": 14334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 14327,
											"end": 14334,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14327,
											"end": 14334,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 14327,
											"end": 14334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 14334,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 14327,
											"end": 14334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 14334,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14327,
											"end": 14334,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 14334,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14327,
											"end": 14334,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 14334,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 14342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 14342,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14327,
											"end": 14342,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 14342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 14342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 14342,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14327,
											"end": 14342,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 14342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 14342,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 14342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14327,
											"end": 14342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14363,
											"end": 14367,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14363,
											"end": 14367,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14363,
											"end": 14367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14363,
											"end": 14367,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14363,
											"end": 14367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14363,
											"end": 14367,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14363,
											"end": 14367,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 14363,
											"end": 14367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14363,
											"end": 14367,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 14363,
											"end": 14367,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14363,
											"end": 14367,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14353,
											"end": 14357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14358,
											"end": 14359,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14353,
											"end": 14360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14353,
											"end": 14360,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14353,
											"end": 14360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14353,
											"end": 14360,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14353,
											"end": 14360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 14353,
											"end": 14360,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14353,
											"end": 14360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 14353,
											"end": 14360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 14353,
											"end": 14360,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14353,
											"end": 14360,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 14353,
											"end": 14360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14353,
											"end": 14360,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 14353,
											"end": 14360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14353,
											"end": 14360,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14353,
											"end": 14360,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14353,
											"end": 14360,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14353,
											"end": 14360,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14353,
											"end": 14360,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14353,
											"end": 14367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14353,
											"end": 14367,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14353,
											"end": 14367,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14353,
											"end": 14367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14353,
											"end": 14367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14353,
											"end": 14367,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14353,
											"end": 14367,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14353,
											"end": 14367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14353,
											"end": 14367,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14353,
											"end": 14367,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14353,
											"end": 14367,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14398,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14412,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14385,
											"end": 14412,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14412,
											"name": "PUSH",
											"source": 0,
											"value": "D06CA61F"
										},
										{
											"begin": 14413,
											"end": 14419,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14413,
											"end": 14419,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14420,
											"end": 14424,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 14385,
											"end": 14425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14426,
											"end": 14427,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14385,
											"end": 14428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14428,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14428,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 14385,
											"end": 14428,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 14385,
											"end": 14428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 14385,
											"end": 14428,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14385,
											"end": 14428,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 14385,
											"end": 14428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14428,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 14385,
											"end": 14428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14428,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14385,
											"end": 14428,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14428,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14385,
											"end": 14428,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14428,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14428,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14428,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14179,
											"end": 14436,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13841,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13770,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24,
											"end": 768,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 24,
											"end": 768,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 131,
											"end": 136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 229,
											"end": 235,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 172,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 156,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 147,
											"end": 237,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 147,
											"end": 237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 257,
											"end": 262,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 286,
											"end": 292,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 272,
											"end": 293,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 320,
											"end": 324,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 313,
											"end": 318,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 309,
											"end": 325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 302,
											"end": 325,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 302,
											"end": 325,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 346,
											"end": 352,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 396,
											"end": 399,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 388,
											"end": 392,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 380,
											"end": 386,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 376,
											"end": 393,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 367,
											"end": 394,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 364,
											"end": 400,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 361,
											"end": 504,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 361,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 361,
											"end": 504,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 415,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 361,
											"end": 504,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 361,
											"end": 504,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 538,
											"end": 544,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 535,
											"end": 536,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 532,
											"end": 545,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 513,
											"end": 762,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 513,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 606,
											"end": 609,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 635,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 679,
											"end": 682,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 667,
											"end": 677,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 635,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 635,
											"end": 683,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 635,
											"end": 683,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 635,
											"end": 683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 630,
											"end": 633,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 623,
											"end": 684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 713,
											"end": 717,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 708,
											"end": 711,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 704,
											"end": 718,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 697,
											"end": 718,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 697,
											"end": 718,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 747,
											"end": 751,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 742,
											"end": 745,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 738,
											"end": 752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 731,
											"end": 752,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 731,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 573,
											"end": 762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 560,
											"end": 561,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 557,
											"end": 558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 553,
											"end": 562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 548,
											"end": 562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 548,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 513,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 513,
											"end": 762,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 517,
											"end": 531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 137,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 137,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 774,
											"end": 913,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 774,
											"end": 913,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 820,
											"end": 825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 858,
											"end": 864,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 845,
											"end": 865,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 865,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 874,
											"end": 907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 901,
											"end": 906,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 874,
											"end": 907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 874,
											"end": 907,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 874,
											"end": 907,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 874,
											"end": 907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 774,
											"end": 913,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 774,
											"end": 913,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 774,
											"end": 913,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 774,
											"end": 913,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 774,
											"end": 913,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 936,
											"end": 1321,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 936,
											"end": 1321,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1067,
											"end": 1070,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1060,
											"end": 1064,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1052,
											"end": 1058,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1065,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1044,
											"end": 1071,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1034,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1034,
											"end": 1156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1075,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1075,
											"end": 1154,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1075,
											"end": 1154,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1075,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1034,
											"end": 1156,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1034,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1185,
											"end": 1191,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1311,
											"end": 1314,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1303,
											"end": 1309,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1300,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1288,
											"end": 1294,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1301,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1210,
											"end": 1315,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1210,
											"end": 1315,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1210,
											"end": 1315,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1315,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1315,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1321,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 936,
											"end": 1321,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 936,
											"end": 1321,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 936,
											"end": 1321,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 936,
											"end": 1321,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 936,
											"end": 1321,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1327,
											"end": 1494,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1327,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1392,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1425,
											"end": 1431,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1432,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1432,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1432,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1441,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1482,
											"end": 1487,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1441,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1441,
											"end": 1488,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1441,
											"end": 1488,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1441,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1494,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1494,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1494,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1500,
											"end": 1643,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1500,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1557,
											"end": 1562,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1588,
											"end": 1594,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 1595,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1573,
											"end": 1595,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1573,
											"end": 1595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1604,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1631,
											"end": 1636,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1604,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1604,
											"end": 1637,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1604,
											"end": 1637,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1604,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1643,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1643,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1643,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1649,
											"end": 2203,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1649,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1750,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1793,
											"end": 1795,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1781,
											"end": 1790,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1779,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 1791,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1796,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1761,
											"end": 1880,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1761,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1761,
											"end": 1880,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1799,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1799,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1799,
											"end": 1878,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1799,
											"end": 1878,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1799,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1761,
											"end": 1880,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1761,
											"end": 1880,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1929,
											"end": 1938,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 1942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 1943,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1988,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1962,
											"end": 1968,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1989,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1956,
											"end": 2073,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1956,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1956,
											"end": 2073,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1992,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1992,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1992,
											"end": 2071,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1992,
											"end": 2071,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1992,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1956,
											"end": 2073,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1956,
											"end": 2073,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2097,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2178,
											"end": 2185,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2167,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2176,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2097,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2097,
											"end": 2186,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2097,
											"end": 2186,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2097,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2087,
											"end": 2186,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2087,
											"end": 2186,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1890,
											"end": 2196,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 2203,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 2203,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 2203,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 2203,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 2203,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2209,
											"end": 2711,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2209,
											"end": 2711,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2291,
											"end": 2297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2299,
											"end": 2305,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2336,
											"end": 2345,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2327,
											"end": 2334,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2346,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2319,
											"end": 2351,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2316,
											"end": 2435,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2316,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2316,
											"end": 2435,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2354,
											"end": 2433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2354,
											"end": 2433,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2354,
											"end": 2433,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2354,
											"end": 2433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2316,
											"end": 2435,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2316,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2474,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2499,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2558,
											"end": 2565,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2549,
											"end": 2555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2538,
											"end": 2547,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2499,
											"end": 2566,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2499,
											"end": 2566,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2499,
											"end": 2566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2489,
											"end": 2566,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2489,
											"end": 2566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2445,
											"end": 2576,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2617,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2641,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2686,
											"end": 2693,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2683,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2666,
											"end": 2675,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2662,
											"end": 2684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2641,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2641,
											"end": 2694,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2641,
											"end": 2694,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2641,
											"end": 2694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2631,
											"end": 2694,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2631,
											"end": 2694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2586,
											"end": 2704,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2209,
											"end": 2711,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2209,
											"end": 2711,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2209,
											"end": 2711,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2209,
											"end": 2711,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2209,
											"end": 2711,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2209,
											"end": 2711,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2717,
											"end": 2896,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2717,
											"end": 2896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2786,
											"end": 2796,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2807,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2849,
											"end": 2852,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 2847,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2807,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2807,
											"end": 2853,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2807,
											"end": 2853,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2807,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2885,
											"end": 2889,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2880,
											"end": 2883,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2876,
											"end": 2890,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2862,
											"end": 2890,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2862,
											"end": 2890,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2896,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2896,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2896,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2902,
											"end": 3010,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2902,
											"end": 3010,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2979,
											"end": 3003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2997,
											"end": 3002,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2979,
											"end": 3003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2979,
											"end": 3003,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2979,
											"end": 3003,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2979,
											"end": 3003,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2974,
											"end": 2977,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2967,
											"end": 3004,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2902,
											"end": 3010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2902,
											"end": 3010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2902,
											"end": 3010,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3016,
											"end": 3134,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3016,
											"end": 3134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3103,
											"end": 3127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3121,
											"end": 3126,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3103,
											"end": 3127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3103,
											"end": 3127,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3103,
											"end": 3127,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3103,
											"end": 3127,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3098,
											"end": 3101,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3128,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3134,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3134,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3134,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3170,
											"end": 3902,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3170,
											"end": 3902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3289,
											"end": 3292,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3318,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3366,
											"end": 3371,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3318,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3318,
											"end": 3372,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3318,
											"end": 3372,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3318,
											"end": 3372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3388,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3467,
											"end": 3473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3462,
											"end": 3465,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3388,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3388,
											"end": 3474,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3388,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3388,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3381,
											"end": 3474,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3381,
											"end": 3474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3498,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3548,
											"end": 3553,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3498,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3498,
											"end": 3554,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3498,
											"end": 3554,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3498,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 3584,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3608,
											"end": 3609,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3593,
											"end": 3877,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3593,
											"end": 3877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3618,
											"end": 3624,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3615,
											"end": 3616,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3625,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3593,
											"end": 3877,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3593,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3593,
											"end": 3877,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3694,
											"end": 3700,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3688,
											"end": 3701,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3784,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3780,
											"end": 3783,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3765,
											"end": 3778,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3784,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3721,
											"end": 3784,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3721,
											"end": 3784,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3721,
											"end": 3784,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3784,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3784,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3860,
											"end": 3866,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 3807,
											"end": 3867,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3807,
											"end": 3867,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3807,
											"end": 3867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3797,
											"end": 3867,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3797,
											"end": 3867,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3653,
											"end": 3877,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3640,
											"end": 3641,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3637,
											"end": 3638,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3633,
											"end": 3642,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3642,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3642,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3593,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3593,
											"end": 3877,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3593,
											"end": 3877,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3593,
											"end": 3877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3611,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3893,
											"end": 3896,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3886,
											"end": 3896,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3886,
											"end": 3896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3294,
											"end": 3902,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3294,
											"end": 3902,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3294,
											"end": 3902,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3170,
											"end": 3902,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3170,
											"end": 3902,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3170,
											"end": 3902,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3170,
											"end": 3902,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3170,
											"end": 3902,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3908,
											"end": 4026,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3908,
											"end": 4026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4013,
											"end": 4018,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 3995,
											"end": 4019,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3995,
											"end": 4019,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 3995,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3990,
											"end": 3993,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3983,
											"end": 4020,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 4026,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 4026,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 4026,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4032,
											"end": 4254,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 4032,
											"end": 4254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4125,
											"end": 4129,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4163,
											"end": 4165,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4152,
											"end": 4161,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4148,
											"end": 4166,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4166,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4176,
											"end": 4247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 4244,
											"end": 4245,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4233,
											"end": 4242,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4229,
											"end": 4246,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4220,
											"end": 4226,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4176,
											"end": 4247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4176,
											"end": 4247,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4176,
											"end": 4247,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 4176,
											"end": 4247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4032,
											"end": 4254,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4032,
											"end": 4254,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4032,
											"end": 4254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4032,
											"end": 4254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4032,
											"end": 4254,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4260,
											"end": 4482,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 4260,
											"end": 4482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4353,
											"end": 4357,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4393,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4380,
											"end": 4389,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4376,
											"end": 4394,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4394,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4404,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 4472,
											"end": 4473,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4461,
											"end": 4470,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4457,
											"end": 4474,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4448,
											"end": 4454,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4404,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 4404,
											"end": 4475,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4404,
											"end": 4475,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 4404,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4260,
											"end": 4482,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4260,
											"end": 4482,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4260,
											"end": 4482,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4260,
											"end": 4482,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4260,
											"end": 4482,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4488,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4488,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4659,
											"end": 4663,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4697,
											"end": 4699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4686,
											"end": 4695,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4682,
											"end": 4700,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4674,
											"end": 4700,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4674,
											"end": 4700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4710,
											"end": 4781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 4778,
											"end": 4779,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4767,
											"end": 4776,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4763,
											"end": 4780,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4754,
											"end": 4760,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4710,
											"end": 4781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 4710,
											"end": 4781,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4710,
											"end": 4781,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 4710,
											"end": 4781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4828,
											"end": 4837,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4822,
											"end": 4826,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4818,
											"end": 4838,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4813,
											"end": 4815,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4802,
											"end": 4811,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4798,
											"end": 4816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4791,
											"end": 4839,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4856,
											"end": 4964,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 4959,
											"end": 4963,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4950,
											"end": 4956,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4856,
											"end": 4964,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 4856,
											"end": 4964,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4856,
											"end": 4964,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 4856,
											"end": 4964,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 4964,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 4964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4488,
											"end": 4971,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4488,
											"end": 4971,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4488,
											"end": 4971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4488,
											"end": 4971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4488,
											"end": 4971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4488,
											"end": 4971,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4977,
											"end": 5106,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4977,
											"end": 5106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5017,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5038,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 5038,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 5038,
											"end": 5058,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5038,
											"end": 5058,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 5038,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5028,
											"end": 5058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5028,
											"end": 5058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5067,
											"end": 5100,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 5095,
											"end": 5099,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5087,
											"end": 5093,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5067,
											"end": 5100,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 5067,
											"end": 5100,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5067,
											"end": 5100,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 5067,
											"end": 5100,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5106,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5106,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5112,
											"end": 5187,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 5112,
											"end": 5187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5145,
											"end": 5151,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5178,
											"end": 5180,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5172,
											"end": 5181,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5162,
											"end": 5181,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5162,
											"end": 5181,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 5187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 5187,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5193,
											"end": 5504,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 5193,
											"end": 5504,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5270,
											"end": 5274,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5360,
											"end": 5378,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5352,
											"end": 5358,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5349,
											"end": 5379,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5402,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 5346,
											"end": 5402,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5382,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 5382,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5382,
											"end": 5400,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5382,
											"end": 5400,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 5382,
											"end": 5400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5402,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 5346,
											"end": 5402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5432,
											"end": 5436,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5424,
											"end": 5430,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5437,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5412,
											"end": 5437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5412,
											"end": 5437,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5492,
											"end": 5496,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5486,
											"end": 5490,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5482,
											"end": 5497,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5474,
											"end": 5497,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5474,
											"end": 5497,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5193,
											"end": 5504,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5193,
											"end": 5504,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5193,
											"end": 5504,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5193,
											"end": 5504,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5510,
											"end": 5642,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5510,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5577,
											"end": 5581,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5600,
											"end": 5603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5592,
											"end": 5603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5592,
											"end": 5603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5634,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5625,
											"end": 5628,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5621,
											"end": 5635,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5613,
											"end": 5635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5613,
											"end": 5635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5510,
											"end": 5642,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5510,
											"end": 5642,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5510,
											"end": 5642,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5510,
											"end": 5642,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5648,
											"end": 5762,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 5648,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5715,
											"end": 5721,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5749,
											"end": 5754,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5743,
											"end": 5755,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5733,
											"end": 5755,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5733,
											"end": 5755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5648,
											"end": 5762,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5648,
											"end": 5762,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5648,
											"end": 5762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5648,
											"end": 5762,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5768,
											"end": 5881,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 5768,
											"end": 5881,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5838,
											"end": 5842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5870,
											"end": 5874,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5865,
											"end": 5868,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5861,
											"end": 5875,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5853,
											"end": 5875,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5853,
											"end": 5875,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5768,
											"end": 5881,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5768,
											"end": 5881,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5768,
											"end": 5881,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5768,
											"end": 5881,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5887,
											"end": 6071,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 5887,
											"end": 6071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5986,
											"end": 5997,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6020,
											"end": 6026,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6015,
											"end": 6018,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 6027,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6060,
											"end": 6064,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6055,
											"end": 6058,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6036,
											"end": 6065,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6036,
											"end": 6065,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5887,
											"end": 6071,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5887,
											"end": 6071,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5887,
											"end": 6071,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5887,
											"end": 6071,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5887,
											"end": 6071,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6077,
											"end": 6173,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 6077,
											"end": 6173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6114,
											"end": 6121,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6143,
											"end": 6167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 6161,
											"end": 6166,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6143,
											"end": 6167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 6143,
											"end": 6167,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6143,
											"end": 6167,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 6143,
											"end": 6167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6132,
											"end": 6167,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6132,
											"end": 6167,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6173,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6173,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6173,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6179,
											"end": 6289,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 6179,
											"end": 6289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6230,
											"end": 6237,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6259,
											"end": 6283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 6277,
											"end": 6282,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6259,
											"end": 6283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 6259,
											"end": 6283,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6259,
											"end": 6283,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 6259,
											"end": 6283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6248,
											"end": 6283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6248,
											"end": 6283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6289,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6289,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6289,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6289,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6295,
											"end": 6421,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 6295,
											"end": 6421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6332,
											"end": 6339,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6372,
											"end": 6414,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6365,
											"end": 6370,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6361,
											"end": 6415,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6350,
											"end": 6415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6350,
											"end": 6415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6295,
											"end": 6421,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6295,
											"end": 6421,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6295,
											"end": 6421,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6295,
											"end": 6421,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6427,
											"end": 6504,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 6427,
											"end": 6504,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6464,
											"end": 6471,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6493,
											"end": 6498,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6482,
											"end": 6498,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6482,
											"end": 6498,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6427,
											"end": 6504,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6427,
											"end": 6504,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6427,
											"end": 6504,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6427,
											"end": 6504,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6510,
											"end": 6791,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 6510,
											"end": 6791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6593,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 6615,
											"end": 6619,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6593,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 6593,
											"end": 6620,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6593,
											"end": 6620,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 6593,
											"end": 6620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6585,
											"end": 6591,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6581,
											"end": 6621,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6723,
											"end": 6729,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6711,
											"end": 6721,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6708,
											"end": 6730,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6687,
											"end": 6705,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6675,
											"end": 6685,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6672,
											"end": 6706,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6669,
											"end": 6731,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 6666,
											"end": 6754,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6666,
											"end": 6754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 6666,
											"end": 6754,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6734,
											"end": 6752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 6734,
											"end": 6752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 6734,
											"end": 6752,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6734,
											"end": 6752,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 6734,
											"end": 6752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6666,
											"end": 6754,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 6666,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6774,
											"end": 6784,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6770,
											"end": 6772,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6763,
											"end": 6785,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6553,
											"end": 6791,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6510,
											"end": 6791,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6510,
											"end": 6791,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6510,
											"end": 6791,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6797,
											"end": 6977,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 6797,
											"end": 6977,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6845,
											"end": 6922,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6842,
											"end": 6843,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6835,
											"end": 6923,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6942,
											"end": 6946,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 6939,
											"end": 6940,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6932,
											"end": 6947,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6966,
											"end": 6970,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6963,
											"end": 6964,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6956,
											"end": 6971,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6983,
											"end": 7163,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 6983,
											"end": 7163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7031,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7028,
											"end": 7029,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7109,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7128,
											"end": 7132,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 7125,
											"end": 7126,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7118,
											"end": 7133,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7152,
											"end": 7156,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7149,
											"end": 7150,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7142,
											"end": 7157,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7169,
											"end": 7286,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 7169,
											"end": 7286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7278,
											"end": 7279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7275,
											"end": 7276,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7268,
											"end": 7280,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7292,
											"end": 7409,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 7292,
											"end": 7409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7401,
											"end": 7402,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7398,
											"end": 7399,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7391,
											"end": 7403,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7415,
											"end": 7532,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 7415,
											"end": 7532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7524,
											"end": 7525,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7521,
											"end": 7522,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7514,
											"end": 7526,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7538,
											"end": 7655,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 7538,
											"end": 7655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7647,
											"end": 7648,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7645,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7637,
											"end": 7649,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7661,
											"end": 7763,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 7661,
											"end": 7763,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7702,
											"end": 7708,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7753,
											"end": 7755,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 7749,
											"end": 7756,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7746,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 7737,
											"end": 7742,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7733,
											"end": 7747,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7729,
											"end": 7757,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7719,
											"end": 7757,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7719,
											"end": 7757,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7661,
											"end": 7763,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7661,
											"end": 7763,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7661,
											"end": 7763,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7661,
											"end": 7763,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7769,
											"end": 7891,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 7769,
											"end": 7891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7842,
											"end": 7866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 7860,
											"end": 7865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7842,
											"end": 7866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 7842,
											"end": 7866,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7842,
											"end": 7866,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 7842,
											"end": 7866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7832,
											"end": 7867,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7822,
											"end": 7885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 7822,
											"end": 7885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7881,
											"end": 7882,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7878,
											"end": 7879,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7871,
											"end": 7883,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7822,
											"end": 7885,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 7822,
											"end": 7885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7769,
											"end": 7891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7769,
											"end": 7891,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7897,
											"end": 8047,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 7897,
											"end": 8047,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7984,
											"end": 8022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 8016,
											"end": 8021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7984,
											"end": 8022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 7984,
											"end": 8022,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7984,
											"end": 8022,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 7984,
											"end": 8022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7977,
											"end": 7982,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7974,
											"end": 8023,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7964,
											"end": 8041,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 7964,
											"end": 8041,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8037,
											"end": 8038,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8034,
											"end": 8035,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8027,
											"end": 8039,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7964,
											"end": 8041,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 7964,
											"end": 8041,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7897,
											"end": 8047,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7897,
											"end": 8047,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8053,
											"end": 8175,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 8053,
											"end": 8175,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8126,
											"end": 8150,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 8144,
											"end": 8149,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8126,
											"end": 8150,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 8126,
											"end": 8150,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8126,
											"end": 8150,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 8126,
											"end": 8150,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8119,
											"end": 8124,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8116,
											"end": 8151,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 8106,
											"end": 8169,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 8106,
											"end": 8169,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8165,
											"end": 8166,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8162,
											"end": 8163,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8155,
											"end": 8167,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8106,
											"end": 8169,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 8106,
											"end": 8169,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8053,
											"end": 8175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8053,
											"end": 8175,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"BUSD()": "484f4ea9",
							"WBNB()": "8dd95002",
							"WBNBPrice(address,address)": "303289bb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BUSD\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WBNB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Router\",\"name\":\"routerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"WBNBPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"LpUtils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0x6ae54261b087c814d47d50442c4885f9a3113cb1833da7a5a3e584e4c1a74148\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6d9cd857b7aec5885f41061ef7310dec3e5f8b33001e6cd446df9c9cabb7acf\",\"dweb:/ipfs/QmYYYaTX3hCaKwkdcowf6WrNeuwE3qyrxwkX4Y62PTWPvQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 530,
								"contract": "contracts/LpPrice.sol:LpUtils",
								"label": "WBNB",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 533,
								"contract": "contracts/LpPrice.sol:LpUtils",
								"label": "BUSD",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 536,
								"contract": "contracts/LpPrice.sol:LpUtils",
								"label": "amount",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Router": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getAmountsOut(uint256,address[])": "d06ca61f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"Router\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0x6ae54261b087c814d47d50442c4885f9a3113cb1833da7a5a3e584e4c1a74148\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6d9cd857b7aec5885f41061ef7310dec3e5f8b33001e6cd446df9c9cabb7acf\",\"dweb:/ipfs/QmYYYaTX3hCaKwkdcowf6WrNeuwE3qyrxwkX4Y62PTWPvQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LpPrice.sol\":8338:13186  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LpPrice.sol\":8338:13186  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c85662368ef885e646cdaacc8c93b723ed42d7b8ac6b8d6cb7adfc632ca0c98264736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c85662368ef885e646cdaacc8c93b723ed42d7b8ac6b8d6cb7adfc632ca0c98264736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 JUMP PUSH3 0x368EF8 DUP6 0xE6 CHAINID 0xCD 0xAA 0xCC DUP13 SWAP4 0xB7 0x23 0xED TIMESTAMP 0xD7 0xB8 0xAC PUSH12 0x8D6CB7ADFC632CA0C9826473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "8338:4848:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c85662368ef885e646cdaacc8c93b723ed42d7b8ac6b8d6cb7adfc632ca0c98264736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 JUMP PUSH3 0x368EF8 DUP6 0xE6 CHAINID 0xCD 0xAA 0xCC DUP13 SWAP4 0xB7 0x23 0xED TIMESTAMP 0xD7 0xB8 0xAC PUSH12 0x8D6CB7ADFC632CA0C9826473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "8338:4848:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c85662368ef885e646cdaacc8c93b723ed42d7b8ac6b8d6cb7adfc632ca0c98264736f6c63430008070033",
									".code": [
										{
											"begin": 8338,
											"end": 13186,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 13186,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 13186,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 13186,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8338,
											"end": 13186,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8338,
											"end": 13186,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 13186,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8338,
											"end": 13186,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 13186,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0x6ae54261b087c814d47d50442c4885f9a3113cb1833da7a5a3e584e4c1a74148\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6d9cd857b7aec5885f41061ef7310dec3e5f8b33001e6cd446df9c9cabb7acf\",\"dweb:/ipfs/QmYYYaTX3hCaKwkdcowf6WrNeuwE3qyrxwkX4Y62PTWPvQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/LpPrice.sol": {
				"ast": {
					"absolutePath": "contracts/LpPrice.sol",
					"exportedSymbols": {
						"Address": [
							293
						],
						"IERC20": [
							494
						],
						"LP": [
							512
						],
						"LpUtils": [
							627
						],
						"Router": [
							524
						],
						"SafeMath": [
							486
						]
					},
					"id": 628,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 293,
							"linearizedBaseContracts": [
								293
							],
							"name": "Address",
							"nameLocation": "68:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "1134:260:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 9,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4,
																"src": "1363:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 10,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1363:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1363:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1363:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 8,
												"id": 14,
												"nodeType": "Return",
												"src": "1356:30:0"
											}
										]
									},
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "83:979:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 16,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1077:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1096:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "1088:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1088:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1087:17:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "1128:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 6,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1128:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1127:6:0"
									},
									"scope": 293,
									"src": "1068:326:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "2400:246:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 27,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2427:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$293",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$293",
																				"typeString": "library Address"
																			}
																		],
																		"id": 26,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2419:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 25,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2419:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2419:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2419:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 30,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "2444:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2419:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2452:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 24,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2411:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2411:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 34,
												"nodeType": "ExpressionStatement",
												"src": "2411:73:0"
											},
											{
												"assignments": [
													36,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 36,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2503:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 49,
														"src": "2498:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 35,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2498:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 43,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2546:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 37,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "2516:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2516:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 40,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 39,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "2538:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2516:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2516:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2497:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 45,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "2568:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2577:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2560:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2560:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "2560:78:0"
											}
										]
									},
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "1402:921:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 50,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2338:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2364:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "2348:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2348:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2383:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "2375:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2375:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2347:43:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2400:0:0"
									},
									"scope": 293,
									"src": "2329:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "3497:86:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 61,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "3528:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 62,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "3536:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3542:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 60,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															67,
															87
														],
														"referencedDeclaration": 87,
														"src": "3515:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3515:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 59,
												"id": 65,
												"nodeType": "Return",
												"src": "3508:67:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "2654:748:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3417:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3438:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "3430:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3430:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3459:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "3446:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 54,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3446:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3429:35:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "3483:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 57,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3483:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3482:14:0"
									},
									"scope": 293,
									"src": "3408:175:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "3964:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 80,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "4004:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 81,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "4012:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4018:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 83,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 74,
															"src": "4021:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 79,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															107,
															157
														],
														"referencedDeclaration": 157,
														"src": "3982:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3982:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 78,
												"id": 85,
												"nodeType": "Return",
												"src": "3975:59:0"
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "3591:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3822:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3853:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3845:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3845:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3883:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3870:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 71,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3870:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3912:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3898:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 73,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3898:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3834:97:0"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3950:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 76,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3950:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3949:14:0"
									},
									"scope": 293,
									"src": "3813:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "4564:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 100,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "4604:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 101,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "4612:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 102,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "4618:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4625:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 99,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															107,
															157
														],
														"referencedDeclaration": 157,
														"src": "4582:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4582:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 98,
												"id": 105,
												"nodeType": "Return",
												"src": "4575:94:0"
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "4050:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4426:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4466:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "4458:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4458:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4496:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "4483:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 91,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4483:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4519:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "4511:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 93,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4511:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4447:84:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "4550:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 96,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4550:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4549:14:0"
									},
									"scope": 293,
									"src": "4417:260:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "5117:326:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 124,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5144:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$293",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$293",
																				"typeString": "library Address"
																			}
																		],
																		"id": 123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5136:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 122,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5136:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5136:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5136:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 127,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "5161:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5136:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5168:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 121,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5128:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5128:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "5128:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 134,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 110,
																	"src": "5239:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 133,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "5228:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5228:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5248:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 132,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5220:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5220:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 138,
												"nodeType": "ExpressionStatement",
												"src": "5220:60:0"
											},
											{
												"assignments": [
													140,
													142
												],
												"declarations": [
													{
														"constant": false,
														"id": 140,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5299:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 156,
														"src": "5294:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 139,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5294:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 142,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5321:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 156,
														"src": "5308:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 141,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5308:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 149,
												"initialValue": {
													"arguments": [
														{
															"id": 147,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "5361:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 143,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "5335:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5335:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 145,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "5354:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5335:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5335:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5293:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 151,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "5401:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 152,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "5410:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 153,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "5422:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 150,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "5384:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5384:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 120,
												"id": 155,
												"nodeType": "Return",
												"src": "5377:58:0"
											}
										]
									},
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "4685:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4942:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4982:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "4974:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4974:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5012:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "4999:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 111,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4999:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5035:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "5027:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5027:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5065:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "5051:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 115,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5051:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4963:121:0"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "5103:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 118,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5103:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5102:14:0"
									},
									"scope": 293,
									"src": "4933:510:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "5728:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 168,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "5765:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 169,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "5773:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5779:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 167,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															174,
															209
														],
														"referencedDeclaration": 209,
														"src": "5746:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5746:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 166,
												"id": 172,
												"nodeType": "Return",
												"src": "5739:80:0"
											}
										]
									},
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "5451:171:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5637:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5664:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "5656:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5656:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "5672:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5672:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5655:35:0"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "5714:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 164,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5714:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5713:14:0"
									},
									"scope": 293,
									"src": "5628:199:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "6181:233:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 188,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 177,
																	"src": "6211:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 187,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "6200:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6200:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6220:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 186,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6192:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6192:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "6192:67:0"
											},
											{
												"assignments": [
													194,
													196
												],
												"declarations": [
													{
														"constant": false,
														"id": 194,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6278:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 208,
														"src": "6273:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 193,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6273:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 196,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6300:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 208,
														"src": "6287:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 195,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6287:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 201,
												"initialValue": {
													"arguments": [
														{
															"id": 199,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "6332:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 197,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "6314:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6314:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6314:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6272:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 203,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "6372:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 204,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "6381:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 205,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "6393:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 202,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "6355:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6355:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 185,
												"id": 207,
												"nodeType": "Return",
												"src": "6348:58:0"
											}
										]
									},
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "5835:178:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6028:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6065:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "6057:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6057:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6095:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "6082:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 178,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6082:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6124:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "6110:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 180,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6110:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6046:97:0"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "6167:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 183,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6167:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6166:14:0"
									},
									"scope": 293,
									"src": "6019:395:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 225,
										"nodeType": "Block",
										"src": "6698:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 220,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "6737:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 221,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "6745:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6751:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 219,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															226,
															261
														],
														"referencedDeclaration": 261,
														"src": "6716:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6716:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 218,
												"id": 224,
												"nodeType": "Return",
												"src": "6709:84:0"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "6422:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6610:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6639:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "6631:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6631:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6660:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "6647:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 213,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6647:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6630:35:0"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "6684:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 216,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6684:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6683:14:0"
									},
									"scope": 293,
									"src": "6601:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "7154:237:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 240,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 229,
																	"src": "7184:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 239,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "7173:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7173:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 238,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7165:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7165:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 244,
												"nodeType": "ExpressionStatement",
												"src": "7165:69:0"
											},
											{
												"assignments": [
													246,
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 246,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7253:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "7248:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 245,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7248:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7275:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "7262:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 247,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7262:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 253,
												"initialValue": {
													"arguments": [
														{
															"id": 251,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "7309:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 249,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "7289:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7289:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7289:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7247:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 255,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "7349:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 256,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "7358:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 257,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "7370:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 254,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "7332:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7332:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 237,
												"id": 259,
												"nodeType": "Return",
												"src": "7325:58:0"
											}
										]
									},
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "6809:180:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7004:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7043:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "7035:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7035:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7073:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "7060:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 230,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7060:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7102:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "7088:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 232,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7088:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7024:97:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "7140:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 235,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7140:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7139:14:0"
									},
									"scope": 293,
									"src": "6995:396:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 291,
										"nodeType": "Block",
										"src": "7783:548:0",
										"statements": [
											{
												"condition": {
													"id": 273,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 264,
													"src": "7798:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 289,
													"nodeType": "Block",
													"src": "7857:467:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 277,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 266,
																		"src": "7943:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7943:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7963:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7943:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 287,
																"nodeType": "Block",
																"src": "8258:55:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 284,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 268,
																					"src": "8284:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 283,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8277:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8277:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 286,
																		"nodeType": "ExpressionStatement",
																		"src": "8277:20:0"
																	}
																]
															},
															"id": 288,
															"nodeType": "IfStatement",
															"src": "7939:374:0",
															"trueBody": {
																"id": 282,
																"nodeType": "Block",
																"src": "7966:286:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8089:148:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8112:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8141:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8135:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8135:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8116:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8185:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8189:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8181:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8181:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8202:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8174:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8174:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8174:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 266,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8141:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 266,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8189:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 281,
																		"nodeType": "InlineAssembly",
																		"src": "8080:157:0"
																	}
																]
															}
														}
													]
												},
												"id": 290,
												"nodeType": "IfStatement",
												"src": "7794:530:0",
												"trueBody": {
													"id": 276,
													"nodeType": "Block",
													"src": "7807:44:0",
													"statements": [
														{
															"expression": {
																"id": 274,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 266,
																"src": "7829:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 272,
															"id": 275,
															"nodeType": "Return",
															"src": "7822:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "7399:214:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7628:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "7655:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7655:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7691:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "7678:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 265,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7678:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7726:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "7712:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 267,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7712:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7644:101:0"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "7769:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 270,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7769:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7768:14:0"
									},
									"scope": 293,
									"src": "7619:712:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 628,
							"src": "60:8274:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 486,
							"linearizedBaseContracts": [
								486
							],
							"name": "SafeMath",
							"nameLocation": "8346:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "8660:114:0",
										"statements": [
											{
												"assignments": [
													304
												],
												"declarations": [
													{
														"constant": false,
														"id": 304,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "8679:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 318,
														"src": "8671:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 303,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8671:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 308,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 305,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "8683:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 306,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 298,
														"src": "8687:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8683:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8671:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 310,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 304,
																"src": "8707:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 311,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 296,
																"src": "8712:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8707:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8715:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 309,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8699:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8699:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "8699:46:0"
											},
											{
												"expression": {
													"id": 316,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 304,
													"src": "8765:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 302,
												"id": 317,
												"nodeType": "Return",
												"src": "8758:8:0"
											}
										]
									},
									"documentation": {
										"id": 294,
										"nodeType": "StructuredDocumentation",
										"src": "8362:225:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "8602:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8614:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "8606:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8606:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "8625:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "8617:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8617:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8605:22:0"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "8651:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8651:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8650:9:0"
									},
									"scope": 486,
									"src": "8593:181:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "9116:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 330,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "9138:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 331,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "9141:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9144:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 329,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															336,
															364
														],
														"referencedDeclaration": 364,
														"src": "9134:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9134:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 328,
												"id": 334,
												"nodeType": "Return",
												"src": "9127:50:0"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "8782:261:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "9058:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9070:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "9062:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9062:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "9081:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "9073:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9073:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9061:22:0"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "9107:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9107:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9106:9:0"
									},
									"scope": 486,
									"src": "9049:136:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "9617:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 349,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "9636:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 350,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 339,
																"src": "9641:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9636:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 352,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "9644:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 348,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9628:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9628:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "9628:29:0"
											},
											{
												"assignments": [
													356
												],
												"declarations": [
													{
														"constant": false,
														"id": 356,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "9676:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 363,
														"src": "9668:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 355,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9668:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 360,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 357,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "9680:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 358,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "9684:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9680:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9668:17:0"
											},
											{
												"expression": {
													"id": 361,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 356,
													"src": "9705:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 347,
												"id": 362,
												"nodeType": "Return",
												"src": "9698:8:0"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "9193:323:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow.\n _Available since v2.4.0._"
									},
									"id": 364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "9531:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9543:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "9535:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9535:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "9554:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "9546:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "9571:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "9557:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 342,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9557:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9534:50:0"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "9608:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9608:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9607:9:0"
									},
									"scope": 486,
									"src": "9522:192:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "10032:404:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 374,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 367,
														"src": "10268:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 375,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10273:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10268:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 380,
												"nodeType": "IfStatement",
												"src": "10264:47:0",
												"trueBody": {
													"id": 379,
													"nodeType": "Block",
													"src": "10276:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 377,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10298:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 373,
															"id": 378,
															"nodeType": "Return",
															"src": "10291:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													382
												],
												"declarations": [
													{
														"constant": false,
														"id": 382,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "10331:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 398,
														"src": "10323:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 381,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10323:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 386,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 383,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 367,
														"src": "10335:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 384,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 369,
														"src": "10339:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10335:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10323:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 388,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 382,
																	"src": "10359:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 389,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 367,
																	"src": "10363:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10359:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 391,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 369,
																"src": "10368:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10359:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10371:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 387,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10351:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10351:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "10351:56:0"
											},
											{
												"expression": {
													"id": 396,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 382,
													"src": "10427:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 373,
												"id": 397,
												"nodeType": "Return",
												"src": "10420:8:0"
											}
										]
									},
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "9722:237:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "9974:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9986:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "9978:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9978:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "9997:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "9989:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9989:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9977:22:0"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "10023:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10023:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10022:9:0"
									},
									"scope": 486,
									"src": "9965:471:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "10971:65:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 410,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "10993:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 411,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "10996:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10999:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 409,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															416,
															444
														],
														"referencedDeclaration": 444,
														"src": "10989:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10989:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 408,
												"id": 414,
												"nodeType": "Return",
												"src": "10982:46:0"
											}
										]
									},
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "10444:454:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "10913:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10925:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "10917:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10917:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "10936:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "10928:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10928:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10916:22:0"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "10962:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10962:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10961:9:0"
									},
									"scope": 486,
									"src": "10904:132:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "11661:250:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 429,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "11747:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 430,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11751:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11747:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 432,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "11754:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 428,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11739:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11739:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "11739:28:0"
											},
											{
												"assignments": [
													436
												],
												"declarations": [
													{
														"constant": false,
														"id": 436,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "11786:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 443,
														"src": "11778:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 435,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11778:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 437,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "11790:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 438,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "11794:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11790:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11778:17:0"
											},
											{
												"expression": {
													"id": 441,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 436,
													"src": "11902:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 427,
												"id": 442,
												"nodeType": "Return",
												"src": "11895:8:0"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "11044:516:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero.\n _Available since v2.4.0._"
									},
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "11575:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "11587:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "11579:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11579:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "11598:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "11590:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11590:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "11615:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "11601:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 422,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11601:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11578:50:0"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "11652:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11651:9:0"
									},
									"scope": 486,
									"src": "11566:345:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 460,
										"nodeType": "Block",
										"src": "12435:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 455,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "12457:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 456,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "12460:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12463:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 454,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															461,
															485
														],
														"referencedDeclaration": 485,
														"src": "12453:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12453:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 453,
												"id": 459,
												"nodeType": "Return",
												"src": "12446:44:0"
											}
										]
									},
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "11919:443:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "12377:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "12389:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "12381:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12381:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "12400:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "12392:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12392:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12380:22:0"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "12426:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12426:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12425:9:0"
									},
									"scope": 486,
									"src": "12368:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "13112:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 474,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 466,
																"src": "13131:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13136:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13131:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 477,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "13139:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 473,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13123:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13123:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 479,
												"nodeType": "ExpressionStatement",
												"src": "13123:29:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 480,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "13170:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 481,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "13174:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13170:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 472,
												"id": 483,
												"nodeType": "Return",
												"src": "13163:12:0"
											}
										]
									},
									"documentation": {
										"id": 462,
										"nodeType": "StructuredDocumentation",
										"src": "12506:505:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero.\n _Available since v2.4.0._"
									},
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "13026:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "13038:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "13030:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13030:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "13049:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "13041:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13041:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "13066:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "13052:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 467,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13052:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13029:50:0"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "13103:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13103:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13102:9:0"
									},
									"scope": 486,
									"src": "13017:166:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 628,
							"src": "8338:4848:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 494,
							"linearizedBaseContracts": [
								494
							],
							"name": "IERC20",
							"nameLocation": "13200:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "70a08231",
									"id": 493,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "13229:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "13247:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "13239:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13239:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13238:17:0"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "13279:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13279:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13278:9:0"
									},
									"scope": 494,
									"src": "13220:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 628,
							"src": "13190:101:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 512,
							"linearizedBaseContracts": [
								512
							],
							"name": "LP",
							"nameLocation": "13305:2:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "18160ddd",
									"id": 499,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "13326:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13337:2:0"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "13363:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13363:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13362:9:0"
									},
									"scope": 512,
									"src": "13317:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0dfe1681",
									"id": 505,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "13389:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13395:2:0"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "13421:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$494",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 502,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 501,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 494,
														"src": "13421:6:0"
													},
													"referencedDeclaration": 494,
													"src": "13421:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$494",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13420:8:0"
									},
									"scope": 512,
									"src": "13380:49:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d21220a7",
									"id": 511,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "13446:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13452:2:0"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "13478:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$494",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 508,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 507,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 494,
														"src": "13478:6:0"
													},
													"referencedDeclaration": 494,
													"src": "13478:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$494",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13477:8:0"
									},
									"scope": 512,
									"src": "13437:49:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 628,
							"src": "13295:194:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 524,
							"linearizedBaseContracts": [
								524
							],
							"name": "Router",
							"nameLocation": "13503:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d06ca61f",
									"id": 523,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "13526:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "13545:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "13540:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13540:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "13572:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "13555:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 515,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "13555:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 516,
													"nodeType": "ArrayTypeName",
													"src": "13555:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13539:38:0"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "13633:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "13619:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 519,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "13619:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 520,
													"nodeType": "ArrayTypeName",
													"src": "13619:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13618:23:0"
									},
									"scope": 524,
									"src": "13517:125:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 628,
							"src": "13493:152:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 627,
							"linearizedBaseContracts": [
								627
							],
							"name": "LpUtils",
							"nameLocation": "13658:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 527,
									"libraryName": {
										"id": 525,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 486,
										"src": "13679:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "13673:27:0",
									"typeName": {
										"id": 526,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "13692:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "8dd95002",
									"id": 530,
									"mutability": "mutable",
									"name": "WBNB",
									"nameLocation": "13721:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 627,
									"src": "13706:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 528,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "13706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307861653133643938396461433266306445624666343630614331313261383337433839424161376364",
										"id": 529,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "13728:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "484f4ea9",
									"id": 533,
									"mutability": "mutable",
									"name": "BUSD",
									"nameLocation": "13792:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 627,
									"src": "13777:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 531,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "13777:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307837383836374262456546343466323332366246384444643139343161343433393338324546324137",
										"id": 532,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "13799:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 536,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "13856:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 627,
									"src": "13848:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 534,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "13848:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030303030303030303030303030303030",
										"id": 535,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "13865:19:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1000000000000000000"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 583,
										"nodeType": "Block",
										"src": "13975:196:0",
										"statements": [
											{
												"assignments": [
													550
												],
												"declarations": [
													{
														"constant": false,
														"id": 550,
														"mutability": "mutable",
														"name": "path",
														"nameLocation": "14003:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 583,
														"src": "13986:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 548,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13986:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 549,
															"nodeType": "ArrayTypeName",
															"src": "13986:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 556,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "33",
															"id": 554,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14024:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															}
														],
														"id": 553,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "14010:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 551,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "14014:7:0",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 552,
															"nodeType": "ArrayTypeName",
															"src": "14014:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14010:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13986:40:0"
											},
											{
												"expression": {
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 557,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "14037:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 559,
														"indexExpression": {
															"hexValue": "30",
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14042:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14037:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 560,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 541,
														"src": "14047:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14037:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 562,
												"nodeType": "ExpressionStatement",
												"src": "14037:15:0"
											},
											{
												"expression": {
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 563,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "14063:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 565,
														"indexExpression": {
															"hexValue": "31",
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14068:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14063:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 566,
														"name": "WBNB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "14073:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14063:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 568,
												"nodeType": "ExpressionStatement",
												"src": "14063:14:0"
											},
											{
												"expression": {
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 569,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "14088:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 571,
														"indexExpression": {
															"hexValue": "32",
															"id": 570,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14093:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14088:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 572,
														"name": "BUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "14098:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14088:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 574,
												"nodeType": "ExpressionStatement",
												"src": "14088:14:0"
											},
											{
												"expression": {
													"baseExpression": {
														"arguments": [
															{
																"id": 577,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 536,
																"src": "14148:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 578,
																"name": "path",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 550,
																"src": "14155:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															],
															"expression": {
																"id": 575,
																"name": "routerAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 539,
																"src": "14120:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Router_$524",
																	"typeString": "contract Router"
																}
															},
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getAmountsOut",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 523,
															"src": "14120:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
															}
														},
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14120:40:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"id": 581,
													"indexExpression": {
														"hexValue": "32",
														"id": 580,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14161:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14120:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 545,
												"id": 582,
												"nodeType": "Return",
												"src": "14113:50:0"
											}
										]
									},
									"id": 584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "price",
									"nameLocation": "13902:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "routerAddress",
												"nameLocation": "13915:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "13908:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_Router_$524",
													"typeString": "contract Router"
												},
												"typeName": {
													"id": 538,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 537,
														"name": "Router",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 524,
														"src": "13908:6:0"
													},
													"referencedDeclaration": 524,
													"src": "13908:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Router_$524",
														"typeString": "contract Router"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "13938:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "13930:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13907:37:0"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "13967:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13967:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13966:9:0"
									},
									"scope": 627,
									"src": "13893:278:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 625,
										"nodeType": "Block",
										"src": "14265:171:0",
										"statements": [
											{
												"assignments": [
													598
												],
												"declarations": [
													{
														"constant": false,
														"id": 598,
														"mutability": "mutable",
														"name": "path",
														"nameLocation": "14293:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 625,
														"src": "14276:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 596,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "14276:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 597,
															"nodeType": "ArrayTypeName",
															"src": "14276:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 604,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14314:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "14300:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 599,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "14304:7:0",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 600,
															"nodeType": "ArrayTypeName",
															"src": "14304:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14300:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14276:40:0"
											},
											{
												"expression": {
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 605,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "14327:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 607,
														"indexExpression": {
															"hexValue": "30",
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14332:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14327:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 608,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 589,
														"src": "14337:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14327:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 610,
												"nodeType": "ExpressionStatement",
												"src": "14327:15:0"
											},
											{
												"expression": {
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 611,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "14353:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 613,
														"indexExpression": {
															"hexValue": "32",
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14358:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14353:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 614,
														"name": "BUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "14363:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14353:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 616,
												"nodeType": "ExpressionStatement",
												"src": "14353:14:0"
											},
											{
												"expression": {
													"baseExpression": {
														"arguments": [
															{
																"id": 619,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 536,
																"src": "14413:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 620,
																"name": "path",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 598,
																"src": "14420:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															],
															"expression": {
																"id": 617,
																"name": "routerAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 587,
																"src": "14385:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Router_$524",
																	"typeString": "contract Router"
																}
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getAmountsOut",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 523,
															"src": "14385:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
															}
														},
														"id": 621,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14385:40:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"id": 623,
													"indexExpression": {
														"hexValue": "31",
														"id": 622,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14426:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14385:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 593,
												"id": 624,
												"nodeType": "Return",
												"src": "14378:50:0"
											}
										]
									},
									"functionSelector": "303289bb",
									"id": 626,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "WBNBPrice",
									"nameLocation": "14188:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "routerAddress",
												"nameLocation": "14205:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "14198:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_Router_$524",
													"typeString": "contract Router"
												},
												"typeName": {
													"id": 586,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 585,
														"name": "Router",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 524,
														"src": "14198:6:0"
													},
													"referencedDeclaration": 524,
													"src": "14198:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Router_$524",
														"typeString": "contract Router"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "14228:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "14220:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14220:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14197:37:0"
									},
									"returnParameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "14257:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14257:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14256:9:0"
									},
									"scope": 627,
									"src": "14179:257:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 628,
							"src": "13649:1718:0",
							"usedErrors": []
						}
					],
					"src": "33:15334:0"
				},
				"id": 0
			}
		}
	}
}
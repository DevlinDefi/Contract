{
	"id": "3b76294e1be23c733e13d7d64bd08607",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/LpPrice.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function token0() external view returns (address);\r\n\r\n    function token1() external view returns (address);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n}\r\n\r\ninterface Router {\r\n    function getAmountsOut(uint amountIn, address[] memory path) external\r\n        view\r\n        returns (uint[] memory amounts);\r\n}\r\n\r\ncontract LpUtils {\r\n    address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd;\r\n    address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7;\r\n    uint256 amount = 1000000000000000000;\r\n\r\n    function price(Router routerAddress, address token) internal view returns(uint){\r\n        address[] memory path = new address[](3);\r\n        path[0] = token;\r\n        path[1] = WBNB;\r\n        path[2] = BUSD;\r\n        return routerAddress.getAmountsOut(amount,path)[2];\r\n    }\r\n\r\n    function CalcLpPrice(IERC20 lpAddress, Router routerAddress) external view returns(uint256){\r\n\r\n    \r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/LpPrice.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LpPrice.sol\":60:8334  library Address {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LpPrice.sol\":60:8334  library Address {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a049bee2355b160c9faca384fa7e890a74c7fe11ca8d80ce15afdd536710275764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a049bee2355b160c9faca384fa7e890a74c7fe11ca8d80ce15afdd536710275764736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 0x49 0xBE 0xE2 CALLDATALOAD JUMPDEST AND 0xC SWAP16 0xAC LOG3 DUP5 STATICCALL PUSH31 0x890A74C7FE11CA8D80CE15AFDD536710275764736F6C634300080700330000 ",
							"sourceMap": "60:8274:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a049bee2355b160c9faca384fa7e890a74c7fe11ca8d80ce15afdd536710275764736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 0x49 0xBE 0xE2 CALLDATALOAD JUMPDEST AND 0xC SWAP16 0xAC LOG3 DUP5 STATICCALL PUSH31 0x890A74C7FE11CA8D80CE15AFDD536710275764736F6C634300080700330000 ",
							"sourceMap": "60:8274:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a049bee2355b160c9faca384fa7e890a74c7fe11ca8d80ce15afdd536710275764736f6c63430008070033",
									".code": [
										{
											"begin": 60,
											"end": 8334,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0x87e39516ac81d6be54565bd530b851a0e96b4e9b9937a1cfcae4298e7de3dc33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://276a801d0e8655897097244c22f40b40a6af93969fe080f52291ba7316db0de4\",\"dweb:/ipfs/QmYcSN8utcri9J1YqzkjPrata1cVD23gfrtFkqJToBcK49\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0x87e39516ac81d6be54565bd530b851a0e96b4e9b9937a1cfcae4298e7de3dc33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://276a801d0e8655897097244c22f40b40a6af93969fe080f52291ba7316db0de4\",\"dweb:/ipfs/QmYcSN8utcri9J1YqzkjPrata1cVD23gfrtFkqJToBcK49\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"LpUtils": {
					"abi": [
						{
							"inputs": [],
							"name": "BUSD",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "lpAddress",
									"type": "address"
								},
								{
									"internalType": "contract Router",
									"name": "routerAddress",
									"type": "address"
								}
							],
							"name": "CalcLpPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WBNB",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LpPrice.sol\":8846:9450  contract LpUtils {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/LpPrice.sol\":8892:8934  0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n  0xae13d989dac2f0debff460ac112a837c89baa7cd\n    /* \"contracts/LpPrice.sol\":8870:8934  address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/LpPrice.sol\":8963:9005  0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n  0x78867bbeef44f2326bf8ddd1941a4439382ef2a7\n    /* \"contracts/LpPrice.sol\":8941:9005  address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n  0x01\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/LpPrice.sol\":9029:9048  1000000000000000000 */\n  0x0de0b6b3a7640000\n    /* \"contracts/LpPrice.sol\":9012:9048  uint256 amount = 1000000000000000000 */\n  0x02\n  sstore\n    /* \"contracts/LpPrice.sol\":8846:9450  contract LpUtils {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LpPrice.sol\":8846:9450  contract LpUtils {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x344e49d9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x484f4ea9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8dd95002\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/LpPrice.sol\":9340:9447  function CalcLpPrice(IERC20 lpAddress, Router routerAddress) external view returns(uint256){\r... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":8941:9005  address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":8870:8934  address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n    tag_5:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":9340:9447  function CalcLpPrice(IERC20 lpAddress, Router routerAddress) external view returns(uint256){\r... */\n    tag_9:\n        /* \"contracts/LpPrice.sol\":9423:9430  uint256 */\n      0x00\n        /* \"contracts/LpPrice.sol\":9340:9447  function CalcLpPrice(IERC20 lpAddress, Router routerAddress) external view returns(uint256){\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":8941:9005  address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n    tag_13:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":8870:8934  address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n    tag_17:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:174   */\n    tag_21:\n        /* \"#utility.yul\":67:72   */\n      0x00\n        /* \"#utility.yul\":105:111   */\n      dup2\n        /* \"#utility.yul\":92:112   */\n      calldataload\n        /* \"#utility.yul\":83:112   */\n      swap1\n      pop\n        /* \"#utility.yul\":121:168   */\n      tag_23\n        /* \"#utility.yul\":162:167   */\n      dup2\n        /* \"#utility.yul\":121:168   */\n      tag_24\n      jump\t// in\n    tag_23:\n        /* \"#utility.yul\":7:174   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":180:347   */\n    tag_25:\n        /* \"#utility.yul\":240:245   */\n      0x00\n        /* \"#utility.yul\":278:284   */\n      dup2\n        /* \"#utility.yul\":265:285   */\n      calldataload\n        /* \"#utility.yul\":256:285   */\n      swap1\n      pop\n        /* \"#utility.yul\":294:341   */\n      tag_27\n        /* \"#utility.yul\":335:340   */\n      dup2\n        /* \"#utility.yul\":294:341   */\n      tag_28\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":180:347   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":353:883   */\n    tag_8:\n        /* \"#utility.yul\":449:455   */\n      0x00\n        /* \"#utility.yul\":457:463   */\n      dup1\n        /* \"#utility.yul\":506:508   */\n      0x40\n        /* \"#utility.yul\":494:503   */\n      dup4\n        /* \"#utility.yul\":485:492   */\n      dup6\n        /* \"#utility.yul\":481:504   */\n      sub\n        /* \"#utility.yul\":477:509   */\n      slt\n        /* \"#utility.yul\":474:593   */\n      iszero\n      tag_30\n      jumpi\n        /* \"#utility.yul\":512:591   */\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":474:593   */\n    tag_30:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":657:724   */\n      tag_33\n        /* \"#utility.yul\":716:723   */\n      dup6\n        /* \"#utility.yul\":707:713   */\n      dup3\n        /* \"#utility.yul\":696:705   */\n      dup7\n        /* \"#utility.yul\":692:714   */\n      add\n        /* \"#utility.yul\":657:724   */\n      tag_21\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":647:724   */\n      swap3\n      pop\n        /* \"#utility.yul\":603:734   */\n      pop\n        /* \"#utility.yul\":773:775   */\n      0x20\n        /* \"#utility.yul\":799:866   */\n      tag_34\n        /* \"#utility.yul\":858:865   */\n      dup6\n        /* \"#utility.yul\":849:855   */\n      dup3\n        /* \"#utility.yul\":838:847   */\n      dup7\n        /* \"#utility.yul\":834:856   */\n      add\n        /* \"#utility.yul\":799:866   */\n      tag_25\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":789:866   */\n      swap2\n      pop\n        /* \"#utility.yul\":744:876   */\n      pop\n        /* \"#utility.yul\":353:883   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":889:1007   */\n    tag_35:\n        /* \"#utility.yul\":976:1000   */\n      tag_37\n        /* \"#utility.yul\":994:999   */\n      dup2\n        /* \"#utility.yul\":976:1000   */\n      tag_38\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":971:974   */\n      dup3\n        /* \"#utility.yul\":964:1001   */\n      mstore\n        /* \"#utility.yul\":889:1007   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1013:1131   */\n    tag_39:\n        /* \"#utility.yul\":1100:1124   */\n      tag_41\n        /* \"#utility.yul\":1118:1123   */\n      dup2\n        /* \"#utility.yul\":1100:1124   */\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":1095:1098   */\n      dup3\n        /* \"#utility.yul\":1088:1125   */\n      mstore\n        /* \"#utility.yul\":1013:1131   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1137:1359   */\n    tag_15:\n        /* \"#utility.yul\":1230:1234   */\n      0x00\n        /* \"#utility.yul\":1268:1270   */\n      0x20\n        /* \"#utility.yul\":1257:1266   */\n      dup3\n        /* \"#utility.yul\":1253:1271   */\n      add\n        /* \"#utility.yul\":1245:1271   */\n      swap1\n      pop\n        /* \"#utility.yul\":1281:1352   */\n      tag_44\n        /* \"#utility.yul\":1349:1350   */\n      0x00\n        /* \"#utility.yul\":1338:1347   */\n      dup4\n        /* \"#utility.yul\":1334:1351   */\n      add\n        /* \"#utility.yul\":1325:1331   */\n      dup5\n        /* \"#utility.yul\":1281:1352   */\n      tag_35\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":1137:1359   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1365:1587   */\n    tag_11:\n        /* \"#utility.yul\":1458:1462   */\n      0x00\n        /* \"#utility.yul\":1496:1498   */\n      0x20\n        /* \"#utility.yul\":1485:1494   */\n      dup3\n        /* \"#utility.yul\":1481:1499   */\n      add\n        /* \"#utility.yul\":1473:1499   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1580   */\n      tag_46\n        /* \"#utility.yul\":1577:1578   */\n      0x00\n        /* \"#utility.yul\":1566:1575   */\n      dup4\n        /* \"#utility.yul\":1562:1579   */\n      add\n        /* \"#utility.yul\":1553:1559   */\n      dup5\n        /* \"#utility.yul\":1509:1580   */\n      tag_39\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":1365:1587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1674:1770   */\n    tag_38:\n        /* \"#utility.yul\":1711:1718   */\n      0x00\n        /* \"#utility.yul\":1740:1764   */\n      tag_50\n        /* \"#utility.yul\":1758:1763   */\n      dup3\n        /* \"#utility.yul\":1740:1764   */\n      tag_51\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":1729:1764   */\n      swap1\n      pop\n        /* \"#utility.yul\":1674:1770   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1776:1886   */\n    tag_52:\n        /* \"#utility.yul\":1827:1834   */\n      0x00\n        /* \"#utility.yul\":1856:1880   */\n      tag_54\n        /* \"#utility.yul\":1874:1879   */\n      dup3\n        /* \"#utility.yul\":1856:1880   */\n      tag_38\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1845:1880   */\n      swap1\n      pop\n        /* \"#utility.yul\":1776:1886   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1892:2002   */\n    tag_55:\n        /* \"#utility.yul\":1943:1950   */\n      0x00\n        /* \"#utility.yul\":1972:1996   */\n      tag_57\n        /* \"#utility.yul\":1990:1995   */\n      dup3\n        /* \"#utility.yul\":1972:1996   */\n      tag_38\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":1961:1996   */\n      swap1\n      pop\n        /* \"#utility.yul\":1892:2002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2008:2134   */\n    tag_51:\n        /* \"#utility.yul\":2045:2052   */\n      0x00\n        /* \"#utility.yul\":2085:2127   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2078:2083   */\n      dup3\n        /* \"#utility.yul\":2074:2128   */\n      and\n        /* \"#utility.yul\":2063:2128   */\n      swap1\n      pop\n        /* \"#utility.yul\":2008:2134   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2140:2217   */\n    tag_42:\n        /* \"#utility.yul\":2177:2184   */\n      0x00\n        /* \"#utility.yul\":2206:2211   */\n      dup2\n        /* \"#utility.yul\":2195:2211   */\n      swap1\n      pop\n        /* \"#utility.yul\":2140:2217   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2346:2463   */\n    tag_32:\n        /* \"#utility.yul\":2455:2456   */\n      0x00\n        /* \"#utility.yul\":2452:2453   */\n      dup1\n        /* \"#utility.yul\":2445:2457   */\n      revert\n        /* \"#utility.yul\":2469:2619   */\n    tag_24:\n        /* \"#utility.yul\":2556:2594   */\n      tag_64\n        /* \"#utility.yul\":2588:2593   */\n      dup2\n        /* \"#utility.yul\":2556:2594   */\n      tag_52\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":2549:2554   */\n      dup2\n        /* \"#utility.yul\":2546:2595   */\n      eq\n        /* \"#utility.yul\":2536:2613   */\n      tag_65\n      jumpi\n        /* \"#utility.yul\":2609:2610   */\n      0x00\n        /* \"#utility.yul\":2606:2607   */\n      dup1\n        /* \"#utility.yul\":2599:2611   */\n      revert\n        /* \"#utility.yul\":2536:2613   */\n    tag_65:\n        /* \"#utility.yul\":2469:2619   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2625:2775   */\n    tag_28:\n        /* \"#utility.yul\":2712:2750   */\n      tag_67\n        /* \"#utility.yul\":2744:2749   */\n      dup2\n        /* \"#utility.yul\":2712:2750   */\n      tag_55\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":2705:2710   */\n      dup2\n        /* \"#utility.yul\":2702:2751   */\n      eq\n        /* \"#utility.yul\":2692:2769   */\n      tag_68\n      jumpi\n        /* \"#utility.yul\":2765:2766   */\n      0x00\n        /* \"#utility.yul\":2762:2763   */\n      dup1\n        /* \"#utility.yul\":2755:2767   */\n      revert\n        /* \"#utility.yul\":2692:2769   */\n    tag_68:\n        /* \"#utility.yul\":2625:2775   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201b5d8d989226f77cd6afbe42a4974c704793cca7d0aa40ed513725672a9dcfd664736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405273ae13d989dac2f0debff460ac112a837c89baa7cd6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507378867bbeef44f2326bf8ddd1941a4439382ef2a7600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550670de0b6b3a76400006002553480156100c557600080fd5b5061028b806100d56000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063344e49d914610046578063484f4ea9146100765780638dd9500214610094575b600080fd5b610060600480360381019061005b919061012e565b6100b2565b60405161006d91906101a7565b60405180910390f35b61007e6100ba565b60405161008b919061018c565b60405180910390f35b61009c6100e0565b6040516100a9919061018c565b60405180910390f35b600092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008135905061011381610227565b92915050565b6000813590506101288161023e565b92915050565b6000806040838503121561014557610144610222565b5b600061015385828601610104565b925050602061016485828601610119565b9150509250929050565b610177816101c2565b82525050565b61018681610218565b82525050565b60006020820190506101a1600083018461016e565b92915050565b60006020820190506101bc600083018461017d565b92915050565b60006101cd826101f8565b9050919050565b60006101df826101c2565b9050919050565b60006101f1826101c2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b610230816101d4565b811461023b57600080fd5b50565b610247816101e6565b811461025257600080fd5b5056fea26469706673582212201b5d8d989226f77cd6afbe42a4974c704793cca7d0aa40ed513725672a9dcfd664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0xAE13D989DAC2F0DEBFF460AC112A837C89BAA7CD PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x78867BBEEF44F2326BF8DDD1941A4439382EF2A7 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0xC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28B DUP1 PUSH2 0xD5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x344E49D9 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x484F4EA9 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0x8DD95002 EQ PUSH2 0x94 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x12E JUMP JUMPDEST PUSH2 0xB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0xBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH2 0xE0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x113 DUP2 PUSH2 0x227 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x128 DUP2 PUSH2 0x23E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x145 JUMPI PUSH2 0x144 PUSH2 0x222 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x153 DUP6 DUP3 DUP7 ADD PUSH2 0x104 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x164 DUP6 DUP3 DUP7 ADD PUSH2 0x119 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x177 DUP2 PUSH2 0x1C2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x186 DUP2 PUSH2 0x218 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD DUP3 PUSH2 0x1F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DF DUP3 PUSH2 0x1C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F1 DUP3 PUSH2 0x1C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x230 DUP2 PUSH2 0x1D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x23B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x247 DUP2 PUSH2 0x1E6 JUMP JUMPDEST DUP2 EQ PUSH2 0x252 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL 0x5D DUP14 SWAP9 SWAP3 0x26 0xF7 PUSH29 0xD6AFBE42A4974C704793CCA7D0AA40ED513725672A9DCFD664736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "8846:604:0:-:0;;;8892:42;8870:64;;;;;;;;;;;;;;;;;;;;8963:42;8941:64;;;;;;;;;;;;;;;;;;;;9029:19;9012:36;;8846:604;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BUSD_335": {
									"entryPoint": 186,
									"id": 335,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@CalcLpPrice_398": {
									"entryPoint": 178,
									"id": 398,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@WBNB_332": {
									"entryPoint": 224,
									"id": 332,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_IERC20_$317": {
									"entryPoint": 260,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_Router_$329": {
									"entryPoint": 281,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$317t_contract$_Router_$329": {
									"entryPoint": 302,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 366,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 423,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 450,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$317": {
									"entryPoint": 468,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_Router_$329": {
									"entryPoint": 486,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 504,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 536,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 546,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$317": {
									"entryPoint": 551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_Router_$329": {
									"entryPoint": 574,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2778:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "73:101:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "83:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "105:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "92:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "92:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "83:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "162:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$317",
																	"nodeType": "YulIdentifier",
																	"src": "121:40:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "121:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "121:47:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$317",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "51:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "59:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "67:5:1",
														"type": ""
													}
												],
												"src": "7:167:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "246:101:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "256:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "278:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "265:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "265:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "256:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "335:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_Router_$329",
																	"nodeType": "YulIdentifier",
																	"src": "294:40:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "294:47:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_Router_$329",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "224:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "232:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "240:5:1",
														"type": ""
													}
												],
												"src": "180:167:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "464:419:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "510:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "512:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "512:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "512:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "485:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "494:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "481:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "481:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "506:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "477:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "477:32:1"
															},
															"nodeType": "YulIf",
															"src": "474:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "603:131:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "618:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "632:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "622:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "647:77:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "696:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "707:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "692:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "692:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "716:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$317",
																			"nodeType": "YulIdentifier",
																			"src": "657:34:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "657:67:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "647:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "744:132:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "759:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "773:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "763:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "789:77:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "838:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "849:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "834:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "834:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "858:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_Router_$329",
																			"nodeType": "YulIdentifier",
																			"src": "799:34:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "799:67:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "789:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$317t_contract$_Router_$329",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "426:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "437:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "449:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "457:6:1",
														"type": ""
													}
												],
												"src": "353:530:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "954:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "971:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "976:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "976:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "964:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "964:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "964:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "942:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "949:3:1",
														"type": ""
													}
												],
												"src": "889:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1078:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1095:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1118:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1100:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1088:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1088:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1088:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1066:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1073:3:1",
														"type": ""
													}
												],
												"src": "1013:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1235:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1245:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1257:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1268:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1253:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1253:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1245:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1325:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1338:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1349:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1334:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1334:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1281:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1281:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1281:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1207:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1219:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1230:4:1",
														"type": ""
													}
												],
												"src": "1137:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1463:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1473:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1485:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1496:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1481:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1481:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1473:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1553:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1566:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1577:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1562:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1562:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1509:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1509:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1509:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1435:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1447:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1458:4:1",
														"type": ""
													}
												],
												"src": "1365:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1633:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1643:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1659:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1653:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1653:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1643:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1626:6:1",
														"type": ""
													}
												],
												"src": "1593:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1719:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1729:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1758:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1740:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1740:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1729:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1701:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1711:7:1",
														"type": ""
													}
												],
												"src": "1674:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1835:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1845:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1874:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1856:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1856:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1845:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$317",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1817:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1827:7:1",
														"type": ""
													}
												],
												"src": "1776:110:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1951:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1961:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1990:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1972:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1972:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1961:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_Router_$329",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1933:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1943:7:1",
														"type": ""
													}
												],
												"src": "1892:110:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2053:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2063:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2078:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2085:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2074:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2074:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2063:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2035:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2045:7:1",
														"type": ""
													}
												],
												"src": "2008:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2185:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2195:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2206:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2195:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2167:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2177:7:1",
														"type": ""
													}
												],
												"src": "2140:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2312:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2329:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2332:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2322:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2223:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2435:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2452:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2455:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2445:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2445:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2445:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "2346:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2526:93:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2597:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2606:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2609:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2599:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2599:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2599:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2549:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2588:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$317",
																					"nodeType": "YulIdentifier",
																					"src": "2556:31:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2556:38:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2546:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2546:49:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2539:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2539:57:1"
															},
															"nodeType": "YulIf",
															"src": "2536:77:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$317",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2519:5:1",
														"type": ""
													}
												],
												"src": "2469:150:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2682:93:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2753:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2762:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2765:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2755:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2755:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2755:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2705:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2744:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_Router_$329",
																					"nodeType": "YulIdentifier",
																					"src": "2712:31:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2712:38:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2702:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2702:49:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2695:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2695:57:1"
															},
															"nodeType": "YulIf",
															"src": "2692:77:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_Router_$329",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2675:5:1",
														"type": ""
													}
												],
												"src": "2625:150:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_contract$_IERC20_$317(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$317(value)\n    }\n\n    function abi_decode_t_contract$_Router_$329(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_Router_$329(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$317t_contract$_Router_$329(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$317(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_Router_$329(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$317(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_Router_$329(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_contract$_IERC20_$317(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$317(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_Router_$329(value) {\n        if iszero(eq(value, cleanup_t_contract$_Router_$329(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c8063344e49d914610046578063484f4ea9146100765780638dd9500214610094575b600080fd5b610060600480360381019061005b919061012e565b6100b2565b60405161006d91906101a7565b60405180910390f35b61007e6100ba565b60405161008b919061018c565b60405180910390f35b61009c6100e0565b6040516100a9919061018c565b60405180910390f35b600092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008135905061011381610227565b92915050565b6000813590506101288161023e565b92915050565b6000806040838503121561014557610144610222565b5b600061015385828601610104565b925050602061016485828601610119565b9150509250929050565b610177816101c2565b82525050565b61018681610218565b82525050565b60006020820190506101a1600083018461016e565b92915050565b60006020820190506101bc600083018461017d565b92915050565b60006101cd826101f8565b9050919050565b60006101df826101c2565b9050919050565b60006101f1826101c2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b610230816101d4565b811461023b57600080fd5b50565b610247816101e6565b811461025257600080fd5b5056fea26469706673582212201b5d8d989226f77cd6afbe42a4974c704793cca7d0aa40ed513725672a9dcfd664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x344E49D9 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x484F4EA9 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0x8DD95002 EQ PUSH2 0x94 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x12E JUMP JUMPDEST PUSH2 0xB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0xBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH2 0xE0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x113 DUP2 PUSH2 0x227 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x128 DUP2 PUSH2 0x23E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x145 JUMPI PUSH2 0x144 PUSH2 0x222 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x153 DUP6 DUP3 DUP7 ADD PUSH2 0x104 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x164 DUP6 DUP3 DUP7 ADD PUSH2 0x119 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x177 DUP2 PUSH2 0x1C2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x186 DUP2 PUSH2 0x218 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD DUP3 PUSH2 0x1F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DF DUP3 PUSH2 0x1C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F1 DUP3 PUSH2 0x1C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x230 DUP2 PUSH2 0x1D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x23B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x247 DUP2 PUSH2 0x1E6 JUMP JUMPDEST DUP2 EQ PUSH2 0x252 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL 0x5D DUP14 SWAP9 SWAP3 0x26 0xF7 PUSH29 0xD6AFBE42A4974C704793CCA7D0AA40ED513725672A9DCFD664736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "8846:604:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9340:107;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8941:64;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8870;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9340:107;9423:7;9340:107;;;;:::o;8941:64::-;;;;;;;;;;;;;:::o;8870:::-;;;;;;;;;;;;:::o;7:167:1:-;67:5;105:6;92:20;83:29;;121:47;162:5;121:47;:::i;:::-;7:167;;;;:::o;180:::-;240:5;278:6;265:20;256:29;;294:47;335:5;294:47;:::i;:::-;180:167;;;;:::o;353:530::-;449:6;457;506:2;494:9;485:7;481:23;477:32;474:119;;;512:79;;:::i;:::-;474:119;632:1;657:67;716:7;707:6;696:9;692:22;657:67;:::i;:::-;647:77;;603:131;773:2;799:67;858:7;849:6;838:9;834:22;799:67;:::i;:::-;789:77;;744:132;353:530;;;;;:::o;889:118::-;976:24;994:5;976:24;:::i;:::-;971:3;964:37;889:118;;:::o;1013:::-;1100:24;1118:5;1100:24;:::i;:::-;1095:3;1088:37;1013:118;;:::o;1137:222::-;1230:4;1268:2;1257:9;1253:18;1245:26;;1281:71;1349:1;1338:9;1334:17;1325:6;1281:71;:::i;:::-;1137:222;;;;:::o;1365:::-;1458:4;1496:2;1485:9;1481:18;1473:26;;1509:71;1577:1;1566:9;1562:17;1553:6;1509:71;:::i;:::-;1365:222;;;;:::o;1674:96::-;1711:7;1740:24;1758:5;1740:24;:::i;:::-;1729:35;;1674:96;;;:::o;1776:110::-;1827:7;1856:24;1874:5;1856:24;:::i;:::-;1845:35;;1776:110;;;:::o;1892:::-;1943:7;1972:24;1990:5;1972:24;:::i;:::-;1961:35;;1892:110;;;:::o;2008:126::-;2045:7;2085:42;2078:5;2074:54;2063:65;;2008:126;;;:::o;2140:77::-;2177:7;2206:5;2195:16;;2140:77;;;:::o;2346:117::-;2455:1;2452;2445:12;2469:150;2556:38;2588:5;2556:38;:::i;:::-;2549:5;2546:49;2536:77;;2609:1;2606;2599:12;2536:77;2469:150;:::o;2625:::-;2712:38;2744:5;2712:38;:::i;:::-;2705:5;2702:49;2692:77;;2765:1;2762;2755:12;2692:77;2625:150;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "130200",
								"executionCost": "70817",
								"totalCost": "201017"
							},
							"external": {
								"BUSD()": "2514",
								"CalcLpPrice(address,address)": "infinite",
								"WBNB()": "2533"
							},
							"internal": {
								"price(contract Router,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 8846,
									"end": 9450,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 8846,
									"end": 9450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8846,
									"end": 9450,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8892,
									"end": 8934,
									"name": "PUSH",
									"source": 0,
									"value": "AE13D989DAC2F0DEBFF460AC112A837C89BAA7CD"
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8963,
									"end": 9005,
									"name": "PUSH",
									"source": 0,
									"value": "78867BBEEF44F2326BF8DDD1941A4439382EF2A7"
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9029,
									"end": 9048,
									"name": "PUSH",
									"source": 0,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 9012,
									"end": 9048,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 9012,
									"end": 9048,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9450,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9450,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9450,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9450,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8846,
									"end": 9450,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9450,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8846,
									"end": 9450,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9450,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9450,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8846,
									"end": 9450,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9450,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9450,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8846,
									"end": 9450,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9450,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8846,
									"end": 9450,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8846,
									"end": 9450,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9450,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8846,
									"end": 9450,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201b5d8d989226f77cd6afbe42a4974c704793cca7d0aa40ed513725672a9dcfd664736f6c63430008070033",
									".code": [
										{
											"begin": 8846,
											"end": 9450,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8846,
											"end": 9450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8846,
											"end": 9450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9450,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9450,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8846,
											"end": 9450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9450,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8846,
											"end": 9450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9450,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9450,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8846,
											"end": 9450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9450,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9450,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8846,
											"end": 9450,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9450,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8846,
											"end": 9450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9450,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8846,
											"end": 9450,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9450,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 8846,
											"end": 9450,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9450,
											"name": "PUSH",
											"source": 0,
											"value": "344E49D9"
										},
										{
											"begin": 8846,
											"end": 9450,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8846,
											"end": 9450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9450,
											"name": "PUSH",
											"source": 0,
											"value": "484F4EA9"
										},
										{
											"begin": 8846,
											"end": 9450,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8846,
											"end": 9450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9450,
											"name": "PUSH",
											"source": 0,
											"value": "8DD95002"
										},
										{
											"begin": 8846,
											"end": 9450,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8846,
											"end": 9450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9450,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8846,
											"end": 9450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9450,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8846,
											"end": 9450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9450,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9447,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9340,
											"end": 9447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9340,
											"end": 9447,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9340,
											"end": 9447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9447,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9447,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9447,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9447,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 9340,
											"end": 9447,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 9340,
											"end": 9447,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9340,
											"end": 9447,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 9340,
											"end": 9447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9340,
											"end": 9447,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9340,
											"end": 9447,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9340,
											"end": 9447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9447,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9340,
											"end": 9447,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 9340,
											"end": 9447,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 9340,
											"end": 9447,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9340,
											"end": 9447,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 9340,
											"end": 9447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9447,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9340,
											"end": 9447,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9447,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9447,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9447,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9447,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9340,
											"end": 9447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9423,
											"end": 9430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9340,
											"end": 9447,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9447,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9447,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 174,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 7,
											"end": 174,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 67,
											"end": 72,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 105,
											"end": 111,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 92,
											"end": 112,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 83,
											"end": 112,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 83,
											"end": 112,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 121,
											"end": 168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 162,
											"end": 167,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 121,
											"end": 168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 121,
											"end": 168,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 121,
											"end": 168,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 121,
											"end": 168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 174,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 174,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 174,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 174,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 174,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 180,
											"end": 347,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 180,
											"end": 347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 240,
											"end": 245,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 284,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 265,
											"end": 285,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 256,
											"end": 285,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 256,
											"end": 285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 294,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 335,
											"end": 340,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 294,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 294,
											"end": 341,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 294,
											"end": 341,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 294,
											"end": 341,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 180,
											"end": 347,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 180,
											"end": 347,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 180,
											"end": 347,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 180,
											"end": 347,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 180,
											"end": 347,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 353,
											"end": 883,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 353,
											"end": 883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 449,
											"end": 455,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 457,
											"end": 463,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 506,
											"end": 508,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 494,
											"end": 503,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 485,
											"end": 492,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 481,
											"end": 504,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 477,
											"end": 509,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 474,
											"end": 593,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 474,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 474,
											"end": 593,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 512,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 512,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 512,
											"end": 591,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 512,
											"end": 591,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 512,
											"end": 591,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 474,
											"end": 593,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 474,
											"end": 593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 716,
											"end": 723,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 707,
											"end": 713,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 696,
											"end": 705,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 692,
											"end": 714,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 657,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 657,
											"end": 724,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 657,
											"end": 724,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 657,
											"end": 724,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 647,
											"end": 724,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 647,
											"end": 724,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 603,
											"end": 734,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 773,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 799,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 858,
											"end": 865,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 838,
											"end": 847,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 834,
											"end": 856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 799,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 799,
											"end": 866,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 799,
											"end": 866,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 799,
											"end": 866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 789,
											"end": 866,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 789,
											"end": 866,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 744,
											"end": 876,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 353,
											"end": 883,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 353,
											"end": 883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 353,
											"end": 883,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 353,
											"end": 883,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 353,
											"end": 883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 353,
											"end": 883,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 889,
											"end": 1007,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 889,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 976,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 994,
											"end": 999,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 976,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 976,
											"end": 1000,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 976,
											"end": 1000,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 976,
											"end": 1000,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 971,
											"end": 974,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 964,
											"end": 1001,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 889,
											"end": 1007,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 889,
											"end": 1007,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 889,
											"end": 1007,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1013,
											"end": 1131,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1013,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1118,
											"end": 1123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1100,
											"end": 1124,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1100,
											"end": 1124,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1100,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1095,
											"end": 1098,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1125,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1131,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1137,
											"end": 1359,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1137,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1230,
											"end": 1234,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 1270,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1257,
											"end": 1266,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1253,
											"end": 1271,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1245,
											"end": 1271,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1245,
											"end": 1271,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1281,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1349,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1338,
											"end": 1347,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1334,
											"end": 1351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 1331,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1281,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1281,
											"end": 1352,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1281,
											"end": 1352,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1281,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1359,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1359,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1359,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1365,
											"end": 1587,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1365,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1496,
											"end": 1498,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1485,
											"end": 1494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1481,
											"end": 1499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1473,
											"end": 1499,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1473,
											"end": 1499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1577,
											"end": 1578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1566,
											"end": 1575,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1562,
											"end": 1579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1559,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1509,
											"end": 1580,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1509,
											"end": 1580,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1509,
											"end": 1580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1365,
											"end": 1587,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1365,
											"end": 1587,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1365,
											"end": 1587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1365,
											"end": 1587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1365,
											"end": 1587,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1674,
											"end": 1770,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1674,
											"end": 1770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1711,
											"end": 1718,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1740,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1758,
											"end": 1763,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1740,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1740,
											"end": 1764,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1740,
											"end": 1764,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1740,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1770,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1770,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1770,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1776,
											"end": 1886,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1776,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1827,
											"end": 1834,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1856,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1874,
											"end": 1879,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1856,
											"end": 1880,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1856,
											"end": 1880,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1856,
											"end": 1880,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1845,
											"end": 1880,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1845,
											"end": 1880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1886,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1886,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1886,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1886,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1892,
											"end": 2002,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1892,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1943,
											"end": 1950,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1972,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1990,
											"end": 1995,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1972,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1972,
											"end": 1996,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1972,
											"end": 1996,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1972,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1961,
											"end": 1996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1961,
											"end": 1996,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1892,
											"end": 2002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1892,
											"end": 2002,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1892,
											"end": 2002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1892,
											"end": 2002,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2008,
											"end": 2134,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2008,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2045,
											"end": 2052,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2085,
											"end": 2127,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2078,
											"end": 2083,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2128,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2063,
											"end": 2128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2063,
											"end": 2128,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2134,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2134,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2134,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2134,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2140,
											"end": 2217,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2140,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2177,
											"end": 2184,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2206,
											"end": 2211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2195,
											"end": 2211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2195,
											"end": 2211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2217,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2217,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2346,
											"end": 2463,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2346,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2456,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2452,
											"end": 2453,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2445,
											"end": 2457,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2469,
											"end": 2619,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2469,
											"end": 2619,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2556,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2588,
											"end": 2593,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2556,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2556,
											"end": 2594,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2556,
											"end": 2594,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2556,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2549,
											"end": 2554,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2546,
											"end": 2595,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 2613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2536,
											"end": 2613,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2609,
											"end": 2610,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2606,
											"end": 2607,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2599,
											"end": 2611,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 2613,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2536,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2469,
											"end": 2619,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2469,
											"end": 2619,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2625,
											"end": 2775,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2625,
											"end": 2775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2712,
											"end": 2750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2744,
											"end": 2749,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2712,
											"end": 2750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2712,
											"end": 2750,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2712,
											"end": 2750,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2712,
											"end": 2750,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2705,
											"end": 2710,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2702,
											"end": 2751,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2692,
											"end": 2769,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2766,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2762,
											"end": 2763,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2767,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2769,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2692,
											"end": 2769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2625,
											"end": 2775,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2625,
											"end": 2775,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"BUSD()": "484f4ea9",
							"CalcLpPrice(address,address)": "344e49d9",
							"WBNB()": "8dd95002"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BUSD\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"lpAddress\",\"type\":\"address\"},{\"internalType\":\"contract Router\",\"name\":\"routerAddress\",\"type\":\"address\"}],\"name\":\"CalcLpPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WBNB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"LpUtils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0x87e39516ac81d6be54565bd530b851a0e96b4e9b9937a1cfcae4298e7de3dc33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://276a801d0e8655897097244c22f40b40a6af93969fe080f52291ba7316db0de4\",\"dweb:/ipfs/QmYcSN8utcri9J1YqzkjPrata1cVD23gfrtFkqJToBcK49\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 332,
								"contract": "contracts/LpPrice.sol:LpUtils",
								"label": "WBNB",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 335,
								"contract": "contracts/LpPrice.sol:LpUtils",
								"label": "BUSD",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 338,
								"contract": "contracts/LpPrice.sol:LpUtils",
								"label": "amount",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Router": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getAmountsOut(uint256,address[])": "d06ca61f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"Router\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0x87e39516ac81d6be54565bd530b851a0e96b4e9b9937a1cfcae4298e7de3dc33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://276a801d0e8655897097244c22f40b40a6af93969fe080f52291ba7316db0de4\",\"dweb:/ipfs/QmYcSN8utcri9J1YqzkjPrata1cVD23gfrtFkqJToBcK49\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/LpPrice.sol": {
				"ast": {
					"absolutePath": "contracts/LpPrice.sol",
					"exportedSymbols": {
						"Address": [
							293
						],
						"IERC20": [
							317
						],
						"LpUtils": [
							399
						],
						"Router": [
							329
						]
					},
					"id": 400,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 293,
							"linearizedBaseContracts": [
								293
							],
							"name": "Address",
							"nameLocation": "68:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "1134:260:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 9,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4,
																"src": "1363:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 10,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1363:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1363:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1363:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 8,
												"id": 14,
												"nodeType": "Return",
												"src": "1356:30:0"
											}
										]
									},
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "83:979:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 16,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1077:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1096:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "1088:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1088:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1087:17:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "1128:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 6,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1128:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1127:6:0"
									},
									"scope": 293,
									"src": "1068:326:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "2400:246:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 27,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2427:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$293",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$293",
																				"typeString": "library Address"
																			}
																		],
																		"id": 26,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2419:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 25,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2419:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2419:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2419:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 30,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "2444:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2419:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2452:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 24,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2411:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2411:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 34,
												"nodeType": "ExpressionStatement",
												"src": "2411:73:0"
											},
											{
												"assignments": [
													36,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 36,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2503:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 49,
														"src": "2498:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 35,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2498:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 43,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2546:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 37,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "2516:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2516:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 40,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 39,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "2538:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2516:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2516:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2497:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 45,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "2568:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2577:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2560:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2560:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "2560:78:0"
											}
										]
									},
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "1402:921:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 50,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2338:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2364:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "2348:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2348:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2383:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "2375:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2375:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2347:43:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2400:0:0"
									},
									"scope": 293,
									"src": "2329:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "3497:86:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 61,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "3528:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 62,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "3536:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3542:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 60,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															67,
															87
														],
														"referencedDeclaration": 87,
														"src": "3515:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3515:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 59,
												"id": 65,
												"nodeType": "Return",
												"src": "3508:67:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "2654:748:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3417:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3438:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "3430:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3430:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3459:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "3446:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 54,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3446:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3429:35:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "3483:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 57,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3483:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3482:14:0"
									},
									"scope": 293,
									"src": "3408:175:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "3964:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 80,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "4004:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 81,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "4012:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4018:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 83,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 74,
															"src": "4021:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 79,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															107,
															157
														],
														"referencedDeclaration": 157,
														"src": "3982:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3982:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 78,
												"id": 85,
												"nodeType": "Return",
												"src": "3975:59:0"
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "3591:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3822:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3853:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3845:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3845:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3883:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3870:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 71,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3870:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3912:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3898:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 73,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3898:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3834:97:0"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3950:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 76,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3950:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3949:14:0"
									},
									"scope": 293,
									"src": "3813:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "4564:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 100,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "4604:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 101,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "4612:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 102,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "4618:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4625:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 99,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															107,
															157
														],
														"referencedDeclaration": 157,
														"src": "4582:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4582:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 98,
												"id": 105,
												"nodeType": "Return",
												"src": "4575:94:0"
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "4050:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4426:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4466:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "4458:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4458:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4496:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "4483:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 91,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4483:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4519:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "4511:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 93,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4511:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4447:84:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "4550:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 96,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4550:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4549:14:0"
									},
									"scope": 293,
									"src": "4417:260:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "5117:326:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 124,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5144:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$293",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$293",
																				"typeString": "library Address"
																			}
																		],
																		"id": 123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5136:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 122,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5136:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5136:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5136:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 127,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "5161:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5136:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5168:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 121,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5128:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5128:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "5128:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 134,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 110,
																	"src": "5239:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 133,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "5228:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5228:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5248:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 132,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5220:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5220:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 138,
												"nodeType": "ExpressionStatement",
												"src": "5220:60:0"
											},
											{
												"assignments": [
													140,
													142
												],
												"declarations": [
													{
														"constant": false,
														"id": 140,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5299:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 156,
														"src": "5294:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 139,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5294:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 142,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5321:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 156,
														"src": "5308:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 141,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5308:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 149,
												"initialValue": {
													"arguments": [
														{
															"id": 147,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "5361:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 143,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "5335:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5335:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 145,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "5354:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5335:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5335:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5293:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 151,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "5401:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 152,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "5410:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 153,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "5422:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 150,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "5384:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5384:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 120,
												"id": 155,
												"nodeType": "Return",
												"src": "5377:58:0"
											}
										]
									},
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "4685:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4942:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4982:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "4974:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4974:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5012:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "4999:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 111,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4999:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5035:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "5027:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5027:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5065:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "5051:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 115,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5051:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4963:121:0"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "5103:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 118,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5103:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5102:14:0"
									},
									"scope": 293,
									"src": "4933:510:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "5728:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 168,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "5765:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 169,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "5773:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5779:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 167,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															174,
															209
														],
														"referencedDeclaration": 209,
														"src": "5746:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5746:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 166,
												"id": 172,
												"nodeType": "Return",
												"src": "5739:80:0"
											}
										]
									},
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "5451:171:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5637:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5664:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "5656:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5656:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "5672:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5672:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5655:35:0"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "5714:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 164,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5714:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5713:14:0"
									},
									"scope": 293,
									"src": "5628:199:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "6181:233:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 188,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 177,
																	"src": "6211:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 187,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "6200:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6200:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6220:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 186,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6192:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6192:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "6192:67:0"
											},
											{
												"assignments": [
													194,
													196
												],
												"declarations": [
													{
														"constant": false,
														"id": 194,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6278:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 208,
														"src": "6273:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 193,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6273:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 196,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6300:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 208,
														"src": "6287:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 195,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6287:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 201,
												"initialValue": {
													"arguments": [
														{
															"id": 199,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "6332:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 197,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "6314:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6314:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6314:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6272:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 203,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "6372:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 204,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "6381:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 205,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "6393:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 202,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "6355:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6355:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 185,
												"id": 207,
												"nodeType": "Return",
												"src": "6348:58:0"
											}
										]
									},
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "5835:178:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6028:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6065:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "6057:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6057:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6095:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "6082:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 178,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6082:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6124:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "6110:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 180,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6110:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6046:97:0"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "6167:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 183,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6167:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6166:14:0"
									},
									"scope": 293,
									"src": "6019:395:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 225,
										"nodeType": "Block",
										"src": "6698:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 220,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "6737:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 221,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "6745:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6751:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 219,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															226,
															261
														],
														"referencedDeclaration": 261,
														"src": "6716:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6716:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 218,
												"id": 224,
												"nodeType": "Return",
												"src": "6709:84:0"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "6422:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6610:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6639:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "6631:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6631:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6660:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "6647:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 213,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6647:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6630:35:0"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "6684:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 216,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6684:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6683:14:0"
									},
									"scope": 293,
									"src": "6601:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "7154:237:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 240,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 229,
																	"src": "7184:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 239,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "7173:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7173:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 238,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7165:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7165:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 244,
												"nodeType": "ExpressionStatement",
												"src": "7165:69:0"
											},
											{
												"assignments": [
													246,
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 246,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7253:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "7248:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 245,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7248:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7275:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "7262:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 247,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7262:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 253,
												"initialValue": {
													"arguments": [
														{
															"id": 251,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "7309:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 249,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "7289:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7289:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7289:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7247:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 255,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "7349:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 256,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "7358:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 257,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "7370:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 254,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "7332:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7332:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 237,
												"id": 259,
												"nodeType": "Return",
												"src": "7325:58:0"
											}
										]
									},
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "6809:180:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7004:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7043:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "7035:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7035:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7073:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "7060:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 230,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7060:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7102:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "7088:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 232,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7088:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7024:97:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "7140:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 235,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7140:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7139:14:0"
									},
									"scope": 293,
									"src": "6995:396:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 291,
										"nodeType": "Block",
										"src": "7783:548:0",
										"statements": [
											{
												"condition": {
													"id": 273,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 264,
													"src": "7798:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 289,
													"nodeType": "Block",
													"src": "7857:467:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 277,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 266,
																		"src": "7943:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7943:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7963:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7943:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 287,
																"nodeType": "Block",
																"src": "8258:55:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 284,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 268,
																					"src": "8284:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 283,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8277:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8277:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 286,
																		"nodeType": "ExpressionStatement",
																		"src": "8277:20:0"
																	}
																]
															},
															"id": 288,
															"nodeType": "IfStatement",
															"src": "7939:374:0",
															"trueBody": {
																"id": 282,
																"nodeType": "Block",
																"src": "7966:286:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8089:148:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8112:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8141:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8135:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8135:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8116:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8185:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8189:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8181:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8181:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8202:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8174:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8174:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8174:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 266,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8141:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 266,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8189:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 281,
																		"nodeType": "InlineAssembly",
																		"src": "8080:157:0"
																	}
																]
															}
														}
													]
												},
												"id": 290,
												"nodeType": "IfStatement",
												"src": "7794:530:0",
												"trueBody": {
													"id": 276,
													"nodeType": "Block",
													"src": "7807:44:0",
													"statements": [
														{
															"expression": {
																"id": 274,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 266,
																"src": "7829:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 272,
															"id": 275,
															"nodeType": "Return",
															"src": "7822:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "7399:214:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7628:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "7655:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7655:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7691:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "7678:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 265,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7678:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7726:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "7712:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 267,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7712:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7644:101:0"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "7769:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 270,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7769:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7768:14:0"
									},
									"scope": 293,
									"src": "7619:712:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 400,
							"src": "60:8274:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 317,
							"linearizedBaseContracts": [
								317
							],
							"name": "IERC20",
							"nameLocation": "8348:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 294,
										"nodeType": "StructuredDocumentation",
										"src": "8362:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 299,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "8445:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8456:2:0"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "8482:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8482:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8481:9:0"
									},
									"scope": 317,
									"src": "8436:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0dfe1681",
									"id": 304,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "8508:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8514:2:0"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "8540:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8540:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8539:9:0"
									},
									"scope": 317,
									"src": "8499:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d21220a7",
									"id": 309,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "8566:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8572:2:0"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "8598:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8598:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8597:9:0"
									},
									"scope": 317,
									"src": "8557:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 316,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "8624:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8642:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "8634:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8633:17:0"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "8674:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8674:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8673:9:0"
									},
									"scope": 317,
									"src": "8615:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 400,
							"src": "8338:348:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 329,
							"linearizedBaseContracts": [
								329
							],
							"name": "Router",
							"nameLocation": "8700:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d06ca61f",
									"id": 328,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "8723:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "8742:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "8737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 318,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8737:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "8769:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "8752:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 320,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "8752:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 321,
													"nodeType": "ArrayTypeName",
													"src": "8752:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8736:38:0"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "8830:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "8816:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 324,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "8816:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 325,
													"nodeType": "ArrayTypeName",
													"src": "8816:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8815:23:0"
									},
									"scope": 329,
									"src": "8714:125:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 400,
							"src": "8690:152:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 399,
							"linearizedBaseContracts": [
								399
							],
							"name": "LpUtils",
							"nameLocation": "8855:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8dd95002",
									"id": 332,
									"mutability": "mutable",
									"name": "WBNB",
									"nameLocation": "8885:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 399,
									"src": "8870:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 330,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "8870:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307861653133643938396461433266306445624666343630614331313261383337433839424161376364",
										"id": 331,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8892:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "484f4ea9",
									"id": 335,
									"mutability": "mutable",
									"name": "BUSD",
									"nameLocation": "8956:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 399,
									"src": "8941:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 333,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "8941:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307837383836374262456546343466323332366246384444643139343161343433393338324546324137",
										"id": 334,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8963:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 338,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "9020:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 399,
									"src": "9012:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 336,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9012:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030303030303030303030303030303030",
										"id": 337,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9029:19:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1000000000000000000"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 385,
										"nodeType": "Block",
										"src": "9136:196:0",
										"statements": [
											{
												"assignments": [
													352
												],
												"declarations": [
													{
														"constant": false,
														"id": 352,
														"mutability": "mutable",
														"name": "path",
														"nameLocation": "9164:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 385,
														"src": "9147:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 350,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9147:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 351,
															"nodeType": "ArrayTypeName",
															"src": "9147:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 358,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "33",
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9185:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															}
														],
														"id": 355,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "9171:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 353,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9175:7:0",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 354,
															"nodeType": "ArrayTypeName",
															"src": "9175:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9171:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9147:40:0"
											},
											{
												"expression": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 359,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "9198:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 361,
														"indexExpression": {
															"hexValue": "30",
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9203:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9198:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 362,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "9208:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9198:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 364,
												"nodeType": "ExpressionStatement",
												"src": "9198:15:0"
											},
											{
												"expression": {
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 365,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "9224:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 367,
														"indexExpression": {
															"hexValue": "31",
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9229:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9224:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 368,
														"name": "WBNB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "9234:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9224:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 370,
												"nodeType": "ExpressionStatement",
												"src": "9224:14:0"
											},
											{
												"expression": {
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 371,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "9249:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 373,
														"indexExpression": {
															"hexValue": "32",
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9254:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9249:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 374,
														"name": "BUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "9259:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9249:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "9249:14:0"
											},
											{
												"expression": {
													"baseExpression": {
														"arguments": [
															{
																"id": 379,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 338,
																"src": "9309:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 380,
																"name": "path",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 352,
																"src": "9316:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															],
															"expression": {
																"id": 377,
																"name": "routerAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "9281:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Router_$329",
																	"typeString": "contract Router"
																}
															},
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getAmountsOut",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 328,
															"src": "9281:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
															}
														},
														"id": 381,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9281:40:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"id": 383,
													"indexExpression": {
														"hexValue": "32",
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9322:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9281:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 347,
												"id": 384,
												"nodeType": "Return",
												"src": "9274:50:0"
											}
										]
									},
									"id": 386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "price",
									"nameLocation": "9066:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "routerAddress",
												"nameLocation": "9079:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "9072:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_Router_$329",
													"typeString": "contract Router"
												},
												"typeName": {
													"id": 340,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 339,
														"name": "Router",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 329,
														"src": "9072:6:0"
													},
													"referencedDeclaration": 329,
													"src": "9072:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Router_$329",
														"typeString": "contract Router"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9102:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "9094:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9094:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9071:37:0"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "9131:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9131:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9130:6:0"
									},
									"scope": 399,
									"src": "9057:275:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "9431:16:0",
										"statements": []
									},
									"functionSelector": "344e49d9",
									"id": 398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "CalcLpPrice",
									"nameLocation": "9349:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "lpAddress",
												"nameLocation": "9368:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "9361:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$317",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 388,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 387,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 317,
														"src": "9361:6:0"
													},
													"referencedDeclaration": 317,
													"src": "9361:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$317",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "routerAddress",
												"nameLocation": "9386:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "9379:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_Router_$329",
													"typeString": "contract Router"
												},
												"typeName": {
													"id": 391,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 390,
														"name": "Router",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 329,
														"src": "9379:6:0"
													},
													"referencedDeclaration": 329,
													"src": "9379:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Router_$329",
														"typeString": "contract Router"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9360:40:0"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "9423:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9423:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9422:9:0"
									},
									"scope": 399,
									"src": "9340:107:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 400,
							"src": "8846:604:0",
							"usedErrors": []
						}
					],
					"src": "33:9417:0"
				},
				"id": 0
			}
		}
	}
}
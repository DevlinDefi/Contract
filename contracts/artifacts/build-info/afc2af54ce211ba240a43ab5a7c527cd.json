{
	"id": "afc2af54ce211ba240a43ab5a7c527cd",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/NFTMasterChef.sol": {
				"content": "/**\r\n *Submitted for verification at BscScan.com on 2022-02-21\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     * - Subtraction cannot overflow.\r\n     *\r\n     * _Available since v2.4.0._\r\n     */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     *\r\n     * _Available since v2.4.0._\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        // Solidity only automatically asserts when dividing by 0\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts with custom message when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     *\r\n     * _Available since v2.4.0._\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    function mint(address account, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    event Mint(address indexed minter, address indexed to, uint256 amount);\r\n}\r\n\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nlibrary SafeERC20 {\r\n    using Address for address;\r\n\r\n    function safeTransfer(\r\n        IERC20 token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(\r\n        IERC20 token,\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IERC20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        require(\r\n            (value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        unchecked {\r\n            uint256 oldAllowance = token.allowance(address(this), spender);\r\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\r\n            uint256 newAllowance = oldAllowance - value;\r\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n\r\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\r\n        if (returndata.length > 0) {\r\n            // Return data is optional\r\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\r\n        }\r\n    }\r\n}\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n\r\ninterface IMigratorChef {\r\n    function migrate(IERC20 token) external returns (IERC20);\r\n}\r\n\r\ninterface IERC721 {\r\n    function createNFT(address to) external;\r\n}\r\n\r\n// MasterChef is the master of Power. He can make Power and he is a fair guy.\r\n//\r\n// Note that it's ownable and the owner wields tremendous power. The ownership\r\n// will be transferred to a governance smart contract once Power is sufficiently\r\n// distributed and the community can show to govern itself.\r\n//\r\n// Have fun reading it. Hopefully it's bug-free. God bless.\r\ncontract NFTMasterChef is Ownable {\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n    // Info of each user.\r\n    struct UserInfo {\r\n        uint256 amount; // How many LP tokens the user has provided.\r\n        uint256 rewardDebt; // Reward debt. See explanation below.\r\n        //\r\n        // We do some fancy math here. Basically, any point in time, the amount of Powers\r\n        // entitled to a user but is pending to be distributed is:\r\n        //\r\n        //   pending reward = (user.amount * pool.accPowerPerShare) - user.rewardDebt\r\n        //\r\n        // Whenever a user deposits or withdraws LP tokens to a pool. Here's what happens:\r\n        //   1. The pool's `accPowerPerShare` (and `lastRewardBlock`) gets updated.\r\n        //   2. User receives the pending reward sent to his/her address.\r\n        //   3. User's `amount` gets updated.\r\n        //   4. User's `rewardDebt` gets updated.\r\n    }\r\n    // Info of each pool.\r\n    struct PoolInfo {\r\n        IERC20 lpToken; // Address of LP token contract.\r\n        uint256 allocPoint; // How many allocation points assigned to this pool. Powers to distribute per block.\r\n        uint256 lastRewardBlock; // Last block number that Powers distribution occurs.\r\n        uint256 accPowerPerShare; // Accumulated Powers per share, times 1e12. See below.\r\n    }\r\n\r\n    struct NFTsInfo {\r\n        IERC721 NFT;\r\n        uint256 power;\r\n    }\r\n\r\n    NFTsInfo[] public nftsInfo;\r\n\r\n    // The Power TOKEN!\r\n    IERC20 public DDT;\r\n    // Power tokens created per block.\r\n    uint256 public PowerPerBlock;\r\n    // Bonus muliplier for early Power makers.\r\n    uint256 public BONUS_MULTIPLIER = 1;\r\n    // The migrator contract. It has a lot of power. Can only be set through governance (owner).\r\n    IMigratorChef public migrator;\r\n    // Info of each pool.\r\n    PoolInfo[] public poolInfo;\r\n    // Info of each user that stakes LP tokens.\r\n    mapping(uint256 => mapping(address => UserInfo)) public userInfo;\r\n    // Total allocation poitns. Must be the sum of all allocation points in all pools.\r\n    uint256 public totalAllocPoint = 0;\r\n    // The block number when Power mining starts.\r\n    uint256 public startBlock;\r\n\r\n    address public NFTStakeAddress;\r\n    address public DDTMasterchef;\r\n\r\n    mapping(address => uint256) public powerBalance;\r\n\r\n    event Deposit(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event Withdraw(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event EmergencyWithdraw(\r\n        address indexed user,\r\n        uint256 indexed pid,\r\n        uint256 amount\r\n    );\r\n\r\n    constructor(\r\n        IERC20 _DDT,\r\n        uint256 _PowerPerBlock,\r\n        uint256 _startBlock\r\n    ) {\r\n        DDT = _DDT;\r\n        PowerPerBlock = _PowerPerBlock;\r\n        startBlock = _startBlock;\r\n        \r\n        // staking pool\r\n        poolInfo.push(PoolInfo({\r\n            lpToken: DDT,\r\n            allocPoint: 1000,\r\n            lastRewardBlock: startBlock,\r\n            accPowerPerShare: 0\r\n        }));\r\n\r\n        totalAllocPoint = 1000;\r\n\r\n    }\r\n\r\n    function updateNFTStakeAddress(address _NFTStakeAddress) public onlyOwner{\r\n        NFTStakeAddress = _NFTStakeAddress;\r\n    }\r\n\r\n    function getPowerBalance(address account) public view returns(uint256) {\r\n        return powerBalance[account];\r\n    }\r\n\r\n    function addNFT(IERC721 _NFT, uint256 _power) public onlyOwner {\r\n        nftsInfo.push(\r\n            NFTsInfo({\r\n                NFT: _NFT,\r\n                power: _power\r\n            })\r\n        );\r\n    }\r\n\r\n    function updateNFT(uint256 level, uint256 _power) public onlyOwner {\r\n        nftsInfo[level].power = _power;\r\n    }\r\n\r\n    function claimNFTReward(uint256 level, uint256 _pid) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        uint256 accPowerPerShare = pool.accPowerPerShare;\r\n        uint256 lpSupply = pool.lpToken.balanceOf(address(this));\r\n        if (block.number > pool.lastRewardBlock && lpSupply != 0) {\r\n            uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number);\r\n            uint256 PowerReward = multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint);\r\n            accPowerPerShare = accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply));\r\n        }\r\n        uint256 pending = user.amount.mul(accPowerPerShare).div(1e12).sub(user.rewardDebt);\r\n        NFTsInfo storage nft = nftsInfo[level];\r\n        uint256 total = pending.add(powerBalance[msg.sender]);\r\n        if(total > nft.power){\r\n            if(_pid == 0){\r\n                leaveStaking(0);\r\n            }\r\n            if(_pid != 0){\r\n                withdraw(_pid,0);\r\n            }\r\n        }\r\n        require(nft.power < powerBalance[msg.sender], \"Power is not enough\");\r\n        powerBalance[msg.sender] = powerBalance[msg.sender].sub(nft.power);\r\n        nft.NFT.createNFT(msg.sender);\r\n    }\r\n\r\n    function updateMultiplier(uint256 multiplierNumber) public onlyOwner {\r\n        BONUS_MULTIPLIER = multiplierNumber;\r\n    }\r\n\r\n    function poolLength() external view returns (uint256) {\r\n        return poolInfo.length;\r\n    }\r\n\r\n    // Add a new lp to the pool. Can only be called by the owner.\r\n    // XXX DO NOT add the same LP token more than once. Rewards will be messed up if you do.\r\n    function add( uint256 _allocPoint, IERC20 _lpToken, bool _withUpdate ) public onlyOwner {\r\n        if (_withUpdate) {\r\n            massUpdatePools();\r\n        }\r\n        uint256 lastRewardBlock = block.number > startBlock ? block.number : startBlock;\r\n        totalAllocPoint = totalAllocPoint.add(_allocPoint);\r\n        poolInfo.push(\r\n            PoolInfo({\r\n                lpToken: _lpToken,\r\n                allocPoint: _allocPoint,\r\n                lastRewardBlock: lastRewardBlock,\r\n                accPowerPerShare: 0\r\n            })\r\n        );\r\n    }\r\n\r\n    // Update the given pool's Power allocation point. Can only be called by the owner.\r\n    function set( uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner {\r\n        if (_withUpdate) {\r\n            massUpdatePools();\r\n        }\r\n        totalAllocPoint = totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint);\r\n        poolInfo[_pid].allocPoint = _allocPoint;\r\n    }\r\n\r\n    // Set the migrator contract. Can only be called by the owner.\r\n    function setMigrator(IMigratorChef _migrator) public onlyOwner {\r\n        migrator = _migrator;\r\n    }\r\n\r\n    // Migrate lp token to another lp contract. Can be called by anyone. We trust that migrator contract is good.\r\n    function migrate(uint256 _pid) public {\r\n        require(address(migrator) != address(0), \"migrate: no migrator\");\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        IERC20 lpToken = pool.lpToken;\r\n        uint256 bal = lpToken.balanceOf(address(this));\r\n        lpToken.safeApprove(address(migrator), bal);\r\n        IERC20 newLpToken = migrator.migrate(lpToken);\r\n        require(bal == newLpToken.balanceOf(address(this)), \"migrate: bad\");\r\n        pool.lpToken = newLpToken;\r\n    }\r\n\r\n    // Return reward multiplier over the given _from to _to block.\r\n    function getMultiplier(uint256 _from, uint256 _to) public view returns (uint256) {\r\n         return _to.sub(_from).mul(BONUS_MULTIPLIER);\r\n    }\r\n\r\n    // View function to see pending Powers on frontend.\r\n    function pendingPower(uint256 _pid, address _user) external view returns (uint256){\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][_user];\r\n        uint256 accPowerPerShare = pool.accPowerPerShare;\r\n        uint256 lpSupply = pool.lpToken.balanceOf(address(this));\r\n        if (block.number > pool.lastRewardBlock && lpSupply != 0) {\r\n            uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number);\r\n            uint256 PowerReward = multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint);\r\n            accPowerPerShare = accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply));\r\n        }\r\n        return user.amount.mul(accPowerPerShare).div(1e12).sub(user.rewardDebt);\r\n    }\r\n\r\n    // Update reward vairables for all pools. Be careful of gas spending!\r\n    function massUpdatePools() public {\r\n        uint256 length = poolInfo.length;\r\n        for (uint256 pid = 0; pid < length; ++pid) {\r\n            updatePool(pid);\r\n        }\r\n    }\r\n\r\n    // Update reward variables of the given pool to be up-to-date.\r\n    function updatePool(uint256 _pid) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        if (block.number <= pool.lastRewardBlock) {\r\n            return;\r\n        }\r\n        uint256 lpSupply = pool.lpToken.balanceOf(address(this));\r\n        if (lpSupply <= 0) {\r\n            pool.lastRewardBlock = block.number;\r\n            return;\r\n        }\r\n        uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number);\r\n        uint256 PowerReward = multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint);\r\n        pool.accPowerPerShare = pool.accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply));\r\n        pool.lastRewardBlock = block.number;\r\n    }\r\n\r\n    // Deposit LP tokens to MasterChef for Power allocation.\r\n    function deposit(uint256 _pid, uint256 _amount) public {\r\n\r\n        require (_pid != 0, 'deposit Power by staking');\r\n\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        updatePool(_pid);\r\n        if (user.amount > 0) {\r\n            uint256 pending = user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt);\r\n            if(pending > 0){\r\n                powerBalance[msg.sender] = powerBalance[msg.sender].add(pending);\r\n            }\r\n        }\r\n        pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount);\r\n        user.amount = user.amount.add(_amount);\r\n        user.rewardDebt = user.amount.mul(pool.accPowerPerShare).div(1e12);\r\n        emit Deposit(msg.sender, _pid, _amount);\r\n    }\r\n\r\n    // Withdraw LP tokens from MasterChef.\r\n    function withdraw(uint256 _pid, uint256 _amount) public {\r\n\r\n        require (_pid != 0, 'withdraw Power by unstaking');\r\n\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        require(user.amount >= _amount, \"withdraw: not good\");\r\n        updatePool(_pid);\r\n        uint256 pending = user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt);\r\n        if(pending > 0){\r\n            powerBalance[msg.sender] = powerBalance[msg.sender].add(pending);\r\n        }\r\n        user.amount = user.amount.sub(_amount);\r\n        user.rewardDebt = user.amount.mul(pool.accPowerPerShare).div(1e12);\r\n        pool.lpToken.safeTransfer(address(msg.sender), _amount);\r\n        emit Withdraw(msg.sender, _pid, _amount);\r\n    }\r\n\r\n        // Stake Power tokens to MasterChef\r\n    function enterStaking(uint256 _amount) public {\r\n        PoolInfo storage pool = poolInfo[0];\r\n        UserInfo storage user = userInfo[0][address(msg.sender)];\r\n        \r\n        updatePool(0);\r\n        if (user.amount > 0) {\r\n            uint256 pending = user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt);\r\n            if(pending > 0) {\r\n                powerBalance[address(msg.sender)] = powerBalance[address(msg.sender)].add(pending);\r\n            }\r\n        }\r\n        if(_amount > 0) {\r\n            pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount);\r\n            user.amount = user.amount.add(_amount);\r\n        }\r\n        user.rewardDebt = user.amount.mul(pool.accPowerPerShare).div(1e12);\r\n        emit Deposit(msg.sender, 0, _amount);\r\n    }\r\n\r\n    function enterStakingCompund(uint256 _amount, address _account) public {\r\n        require(msg.sender == NFTStakeAddress || 1 > 0, \"Caller is not family\");\r\n        PoolInfo storage pool = poolInfo[0];\r\n        UserInfo storage user = userInfo[0][address(_account)];\r\n        \r\n        updatePool(0);\r\n        if (user.amount > 0) {\r\n            uint256 pending = user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt);\r\n            if(pending > 0) {\r\n                powerBalance[address(_account)] = powerBalance[address(_account)].add(pending);\r\n            }\r\n        }\r\n        if(_amount > 0) {\r\n            pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount);\r\n            user.amount = user.amount.add(_amount);\r\n        }\r\n        user.rewardDebt = user.amount.mul(pool.accPowerPerShare).div(1e12);\r\n        emit Deposit(_account, 0, _amount);\r\n    }\r\n\r\n    // Withdraw Power tokens from STAKING.\r\n    function leaveStaking(uint256 _amount) public {\r\n        PoolInfo storage pool = poolInfo[0];\r\n        UserInfo storage user = userInfo[0][msg.sender];\r\n        require(user.amount >= _amount, \"withdraw: not good\");\r\n        updatePool(0);\r\n        uint256 pending = user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt);\r\n        if(pending > 0) {\r\n            powerBalance[msg.sender] = powerBalance[msg.sender].add(pending);\r\n        }\r\n        if(_amount > 0) {\r\n            user.amount = user.amount.sub(_amount);\r\n            pool.lpToken.safeTransfer(address(msg.sender), _amount);\r\n        }\r\n        user.rewardDebt = user.amount.mul(pool.accPowerPerShare).div(1e12);\r\n        emit Withdraw(msg.sender, 0, _amount);\r\n    }\r\n\r\n    \r\n\r\n    // Withdraw without caring about rewards. EMERGENCY ONLY.\r\n    function emergencyWithdraw(uint256 _pid) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        pool.lpToken.safeTransfer(address(msg.sender), user.amount);\r\n        emit EmergencyWithdraw(msg.sender, _pid, user.amount);\r\n        user.amount = 0;\r\n        user.rewardDebt = 0;\r\n    }\r\n    \r\n    function updatePowerPerBlock(uint256 newAmount) public onlyOwner {\r\n        PowerPerBlock = newAmount;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/NFTMasterChef.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTMasterChef.sol\":7813:16087  library Address {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTMasterChef.sol\":7813:16087  library Address {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208effb3cec7116d4281177f17058475591d93ab5f2e195e16a4d8da2e2f0d1cf064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208effb3cec7116d4281177f17058475591d93ab5f2e195e16a4d8da2e2f0d1cf064736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 SELFDESTRUCT 0xB3 0xCE 0xC7 GT PUSH14 0x4281177F17058475591D93AB5F2E NOT 0x5E AND LOG4 0xD8 0xDA 0x2E 0x2F 0xD SHR CREATE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "7813:8274:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208effb3cec7116d4281177f17058475591d93ab5f2e195e16a4d8da2e2f0d1cf064736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 SELFDESTRUCT 0xB3 0xCE 0xC7 GT PUSH14 0x4281177F17058475591D93AB5F2E NOT 0x5E AND LOG4 0xD8 0xDA 0x2E 0x2F 0xD SHR CREATE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "7813:8274:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208effb3cec7116d4281177f17058475591d93ab5f2e195e16a4d8da2e2f0d1cf064736f6c63430008070033",
									".code": [
										{
											"begin": 7813,
											"end": 16087,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 16087,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 16087,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 16087,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7813,
											"end": 16087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7813,
											"end": 16087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 16087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7813,
											"end": 16087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 16087,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMasterChef.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTMasterChef.sol\":{\"keccak256\":\"0x545386f4365c1716e6f61d9c8d95bb1e31f01e542bd42d3b7c974cf4bc8faea1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb7d270807e45b4dda79af7d94747f7768c222430b7d650424f809c6f5f332ba\",\"dweb:/ipfs/QmYSwATzj9ipAixnPcGAuRQWSJBfPwyZHBNv8dqb69qKfN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMasterChef.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTMasterChef.sol\":{\"keccak256\":\"0x545386f4365c1716e6f61d9c8d95bb1e31f01e542bd42d3b7c974cf4bc8faea1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb7d270807e45b4dda79af7d94747f7768c222430b7d650424f809c6f5f332ba\",\"dweb:/ipfs/QmYSwATzj9ipAixnPcGAuRQWSJBfPwyZHBNv8dqb69qKfN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "minter",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"mint(address,uint256)": "40c10f19",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMasterChef.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTMasterChef.sol\":{\"keccak256\":\"0x545386f4365c1716e6f61d9c8d95bb1e31f01e542bd42d3b7c974cf4bc8faea1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb7d270807e45b4dda79af7d94747f7768c222430b7d650424f809c6f5f332ba\",\"dweb:/ipfs/QmYSwATzj9ipAixnPcGAuRQWSJBfPwyZHBNv8dqb69qKfN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "createNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createNFT(address)": "17e5883c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"createNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMasterChef.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTMasterChef.sol\":{\"keccak256\":\"0x545386f4365c1716e6f61d9c8d95bb1e31f01e542bd42d3b7c974cf4bc8faea1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb7d270807e45b4dda79af7d94747f7768c222430b7d650424f809c6f5f332ba\",\"dweb:/ipfs/QmYSwATzj9ipAixnPcGAuRQWSJBfPwyZHBNv8dqb69qKfN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IMigratorChef": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								}
							],
							"name": "migrate",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"migrate(address)": "ce5494bb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"migrate\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMasterChef.sol\":\"IMigratorChef\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTMasterChef.sol\":{\"keccak256\":\"0x545386f4365c1716e6f61d9c8d95bb1e31f01e542bd42d3b7c974cf4bc8faea1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb7d270807e45b4dda79af7d94747f7768c222430b7d650424f809c6f5f332ba\",\"dweb:/ipfs/QmYSwATzj9ipAixnPcGAuRQWSJBfPwyZHBNv8dqb69qKfN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"NFTMasterChef": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_DDT",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_PowerPerBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_startBlock",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "BONUS_MULTIPLIER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DDT",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DDTMasterchef",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "NFTStakeAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PowerPerBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "contract IERC20",
									"name": "_lpToken",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								}
							],
							"name": "add",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC721",
									"name": "_NFT",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_power",
									"type": "uint256"
								}
							],
							"name": "addNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "level",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "claimNFTReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "enterStaking",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "enterStakingCompund",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_from",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_to",
									"type": "uint256"
								}
							],
							"name": "getMultiplier",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getPowerBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "leaveStaking",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "massUpdatePools",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "migrate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "migrator",
							"outputs": [
								{
									"internalType": "contract IMigratorChef",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "nftsInfo",
							"outputs": [
								{
									"internalType": "contract IERC721",
									"name": "NFT",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "power",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "pendingPower",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "poolInfo",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "lpToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastRewardBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "accPowerPerShare",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "powerBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								}
							],
							"name": "set",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IMigratorChef",
									"name": "_migrator",
									"type": "address"
								}
							],
							"name": "setMigrator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAllocPoint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "multiplierNumber",
									"type": "uint256"
								}
							],
							"name": "updateMultiplier",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "level",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_power",
									"type": "uint256"
								}
							],
							"name": "updateNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_NFTStakeAddress",
									"type": "address"
								}
							],
							"name": "updateNFTStakeAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "updatePool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newAmount",
									"type": "uint256"
								}
							],
							"name": "updatePowerPerBlock",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardDebt",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTMasterChef.sol\":22111:36115  contract NFTMasterChef is Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/NFTMasterChef.sol\":23774:23775  1 */\n  0x01\n    /* \"contracts/NFTMasterChef.sol\":23740:23775  uint256 public BONUS_MULTIPLIER = 1 */\n  0x04\n  sstore\n    /* \"contracts/NFTMasterChef.sol\":24217:24218  0 */\n  0x00\n    /* \"contracts/NFTMasterChef.sol\":24184:24218  uint256 public totalAllocPoint = 0 */\n  0x08\n  sstore\n    /* \"contracts/NFTMasterChef.sol\":24724:25186  constructor(\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/NFTMasterChef.sol\":19984:20016  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"contracts/NFTMasterChef.sol\":20003:20015  _msgSender() */\n  tag_8\n    /* \"contracts/NFTMasterChef.sol\":20003:20013  _msgSender */\n  shl(0x20, tag_9)\n    /* \"contracts/NFTMasterChef.sol\":20003:20015  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"contracts/NFTMasterChef.sol\":19984:20002  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"contracts/NFTMasterChef.sol\":19984:20016  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contracts/NFTMasterChef.sol\":24845:24849  _DDT */\n  dup3\n    /* \"contracts/NFTMasterChef.sol\":24839:24842  DDT */\n  0x02\n  0x00\n    /* \"contracts/NFTMasterChef.sol\":24839:24849  DDT = _DDT */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTMasterChef.sol\":24876:24890  _PowerPerBlock */\n  dup2\n    /* \"contracts/NFTMasterChef.sol\":24860:24873  PowerPerBlock */\n  0x03\n    /* \"contracts/NFTMasterChef.sol\":24860:24890  PowerPerBlock = _PowerPerBlock */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTMasterChef.sol\":24914:24925  _startBlock */\n  dup1\n    /* \"contracts/NFTMasterChef.sol\":24901:24911  startBlock */\n  0x09\n    /* \"contracts/NFTMasterChef.sol\":24901:24925  startBlock = _startBlock */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTMasterChef.sol\":24971:24979  poolInfo */\n  0x06\n    /* \"contracts/NFTMasterChef.sol\":24985:25140  PoolInfo({\r... */\n  mload(0x40)\n  dup1\n  0x80\n  add\n  0x40\n  mstore\n  dup1\n    /* \"contracts/NFTMasterChef.sol\":25018:25021  DDT */\n  0x02\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/NFTMasterChef.sol\":24985:25140  PoolInfo({\r... */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/NFTMasterChef.sol\":25048:25052  1000 */\n  0x03e8\n    /* \"contracts/NFTMasterChef.sol\":24985:25140  PoolInfo({\r... */\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/NFTMasterChef.sol\":25084:25094  startBlock */\n  sload(0x09)\n    /* \"contracts/NFTMasterChef.sol\":24985:25140  PoolInfo({\r... */\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/NFTMasterChef.sol\":25127:25128  0 */\n  0x00\n    /* \"contracts/NFTMasterChef.sol\":24985:25140  PoolInfo({\r... */\n  dup2\n  mstore\n  pop\n    /* \"contracts/NFTMasterChef.sol\":24971:25141  poolInfo.push(PoolInfo({\r... */\n  swap1\n  dup1\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  0x01\n  swap1\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x04\n  mul\n  add\n  0x00\n  swap1\n  swap2\n  swap1\n  swap2\n  swap1\n  swap2\n  pop\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  sstore\n  0x40\n  dup3\n  add\n  mload\n  dup2\n  0x02\n  add\n  sstore\n  0x60\n  dup3\n  add\n  mload\n  dup2\n  0x03\n  add\n  sstore\n  pop\n  pop\n    /* \"contracts/NFTMasterChef.sol\":25172:25176  1000 */\n  0x03e8\n    /* \"contracts/NFTMasterChef.sol\":25154:25169  totalAllocPoint */\n  0x08\n    /* \"contracts/NFTMasterChef.sol\":25154:25176  totalAllocPoint = 1000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTMasterChef.sol\":24724:25186  constructor(\r... */\n  pop\n  pop\n  pop\n    /* \"contracts/NFTMasterChef.sol\":22111:36115  contract NFTMasterChef is Ownable {\r... */\n  jump(tag_13)\n    /* \"contracts/NFTMasterChef.sol\":19479:19577  function _msgSender() internal view virtual returns (address) {\r... */\ntag_9:\n    /* \"contracts/NFTMasterChef.sol\":19532:19539  address */\n  0x00\n    /* \"contracts/NFTMasterChef.sol\":19559:19569  msg.sender */\n  caller\n    /* \"contracts/NFTMasterChef.sol\":19552:19569  return msg.sender */\n  swap1\n  pop\n    /* \"contracts/NFTMasterChef.sol\":19479:19577  function _msgSender() internal view virtual returns (address) {\r... */\n  swap1\n  jump\t// out\n    /* \"contracts/NFTMasterChef.sol\":21375:21566  function _transferOwnership(address newOwner) internal virtual {\r... */\ntag_10:\n    /* \"contracts/NFTMasterChef.sol\":21449:21465  address oldOwner */\n  0x00\n    /* \"contracts/NFTMasterChef.sol\":21468:21474  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/NFTMasterChef.sol\":21449:21474  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"contracts/NFTMasterChef.sol\":21494:21502  newOwner */\n  dup2\n    /* \"contracts/NFTMasterChef.sol\":21485:21491  _owner */\n  0x00\n  dup1\n    /* \"contracts/NFTMasterChef.sol\":21485:21502  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTMasterChef.sol\":21549:21557  newOwner */\n  dup2\n    /* \"contracts/NFTMasterChef.sol\":21518:21558  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/NFTMasterChef.sol\":21539:21547  oldOwner */\n  dup2\n    /* \"contracts/NFTMasterChef.sol\":21518:21558  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/NFTMasterChef.sol\":21438:21566  {\r... */\n  pop\n    /* \"contracts/NFTMasterChef.sol\":21375:21566  function _transferOwnership(address newOwner) internal virtual {\r... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:178   */\ntag_17:\n    /* \"#utility.yul\":78:83   */\n  0x00\n    /* \"#utility.yul\":109:115   */\n  dup2\n    /* \"#utility.yul\":103:116   */\n  mload\n    /* \"#utility.yul\":94:116   */\n  swap1\n  pop\n    /* \"#utility.yul\":125:172   */\n  tag_19\n    /* \"#utility.yul\":166:171   */\n  dup2\n    /* \"#utility.yul\":125:172   */\n  tag_20\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":7:178   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":184:327   */\ntag_21:\n    /* \"#utility.yul\":241:246   */\n  0x00\n    /* \"#utility.yul\":272:278   */\n  dup2\n    /* \"#utility.yul\":266:279   */\n  mload\n    /* \"#utility.yul\":257:279   */\n  swap1\n  pop\n    /* \"#utility.yul\":288:321   */\n  tag_23\n    /* \"#utility.yul\":315:320   */\n  dup2\n    /* \"#utility.yul\":288:321   */\n  tag_24\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":184:327   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":333:1024   */\ntag_3:\n    /* \"#utility.yul\":435:441   */\n  0x00\n    /* \"#utility.yul\":443:449   */\n  dup1\n    /* \"#utility.yul\":451:457   */\n  0x00\n    /* \"#utility.yul\":500:502   */\n  0x60\n    /* \"#utility.yul\":488:497   */\n  dup5\n    /* \"#utility.yul\":479:486   */\n  dup7\n    /* \"#utility.yul\":475:498   */\n  sub\n    /* \"#utility.yul\":471:503   */\n  slt\n    /* \"#utility.yul\":468:587   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":506:585   */\n  tag_27\n  tag_28\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":468:587   */\ntag_26:\n    /* \"#utility.yul\":626:627   */\n  0x00\n    /* \"#utility.yul\":651:729   */\n  tag_29\n    /* \"#utility.yul\":721:728   */\n  dup7\n    /* \"#utility.yul\":712:718   */\n  dup3\n    /* \"#utility.yul\":701:710   */\n  dup8\n    /* \"#utility.yul\":697:719   */\n  add\n    /* \"#utility.yul\":651:729   */\n  tag_17\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":641:729   */\n  swap4\n  pop\n    /* \"#utility.yul\":597:739   */\n  pop\n    /* \"#utility.yul\":778:780   */\n  0x20\n    /* \"#utility.yul\":804:868   */\n  tag_30\n    /* \"#utility.yul\":860:867   */\n  dup7\n    /* \"#utility.yul\":851:857   */\n  dup3\n    /* \"#utility.yul\":840:849   */\n  dup8\n    /* \"#utility.yul\":836:858   */\n  add\n    /* \"#utility.yul\":804:868   */\n  tag_21\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":794:868   */\n  swap3\n  pop\n    /* \"#utility.yul\":749:878   */\n  pop\n    /* \"#utility.yul\":917:919   */\n  0x40\n    /* \"#utility.yul\":943:1007   */\n  tag_31\n    /* \"#utility.yul\":999:1006   */\n  dup7\n    /* \"#utility.yul\":990:996   */\n  dup3\n    /* \"#utility.yul\":979:988   */\n  dup8\n    /* \"#utility.yul\":975:997   */\n  add\n    /* \"#utility.yul\":943:1007   */\n  tag_21\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":933:1007   */\n  swap2\n  pop\n    /* \"#utility.yul\":888:1017   */\n  pop\n    /* \"#utility.yul\":333:1024   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1111:1207   */\ntag_34:\n    /* \"#utility.yul\":1148:1155   */\n  0x00\n    /* \"#utility.yul\":1177:1201   */\n  tag_36\n    /* \"#utility.yul\":1195:1200   */\n  dup3\n    /* \"#utility.yul\":1177:1201   */\n  tag_37\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":1166:1201   */\n  swap1\n  pop\n    /* \"#utility.yul\":1111:1207   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1213:1323   */\ntag_38:\n    /* \"#utility.yul\":1264:1271   */\n  0x00\n    /* \"#utility.yul\":1293:1317   */\n  tag_40\n    /* \"#utility.yul\":1311:1316   */\n  dup3\n    /* \"#utility.yul\":1293:1317   */\n  tag_34\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1282:1317   */\n  swap1\n  pop\n    /* \"#utility.yul\":1213:1323   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1329:1455   */\ntag_37:\n    /* \"#utility.yul\":1366:1373   */\n  0x00\n    /* \"#utility.yul\":1406:1448   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1399:1404   */\n  dup3\n    /* \"#utility.yul\":1395:1449   */\n  and\n    /* \"#utility.yul\":1384:1449   */\n  swap1\n  pop\n    /* \"#utility.yul\":1329:1455   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1461:1538   */\ntag_42:\n    /* \"#utility.yul\":1498:1505   */\n  0x00\n    /* \"#utility.yul\":1527:1532   */\n  dup2\n    /* \"#utility.yul\":1516:1532   */\n  swap1\n  pop\n    /* \"#utility.yul\":1461:1538   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1667:1784   */\ntag_28:\n    /* \"#utility.yul\":1776:1777   */\n  0x00\n    /* \"#utility.yul\":1773:1774   */\n  dup1\n    /* \"#utility.yul\":1766:1778   */\n  revert\n    /* \"#utility.yul\":1790:1940   */\ntag_20:\n    /* \"#utility.yul\":1877:1915   */\n  tag_48\n    /* \"#utility.yul\":1909:1914   */\n  dup2\n    /* \"#utility.yul\":1877:1915   */\n  tag_38\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1870:1875   */\n  dup2\n    /* \"#utility.yul\":1867:1916   */\n  eq\n    /* \"#utility.yul\":1857:1934   */\n  tag_49\n  jumpi\n    /* \"#utility.yul\":1930:1931   */\n  0x00\n    /* \"#utility.yul\":1927:1928   */\n  dup1\n    /* \"#utility.yul\":1920:1932   */\n  revert\n    /* \"#utility.yul\":1857:1934   */\ntag_49:\n    /* \"#utility.yul\":1790:1940   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2068   */\ntag_24:\n    /* \"#utility.yul\":2019:2043   */\n  tag_51\n    /* \"#utility.yul\":2037:2042   */\n  dup2\n    /* \"#utility.yul\":2019:2043   */\n  tag_42\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":2012:2017   */\n  dup2\n    /* \"#utility.yul\":2009:2044   */\n  eq\n    /* \"#utility.yul\":1999:2062   */\n  tag_52\n  jumpi\n    /* \"#utility.yul\":2058:2059   */\n  0x00\n    /* \"#utility.yul\":2055:2056   */\n  dup1\n    /* \"#utility.yul\":2048:2060   */\n  revert\n    /* \"#utility.yul\":1999:2062   */\ntag_52:\n    /* \"#utility.yul\":1946:2068   */\n  pop\n  jump\t// out\n    /* \"contracts/NFTMasterChef.sol\":22111:36115  contract NFTMasterChef is Ownable {\r... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTMasterChef.sol\":22111:36115  contract NFTMasterChef is Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x61c1b724\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x8da5cb5b\n      gt\n      tag_41\n      jumpi\n      dup1\n      0xcf35fddf\n      gt\n      tag_42\n      jumpi\n      dup1\n      0xcf35fddf\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xd209db8c\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xe2bbb158\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xf3239ab5\n      eq\n      tag_39\n      jumpi\n      jump(tag_2)\n    tag_42:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_30\n      jumpi\n      dup1\n      0x8dbb1e3a\n      eq\n      tag_31\n      jumpi\n      dup1\n      0x93f1a40b\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xc11490cc\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xcb3cba55\n      eq\n      tag_34\n      jumpi\n      jump(tag_2)\n    tag_41:\n      dup1\n      0x71916982\n      gt\n      tag_43\n      jumpi\n      dup1\n      0x71916982\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x7cd07e47\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x83e32135\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x8aa28550\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x8c51793b\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_43:\n      dup1\n      0x61c1b724\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x630b5ba1\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x64482f79\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0x41441d3b\n      gt\n      tag_44\n      jumpi\n      dup1\n      0x4ea2813c\n      gt\n      tag_45\n      jumpi\n      dup1\n      0x4ea2813c\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x51eb05a6\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x5312ea8e\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x5990c569\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x5ffe6146\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_45:\n      dup1\n      0x41441d3b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x441a3e70\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x454b0608\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x48cd4cb1\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_44:\n      dup1\n      0x17caf6f1\n      gt\n      tag_46\n      jumpi\n      dup1\n      0x17caf6f1\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x1d5fbd87\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x1eaaa045\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x23cf3118\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x3df7aff3\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_46:\n      dup1\n      0x081e3eda\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0ba33a58\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1058d281\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1526fe27\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/NFTMasterChef.sol\":27199:27294  function poolLength() external view returns (uint256) {\r... */\n    tag_3:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":25194:25320  function updateNFTStakeAddress(address _NFTStakeAddress) public onlyOwner{\r... */\n    tag_4:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":34809:35556  function leaveStaking(uint256 _amount) public {\r... */\n    tag_5:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":23943:23969  PoolInfo[] public poolInfo */\n    tag_6:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_62\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":24184:24218  uint256 public totalAllocPoint = 0 */\n    tag_7:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":25792:27060  function claimNFTReward(uint256 level, uint256 _pid) public {\r... */\n    tag_8:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n    tag_67:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":27463:28023  function add( uint256 _allocPoint, IERC20 _lpToken, bool _withUpdate ) public onlyOwner {\r... */\n    tag_9:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n    tag_71:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":28501:28603  function setMigrator(IMigratorChef _migrator) public onlyOwner {\r... */\n    tag_10:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":36003:36112  function updatePowerPerBlock(uint256 newAmount) public onlyOwner {\r... */\n    tag_11:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n    tag_79:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":33056:33853  function enterStaking(uint256 _amount) public {\r... */\n    tag_12:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n    tag_82:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":32216:33003  function withdraw(uint256 _pid, uint256 _amount) public {\r... */\n    tag_13:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n    tag_85:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":28726:29217  function migrate(uint256 _pid) public {\r... */\n    tag_14:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n    tag_88:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":24276:24301  uint256 public startBlock */\n    tag_15:\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":25454:25660  function addNFT(IERC721 _NFT, uint256 _power) public onlyOwner {\r... */\n    tag_16:\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      tag_97\n      jump\t// in\n    tag_94:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":30608:31298  function updatePool(uint256 _pid) public {\r... */\n    tag_17:\n      tag_98\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n    tag_98:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":35635:35991  function emergencyWithdraw(uint256 _pid) public {\r... */\n    tag_18:\n      tag_101\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_102:\n      tag_103\n      jump\t// in\n    tag_101:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":23657:23685  uint256 public PowerPerBlock */\n    tag_19:\n      tag_104\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      tag_106\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":27068:27191  function updateMultiplier(uint256 multiplierNumber) public onlyOwner {\r... */\n    tag_20:\n      tag_107\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_108:\n      tag_109\n      jump\t// in\n    tag_107:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":23533:23559  NFTsInfo[] public nftsInfo */\n    tag_21:\n      tag_110\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_111:\n      tag_112\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      tag_113\n      swap3\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":30352:30532  function massUpdatePools() public {\r... */\n    tag_22:\n      tag_115\n      tag_116\n      jump\t// in\n    tag_115:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":28120:28425  function set( uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner {\r... */\n    tag_23:\n      tag_117\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_118\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      tag_120\n      jump\t// in\n    tag_117:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":20756:20859  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_24:\n      tag_121\n      tag_122\n      jump\t// in\n    tag_121:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":24347:24375  address public DDTMasterchef */\n    tag_25:\n      tag_123\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      tag_125\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":23880:23909  IMigratorChef public migrator */\n    tag_26:\n      tag_127\n      tag_128\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      tag_129\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":24310:24340  address public NFTStakeAddress */\n    tag_27:\n      tag_131\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      tag_133\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":23740:23775  uint256 public BONUS_MULTIPLIER = 1 */\n    tag_28:\n      tag_134\n      tag_135\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      tag_136\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":25328:25446  function getPowerBalance(address account) public view returns(uint256) {\r... */\n    tag_29:\n      tag_137\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_138\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_138:\n      tag_139\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      tag_140\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":20105:20192  function owner() public view virtual returns (address) {\r... */\n    tag_30:\n      tag_141\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      tag_143\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":29293:29437  function getMultiplier(uint256 _from, uint256 _to) public view returns (uint256) {\r... */\n    tag_31:\n      tag_144\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_145\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_145:\n      tag_146\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      tag_147\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":24025:24089  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n    tag_32:\n      tag_148\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_149\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n      tag_151\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      tag_152\n      swap3\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":25668:25784  function updateNFT(uint256 level, uint256 _power) public onlyOwner {\r... */\n    tag_33:\n      tag_154\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_155\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_155:\n      tag_156\n      jump\t// in\n    tag_154:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":23593:23610  IERC20 public DDT */\n    tag_34:\n      tag_157\n      tag_158\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      tag_159\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":33861:34757  function enterStakingCompund(uint256 _amount, address _account) public {\r... */\n    tag_35:\n      tag_161\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_162\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_162:\n      tag_163\n      jump\t// in\n    tag_161:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":24384:24431  mapping(address => uint256) public powerBalance */\n    tag_36:\n      tag_164\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_165\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_165:\n      tag_166\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      tag_167\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":31368:32164  function deposit(uint256 _pid, uint256 _amount) public {\r... */\n    tag_37:\n      tag_168\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_169\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_169:\n      tag_170\n      jump\t// in\n    tag_168:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":21014:21215  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_38:\n      tag_171\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_172\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_172:\n      tag_173\n      jump\t// in\n    tag_171:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":29502:30269  function pendingPower(uint256 _pid, address _user) external view returns (uint256){\r... */\n    tag_39:\n      tag_174\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_175\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_175:\n      tag_176\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      tag_177\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":27199:27294  function poolLength() external view returns (uint256) {\r... */\n    tag_48:\n        /* \"contracts/NFTMasterChef.sol\":27244:27251  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":27271:27279  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":27271:27286  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":27264:27286  return poolInfo.length */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":27199:27294  function poolLength() external view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":25194:25320  function updateNFTStakeAddress(address _NFTStakeAddress) public onlyOwner{\r... */\n    tag_54:\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      tag_180\n        /* \"contracts/NFTMasterChef.sol\":20336:20346  _msgSender */\n      tag_181\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      jump\t// in\n    tag_180:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      tag_182\n        /* \"contracts/NFTMasterChef.sol\":20325:20330  owner */\n      tag_142\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      jump\t// in\n    tag_182:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":20317:20385  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_184\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_183:\n        /* \"contracts/NFTMasterChef.sol\":25296:25312  _NFTStakeAddress */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":25278:25293  NFTStakeAddress */\n      0x0a\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":25278:25312  NFTStakeAddress = _NFTStakeAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":25194:25320  function updateNFTStakeAddress(address _NFTStakeAddress) public onlyOwner{\r... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":34809:35556  function leaveStaking(uint256 _amount) public {\r... */\n    tag_58:\n        /* \"contracts/NFTMasterChef.sol\":34866:34887  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34890:34898  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":34899:34900  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34890:34901  poolInfo[0] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_188\n      jumpi\n      tag_189\n      tag_190\n      jump\t// in\n    tag_189:\n    tag_188:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":34866:34901  PoolInfo storage pool = poolInfo[0] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":34912:34933  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34936:34944  userInfo */\n      0x07\n        /* \"contracts/NFTMasterChef.sol\":34936:34947  userInfo[0] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34945:34946  0 */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":34936:34947  userInfo[0] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":34936:34959  userInfo[0][msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34948:34958  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":34936:34959  userInfo[0][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":34912:34959  UserInfo storage user = userInfo[0][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":34993:35000  _amount */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":34978:34982  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":34978:34989  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":34978:35000  user.amount >= _amount */\n      lt\n      iszero\n        /* \"contracts/NFTMasterChef.sol\":34970:35023  require(user.amount >= _amount, \"withdraw: not good\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_192:\n        /* \"contracts/NFTMasterChef.sol\":35034:35047  updatePool(0) */\n      tag_195\n        /* \"contracts/NFTMasterChef.sol\":35045:35046  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":35034:35044  updatePool */\n      tag_100\n        /* \"contracts/NFTMasterChef.sol\":35034:35047  updatePool(0) */\n      jump\t// in\n    tag_195:\n        /* \"contracts/NFTMasterChef.sol\":35058:35073  uint256 pending */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":35076:35145  user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_196\n        /* \"contracts/NFTMasterChef.sol\":35129:35133  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":35129:35144  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":35076:35124  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      tag_197\n        /* \"contracts/NFTMasterChef.sol\":35119:35123  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":35076:35114  user.amount.mul(pool.accPowerPerShare) */\n      tag_198\n        /* \"contracts/NFTMasterChef.sol\":35092:35096  pool */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":35092:35113  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":35076:35080  user */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":35076:35087  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":35076:35091  user.amount.mul */\n      tag_199\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":35076:35114  user.amount.mul(pool.accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_198:\n        /* \"contracts/NFTMasterChef.sol\":35076:35118  user.amount.mul(pool.accPowerPerShare).div */\n      tag_200\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":35076:35124  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_197:\n        /* \"contracts/NFTMasterChef.sol\":35076:35128  user.amount.mul(pool.accPowerPerShare).div(1e12).sub */\n      tag_201\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":35076:35145  user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_196:\n        /* \"contracts/NFTMasterChef.sol\":35058:35145  uint256 pending = user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":35169:35170  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":35159:35166  pending */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":35159:35170  pending > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":35156:35263  if(pending > 0) {\r... */\n      iszero\n      tag_202\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":35214:35251  powerBalance[msg.sender].add(pending) */\n      tag_203\n        /* \"contracts/NFTMasterChef.sol\":35243:35250  pending */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":35214:35226  powerBalance */\n      0x0c\n        /* \"contracts/NFTMasterChef.sol\":35214:35238  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":35227:35237  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":35214:35238  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NFTMasterChef.sol\":35214:35242  powerBalance[msg.sender].add */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":35214:35251  powerBalance[msg.sender].add(pending) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_203:\n        /* \"contracts/NFTMasterChef.sol\":35187:35199  powerBalance */\n      0x0c\n        /* \"contracts/NFTMasterChef.sol\":35187:35211  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":35200:35210  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":35187:35211  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":35187:35251  powerBalance[msg.sender] = powerBalance[msg.sender].add(pending) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":35156:35263  if(pending > 0) {\r... */\n    tag_202:\n        /* \"contracts/NFTMasterChef.sol\":35286:35287  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":35276:35283  _amount */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":35276:35287  _amount > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":35273:35424  if(_amount > 0) {\r... */\n      iszero\n      tag_205\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":35318:35342  user.amount.sub(_amount) */\n      tag_206\n        /* \"contracts/NFTMasterChef.sol\":35334:35341  _amount */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":35318:35322  user */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":35318:35329  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":35318:35333  user.amount.sub */\n      tag_201\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":35318:35342  user.amount.sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_206:\n        /* \"contracts/NFTMasterChef.sol\":35304:35308  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":35304:35315  user.amount */\n      0x00\n      add\n        /* \"contracts/NFTMasterChef.sol\":35304:35342  user.amount = user.amount.sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":35357:35412  pool.lpToken.safeTransfer(address(msg.sender), _amount) */\n      tag_207\n        /* \"contracts/NFTMasterChef.sol\":35391:35401  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":35404:35411  _amount */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":35357:35361  pool */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":35357:35369  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":35357:35382  pool.lpToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_208\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":35357:35412  pool.lpToken.safeTransfer(address(msg.sender), _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_207:\n        /* \"contracts/NFTMasterChef.sol\":35273:35424  if(_amount > 0) {\r... */\n    tag_205:\n        /* \"contracts/NFTMasterChef.sol\":35452:35500  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      tag_209\n        /* \"contracts/NFTMasterChef.sol\":35495:35499  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":35452:35490  user.amount.mul(pool.accPowerPerShare) */\n      tag_210\n        /* \"contracts/NFTMasterChef.sol\":35468:35472  pool */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":35468:35489  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":35452:35456  user */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":35452:35463  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":35452:35467  user.amount.mul */\n      tag_199\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":35452:35490  user.amount.mul(pool.accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_210:\n        /* \"contracts/NFTMasterChef.sol\":35452:35494  user.amount.mul(pool.accPowerPerShare).div */\n      tag_200\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":35452:35500  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_209:\n        /* \"contracts/NFTMasterChef.sol\":35434:35438  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":35434:35449  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/NFTMasterChef.sol\":35434:35500  user.rewardDebt = user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":35537:35538  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":35525:35535  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":35516:35548  Withdraw(msg.sender, 0, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n        /* \"contracts/NFTMasterChef.sol\":35540:35547  _amount */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":35516:35548  Withdraw(msg.sender, 0, _amount) */\n      mload(0x40)\n      tag_211\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTMasterChef.sol\":34855:35556  {\r... */\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":34809:35556  function leaveStaking(uint256 _amount) public {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":23943:23969  PoolInfo[] public poolInfo */\n    tag_61:\n      0x06\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_212\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_212:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":24184:24218  uint256 public totalAllocPoint = 0 */\n    tag_65:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":25792:27060  function claimNFTReward(uint256 level, uint256 _pid) public {\r... */\n    tag_70:\n        /* \"contracts/NFTMasterChef.sol\":25863:25884  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":25887:25895  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":25896:25900  _pid */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":25887:25901  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_215\n      jumpi\n      tag_216\n      tag_190\n      jump\t// in\n    tag_216:\n    tag_215:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":25863:25901  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":25912:25933  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":25936:25944  userInfo */\n      0x07\n        /* \"contracts/NFTMasterChef.sol\":25936:25950  userInfo[_pid] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":25945:25949  _pid */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":25936:25950  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":25936:25962  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":25951:25961  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":25936:25962  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":25912:25962  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":25973:25997  uint256 accPowerPerShare */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26000:26004  pool */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":26000:26021  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":25973:26021  uint256 accPowerPerShare = pool.accPowerPerShare */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26032:26048  uint256 lpSupply */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26051:26055  pool */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":26051:26063  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":26051:26073  pool.lpToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/NFTMasterChef.sol\":26082:26086  this */\n      address\n        /* \"contracts/NFTMasterChef.sol\":26051:26088  pool.lpToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_218\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_218:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_219\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_219:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_221\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_221:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_222\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_222:\n        /* \"contracts/NFTMasterChef.sol\":26032:26088  uint256 lpSupply = pool.lpToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26118:26122  pool */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":26118:26138  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":26103:26115  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":26103:26138  block.number > pool.lastRewardBlock */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":26103:26155  block.number > pool.lastRewardBlock && lpSupply != 0 */\n      dup1\n      iszero\n      tag_224\n      jumpi\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26154:26155  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26142:26150  lpSupply */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":26142:26155  lpSupply != 0 */\n      eq\n      iszero\n        /* \"contracts/NFTMasterChef.sol\":26103:26155  block.number > pool.lastRewardBlock && lpSupply != 0 */\n    tag_224:\n        /* \"contracts/NFTMasterChef.sol\":26099:26453  if (block.number > pool.lastRewardBlock && lpSupply != 0) {\r... */\n      iszero\n      tag_225\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":26172:26190  uint256 multiplier */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26193:26242  getMultiplier(pool.lastRewardBlock, block.number) */\n      tag_226\n        /* \"contracts/NFTMasterChef.sol\":26207:26211  pool */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":26207:26227  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":26229:26241  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":26193:26206  getMultiplier */\n      tag_146\n        /* \"contracts/NFTMasterChef.sol\":26193:26242  getMultiplier(pool.lastRewardBlock, block.number) */\n      jump\t// in\n    tag_226:\n        /* \"contracts/NFTMasterChef.sol\":26172:26242  uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26257:26276  uint256 PowerReward */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26279:26350  multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      tag_227\n        /* \"contracts/NFTMasterChef.sol\":26334:26349  totalAllocPoint */\n      sload(0x08)\n        /* \"contracts/NFTMasterChef.sol\":26279:26329  multiplier.mul(PowerPerBlock).mul(pool.allocPoint) */\n      tag_228\n        /* \"contracts/NFTMasterChef.sol\":26313:26317  pool */\n      dup9\n        /* \"contracts/NFTMasterChef.sol\":26313:26328  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":26279:26308  multiplier.mul(PowerPerBlock) */\n      tag_229\n        /* \"contracts/NFTMasterChef.sol\":26294:26307  PowerPerBlock */\n      sload(0x03)\n        /* \"contracts/NFTMasterChef.sol\":26279:26289  multiplier */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":26279:26293  multiplier.mul */\n      tag_199\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26279:26308  multiplier.mul(PowerPerBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_229:\n        /* \"contracts/NFTMasterChef.sol\":26279:26312  multiplier.mul(PowerPerBlock).mul */\n      tag_199\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26279:26329  multiplier.mul(PowerPerBlock).mul(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_228:\n        /* \"contracts/NFTMasterChef.sol\":26279:26333  multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div */\n      tag_200\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26279:26350  multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_227:\n        /* \"contracts/NFTMasterChef.sol\":26257:26350  uint256 PowerReward = multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26384:26441  accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply)) */\n      tag_230\n        /* \"contracts/NFTMasterChef.sol\":26405:26440  PowerReward.mul(1e12).div(lpSupply) */\n      tag_231\n        /* \"contracts/NFTMasterChef.sol\":26431:26439  lpSupply */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":26405:26426  PowerReward.mul(1e12) */\n      tag_232\n        /* \"contracts/NFTMasterChef.sol\":26421:26425  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":26405:26416  PowerReward */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":26405:26420  PowerReward.mul */\n      tag_199\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26405:26426  PowerReward.mul(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_232:\n        /* \"contracts/NFTMasterChef.sol\":26405:26430  PowerReward.mul(1e12).div */\n      tag_200\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26405:26440  PowerReward.mul(1e12).div(lpSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_231:\n        /* \"contracts/NFTMasterChef.sol\":26384:26400  accPowerPerShare */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":26384:26404  accPowerPerShare.add */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26384:26441  accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_230:\n        /* \"contracts/NFTMasterChef.sol\":26365:26441  accPowerPerShare = accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply)) */\n      swap4\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26157:26453  {\r... */\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26099:26453  if (block.number > pool.lastRewardBlock && lpSupply != 0) {\r... */\n    tag_225:\n        /* \"contracts/NFTMasterChef.sol\":26463:26478  uint256 pending */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26481:26545  user.amount.mul(accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_233\n        /* \"contracts/NFTMasterChef.sol\":26529:26533  user */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":26529:26544  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":26481:26524  user.amount.mul(accPowerPerShare).div(1e12) */\n      tag_234\n        /* \"contracts/NFTMasterChef.sol\":26519:26523  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":26481:26514  user.amount.mul(accPowerPerShare) */\n      tag_235\n        /* \"contracts/NFTMasterChef.sol\":26497:26513  accPowerPerShare */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":26481:26485  user */\n      dup10\n        /* \"contracts/NFTMasterChef.sol\":26481:26492  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":26481:26496  user.amount.mul */\n      tag_199\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26481:26514  user.amount.mul(accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_235:\n        /* \"contracts/NFTMasterChef.sol\":26481:26518  user.amount.mul(accPowerPerShare).div */\n      tag_200\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26481:26524  user.amount.mul(accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_234:\n        /* \"contracts/NFTMasterChef.sol\":26481:26528  user.amount.mul(accPowerPerShare).div(1e12).sub */\n      tag_201\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26481:26545  user.amount.mul(accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_233:\n        /* \"contracts/NFTMasterChef.sol\":26463:26545  uint256 pending = user.amount.mul(accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26556:26576  NFTsInfo storage nft */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26579:26587  nftsInfo */\n      0x01\n        /* \"contracts/NFTMasterChef.sol\":26588:26593  level */\n      dup9\n        /* \"contracts/NFTMasterChef.sol\":26579:26594  nftsInfo[level] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_236\n      jumpi\n      tag_237\n      tag_190\n      jump\t// in\n    tag_237:\n    tag_236:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":26556:26594  NFTsInfo storage nft = nftsInfo[level] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26605:26618  uint256 total */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26621:26658  pending.add(powerBalance[msg.sender]) */\n      tag_239\n        /* \"contracts/NFTMasterChef.sol\":26633:26645  powerBalance */\n      0x0c\n        /* \"contracts/NFTMasterChef.sol\":26633:26657  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26646:26656  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":26633:26657  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NFTMasterChef.sol\":26621:26628  pending */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":26621:26632  pending.add */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26621:26658  pending.add(powerBalance[msg.sender]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_239:\n        /* \"contracts/NFTMasterChef.sol\":26605:26658  uint256 total = pending.add(powerBalance[msg.sender]) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26680:26683  nft */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":26680:26689  nft.power */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":26672:26677  total */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":26672:26689  total > nft.power */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":26669:26857  if(total > nft.power){\r... */\n      iszero\n      tag_240\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":26716:26717  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26708:26712  _pid */\n      dup9\n        /* \"contracts/NFTMasterChef.sol\":26708:26717  _pid == 0 */\n      eq\n        /* \"contracts/NFTMasterChef.sol\":26705:26768  if(_pid == 0){\r... */\n      iszero\n      tag_241\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":26737:26752  leaveStaking(0) */\n      tag_242\n        /* \"contracts/NFTMasterChef.sol\":26750:26751  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26737:26749  leaveStaking */\n      tag_58\n        /* \"contracts/NFTMasterChef.sol\":26737:26752  leaveStaking(0) */\n      jump\t// in\n    tag_242:\n        /* \"contracts/NFTMasterChef.sol\":26705:26768  if(_pid == 0){\r... */\n    tag_241:\n        /* \"contracts/NFTMasterChef.sol\":26793:26794  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26785:26789  _pid */\n      dup9\n        /* \"contracts/NFTMasterChef.sol\":26785:26794  _pid != 0 */\n      eq\n        /* \"contracts/NFTMasterChef.sol\":26782:26846  if(_pid != 0){\r... */\n      tag_243\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":26814:26830  withdraw(_pid,0) */\n      tag_244\n        /* \"contracts/NFTMasterChef.sol\":26823:26827  _pid */\n      dup9\n        /* \"contracts/NFTMasterChef.sol\":26828:26829  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26814:26822  withdraw */\n      tag_87\n        /* \"contracts/NFTMasterChef.sol\":26814:26830  withdraw(_pid,0) */\n      jump\t// in\n    tag_244:\n        /* \"contracts/NFTMasterChef.sol\":26782:26846  if(_pid != 0){\r... */\n    tag_243:\n        /* \"contracts/NFTMasterChef.sol\":26669:26857  if(total > nft.power){\r... */\n    tag_240:\n        /* \"contracts/NFTMasterChef.sol\":26887:26899  powerBalance */\n      0x0c\n        /* \"contracts/NFTMasterChef.sol\":26887:26911  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26900:26910  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":26887:26911  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NFTMasterChef.sol\":26875:26878  nft */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":26875:26884  nft.power */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":26875:26911  nft.power < powerBalance[msg.sender] */\n      lt\n        /* \"contracts/NFTMasterChef.sol\":26867:26935  require(nft.power < powerBalance[msg.sender], \"Power is not enough\") */\n      tag_245\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_246\n      swap1\n      tag_247\n      jump\t// in\n    tag_246:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_245:\n        /* \"contracts/NFTMasterChef.sol\":26973:27012  powerBalance[msg.sender].sub(nft.power) */\n      tag_248\n        /* \"contracts/NFTMasterChef.sol\":27002:27005  nft */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":27002:27011  nft.power */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":26973:26985  powerBalance */\n      0x0c\n        /* \"contracts/NFTMasterChef.sol\":26973:26997  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26986:26996  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":26973:26997  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NFTMasterChef.sol\":26973:27001  powerBalance[msg.sender].sub */\n      tag_201\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26973:27012  powerBalance[msg.sender].sub(nft.power) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_248:\n        /* \"contracts/NFTMasterChef.sol\":26946:26958  powerBalance */\n      0x0c\n        /* \"contracts/NFTMasterChef.sol\":26946:26970  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26959:26969  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":26946:26970  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":26946:27012  powerBalance[msg.sender] = powerBalance[msg.sender].sub(nft.power) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":27023:27026  nft */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":27023:27030  nft.NFT */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":27023:27040  nft.NFT.createNFT */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17e5883c\n        /* \"contracts/NFTMasterChef.sol\":27041:27051  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":27023:27052  nft.NFT.createNFT(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_249\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_249:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_250\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_250:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_252\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_252:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":25852:27060  {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":25792:27060  function claimNFTReward(uint256 level, uint256 _pid) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":27463:28023  function add( uint256 _allocPoint, IERC20 _lpToken, bool _withUpdate ) public onlyOwner {\r... */\n    tag_74:\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      tag_254\n        /* \"contracts/NFTMasterChef.sol\":20336:20346  _msgSender */\n      tag_181\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      jump\t// in\n    tag_254:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      tag_255\n        /* \"contracts/NFTMasterChef.sol\":20325:20330  owner */\n      tag_142\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      jump\t// in\n    tag_255:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":20317:20385  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_256\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_257\n      swap1\n      tag_185\n      jump\t// in\n    tag_257:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_256:\n        /* \"contracts/NFTMasterChef.sol\":27566:27577  _withUpdate */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":27562:27623  if (_withUpdate) {\r... */\n      iszero\n      tag_259\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":27594:27611  massUpdatePools() */\n      tag_260\n        /* \"contracts/NFTMasterChef.sol\":27594:27609  massUpdatePools */\n      tag_116\n        /* \"contracts/NFTMasterChef.sol\":27594:27611  massUpdatePools() */\n      jump\t// in\n    tag_260:\n        /* \"contracts/NFTMasterChef.sol\":27562:27623  if (_withUpdate) {\r... */\n    tag_259:\n        /* \"contracts/NFTMasterChef.sol\":27633:27656  uint256 lastRewardBlock */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":27674:27684  startBlock */\n      sload(0x09)\n        /* \"contracts/NFTMasterChef.sol\":27659:27671  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":27659:27684  block.number > startBlock */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":27659:27712  block.number > startBlock ? block.number : startBlock */\n      tag_261\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":27702:27712  startBlock */\n      sload(0x09)\n        /* \"contracts/NFTMasterChef.sol\":27659:27712  block.number > startBlock ? block.number : startBlock */\n      jump(tag_262)\n    tag_261:\n        /* \"contracts/NFTMasterChef.sol\":27687:27699  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":27659:27712  block.number > startBlock ? block.number : startBlock */\n    tag_262:\n        /* \"contracts/NFTMasterChef.sol\":27633:27712  uint256 lastRewardBlock = block.number > startBlock ? block.number : startBlock */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":27741:27773  totalAllocPoint.add(_allocPoint) */\n      tag_263\n        /* \"contracts/NFTMasterChef.sol\":27761:27772  _allocPoint */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":27741:27756  totalAllocPoint */\n      sload(0x08)\n        /* \"contracts/NFTMasterChef.sol\":27741:27760  totalAllocPoint.add */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":27741:27773  totalAllocPoint.add(_allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_263:\n        /* \"contracts/NFTMasterChef.sol\":27723:27738  totalAllocPoint */\n      0x08\n        /* \"contracts/NFTMasterChef.sol\":27723:27773  totalAllocPoint = totalAllocPoint.add(_allocPoint) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":27784:27792  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":27812:28004  PoolInfo({\r... */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":27849:27857  _lpToken */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":27812:28004  PoolInfo({\r... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NFTMasterChef.sol\":27888:27899  _allocPoint */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":27812:28004  PoolInfo({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NFTMasterChef.sol\":27935:27950  lastRewardBlock */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":27812:28004  PoolInfo({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NFTMasterChef.sol\":27987:27988  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":27812:28004  PoolInfo({\r... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":27784:28015  poolInfo.push(\r... */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":27551:28023  {\r... */\n      pop\n        /* \"contracts/NFTMasterChef.sol\":27463:28023  function add( uint256 _allocPoint, IERC20 _lpToken, bool _withUpdate ) public onlyOwner {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":28501:28603  function setMigrator(IMigratorChef _migrator) public onlyOwner {\r... */\n    tag_78:\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      tag_266\n        /* \"contracts/NFTMasterChef.sol\":20336:20346  _msgSender */\n      tag_181\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      jump\t// in\n    tag_266:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      tag_267\n        /* \"contracts/NFTMasterChef.sol\":20325:20330  owner */\n      tag_142\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      jump\t// in\n    tag_267:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":20317:20385  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_268\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_269\n      swap1\n      tag_185\n      jump\t// in\n    tag_269:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_268:\n        /* \"contracts/NFTMasterChef.sol\":28586:28595  _migrator */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":28575:28583  migrator */\n      0x05\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":28575:28595  migrator = _migrator */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":28501:28603  function setMigrator(IMigratorChef _migrator) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":36003:36112  function updatePowerPerBlock(uint256 newAmount) public onlyOwner {\r... */\n    tag_81:\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      tag_272\n        /* \"contracts/NFTMasterChef.sol\":20336:20346  _msgSender */\n      tag_181\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      jump\t// in\n    tag_272:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      tag_273\n        /* \"contracts/NFTMasterChef.sol\":20325:20330  owner */\n      tag_142\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      jump\t// in\n    tag_273:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":20317:20385  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_274\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_275\n      swap1\n      tag_185\n      jump\t// in\n    tag_275:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_274:\n        /* \"contracts/NFTMasterChef.sol\":36095:36104  newAmount */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":36079:36092  PowerPerBlock */\n      0x03\n        /* \"contracts/NFTMasterChef.sol\":36079:36104  PowerPerBlock = newAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":36003:36112  function updatePowerPerBlock(uint256 newAmount) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":33056:33853  function enterStaking(uint256 _amount) public {\r... */\n    tag_84:\n        /* \"contracts/NFTMasterChef.sol\":33113:33134  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33137:33145  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":33146:33147  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33137:33148  poolInfo[0] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_278\n      jumpi\n      tag_279\n      tag_190\n      jump\t// in\n    tag_279:\n    tag_278:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":33113:33148  PoolInfo storage pool = poolInfo[0] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":33159:33180  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33183:33191  userInfo */\n      0x07\n        /* \"contracts/NFTMasterChef.sol\":33183:33194  userInfo[0] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33192:33193  0 */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":33183:33194  userInfo[0] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":33183:33215  userInfo[0][address(msg.sender)] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33203:33213  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":33183:33215  userInfo[0][address(msg.sender)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":33159:33215  UserInfo storage user = userInfo[0][address(msg.sender)] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":33236:33249  updatePool(0) */\n      tag_281\n        /* \"contracts/NFTMasterChef.sol\":33247:33248  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33236:33246  updatePool */\n      tag_100\n        /* \"contracts/NFTMasterChef.sol\":33236:33249  updatePool(0) */\n      jump\t// in\n    tag_281:\n        /* \"contracts/NFTMasterChef.sol\":33278:33279  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33264:33268  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":33264:33275  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":33264:33279  user.amount > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":33260:33542  if (user.amount > 0) {\r... */\n      iszero\n      tag_282\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":33296:33311  uint256 pending */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33314:33383  user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_283\n        /* \"contracts/NFTMasterChef.sol\":33367:33371  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":33367:33382  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":33314:33362  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      tag_284\n        /* \"contracts/NFTMasterChef.sol\":33357:33361  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":33314:33352  user.amount.mul(pool.accPowerPerShare) */\n      tag_285\n        /* \"contracts/NFTMasterChef.sol\":33330:33334  pool */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":33330:33351  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":33314:33318  user */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":33314:33325  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":33314:33329  user.amount.mul */\n      tag_199\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":33314:33352  user.amount.mul(pool.accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_285:\n        /* \"contracts/NFTMasterChef.sol\":33314:33356  user.amount.mul(pool.accPowerPerShare).div */\n      tag_200\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":33314:33362  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_284:\n        /* \"contracts/NFTMasterChef.sol\":33314:33366  user.amount.mul(pool.accPowerPerShare).div(1e12).sub */\n      tag_201\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":33314:33383  user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_283:\n        /* \"contracts/NFTMasterChef.sol\":33296:33383  uint256 pending = user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":33411:33412  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33401:33408  pending */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":33401:33412  pending > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":33398:33531  if(pending > 0) {\r... */\n      iszero\n      tag_286\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":33469:33515  powerBalance[address(msg.sender)].add(pending) */\n      tag_287\n        /* \"contracts/NFTMasterChef.sol\":33507:33514  pending */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":33469:33481  powerBalance */\n      0x0c\n        /* \"contracts/NFTMasterChef.sol\":33469:33502  powerBalance[address(msg.sender)] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33490:33500  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":33469:33502  powerBalance[address(msg.sender)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NFTMasterChef.sol\":33469:33506  powerBalance[address(msg.sender)].add */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":33469:33515  powerBalance[address(msg.sender)].add(pending) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_287:\n        /* \"contracts/NFTMasterChef.sol\":33433:33445  powerBalance */\n      0x0c\n        /* \"contracts/NFTMasterChef.sol\":33433:33466  powerBalance[address(msg.sender)] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33454:33464  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":33433:33466  powerBalance[address(msg.sender)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":33433:33515  powerBalance[address(msg.sender)] = powerBalance[address(msg.sender)].add(pending) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":33398:33531  if(pending > 0) {\r... */\n    tag_286:\n        /* \"contracts/NFTMasterChef.sol\":33281:33542  {\r... */\n      pop\n        /* \"contracts/NFTMasterChef.sol\":33260:33542  if (user.amount > 0) {\r... */\n    tag_282:\n        /* \"contracts/NFTMasterChef.sol\":33565:33566  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33555:33562  _amount */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":33555:33566  _amount > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":33552:33722  if(_amount > 0) {\r... */\n      iszero\n      tag_288\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":33583:33657  pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount) */\n      tag_289\n        /* \"contracts/NFTMasterChef.sol\":33621:33631  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":33642:33646  this */\n      address\n        /* \"contracts/NFTMasterChef.sol\":33649:33656  _amount */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":33583:33587  pool */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":33583:33595  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":33583:33612  pool.lpToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_290\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":33583:33657  pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_289:\n        /* \"contracts/NFTMasterChef.sol\":33686:33710  user.amount.add(_amount) */\n      tag_291\n        /* \"contracts/NFTMasterChef.sol\":33702:33709  _amount */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":33686:33690  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":33686:33697  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":33686:33701  user.amount.add */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":33686:33710  user.amount.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_291:\n        /* \"contracts/NFTMasterChef.sol\":33672:33676  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":33672:33683  user.amount */\n      0x00\n      add\n        /* \"contracts/NFTMasterChef.sol\":33672:33710  user.amount = user.amount.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":33552:33722  if(_amount > 0) {\r... */\n    tag_288:\n        /* \"contracts/NFTMasterChef.sol\":33750:33798  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      tag_292\n        /* \"contracts/NFTMasterChef.sol\":33793:33797  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":33750:33788  user.amount.mul(pool.accPowerPerShare) */\n      tag_293\n        /* \"contracts/NFTMasterChef.sol\":33766:33770  pool */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":33766:33787  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":33750:33754  user */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":33750:33761  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":33750:33765  user.amount.mul */\n      tag_199\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":33750:33788  user.amount.mul(pool.accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_293:\n        /* \"contracts/NFTMasterChef.sol\":33750:33792  user.amount.mul(pool.accPowerPerShare).div */\n      tag_200\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":33750:33798  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_292:\n        /* \"contracts/NFTMasterChef.sol\":33732:33736  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":33732:33747  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/NFTMasterChef.sol\":33732:33798  user.rewardDebt = user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":33834:33835  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33822:33832  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":33814:33845  Deposit(msg.sender, 0, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15\n        /* \"contracts/NFTMasterChef.sol\":33837:33844  _amount */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":33814:33845  Deposit(msg.sender, 0, _amount) */\n      mload(0x40)\n      tag_294\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_294:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTMasterChef.sol\":33102:33853  {\r... */\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":33056:33853  function enterStaking(uint256 _amount) public {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":32216:33003  function withdraw(uint256 _pid, uint256 _amount) public {\r... */\n    tag_87:\n        /* \"contracts/NFTMasterChef.sol\":32302:32303  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32294:32298  _pid */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":32294:32303  _pid != 0 */\n      eq\n      iszero\n        /* \"contracts/NFTMasterChef.sol\":32285:32335  require (_pid != 0, 'withdraw Power by unstaking') */\n      tag_296\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_297\n      swap1\n      tag_298\n      jump\t// in\n    tag_297:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_296:\n        /* \"contracts/NFTMasterChef.sol\":32348:32369  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32372:32380  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":32381:32385  _pid */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":32372:32386  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_299\n      jumpi\n      tag_300\n      tag_190\n      jump\t// in\n    tag_300:\n    tag_299:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":32348:32386  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":32397:32418  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32421:32429  userInfo */\n      0x07\n        /* \"contracts/NFTMasterChef.sol\":32421:32435  userInfo[_pid] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32430:32434  _pid */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":32421:32435  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":32421:32447  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32436:32446  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":32421:32447  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":32397:32447  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":32481:32488  _amount */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":32466:32470  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":32466:32477  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32466:32488  user.amount >= _amount */\n      lt\n      iszero\n        /* \"contracts/NFTMasterChef.sol\":32458:32511  require(user.amount >= _amount, \"withdraw: not good\") */\n      tag_302\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_303\n      swap1\n      tag_194\n      jump\t// in\n    tag_303:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_302:\n        /* \"contracts/NFTMasterChef.sol\":32522:32538  updatePool(_pid) */\n      tag_304\n        /* \"contracts/NFTMasterChef.sol\":32533:32537  _pid */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":32522:32532  updatePool */\n      tag_100\n        /* \"contracts/NFTMasterChef.sol\":32522:32538  updatePool(_pid) */\n      jump\t// in\n    tag_304:\n        /* \"contracts/NFTMasterChef.sol\":32549:32564  uint256 pending */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32567:32636  user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_305\n        /* \"contracts/NFTMasterChef.sol\":32620:32624  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":32620:32635  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32567:32615  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      tag_306\n        /* \"contracts/NFTMasterChef.sol\":32610:32614  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":32567:32605  user.amount.mul(pool.accPowerPerShare) */\n      tag_307\n        /* \"contracts/NFTMasterChef.sol\":32583:32587  pool */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":32583:32604  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32567:32571  user */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":32567:32578  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32567:32582  user.amount.mul */\n      tag_199\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32567:32605  user.amount.mul(pool.accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_307:\n        /* \"contracts/NFTMasterChef.sol\":32567:32609  user.amount.mul(pool.accPowerPerShare).div */\n      tag_200\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32567:32615  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_306:\n        /* \"contracts/NFTMasterChef.sol\":32567:32619  user.amount.mul(pool.accPowerPerShare).div(1e12).sub */\n      tag_201\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32567:32636  user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_305:\n        /* \"contracts/NFTMasterChef.sol\":32549:32636  uint256 pending = user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":32660:32661  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32650:32657  pending */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":32650:32661  pending > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":32647:32753  if(pending > 0){\r... */\n      iszero\n      tag_308\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":32704:32741  powerBalance[msg.sender].add(pending) */\n      tag_309\n        /* \"contracts/NFTMasterChef.sol\":32733:32740  pending */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":32704:32716  powerBalance */\n      0x0c\n        /* \"contracts/NFTMasterChef.sol\":32704:32728  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32717:32727  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":32704:32728  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32704:32732  powerBalance[msg.sender].add */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32704:32741  powerBalance[msg.sender].add(pending) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_309:\n        /* \"contracts/NFTMasterChef.sol\":32677:32689  powerBalance */\n      0x0c\n        /* \"contracts/NFTMasterChef.sol\":32677:32701  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32690:32700  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":32677:32701  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":32677:32741  powerBalance[msg.sender] = powerBalance[msg.sender].add(pending) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":32647:32753  if(pending > 0){\r... */\n    tag_308:\n        /* \"contracts/NFTMasterChef.sol\":32777:32801  user.amount.sub(_amount) */\n      tag_310\n        /* \"contracts/NFTMasterChef.sol\":32793:32800  _amount */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":32777:32781  user */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":32777:32788  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32777:32792  user.amount.sub */\n      tag_201\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32777:32801  user.amount.sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_310:\n        /* \"contracts/NFTMasterChef.sol\":32763:32767  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":32763:32774  user.amount */\n      0x00\n      add\n        /* \"contracts/NFTMasterChef.sol\":32763:32801  user.amount = user.amount.sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":32830:32878  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      tag_311\n        /* \"contracts/NFTMasterChef.sol\":32873:32877  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":32830:32868  user.amount.mul(pool.accPowerPerShare) */\n      tag_312\n        /* \"contracts/NFTMasterChef.sol\":32846:32850  pool */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":32846:32867  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32830:32834  user */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":32830:32841  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32830:32845  user.amount.mul */\n      tag_199\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32830:32868  user.amount.mul(pool.accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_312:\n        /* \"contracts/NFTMasterChef.sol\":32830:32872  user.amount.mul(pool.accPowerPerShare).div */\n      tag_200\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32830:32878  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_311:\n        /* \"contracts/NFTMasterChef.sol\":32812:32816  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":32812:32827  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/NFTMasterChef.sol\":32812:32878  user.rewardDebt = user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":32889:32944  pool.lpToken.safeTransfer(address(msg.sender), _amount) */\n      tag_313\n        /* \"contracts/NFTMasterChef.sol\":32923:32933  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":32936:32943  _amount */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":32889:32893  pool */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":32889:32901  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":32889:32914  pool.lpToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_208\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32889:32944  pool.lpToken.safeTransfer(address(msg.sender), _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_313:\n        /* \"contracts/NFTMasterChef.sol\":32981:32985  _pid */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":32969:32979  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":32960:32995  Withdraw(msg.sender, _pid, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n        /* \"contracts/NFTMasterChef.sol\":32987:32994  _amount */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":32960:32995  Withdraw(msg.sender, _pid, _amount) */\n      mload(0x40)\n      tag_314\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_314:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTMasterChef.sol\":32272:33003  {\r... */\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":32216:33003  function withdraw(uint256 _pid, uint256 _amount) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":28726:29217  function migrate(uint256 _pid) public {\r... */\n    tag_90:\n        /* \"contracts/NFTMasterChef.sol\":28812:28813  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":28783:28814  address(migrator) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":28791:28799  migrator */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":28783:28814  address(migrator) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/NFTMasterChef.sol\":28775:28839  require(address(migrator) != address(0), \"migrate: no migrator\") */\n      tag_316\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_317\n      swap1\n      tag_318\n      jump\t// in\n    tag_317:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_316:\n        /* \"contracts/NFTMasterChef.sol\":28850:28871  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":28874:28882  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":28883:28887  _pid */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":28874:28888  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_319\n      jumpi\n      tag_320\n      tag_190\n      jump\t// in\n    tag_320:\n    tag_319:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":28850:28888  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":28899:28913  IERC20 lpToken */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":28916:28920  pool */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":28916:28928  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":28899:28928  IERC20 lpToken = pool.lpToken */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":28939:28950  uint256 bal */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":28953:28960  lpToken */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":28953:28970  lpToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/NFTMasterChef.sol\":28979:28983  this */\n      address\n        /* \"contracts/NFTMasterChef.sol\":28953:28985  lpToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_322\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_322:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_323\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_323:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_325\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_325:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_326\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_326:\n        /* \"contracts/NFTMasterChef.sol\":28939:28985  uint256 bal = lpToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":28996:29039  lpToken.safeApprove(address(migrator), bal) */\n      tag_327\n        /* \"contracts/NFTMasterChef.sol\":29024:29032  migrator */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":29035:29038  bal */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":28996:29003  lpToken */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":28996:29015  lpToken.safeApprove */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_328\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":28996:29039  lpToken.safeApprove(address(migrator), bal) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_327:\n        /* \"contracts/NFTMasterChef.sol\":29050:29067  IERC20 newLpToken */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29070:29078  migrator */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":29070:29086  migrator.migrate */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xce5494bb\n        /* \"contracts/NFTMasterChef.sol\":29087:29094  lpToken */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":29070:29095  migrator.migrate(lpToken) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_329\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_329:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_330\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_330:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_332\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_332:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_333\n      swap2\n      swap1\n      tag_334\n      jump\t// in\n    tag_333:\n        /* \"contracts/NFTMasterChef.sol\":29050:29095  IERC20 newLpToken = migrator.migrate(lpToken) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29121:29131  newLpToken */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":29121:29141  newLpToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/NFTMasterChef.sol\":29150:29154  this */\n      address\n        /* \"contracts/NFTMasterChef.sol\":29121:29156  newLpToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_335\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_335:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_336\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_336:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_338\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_338:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_339\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_339:\n        /* \"contracts/NFTMasterChef.sol\":29114:29117  bal */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":29114:29156  bal == newLpToken.balanceOf(address(this)) */\n      eq\n        /* \"contracts/NFTMasterChef.sol\":29106:29173  require(bal == newLpToken.balanceOf(address(this)), \"migrate: bad\") */\n      tag_340\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_341\n      swap1\n      tag_342\n      jump\t// in\n    tag_341:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_340:\n        /* \"contracts/NFTMasterChef.sol\":29199:29209  newLpToken */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":29184:29188  pool */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":29184:29196  pool.lpToken */\n      0x00\n      add\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29184:29209  pool.lpToken = newLpToken */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":28764:29217  {\r... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":28726:29217  function migrate(uint256 _pid) public {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":24276:24301  uint256 public startBlock */\n    tag_92:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":25454:25660  function addNFT(IERC721 _NFT, uint256 _power) public onlyOwner {\r... */\n    tag_97:\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      tag_344\n        /* \"contracts/NFTMasterChef.sol\":20336:20346  _msgSender */\n      tag_181\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      jump\t// in\n    tag_344:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      tag_345\n        /* \"contracts/NFTMasterChef.sol\":20325:20330  owner */\n      tag_142\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      jump\t// in\n    tag_345:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":20317:20385  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_346\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_347\n      swap1\n      tag_185\n      jump\t// in\n    tag_347:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_346:\n        /* \"contracts/NFTMasterChef.sol\":25528:25536  nftsInfo */\n      0x01\n        /* \"contracts/NFTMasterChef.sol\":25556:25641  NFTsInfo({\r... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":25589:25593  _NFT */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":25556:25641  NFTsInfo({\r... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NFTMasterChef.sol\":25619:25625  _power */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":25556:25641  NFTsInfo({\r... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":25528:25652  nftsInfo.push(\r... */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":25454:25660  function addNFT(IERC721 _NFT, uint256 _power) public onlyOwner {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":30608:31298  function updatePool(uint256 _pid) public {\r... */\n    tag_100:\n        /* \"contracts/NFTMasterChef.sol\":30660:30681  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":30684:30692  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":30693:30697  _pid */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":30684:30698  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_351\n      jumpi\n      tag_352\n      tag_190\n      jump\t// in\n    tag_352:\n    tag_351:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":30660:30698  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30729:30733  pool */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":30729:30749  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":30713:30725  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":30713:30749  block.number <= pool.lastRewardBlock */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":30709:30784  if (block.number <= pool.lastRewardBlock) {\r... */\n      tag_354\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":30766:30773  return; */\n      pop\n      jump(tag_350)\n        /* \"contracts/NFTMasterChef.sol\":30709:30784  if (block.number <= pool.lastRewardBlock) {\r... */\n    tag_354:\n        /* \"contracts/NFTMasterChef.sol\":30794:30810  uint256 lpSupply */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":30813:30817  pool */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":30813:30825  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":30813:30835  pool.lpToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/NFTMasterChef.sol\":30844:30848  this */\n      address\n        /* \"contracts/NFTMasterChef.sol\":30813:30850  pool.lpToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_355\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_355:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_356\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_356:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_358\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_358:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_359\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_359:\n        /* \"contracts/NFTMasterChef.sol\":30794:30850  uint256 lpSupply = pool.lpToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30877:30878  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":30865:30873  lpSupply */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":30865:30878  lpSupply <= 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":30861:30963  if (lpSupply <= 0) {\r... */\n      tag_360\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":30918:30930  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":30895:30899  pool */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":30895:30915  pool.lastRewardBlock */\n      0x02\n      add\n        /* \"contracts/NFTMasterChef.sol\":30895:30930  pool.lastRewardBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30945:30952  return; */\n      pop\n      pop\n      jump(tag_350)\n        /* \"contracts/NFTMasterChef.sol\":30861:30963  if (lpSupply <= 0) {\r... */\n    tag_360:\n        /* \"contracts/NFTMasterChef.sol\":30973:30991  uint256 multiplier */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":30994:31043  getMultiplier(pool.lastRewardBlock, block.number) */\n      tag_361\n        /* \"contracts/NFTMasterChef.sol\":31008:31012  pool */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":31008:31028  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":31030:31042  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":30994:31007  getMultiplier */\n      tag_146\n        /* \"contracts/NFTMasterChef.sol\":30994:31043  getMultiplier(pool.lastRewardBlock, block.number) */\n      jump\t// in\n    tag_361:\n        /* \"contracts/NFTMasterChef.sol\":30973:31043  uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31054:31073  uint256 PowerReward */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31076:31147  multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      tag_362\n        /* \"contracts/NFTMasterChef.sol\":31131:31146  totalAllocPoint */\n      sload(0x08)\n        /* \"contracts/NFTMasterChef.sol\":31076:31126  multiplier.mul(PowerPerBlock).mul(pool.allocPoint) */\n      tag_363\n        /* \"contracts/NFTMasterChef.sol\":31110:31114  pool */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":31110:31125  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":31076:31105  multiplier.mul(PowerPerBlock) */\n      tag_364\n        /* \"contracts/NFTMasterChef.sol\":31091:31104  PowerPerBlock */\n      sload(0x03)\n        /* \"contracts/NFTMasterChef.sol\":31076:31086  multiplier */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":31076:31090  multiplier.mul */\n      tag_199\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":31076:31105  multiplier.mul(PowerPerBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_364:\n        /* \"contracts/NFTMasterChef.sol\":31076:31109  multiplier.mul(PowerPerBlock).mul */\n      tag_199\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":31076:31126  multiplier.mul(PowerPerBlock).mul(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_363:\n        /* \"contracts/NFTMasterChef.sol\":31076:31130  multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div */\n      tag_200\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":31076:31147  multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_362:\n        /* \"contracts/NFTMasterChef.sol\":31054:31147  uint256 PowerReward = multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31182:31244  pool.accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply)) */\n      tag_365\n        /* \"contracts/NFTMasterChef.sol\":31208:31243  PowerReward.mul(1e12).div(lpSupply) */\n      tag_366\n        /* \"contracts/NFTMasterChef.sol\":31234:31242  lpSupply */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":31208:31229  PowerReward.mul(1e12) */\n      tag_367\n        /* \"contracts/NFTMasterChef.sol\":31224:31228  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":31208:31219  PowerReward */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":31208:31223  PowerReward.mul */\n      tag_199\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":31208:31229  PowerReward.mul(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_367:\n        /* \"contracts/NFTMasterChef.sol\":31208:31233  PowerReward.mul(1e12).div */\n      tag_200\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":31208:31243  PowerReward.mul(1e12).div(lpSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_366:\n        /* \"contracts/NFTMasterChef.sol\":31182:31186  pool */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":31182:31203  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":31182:31207  pool.accPowerPerShare.add */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":31182:31244  pool.accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_365:\n        /* \"contracts/NFTMasterChef.sol\":31158:31162  pool */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":31158:31179  pool.accPowerPerShare */\n      0x03\n      add\n        /* \"contracts/NFTMasterChef.sol\":31158:31244  pool.accPowerPerShare = pool.accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31278:31290  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":31255:31259  pool */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":31255:31275  pool.lastRewardBlock */\n      0x02\n      add\n        /* \"contracts/NFTMasterChef.sol\":31255:31290  pool.lastRewardBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30649:31298  {\r... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30608:31298  function updatePool(uint256 _pid) public {\r... */\n    tag_350:\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":35635:35991  function emergencyWithdraw(uint256 _pid) public {\r... */\n    tag_103:\n        /* \"contracts/NFTMasterChef.sol\":35694:35715  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":35718:35726  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":35727:35731  _pid */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":35718:35732  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_369\n      jumpi\n      tag_370\n      tag_190\n      jump\t// in\n    tag_370:\n    tag_369:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":35694:35732  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":35743:35764  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":35767:35775  userInfo */\n      0x07\n        /* \"contracts/NFTMasterChef.sol\":35767:35781  userInfo[_pid] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":35776:35780  _pid */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":35767:35781  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":35767:35793  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":35782:35792  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":35767:35793  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":35743:35793  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":35804:35863  pool.lpToken.safeTransfer(address(msg.sender), user.amount) */\n      tag_372\n        /* \"contracts/NFTMasterChef.sol\":35838:35848  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":35851:35855  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":35851:35862  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":35804:35808  pool */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":35804:35816  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":35804:35829  pool.lpToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_208\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":35804:35863  pool.lpToken.safeTransfer(address(msg.sender), user.amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_372:\n        /* \"contracts/NFTMasterChef.sol\":35909:35913  _pid */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":35897:35907  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":35879:35927  EmergencyWithdraw(msg.sender, _pid, user.amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595\n        /* \"contracts/NFTMasterChef.sol\":35915:35919  user */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":35915:35926  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":35879:35927  EmergencyWithdraw(msg.sender, _pid, user.amount) */\n      mload(0x40)\n      tag_373\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_373:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTMasterChef.sol\":35952:35953  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":35938:35942  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":35938:35949  user.amount */\n      0x00\n      add\n        /* \"contracts/NFTMasterChef.sol\":35938:35953  user.amount = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":35982:35983  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":35964:35968  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":35964:35979  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/NFTMasterChef.sol\":35964:35983  user.rewardDebt = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":35683:35991  {\r... */\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":35635:35991  function emergencyWithdraw(uint256 _pid) public {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":23657:23685  uint256 public PowerPerBlock */\n    tag_105:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":27068:27191  function updateMultiplier(uint256 multiplierNumber) public onlyOwner {\r... */\n    tag_109:\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      tag_375\n        /* \"contracts/NFTMasterChef.sol\":20336:20346  _msgSender */\n      tag_181\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      jump\t// in\n    tag_375:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      tag_376\n        /* \"contracts/NFTMasterChef.sol\":20325:20330  owner */\n      tag_142\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      jump\t// in\n    tag_376:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":20317:20385  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_377\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_378\n      swap1\n      tag_185\n      jump\t// in\n    tag_378:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_377:\n        /* \"contracts/NFTMasterChef.sol\":27167:27183  multiplierNumber */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":27148:27164  BONUS_MULTIPLIER */\n      0x04\n        /* \"contracts/NFTMasterChef.sol\":27148:27183  BONUS_MULTIPLIER = multiplierNumber */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":27068:27191  function updateMultiplier(uint256 multiplierNumber) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":23533:23559  NFTsInfo[] public nftsInfo */\n    tag_112:\n      0x01\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_380\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_380:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":30352:30532  function massUpdatePools() public {\r... */\n    tag_116:\n        /* \"contracts/NFTMasterChef.sol\":30397:30411  uint256 length */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":30414:30422  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":30414:30429  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30397:30429  uint256 length = poolInfo.length */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30445:30456  uint256 pid */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":30440:30525  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n    tag_383:\n        /* \"contracts/NFTMasterChef.sol\":30468:30474  length */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":30462:30465  pid */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":30462:30474  pid < length */\n      lt\n        /* \"contracts/NFTMasterChef.sol\":30440:30525  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      iszero\n      tag_384\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":30498:30513  updatePool(pid) */\n      tag_386\n        /* \"contracts/NFTMasterChef.sol\":30509:30512  pid */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":30498:30508  updatePool */\n      tag_100\n        /* \"contracts/NFTMasterChef.sol\":30498:30513  updatePool(pid) */\n      jump\t// in\n    tag_386:\n        /* \"contracts/NFTMasterChef.sol\":30476:30481  ++pid */\n      dup1\n      tag_387\n      swap1\n      tag_388\n      jump\t// in\n    tag_387:\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30440:30525  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      jump(tag_383)\n    tag_384:\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30386:30532  {\r... */\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30352:30532  function massUpdatePools() public {\r... */\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":28120:28425  function set( uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner {\r... */\n    tag_120:\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      tag_390\n        /* \"contracts/NFTMasterChef.sol\":20336:20346  _msgSender */\n      tag_181\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      jump\t// in\n    tag_390:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      tag_391\n        /* \"contracts/NFTMasterChef.sol\":20325:20330  owner */\n      tag_142\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      jump\t// in\n    tag_391:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":20317:20385  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_392\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_393\n      swap1\n      tag_185\n      jump\t// in\n    tag_393:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_392:\n        /* \"contracts/NFTMasterChef.sol\":28219:28230  _withUpdate */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":28215:28276  if (_withUpdate) {\r... */\n      iszero\n      tag_395\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":28247:28264  massUpdatePools() */\n      tag_396\n        /* \"contracts/NFTMasterChef.sol\":28247:28262  massUpdatePools */\n      tag_116\n        /* \"contracts/NFTMasterChef.sol\":28247:28264  massUpdatePools() */\n      jump\t// in\n    tag_396:\n        /* \"contracts/NFTMasterChef.sol\":28215:28276  if (_withUpdate) {\r... */\n    tag_395:\n        /* \"contracts/NFTMasterChef.sol\":28304:28367  totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) */\n      tag_397\n        /* \"contracts/NFTMasterChef.sol\":28355:28366  _allocPoint */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":28304:28350  totalAllocPoint.sub(poolInfo[_pid].allocPoint) */\n      tag_398\n        /* \"contracts/NFTMasterChef.sol\":28324:28332  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":28333:28337  _pid */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":28324:28338  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_399\n      jumpi\n      tag_400\n      tag_190\n      jump\t// in\n    tag_400:\n    tag_399:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":28324:28349  poolInfo[_pid].allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":28304:28319  totalAllocPoint */\n      sload(0x08)\n        /* \"contracts/NFTMasterChef.sol\":28304:28323  totalAllocPoint.sub */\n      tag_201\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":28304:28350  totalAllocPoint.sub(poolInfo[_pid].allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_398:\n        /* \"contracts/NFTMasterChef.sol\":28304:28354  totalAllocPoint.sub(poolInfo[_pid].allocPoint).add */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":28304:28367  totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_397:\n        /* \"contracts/NFTMasterChef.sol\":28286:28301  totalAllocPoint */\n      0x08\n        /* \"contracts/NFTMasterChef.sol\":28286:28367  totalAllocPoint = totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":28406:28417  _allocPoint */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":28378:28386  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":28387:28391  _pid */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":28378:28392  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_402\n      jumpi\n      tag_403\n      tag_190\n      jump\t// in\n    tag_403:\n    tag_402:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":28378:28403  poolInfo[_pid].allocPoint */\n      0x01\n      add\n        /* \"contracts/NFTMasterChef.sol\":28378:28417  poolInfo[_pid].allocPoint = _allocPoint */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":28120:28425  function set( uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":20756:20859  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_122:\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      tag_406\n        /* \"contracts/NFTMasterChef.sol\":20336:20346  _msgSender */\n      tag_181\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      jump\t// in\n    tag_406:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      tag_407\n        /* \"contracts/NFTMasterChef.sol\":20325:20330  owner */\n      tag_142\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      jump\t// in\n    tag_407:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":20317:20385  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_408\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_409\n      swap1\n      tag_185\n      jump\t// in\n    tag_409:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_408:\n        /* \"contracts/NFTMasterChef.sol\":20821:20851  _transferOwnership(address(0)) */\n      tag_411\n        /* \"contracts/NFTMasterChef.sol\":20848:20849  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":20821:20839  _transferOwnership */\n      tag_412\n        /* \"contracts/NFTMasterChef.sol\":20821:20851  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_411:\n        /* \"contracts/NFTMasterChef.sol\":20756:20859  function renounceOwnership() public virtual onlyOwner {\r... */\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":24347:24375  address public DDTMasterchef */\n    tag_124:\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":23880:23909  IMigratorChef public migrator */\n    tag_128:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":24310:24340  address public NFTStakeAddress */\n    tag_132:\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":23740:23775  uint256 public BONUS_MULTIPLIER = 1 */\n    tag_135:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":25328:25446  function getPowerBalance(address account) public view returns(uint256) {\r... */\n    tag_139:\n        /* \"contracts/NFTMasterChef.sol\":25390:25397  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":25417:25429  powerBalance */\n      0x0c\n        /* \"contracts/NFTMasterChef.sol\":25417:25438  powerBalance[account] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":25430:25437  account */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":25417:25438  powerBalance[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NFTMasterChef.sol\":25410:25438  return powerBalance[account] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":25328:25446  function getPowerBalance(address account) public view returns(uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":20105:20192  function owner() public view virtual returns (address) {\r... */\n    tag_142:\n        /* \"contracts/NFTMasterChef.sol\":20151:20158  address */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":20178:20184  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20171:20184  return _owner */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":20105:20192  function owner() public view virtual returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":29293:29437  function getMultiplier(uint256 _from, uint256 _to) public view returns (uint256) {\r... */\n    tag_146:\n        /* \"contracts/NFTMasterChef.sol\":29365:29372  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29393:29429  _to.sub(_from).mul(BONUS_MULTIPLIER) */\n      tag_416\n        /* \"contracts/NFTMasterChef.sol\":29412:29428  BONUS_MULTIPLIER */\n      sload(0x04)\n        /* \"contracts/NFTMasterChef.sol\":29393:29407  _to.sub(_from) */\n      tag_417\n        /* \"contracts/NFTMasterChef.sol\":29401:29406  _from */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":29393:29396  _to */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":29393:29400  _to.sub */\n      tag_201\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":29393:29407  _to.sub(_from) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_417:\n        /* \"contracts/NFTMasterChef.sol\":29393:29411  _to.sub(_from).mul */\n      tag_199\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":29393:29429  _to.sub(_from).mul(BONUS_MULTIPLIER) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_416:\n        /* \"contracts/NFTMasterChef.sol\":29386:29429  return _to.sub(_from).mul(BONUS_MULTIPLIER) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29293:29437  function getMultiplier(uint256 _from, uint256 _to) public view returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":24025:24089  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n    tag_151:\n      mstore(0x20, 0x07)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":25668:25784  function updateNFT(uint256 level, uint256 _power) public onlyOwner {\r... */\n    tag_156:\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      tag_419\n        /* \"contracts/NFTMasterChef.sol\":20336:20346  _msgSender */\n      tag_181\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      jump\t// in\n    tag_419:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      tag_420\n        /* \"contracts/NFTMasterChef.sol\":20325:20330  owner */\n      tag_142\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      jump\t// in\n    tag_420:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":20317:20385  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_421\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_422\n      swap1\n      tag_185\n      jump\t// in\n    tag_422:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_421:\n        /* \"contracts/NFTMasterChef.sol\":25770:25776  _power */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":25746:25754  nftsInfo */\n      0x01\n        /* \"contracts/NFTMasterChef.sol\":25755:25760  level */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":25746:25761  nftsInfo[level] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_424\n      jumpi\n      tag_425\n      tag_190\n      jump\t// in\n    tag_425:\n    tag_424:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":25746:25767  nftsInfo[level].power */\n      0x01\n      add\n        /* \"contracts/NFTMasterChef.sol\":25746:25776  nftsInfo[level].power = _power */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":25668:25784  function updateNFT(uint256 level, uint256 _power) public onlyOwner {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":23593:23610  IERC20 public DDT */\n    tag_158:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":33861:34757  function enterStakingCompund(uint256 _amount, address _account) public {\r... */\n    tag_163:\n        /* \"contracts/NFTMasterChef.sol\":33965:33980  NFTStakeAddress */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":33951:33980  msg.sender == NFTStakeAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":33951:33961  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":33951:33980  msg.sender == NFTStakeAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":33951:33989  msg.sender == NFTStakeAddress || 1 > 0 */\n      dup1\n      tag_428\n      jumpi\n      pop\n        /* \"contracts/NFTMasterChef.sol\":33988:33989  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33984:33985  1 */\n      0x01\n        /* \"contracts/NFTMasterChef.sol\":33984:33989  1 > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":33951:33989  msg.sender == NFTStakeAddress || 1 > 0 */\n    tag_428:\n        /* \"contracts/NFTMasterChef.sol\":33943:34014  require(msg.sender == NFTStakeAddress || 1 > 0, \"Caller is not family\") */\n      tag_429\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_430\n      swap1\n      tag_431\n      jump\t// in\n    tag_430:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_429:\n        /* \"contracts/NFTMasterChef.sol\":34025:34046  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34049:34057  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":34058:34059  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34049:34060  poolInfo[0] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_432\n      jumpi\n      tag_433\n      tag_190\n      jump\t// in\n    tag_433:\n    tag_432:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":34025:34060  PoolInfo storage pool = poolInfo[0] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":34071:34092  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34095:34103  userInfo */\n      0x07\n        /* \"contracts/NFTMasterChef.sol\":34095:34106  userInfo[0] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34104:34105  0 */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":34095:34106  userInfo[0] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":34095:34125  userInfo[0][address(_account)] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34115:34123  _account */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":34095:34125  userInfo[0][address(_account)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":34071:34125  UserInfo storage user = userInfo[0][address(_account)] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":34146:34159  updatePool(0) */\n      tag_435\n        /* \"contracts/NFTMasterChef.sol\":34157:34158  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34146:34156  updatePool */\n      tag_100\n        /* \"contracts/NFTMasterChef.sol\":34146:34159  updatePool(0) */\n      jump\t// in\n    tag_435:\n        /* \"contracts/NFTMasterChef.sol\":34188:34189  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34174:34178  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":34174:34185  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":34174:34189  user.amount > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":34170:34448  if (user.amount > 0) {\r... */\n      iszero\n      tag_436\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":34206:34221  uint256 pending */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34224:34293  user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_437\n        /* \"contracts/NFTMasterChef.sol\":34277:34281  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":34277:34292  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":34224:34272  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      tag_438\n        /* \"contracts/NFTMasterChef.sol\":34267:34271  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":34224:34262  user.amount.mul(pool.accPowerPerShare) */\n      tag_439\n        /* \"contracts/NFTMasterChef.sol\":34240:34244  pool */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":34240:34261  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":34224:34228  user */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":34224:34235  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":34224:34239  user.amount.mul */\n      tag_199\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":34224:34262  user.amount.mul(pool.accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_439:\n        /* \"contracts/NFTMasterChef.sol\":34224:34266  user.amount.mul(pool.accPowerPerShare).div */\n      tag_200\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":34224:34272  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_438:\n        /* \"contracts/NFTMasterChef.sol\":34224:34276  user.amount.mul(pool.accPowerPerShare).div(1e12).sub */\n      tag_201\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":34224:34293  user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_437:\n        /* \"contracts/NFTMasterChef.sol\":34206:34293  uint256 pending = user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":34321:34322  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34311:34318  pending */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":34311:34322  pending > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":34308:34437  if(pending > 0) {\r... */\n      iszero\n      tag_440\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":34377:34421  powerBalance[address(_account)].add(pending) */\n      tag_441\n        /* \"contracts/NFTMasterChef.sol\":34413:34420  pending */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":34377:34389  powerBalance */\n      0x0c\n        /* \"contracts/NFTMasterChef.sol\":34377:34408  powerBalance[address(_account)] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34398:34406  _account */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":34377:34408  powerBalance[address(_account)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NFTMasterChef.sol\":34377:34412  powerBalance[address(_account)].add */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":34377:34421  powerBalance[address(_account)].add(pending) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_441:\n        /* \"contracts/NFTMasterChef.sol\":34343:34355  powerBalance */\n      0x0c\n        /* \"contracts/NFTMasterChef.sol\":34343:34374  powerBalance[address(_account)] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34364:34372  _account */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":34343:34374  powerBalance[address(_account)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":34343:34421  powerBalance[address(_account)] = powerBalance[address(_account)].add(pending) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":34308:34437  if(pending > 0) {\r... */\n    tag_440:\n        /* \"contracts/NFTMasterChef.sol\":34191:34448  {\r... */\n      pop\n        /* \"contracts/NFTMasterChef.sol\":34170:34448  if (user.amount > 0) {\r... */\n    tag_436:\n        /* \"contracts/NFTMasterChef.sol\":34471:34472  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34461:34468  _amount */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":34461:34472  _amount > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":34458:34628  if(_amount > 0) {\r... */\n      iszero\n      tag_442\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":34489:34563  pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount) */\n      tag_443\n        /* \"contracts/NFTMasterChef.sol\":34527:34537  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":34548:34552  this */\n      address\n        /* \"contracts/NFTMasterChef.sol\":34555:34562  _amount */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":34489:34493  pool */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":34489:34501  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":34489:34518  pool.lpToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_290\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":34489:34563  pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_443:\n        /* \"contracts/NFTMasterChef.sol\":34592:34616  user.amount.add(_amount) */\n      tag_444\n        /* \"contracts/NFTMasterChef.sol\":34608:34615  _amount */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":34592:34596  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":34592:34603  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":34592:34607  user.amount.add */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":34592:34616  user.amount.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_444:\n        /* \"contracts/NFTMasterChef.sol\":34578:34582  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":34578:34589  user.amount */\n      0x00\n      add\n        /* \"contracts/NFTMasterChef.sol\":34578:34616  user.amount = user.amount.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":34458:34628  if(_amount > 0) {\r... */\n    tag_442:\n        /* \"contracts/NFTMasterChef.sol\":34656:34704  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      tag_445\n        /* \"contracts/NFTMasterChef.sol\":34699:34703  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":34656:34694  user.amount.mul(pool.accPowerPerShare) */\n      tag_446\n        /* \"contracts/NFTMasterChef.sol\":34672:34676  pool */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":34672:34693  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":34656:34660  user */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":34656:34667  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":34656:34671  user.amount.mul */\n      tag_199\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":34656:34694  user.amount.mul(pool.accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_446:\n        /* \"contracts/NFTMasterChef.sol\":34656:34698  user.amount.mul(pool.accPowerPerShare).div */\n      tag_200\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":34656:34704  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_445:\n        /* \"contracts/NFTMasterChef.sol\":34638:34642  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":34638:34653  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/NFTMasterChef.sol\":34638:34704  user.rewardDebt = user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":34738:34739  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34728:34736  _account */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":34720:34749  Deposit(_account, 0, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15\n        /* \"contracts/NFTMasterChef.sol\":34741:34748  _amount */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":34720:34749  Deposit(_account, 0, _amount) */\n      mload(0x40)\n      tag_447\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_447:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTMasterChef.sol\":33932:34757  {\r... */\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":33861:34757  function enterStakingCompund(uint256 _amount, address _account) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":24384:24431  mapping(address => uint256) public powerBalance */\n    tag_166:\n      mstore(0x20, 0x0c)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":31368:32164  function deposit(uint256 _pid, uint256 _amount) public {\r... */\n    tag_170:\n        /* \"contracts/NFTMasterChef.sol\":31453:31454  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31445:31449  _pid */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":31445:31454  _pid != 0 */\n      eq\n      iszero\n        /* \"contracts/NFTMasterChef.sol\":31436:31483  require (_pid != 0, 'deposit Power by staking') */\n      tag_449\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_450\n      swap1\n      tag_451\n      jump\t// in\n    tag_450:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_449:\n        /* \"contracts/NFTMasterChef.sol\":31496:31517  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31520:31528  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":31529:31533  _pid */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":31520:31534  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_452\n      jumpi\n      tag_453\n      tag_190\n      jump\t// in\n    tag_453:\n    tag_452:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":31496:31534  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31545:31566  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31569:31577  userInfo */\n      0x07\n        /* \"contracts/NFTMasterChef.sol\":31569:31583  userInfo[_pid] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31578:31582  _pid */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":31569:31583  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":31569:31595  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31584:31594  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":31569:31595  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":31545:31595  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31606:31622  updatePool(_pid) */\n      tag_455\n        /* \"contracts/NFTMasterChef.sol\":31617:31621  _pid */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":31606:31616  updatePool */\n      tag_100\n        /* \"contracts/NFTMasterChef.sol\":31606:31622  updatePool(_pid) */\n      jump\t// in\n    tag_455:\n        /* \"contracts/NFTMasterChef.sol\":31651:31652  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31637:31641  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":31637:31648  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":31637:31652  user.amount > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":31633:31896  if (user.amount > 0) {\r... */\n      iszero\n      tag_456\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":31669:31684  uint256 pending */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31687:31756  user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_457\n        /* \"contracts/NFTMasterChef.sol\":31740:31744  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":31740:31755  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":31687:31735  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      tag_458\n        /* \"contracts/NFTMasterChef.sol\":31730:31734  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":31687:31725  user.amount.mul(pool.accPowerPerShare) */\n      tag_459\n        /* \"contracts/NFTMasterChef.sol\":31703:31707  pool */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":31703:31724  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":31687:31691  user */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":31687:31698  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":31687:31702  user.amount.mul */\n      tag_199\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":31687:31725  user.amount.mul(pool.accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_459:\n        /* \"contracts/NFTMasterChef.sol\":31687:31729  user.amount.mul(pool.accPowerPerShare).div */\n      tag_200\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":31687:31735  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_458:\n        /* \"contracts/NFTMasterChef.sol\":31687:31739  user.amount.mul(pool.accPowerPerShare).div(1e12).sub */\n      tag_201\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":31687:31756  user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_457:\n        /* \"contracts/NFTMasterChef.sol\":31669:31756  uint256 pending = user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31784:31785  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31774:31781  pending */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":31774:31785  pending > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":31771:31885  if(pending > 0){\r... */\n      iszero\n      tag_460\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":31832:31869  powerBalance[msg.sender].add(pending) */\n      tag_461\n        /* \"contracts/NFTMasterChef.sol\":31861:31868  pending */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":31832:31844  powerBalance */\n      0x0c\n        /* \"contracts/NFTMasterChef.sol\":31832:31856  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31845:31855  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":31832:31856  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NFTMasterChef.sol\":31832:31860  powerBalance[msg.sender].add */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":31832:31869  powerBalance[msg.sender].add(pending) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_461:\n        /* \"contracts/NFTMasterChef.sol\":31805:31817  powerBalance */\n      0x0c\n        /* \"contracts/NFTMasterChef.sol\":31805:31829  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31818:31828  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":31805:31829  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":31805:31869  powerBalance[msg.sender] = powerBalance[msg.sender].add(pending) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31771:31885  if(pending > 0){\r... */\n    tag_460:\n        /* \"contracts/NFTMasterChef.sol\":31654:31896  {\r... */\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31633:31896  if (user.amount > 0) {\r... */\n    tag_456:\n        /* \"contracts/NFTMasterChef.sol\":31906:31980  pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount) */\n      tag_462\n        /* \"contracts/NFTMasterChef.sol\":31944:31954  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":31965:31969  this */\n      address\n        /* \"contracts/NFTMasterChef.sol\":31972:31979  _amount */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":31906:31910  pool */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":31906:31918  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":31906:31935  pool.lpToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_290\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":31906:31980  pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_462:\n        /* \"contracts/NFTMasterChef.sol\":32005:32029  user.amount.add(_amount) */\n      tag_463\n        /* \"contracts/NFTMasterChef.sol\":32021:32028  _amount */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":32005:32009  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":32005:32016  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32005:32020  user.amount.add */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32005:32029  user.amount.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_463:\n        /* \"contracts/NFTMasterChef.sol\":31991:31995  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":31991:32002  user.amount */\n      0x00\n      add\n        /* \"contracts/NFTMasterChef.sol\":31991:32029  user.amount = user.amount.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":32058:32106  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      tag_464\n        /* \"contracts/NFTMasterChef.sol\":32101:32105  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":32058:32096  user.amount.mul(pool.accPowerPerShare) */\n      tag_465\n        /* \"contracts/NFTMasterChef.sol\":32074:32078  pool */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":32074:32095  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32058:32062  user */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":32058:32069  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32058:32073  user.amount.mul */\n      tag_199\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32058:32096  user.amount.mul(pool.accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_465:\n        /* \"contracts/NFTMasterChef.sol\":32058:32100  user.amount.mul(pool.accPowerPerShare).div */\n      tag_200\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32058:32106  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_464:\n        /* \"contracts/NFTMasterChef.sol\":32040:32044  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":32040:32055  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/NFTMasterChef.sol\":32040:32106  user.rewardDebt = user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":32142:32146  _pid */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":32130:32140  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":32122:32156  Deposit(msg.sender, _pid, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15\n        /* \"contracts/NFTMasterChef.sol\":32148:32155  _amount */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":32122:32156  Deposit(msg.sender, _pid, _amount) */\n      mload(0x40)\n      tag_466\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_466:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTMasterChef.sol\":31423:32164  {\r... */\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31368:32164  function deposit(uint256 _pid, uint256 _amount) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":21014:21215  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_173:\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      tag_468\n        /* \"contracts/NFTMasterChef.sol\":20336:20346  _msgSender */\n      tag_181\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      jump\t// in\n    tag_468:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      tag_469\n        /* \"contracts/NFTMasterChef.sol\":20325:20330  owner */\n      tag_142\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      jump\t// in\n    tag_469:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":20317:20385  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_470\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_471\n      swap1\n      tag_185\n      jump\t// in\n    tag_471:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_470:\n        /* \"contracts/NFTMasterChef.sol\":21123:21124  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":21103:21125  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":21103:21111  newOwner */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":21103:21125  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/NFTMasterChef.sol\":21095:21168  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_473\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_474\n      swap1\n      tag_475\n      jump\t// in\n    tag_474:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_473:\n        /* \"contracts/NFTMasterChef.sol\":21179:21207  _transferOwnership(newOwner) */\n      tag_476\n        /* \"contracts/NFTMasterChef.sol\":21198:21206  newOwner */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":21179:21197  _transferOwnership */\n      tag_412\n        /* \"contracts/NFTMasterChef.sol\":21179:21207  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_476:\n        /* \"contracts/NFTMasterChef.sol\":21014:21215  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":29502:30269  function pendingPower(uint256 _pid, address _user) external view returns (uint256){\r... */\n    tag_176:\n        /* \"contracts/NFTMasterChef.sol\":29576:29583  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29595:29616  PoolInfo storage pool */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":29619:29627  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":29628:29632  _pid */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":29619:29633  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_478\n      jumpi\n      tag_479\n      tag_190\n      jump\t// in\n    tag_479:\n    tag_478:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":29595:29633  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29644:29665  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29668:29676  userInfo */\n      0x07\n        /* \"contracts/NFTMasterChef.sol\":29668:29682  userInfo[_pid] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29677:29681  _pid */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":29668:29682  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":29668:29689  userInfo[_pid][_user] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29683:29688  _user */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":29668:29689  userInfo[_pid][_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":29644:29689  UserInfo storage user = userInfo[_pid][_user] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29700:29724  uint256 accPowerPerShare */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29727:29731  pool */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":29727:29748  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":29700:29748  uint256 accPowerPerShare = pool.accPowerPerShare */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29759:29775  uint256 lpSupply */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29778:29782  pool */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":29778:29790  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":29778:29800  pool.lpToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/NFTMasterChef.sol\":29809:29813  this */\n      address\n        /* \"contracts/NFTMasterChef.sol\":29778:29815  pool.lpToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_481\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_481:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_482\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_482:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_484\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_484:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_485\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_485:\n        /* \"contracts/NFTMasterChef.sol\":29759:29815  uint256 lpSupply = pool.lpToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29845:29849  pool */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":29845:29865  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":29830:29842  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":29830:29865  block.number > pool.lastRewardBlock */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":29830:29882  block.number > pool.lastRewardBlock && lpSupply != 0 */\n      dup1\n      iszero\n      tag_486\n      jumpi\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29881:29882  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29869:29877  lpSupply */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":29869:29882  lpSupply != 0 */\n      eq\n      iszero\n        /* \"contracts/NFTMasterChef.sol\":29830:29882  block.number > pool.lastRewardBlock && lpSupply != 0 */\n    tag_486:\n        /* \"contracts/NFTMasterChef.sol\":29826:30180  if (block.number > pool.lastRewardBlock && lpSupply != 0) {\r... */\n      iszero\n      tag_487\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":29899:29917  uint256 multiplier */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29920:29969  getMultiplier(pool.lastRewardBlock, block.number) */\n      tag_488\n        /* \"contracts/NFTMasterChef.sol\":29934:29938  pool */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":29934:29954  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":29956:29968  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":29920:29933  getMultiplier */\n      tag_146\n        /* \"contracts/NFTMasterChef.sol\":29920:29969  getMultiplier(pool.lastRewardBlock, block.number) */\n      jump\t// in\n    tag_488:\n        /* \"contracts/NFTMasterChef.sol\":29899:29969  uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29984:30003  uint256 PowerReward */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":30006:30077  multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      tag_489\n        /* \"contracts/NFTMasterChef.sol\":30061:30076  totalAllocPoint */\n      sload(0x08)\n        /* \"contracts/NFTMasterChef.sol\":30006:30056  multiplier.mul(PowerPerBlock).mul(pool.allocPoint) */\n      tag_490\n        /* \"contracts/NFTMasterChef.sol\":30040:30044  pool */\n      dup9\n        /* \"contracts/NFTMasterChef.sol\":30040:30055  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":30006:30035  multiplier.mul(PowerPerBlock) */\n      tag_491\n        /* \"contracts/NFTMasterChef.sol\":30021:30034  PowerPerBlock */\n      sload(0x03)\n        /* \"contracts/NFTMasterChef.sol\":30006:30016  multiplier */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":30006:30020  multiplier.mul */\n      tag_199\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":30006:30035  multiplier.mul(PowerPerBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_491:\n        /* \"contracts/NFTMasterChef.sol\":30006:30039  multiplier.mul(PowerPerBlock).mul */\n      tag_199\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":30006:30056  multiplier.mul(PowerPerBlock).mul(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_490:\n        /* \"contracts/NFTMasterChef.sol\":30006:30060  multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div */\n      tag_200\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":30006:30077  multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_489:\n        /* \"contracts/NFTMasterChef.sol\":29984:30077  uint256 PowerReward = multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30111:30168  accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply)) */\n      tag_492\n        /* \"contracts/NFTMasterChef.sol\":30132:30167  PowerReward.mul(1e12).div(lpSupply) */\n      tag_493\n        /* \"contracts/NFTMasterChef.sol\":30158:30166  lpSupply */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":30132:30153  PowerReward.mul(1e12) */\n      tag_494\n        /* \"contracts/NFTMasterChef.sol\":30148:30152  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":30132:30143  PowerReward */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":30132:30147  PowerReward.mul */\n      tag_199\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":30132:30153  PowerReward.mul(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_494:\n        /* \"contracts/NFTMasterChef.sol\":30132:30157  PowerReward.mul(1e12).div */\n      tag_200\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":30132:30167  PowerReward.mul(1e12).div(lpSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_493:\n        /* \"contracts/NFTMasterChef.sol\":30111:30127  accPowerPerShare */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":30111:30131  accPowerPerShare.add */\n      tag_204\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":30111:30168  accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_492:\n        /* \"contracts/NFTMasterChef.sol\":30092:30168  accPowerPerShare = accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply)) */\n      swap4\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29884:30180  {\r... */\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29826:30180  if (block.number > pool.lastRewardBlock && lpSupply != 0) {\r... */\n    tag_487:\n        /* \"contracts/NFTMasterChef.sol\":30197:30261  user.amount.mul(accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_495\n        /* \"contracts/NFTMasterChef.sol\":30245:30249  user */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":30245:30260  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":30197:30240  user.amount.mul(accPowerPerShare).div(1e12) */\n      tag_496\n        /* \"contracts/NFTMasterChef.sol\":30235:30239  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":30197:30230  user.amount.mul(accPowerPerShare) */\n      tag_497\n        /* \"contracts/NFTMasterChef.sol\":30213:30229  accPowerPerShare */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":30197:30201  user */\n      dup9\n        /* \"contracts/NFTMasterChef.sol\":30197:30208  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":30197:30212  user.amount.mul */\n      tag_199\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":30197:30230  user.amount.mul(accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_497:\n        /* \"contracts/NFTMasterChef.sol\":30197:30234  user.amount.mul(accPowerPerShare).div */\n      tag_200\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":30197:30240  user.amount.mul(accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_496:\n        /* \"contracts/NFTMasterChef.sol\":30197:30244  user.amount.mul(accPowerPerShare).div(1e12).sub */\n      tag_201\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":30197:30261  user.amount.mul(accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_495:\n        /* \"contracts/NFTMasterChef.sol\":30190:30261  return user.amount.mul(accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29502:30269  function pendingPower(uint256 _pid, address _user) external view returns (uint256){\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":19479:19577  function _msgSender() internal view virtual returns (address) {\r... */\n    tag_181:\n        /* \"contracts/NFTMasterChef.sol\":19532:19539  address */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":19559:19569  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":19552:19569  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":19479:19577  function _msgSender() internal view virtual returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":1757:2228  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_199:\n        /* \"contracts/NFTMasterChef.sol\":1815:1822  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":2065:2066  0 */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":2060:2061  a */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":2060:2066  a == 0 */\n      eq\n        /* \"contracts/NFTMasterChef.sol\":2056:2103  if (a == 0) {\r... */\n      iszero\n      tag_500\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":2090:2091  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":2083:2091  return 0 */\n      swap1\n      pop\n      jump(tag_499)\n        /* \"contracts/NFTMasterChef.sol\":2056:2103  if (a == 0) {\r... */\n    tag_500:\n        /* \"contracts/NFTMasterChef.sol\":2115:2124  uint256 c */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":2131:2132  b */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":2127:2128  a */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":2127:2132  a * b */\n      tag_501\n      swap2\n      swap1\n      tag_502\n      jump\t// in\n    tag_501:\n        /* \"contracts/NFTMasterChef.sol\":2115:2132  uint256 c = a * b */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":2160:2161  b */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":2155:2156  a */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":2151:2152  c */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":2151:2156  c / a */\n      tag_503\n      swap2\n      swap1\n      tag_504\n      jump\t// in\n    tag_503:\n        /* \"contracts/NFTMasterChef.sol\":2151:2161  c / a == b */\n      eq\n        /* \"contracts/NFTMasterChef.sol\":2143:2199  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_505\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_506\n      swap1\n      tag_507\n      jump\t// in\n    tag_506:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_505:\n        /* \"contracts/NFTMasterChef.sol\":2219:2220  c */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":2212:2220  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":1757:2228  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_499:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":2696:2828  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_200:\n        /* \"contracts/NFTMasterChef.sol\":2754:2761  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":2781:2820  div(a, b, \"SafeMath: division by zero\") */\n      tag_509\n        /* \"contracts/NFTMasterChef.sol\":2785:2786  a */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":2788:2789  b */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":2781:2820  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":2781:2784  div */\n      tag_510\n        /* \"contracts/NFTMasterChef.sol\":2781:2820  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n    tag_509:\n        /* \"contracts/NFTMasterChef.sol\":2774:2820  return div(a, b, \"SafeMath: division by zero\") */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":2696:2828  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":841:977  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_201:\n        /* \"contracts/NFTMasterChef.sol\":899:906  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":926:969  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_512\n        /* \"contracts/NFTMasterChef.sol\":930:931  a */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":933:934  b */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":926:969  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":926:929  sub */\n      tag_513\n        /* \"contracts/NFTMasterChef.sol\":926:969  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    tag_512:\n        /* \"contracts/NFTMasterChef.sol\":919:969  return sub(a, b, \"SafeMath: subtraction overflow\") */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":841:977  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":385:566  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_204:\n        /* \"contracts/NFTMasterChef.sol\":443:450  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":463:472  uint256 c */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":479:480  b */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":475:476  a */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":475:480  a + b */\n      tag_515\n      swap2\n      swap1\n      tag_516\n      jump\t// in\n    tag_515:\n        /* \"contracts/NFTMasterChef.sol\":463:480  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":504:505  a */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":499:500  c */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":499:505  c >= a */\n      lt\n      iszero\n        /* \"contracts/NFTMasterChef.sol\":491:537  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_517\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_518\n      swap1\n      tag_519\n      jump\t// in\n    tag_518:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_517:\n        /* \"contracts/NFTMasterChef.sol\":557:558  c */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":550:558  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":385:566  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":16150:16361  function safeTransfer(\r... */\n    tag_208:\n        /* \"contracts/NFTMasterChef.sol\":16267:16353  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_521\n        /* \"contracts/NFTMasterChef.sol\":16287:16292  token */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":16317:16340  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"contracts/NFTMasterChef.sol\":16342:16344  to */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":16346:16351  value */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":16294:16352  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_522\n      swap3\n      swap2\n      swap1\n      tag_523\n      jump\t// in\n    tag_522:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":16267:16286  _callOptionalReturn */\n      tag_524\n        /* \"contracts/NFTMasterChef.sol\":16267:16353  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_521:\n        /* \"contracts/NFTMasterChef.sol\":16150:16361  function safeTransfer(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":16369:16617  function safeTransferFrom(\r... */\n    tag_290:\n        /* \"contracts/NFTMasterChef.sol\":16513:16609  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_526\n        /* \"contracts/NFTMasterChef.sol\":16533:16538  token */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":16563:16590  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"contracts/NFTMasterChef.sol\":16592:16596  from */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":16598:16600  to */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":16602:16607  value */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":16540:16608  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_527\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_528\n      jump\t// in\n    tag_527:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":16513:16532  _callOptionalReturn */\n      tag_524\n        /* \"contracts/NFTMasterChef.sol\":16513:16609  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_526:\n        /* \"contracts/NFTMasterChef.sol\":16369:16617  function safeTransferFrom(\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":16886:17502  function safeApprove(\r... */\n    tag_328:\n        /* \"contracts/NFTMasterChef.sol\":17259:17260  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":17250:17255  value */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":17250:17260  value == 0 */\n      eq\n        /* \"contracts/NFTMasterChef.sol\":17249:17311  (value == 0) || (token.allowance(address(this), spender) == 0) */\n      dup1\n      tag_530\n      jumpi\n      pop\n        /* \"contracts/NFTMasterChef.sol\":17309:17310  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":17266:17271  token */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":17266:17281  token.allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/NFTMasterChef.sol\":17290:17294  this */\n      address\n        /* \"contracts/NFTMasterChef.sol\":17297:17304  spender */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":17266:17305  token.allowance(address(this), spender) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_531\n      swap3\n      swap2\n      swap1\n      tag_532\n      jump\t// in\n    tag_531:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_533\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_533:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_535\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_535:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_536\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_536:\n        /* \"contracts/NFTMasterChef.sol\":17266:17310  token.allowance(address(this), spender) == 0 */\n      eq\n        /* \"contracts/NFTMasterChef.sol\":17249:17311  (value == 0) || (token.allowance(address(this), spender) == 0) */\n    tag_530:\n        /* \"contracts/NFTMasterChef.sol\":17227:17393  require(\r... */\n      tag_537\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_538\n      swap1\n      tag_539\n      jump\t// in\n    tag_538:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_537:\n        /* \"contracts/NFTMasterChef.sol\":17404:17494  _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value)) */\n      tag_540\n        /* \"contracts/NFTMasterChef.sol\":17424:17429  token */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":17454:17476  token.approve.selector */\n      shl(0xe0, 0x095ea7b3)\n        /* \"contracts/NFTMasterChef.sol\":17478:17485  spender */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":17487:17492  value */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":17431:17493  abi.encodeWithSelector(token.approve.selector, spender, value) */\n      add(0x24, mload(0x40))\n      tag_541\n      swap3\n      swap2\n      swap1\n      tag_523\n      jump\t// in\n    tag_541:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":17404:17423  _callOptionalReturn */\n      tag_524\n        /* \"contracts/NFTMasterChef.sol\":17404:17494  _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value)) */\n      jump\t// in\n    tag_540:\n        /* \"contracts/NFTMasterChef.sol\":16886:17502  function safeApprove(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":21375:21566  function _transferOwnership(address newOwner) internal virtual {\r... */\n    tag_412:\n        /* \"contracts/NFTMasterChef.sol\":21449:21465  address oldOwner */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":21468:21474  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":21449:21474  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":21494:21502  newOwner */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":21485:21491  _owner */\n      0x00\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":21485:21502  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":21549:21557  newOwner */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":21518:21558  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":21539:21547  oldOwner */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":21518:21558  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTMasterChef.sol\":21438:21566  {\r... */\n      pop\n        /* \"contracts/NFTMasterChef.sol\":21375:21566  function _transferOwnership(address newOwner) internal virtual {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":3358:3703  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n    tag_510:\n        /* \"contracts/NFTMasterChef.sol\":3444:3451  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":3543:3544  0 */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":3539:3540  b */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":3539:3544  b > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":3546:3558  errorMessage */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":3531:3559  require(b > 0, errorMessage) */\n      swap1\n      tag_544\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_545\n      swap2\n      swap1\n      tag_546\n      jump\t// in\n    tag_545:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_544:\n      pop\n        /* \"contracts/NFTMasterChef.sol\":3570:3579  uint256 c */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":3586:3587  b */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":3582:3583  a */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":3582:3587  a / b */\n      tag_547\n      swap2\n      swap1\n      tag_504\n      jump\t// in\n    tag_547:\n        /* \"contracts/NFTMasterChef.sol\":3570:3587  uint256 c = a / b */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":3694:3695  c */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":3687:3695  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":3358:3703  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":1314:1506  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n    tag_513:\n        /* \"contracts/NFTMasterChef.sol\":1400:1407  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":1433:1434  a */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":1428:1429  b */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":1428:1434  b <= a */\n      gt\n      iszero\n        /* \"contracts/NFTMasterChef.sol\":1436:1448  errorMessage */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":1420:1449  require(b <= a, errorMessage) */\n      swap1\n      tag_549\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_550\n      swap2\n      swap1\n      tag_546\n      jump\t// in\n    tag_550:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_549:\n      pop\n        /* \"contracts/NFTMasterChef.sol\":1460:1469  uint256 c */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":1476:1477  b */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":1472:1473  a */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":1472:1477  a - b */\n      tag_551\n      swap2\n      swap1\n      tag_552\n      jump\t// in\n    tag_551:\n        /* \"contracts/NFTMasterChef.sol\":1460:1477  uint256 c = a - b */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":1497:1498  c */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":1490:1498  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":1314:1506  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":18723:19439  function _callOptionalReturn(IERC20 token, bytes memory data) private {\r... */\n    tag_524:\n        /* \"contracts/NFTMasterChef.sol\":19147:19170  bytes memory returndata */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":19173:19242  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_554\n        /* \"contracts/NFTMasterChef.sol\":19201:19205  data */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":19173:19242  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":19181:19186  token */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":19173:19200  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_555\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":19173:19242  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_554:\n        /* \"contracts/NFTMasterChef.sol\":19147:19242  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":19277:19278  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":19257:19267  returndata */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":19257:19274  returndata.length */\n      mload\n        /* \"contracts/NFTMasterChef.sol\":19257:19278  returndata.length > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":19253:19432  if (returndata.length > 0) {\r... */\n      iszero\n      tag_556\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":19354:19364  returndata */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":19343:19373  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_557\n      swap2\n      swap1\n      tag_558\n      jump\t// in\n    tag_557:\n        /* \"contracts/NFTMasterChef.sol\":19335:19420  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_559\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_560\n      swap1\n      tag_561\n      jump\t// in\n    tag_560:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_559:\n        /* \"contracts/NFTMasterChef.sol\":19253:19432  if (returndata.length > 0) {\r... */\n    tag_556:\n        /* \"contracts/NFTMasterChef.sol\":18793:19439  {\r... */\n      pop\n        /* \"contracts/NFTMasterChef.sol\":18723:19439  function _callOptionalReturn(IERC20 token, bytes memory data) private {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":11566:11795  function functionCall(\r... */\n    tag_555:\n        /* \"contracts/NFTMasterChef.sol\":11703:11715  bytes memory */\n      0x60\n        /* \"contracts/NFTMasterChef.sol\":11735:11787  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_563\n        /* \"contracts/NFTMasterChef.sol\":11757:11763  target */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":11765:11769  data */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":11771:11772  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":11774:11786  errorMessage */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":11735:11756  functionCallWithValue */\n      tag_564\n        /* \"contracts/NFTMasterChef.sol\":11735:11787  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_563:\n        /* \"contracts/NFTMasterChef.sol\":11728:11787  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":11566:11795  function functionCall(\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":12686:13196  function functionCallWithValue(\r... */\n    tag_564:\n        /* \"contracts/NFTMasterChef.sol\":12856:12868  bytes memory */\n      0x60\n        /* \"contracts/NFTMasterChef.sol\":12914:12919  value */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":12889:12910  address(this).balance */\n      selfbalance\n        /* \"contracts/NFTMasterChef.sol\":12889:12919  address(this).balance >= value */\n      lt\n      iszero\n        /* \"contracts/NFTMasterChef.sol\":12881:12962  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_566\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_567\n      swap1\n      tag_568\n      jump\t// in\n    tag_567:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_566:\n        /* \"contracts/NFTMasterChef.sol\":12981:12999  isContract(target) */\n      tag_569\n        /* \"contracts/NFTMasterChef.sol\":12992:12998  target */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":12981:12991  isContract */\n      tag_570\n        /* \"contracts/NFTMasterChef.sol\":12981:12999  isContract(target) */\n      jump\t// in\n    tag_569:\n        /* \"contracts/NFTMasterChef.sol\":12973:13033  require(isContract(target), \"Address: call to non-contract\") */\n      tag_571\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_572\n      swap1\n      tag_573\n      jump\t// in\n    tag_572:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_571:\n        /* \"contracts/NFTMasterChef.sol\":13047:13059  bool success */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":13061:13084  bytes memory returndata */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":13088:13094  target */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":13088:13099  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":13107:13112  value */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":13114:13118  data */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":13088:13119  target.call{value: value}(data) */\n      mload(0x40)\n      tag_574\n      swap2\n      swap1\n      tag_575\n      jump\t// in\n    tag_574:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_578\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_577)\n    tag_578:\n      0x60\n      swap2\n      pop\n    tag_577:\n      pop\n        /* \"contracts/NFTMasterChef.sol\":13046:13119  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/NFTMasterChef.sol\":13137:13188  verifyCallResult(success, returndata, errorMessage) */\n      tag_579\n        /* \"contracts/NFTMasterChef.sol\":13154:13161  success */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":13163:13173  returndata */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":13175:13187  errorMessage */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":13137:13153  verifyCallResult */\n      tag_580\n        /* \"contracts/NFTMasterChef.sol\":13137:13188  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_579:\n        /* \"contracts/NFTMasterChef.sol\":13130:13188  return verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":12686:13196  function functionCallWithValue(\r... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":8821:9147  function isContract(address account) internal view returns (bool) {\r... */\n    tag_570:\n        /* \"contracts/NFTMasterChef.sol\":8881:8885  bool */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":9138:9139  0 */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":9116:9123  account */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":9116:9135  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"contracts/NFTMasterChef.sol\":9116:9139  account.code.length > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":9109:9139  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":8821:9147  function isContract(address account) internal view returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":15372:16084  function verifyCallResult(\r... */\n    tag_580:\n        /* \"contracts/NFTMasterChef.sol\":15522:15534  bytes memory */\n      0x60\n        /* \"contracts/NFTMasterChef.sol\":15551:15558  success */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":15547:16077  if (success) {\r... */\n      iszero\n      tag_583\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":15582:15592  returndata */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":15575:15592  return returndata */\n      swap1\n      pop\n      jump(tag_582)\n        /* \"contracts/NFTMasterChef.sol\":15547:16077  if (success) {\r... */\n    tag_583:\n        /* \"contracts/NFTMasterChef.sol\":15716:15717  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":15696:15706  returndata */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":15696:15713  returndata.length */\n      mload\n        /* \"contracts/NFTMasterChef.sol\":15696:15717  returndata.length > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":15692:16066  if (returndata.length > 0) {\r... */\n      iszero\n      tag_585\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":15894:15904  returndata */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":15888:15905  mload(returndata) */\n      mload\n        /* \"contracts/NFTMasterChef.sol\":15955:15970  returndata_size */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":15942:15952  returndata */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":15938:15940  32 */\n      0x20\n        /* \"contracts/NFTMasterChef.sol\":15934:15953  add(32, returndata) */\n      add\n        /* \"contracts/NFTMasterChef.sol\":15927:15971  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"contracts/NFTMasterChef.sol\":15692:16066  if (returndata.length > 0) {\r... */\n    tag_585:\n        /* \"contracts/NFTMasterChef.sol\":16037:16049  errorMessage */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":16030:16050  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_587\n      swap2\n      swap1\n      tag_546\n      jump\t// in\n    tag_587:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/NFTMasterChef.sol\":15372:16084  function verifyCallResult(\r... */\n    tag_582:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_589:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_591\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_592\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:285   */\n    tag_593:\n        /* \"#utility.yul\":195:200   */\n      0x00\n        /* \"#utility.yul\":233:239   */\n      dup2\n        /* \"#utility.yul\":220:240   */\n      calldataload\n        /* \"#utility.yul\":211:240   */\n      swap1\n      pop\n        /* \"#utility.yul\":249:279   */\n      tag_595\n        /* \"#utility.yul\":273:278   */\n      dup2\n        /* \"#utility.yul\":249:279   */\n      tag_596\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":152:285   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":291:428   */\n    tag_597:\n        /* \"#utility.yul\":345:350   */\n      0x00\n        /* \"#utility.yul\":376:382   */\n      dup2\n        /* \"#utility.yul\":370:383   */\n      mload\n        /* \"#utility.yul\":361:383   */\n      swap1\n      pop\n        /* \"#utility.yul\":392:422   */\n      tag_599\n        /* \"#utility.yul\":416:421   */\n      dup2\n        /* \"#utility.yul\":392:422   */\n      tag_596\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":291:428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":434:601   */\n    tag_600:\n        /* \"#utility.yul\":494:499   */\n      0x00\n        /* \"#utility.yul\":532:538   */\n      dup2\n        /* \"#utility.yul\":519:539   */\n      calldataload\n        /* \"#utility.yul\":510:539   */\n      swap1\n      pop\n        /* \"#utility.yul\":548:595   */\n      tag_602\n        /* \"#utility.yul\":589:594   */\n      dup2\n        /* \"#utility.yul\":548:595   */\n      tag_603\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":434:601   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":607:778   */\n    tag_604:\n        /* \"#utility.yul\":678:683   */\n      0x00\n        /* \"#utility.yul\":709:715   */\n      dup2\n        /* \"#utility.yul\":703:716   */\n      mload\n        /* \"#utility.yul\":694:716   */\n      swap1\n      pop\n        /* \"#utility.yul\":725:772   */\n      tag_606\n        /* \"#utility.yul\":766:771   */\n      dup2\n        /* \"#utility.yul\":725:772   */\n      tag_603\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":607:778   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":784:953   */\n    tag_607:\n        /* \"#utility.yul\":845:850   */\n      0x00\n        /* \"#utility.yul\":883:889   */\n      dup2\n        /* \"#utility.yul\":870:890   */\n      calldataload\n        /* \"#utility.yul\":861:890   */\n      swap1\n      pop\n        /* \"#utility.yul\":899:947   */\n      tag_609\n        /* \"#utility.yul\":941:946   */\n      dup2\n        /* \"#utility.yul\":899:947   */\n      tag_610\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":784:953   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":959:1140   */\n    tag_611:\n        /* \"#utility.yul\":1026:1031   */\n      0x00\n        /* \"#utility.yul\":1064:1070   */\n      dup2\n        /* \"#utility.yul\":1051:1071   */\n      calldataload\n        /* \"#utility.yul\":1042:1071   */\n      swap1\n      pop\n        /* \"#utility.yul\":1080:1134   */\n      tag_613\n        /* \"#utility.yul\":1128:1133   */\n      dup2\n        /* \"#utility.yul\":1080:1134   */\n      tag_614\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":959:1140   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1146:1285   */\n    tag_615:\n        /* \"#utility.yul\":1192:1197   */\n      0x00\n        /* \"#utility.yul\":1230:1236   */\n      dup2\n        /* \"#utility.yul\":1217:1237   */\n      calldataload\n        /* \"#utility.yul\":1208:1237   */\n      swap1\n      pop\n        /* \"#utility.yul\":1246:1279   */\n      tag_617\n        /* \"#utility.yul\":1273:1278   */\n      dup2\n        /* \"#utility.yul\":1246:1279   */\n      tag_618\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":1146:1285   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1291:1434   */\n    tag_619:\n        /* \"#utility.yul\":1348:1353   */\n      0x00\n        /* \"#utility.yul\":1379:1385   */\n      dup2\n        /* \"#utility.yul\":1373:1386   */\n      mload\n        /* \"#utility.yul\":1364:1386   */\n      swap1\n      pop\n        /* \"#utility.yul\":1395:1428   */\n      tag_621\n        /* \"#utility.yul\":1422:1427   */\n      dup2\n        /* \"#utility.yul\":1395:1428   */\n      tag_618\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":1291:1434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1440:1769   */\n    tag_53:\n        /* \"#utility.yul\":1499:1505   */\n      0x00\n        /* \"#utility.yul\":1548:1550   */\n      0x20\n        /* \"#utility.yul\":1536:1545   */\n      dup3\n        /* \"#utility.yul\":1527:1534   */\n      dup5\n        /* \"#utility.yul\":1523:1546   */\n      sub\n        /* \"#utility.yul\":1519:1551   */\n      slt\n        /* \"#utility.yul\":1516:1635   */\n      iszero\n      tag_623\n      jumpi\n        /* \"#utility.yul\":1554:1633   */\n      tag_624\n      tag_625\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":1516:1635   */\n    tag_623:\n        /* \"#utility.yul\":1674:1675   */\n      0x00\n        /* \"#utility.yul\":1699:1752   */\n      tag_626\n        /* \"#utility.yul\":1744:1751   */\n      dup5\n        /* \"#utility.yul\":1735:1741   */\n      dup3\n        /* \"#utility.yul\":1724:1733   */\n      dup6\n        /* \"#utility.yul\":1720:1742   */\n      add\n        /* \"#utility.yul\":1699:1752   */\n      tag_589\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":1689:1752   */\n      swap2\n      pop\n        /* \"#utility.yul\":1645:1762   */\n      pop\n        /* \"#utility.yul\":1440:1769   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1775:2120   */\n    tag_558:\n        /* \"#utility.yul\":1842:1848   */\n      0x00\n        /* \"#utility.yul\":1891:1893   */\n      0x20\n        /* \"#utility.yul\":1879:1888   */\n      dup3\n        /* \"#utility.yul\":1870:1877   */\n      dup5\n        /* \"#utility.yul\":1866:1889   */\n      sub\n        /* \"#utility.yul\":1862:1894   */\n      slt\n        /* \"#utility.yul\":1859:1978   */\n      iszero\n      tag_628\n      jumpi\n        /* \"#utility.yul\":1897:1976   */\n      tag_629\n      tag_625\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":1859:1978   */\n    tag_628:\n        /* \"#utility.yul\":2017:2018   */\n      0x00\n        /* \"#utility.yul\":2042:2103   */\n      tag_630\n        /* \"#utility.yul\":2095:2102   */\n      dup5\n        /* \"#utility.yul\":2086:2092   */\n      dup3\n        /* \"#utility.yul\":2075:2084   */\n      dup6\n        /* \"#utility.yul\":2071:2093   */\n      add\n        /* \"#utility.yul\":2042:2103   */\n      tag_597\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":2032:2103   */\n      swap2\n      pop\n        /* \"#utility.yul\":1988:2113   */\n      pop\n        /* \"#utility.yul\":1775:2120   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2126:2505   */\n    tag_334:\n        /* \"#utility.yul\":2210:2216   */\n      0x00\n        /* \"#utility.yul\":2259:2261   */\n      0x20\n        /* \"#utility.yul\":2247:2256   */\n      dup3\n        /* \"#utility.yul\":2238:2245   */\n      dup5\n        /* \"#utility.yul\":2234:2257   */\n      sub\n        /* \"#utility.yul\":2230:2262   */\n      slt\n        /* \"#utility.yul\":2227:2346   */\n      iszero\n      tag_632\n      jumpi\n        /* \"#utility.yul\":2265:2344   */\n      tag_633\n      tag_625\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":2227:2346   */\n    tag_632:\n        /* \"#utility.yul\":2385:2386   */\n      0x00\n        /* \"#utility.yul\":2410:2488   */\n      tag_634\n        /* \"#utility.yul\":2480:2487   */\n      dup5\n        /* \"#utility.yul\":2471:2477   */\n      dup3\n        /* \"#utility.yul\":2460:2469   */\n      dup6\n        /* \"#utility.yul\":2456:2478   */\n      add\n        /* \"#utility.yul\":2410:2488   */\n      tag_604\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":2400:2488   */\n      swap2\n      pop\n        /* \"#utility.yul\":2356:2498   */\n      pop\n        /* \"#utility.yul\":2126:2505   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2511:3015   */\n    tag_96:\n        /* \"#utility.yul\":2594:2600   */\n      0x00\n        /* \"#utility.yul\":2602:2608   */\n      dup1\n        /* \"#utility.yul\":2651:2653   */\n      0x40\n        /* \"#utility.yul\":2639:2648   */\n      dup4\n        /* \"#utility.yul\":2630:2637   */\n      dup6\n        /* \"#utility.yul\":2626:2649   */\n      sub\n        /* \"#utility.yul\":2622:2654   */\n      slt\n        /* \"#utility.yul\":2619:2738   */\n      iszero\n      tag_636\n      jumpi\n        /* \"#utility.yul\":2657:2736   */\n      tag_637\n      tag_625\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":2619:2738   */\n    tag_636:\n        /* \"#utility.yul\":2777:2778   */\n      0x00\n        /* \"#utility.yul\":2802:2870   */\n      tag_638\n        /* \"#utility.yul\":2862:2869   */\n      dup6\n        /* \"#utility.yul\":2853:2859   */\n      dup3\n        /* \"#utility.yul\":2842:2851   */\n      dup7\n        /* \"#utility.yul\":2838:2860   */\n      add\n        /* \"#utility.yul\":2802:2870   */\n      tag_607\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":2792:2870   */\n      swap3\n      pop\n        /* \"#utility.yul\":2748:2880   */\n      pop\n        /* \"#utility.yul\":2919:2921   */\n      0x20\n        /* \"#utility.yul\":2945:2998   */\n      tag_639\n        /* \"#utility.yul\":2990:2997   */\n      dup6\n        /* \"#utility.yul\":2981:2987   */\n      dup3\n        /* \"#utility.yul\":2970:2979   */\n      dup7\n        /* \"#utility.yul\":2966:2988   */\n      add\n        /* \"#utility.yul\":2945:2998   */\n      tag_615\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":2935:2998   */\n      swap2\n      pop\n        /* \"#utility.yul\":2890:3008   */\n      pop\n        /* \"#utility.yul\":2511:3015   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3021:3392   */\n    tag_77:\n        /* \"#utility.yul\":3101:3107   */\n      0x00\n        /* \"#utility.yul\":3150:3152   */\n      0x20\n        /* \"#utility.yul\":3138:3147   */\n      dup3\n        /* \"#utility.yul\":3129:3136   */\n      dup5\n        /* \"#utility.yul\":3125:3148   */\n      sub\n        /* \"#utility.yul\":3121:3153   */\n      slt\n        /* \"#utility.yul\":3118:3237   */\n      iszero\n      tag_641\n      jumpi\n        /* \"#utility.yul\":3156:3235   */\n      tag_642\n      tag_625\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":3118:3237   */\n    tag_641:\n        /* \"#utility.yul\":3276:3277   */\n      0x00\n        /* \"#utility.yul\":3301:3375   */\n      tag_643\n        /* \"#utility.yul\":3367:3374   */\n      dup5\n        /* \"#utility.yul\":3358:3364   */\n      dup3\n        /* \"#utility.yul\":3347:3356   */\n      dup6\n        /* \"#utility.yul\":3343:3365   */\n      add\n        /* \"#utility.yul\":3301:3375   */\n      tag_611\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":3291:3375   */\n      swap2\n      pop\n        /* \"#utility.yul\":3247:3385   */\n      pop\n        /* \"#utility.yul\":3021:3392   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3398:3727   */\n    tag_57:\n        /* \"#utility.yul\":3457:3463   */\n      0x00\n        /* \"#utility.yul\":3506:3508   */\n      0x20\n        /* \"#utility.yul\":3494:3503   */\n      dup3\n        /* \"#utility.yul\":3485:3492   */\n      dup5\n        /* \"#utility.yul\":3481:3504   */\n      sub\n        /* \"#utility.yul\":3477:3509   */\n      slt\n        /* \"#utility.yul\":3474:3593   */\n      iszero\n      tag_645\n      jumpi\n        /* \"#utility.yul\":3512:3591   */\n      tag_646\n      tag_625\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":3474:3593   */\n    tag_645:\n        /* \"#utility.yul\":3632:3633   */\n      0x00\n        /* \"#utility.yul\":3657:3710   */\n      tag_647\n        /* \"#utility.yul\":3702:3709   */\n      dup5\n        /* \"#utility.yul\":3693:3699   */\n      dup3\n        /* \"#utility.yul\":3682:3691   */\n      dup6\n        /* \"#utility.yul\":3678:3700   */\n      add\n        /* \"#utility.yul\":3657:3710   */\n      tag_615\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":3647:3710   */\n      swap2\n      pop\n        /* \"#utility.yul\":3603:3720   */\n      pop\n        /* \"#utility.yul\":3398:3727   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3733:4084   */\n    tag_223:\n        /* \"#utility.yul\":3803:3809   */\n      0x00\n        /* \"#utility.yul\":3852:3854   */\n      0x20\n        /* \"#utility.yul\":3840:3849   */\n      dup3\n        /* \"#utility.yul\":3831:3838   */\n      dup5\n        /* \"#utility.yul\":3827:3850   */\n      sub\n        /* \"#utility.yul\":3823:3855   */\n      slt\n        /* \"#utility.yul\":3820:3939   */\n      iszero\n      tag_649\n      jumpi\n        /* \"#utility.yul\":3858:3937   */\n      tag_650\n      tag_625\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":3820:3939   */\n    tag_649:\n        /* \"#utility.yul\":3978:3979   */\n      0x00\n        /* \"#utility.yul\":4003:4067   */\n      tag_651\n        /* \"#utility.yul\":4059:4066   */\n      dup5\n        /* \"#utility.yul\":4050:4056   */\n      dup3\n        /* \"#utility.yul\":4039:4048   */\n      dup6\n        /* \"#utility.yul\":4035:4057   */\n      add\n        /* \"#utility.yul\":4003:4067   */\n      tag_619\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":3993:4067   */\n      swap2\n      pop\n        /* \"#utility.yul\":3949:4077   */\n      pop\n        /* \"#utility.yul\":3733:4084   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4090:4564   */\n    tag_150:\n        /* \"#utility.yul\":4158:4164   */\n      0x00\n        /* \"#utility.yul\":4166:4172   */\n      dup1\n        /* \"#utility.yul\":4215:4217   */\n      0x40\n        /* \"#utility.yul\":4203:4212   */\n      dup4\n        /* \"#utility.yul\":4194:4201   */\n      dup6\n        /* \"#utility.yul\":4190:4213   */\n      sub\n        /* \"#utility.yul\":4186:4218   */\n      slt\n        /* \"#utility.yul\":4183:4302   */\n      iszero\n      tag_653\n      jumpi\n        /* \"#utility.yul\":4221:4300   */\n      tag_654\n      tag_625\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":4183:4302   */\n    tag_653:\n        /* \"#utility.yul\":4341:4342   */\n      0x00\n        /* \"#utility.yul\":4366:4419   */\n      tag_655\n        /* \"#utility.yul\":4411:4418   */\n      dup6\n        /* \"#utility.yul\":4402:4408   */\n      dup3\n        /* \"#utility.yul\":4391:4400   */\n      dup7\n        /* \"#utility.yul\":4387:4409   */\n      add\n        /* \"#utility.yul\":4366:4419   */\n      tag_615\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":4356:4419   */\n      swap3\n      pop\n        /* \"#utility.yul\":4312:4429   */\n      pop\n        /* \"#utility.yul\":4468:4470   */\n      0x20\n        /* \"#utility.yul\":4494:4547   */\n      tag_656\n        /* \"#utility.yul\":4539:4546   */\n      dup6\n        /* \"#utility.yul\":4530:4536   */\n      dup3\n        /* \"#utility.yul\":4519:4528   */\n      dup7\n        /* \"#utility.yul\":4515:4537   */\n      add\n        /* \"#utility.yul\":4494:4547   */\n      tag_589\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":4484:4547   */\n      swap2\n      pop\n        /* \"#utility.yul\":4439:4557   */\n      pop\n        /* \"#utility.yul\":4090:4564   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4570:5211   */\n    tag_73:\n        /* \"#utility.yul\":4658:4664   */\n      0x00\n        /* \"#utility.yul\":4666:4672   */\n      dup1\n        /* \"#utility.yul\":4674:4680   */\n      0x00\n        /* \"#utility.yul\":4723:4725   */\n      0x60\n        /* \"#utility.yul\":4711:4720   */\n      dup5\n        /* \"#utility.yul\":4702:4709   */\n      dup7\n        /* \"#utility.yul\":4698:4721   */\n      sub\n        /* \"#utility.yul\":4694:4726   */\n      slt\n        /* \"#utility.yul\":4691:4810   */\n      iszero\n      tag_658\n      jumpi\n        /* \"#utility.yul\":4729:4808   */\n      tag_659\n      tag_625\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":4691:4810   */\n    tag_658:\n        /* \"#utility.yul\":4849:4850   */\n      0x00\n        /* \"#utility.yul\":4874:4927   */\n      tag_660\n        /* \"#utility.yul\":4919:4926   */\n      dup7\n        /* \"#utility.yul\":4910:4916   */\n      dup3\n        /* \"#utility.yul\":4899:4908   */\n      dup8\n        /* \"#utility.yul\":4895:4917   */\n      add\n        /* \"#utility.yul\":4874:4927   */\n      tag_615\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":4864:4927   */\n      swap4\n      pop\n        /* \"#utility.yul\":4820:4937   */\n      pop\n        /* \"#utility.yul\":4976:4978   */\n      0x20\n        /* \"#utility.yul\":5002:5069   */\n      tag_661\n        /* \"#utility.yul\":5061:5068   */\n      dup7\n        /* \"#utility.yul\":5052:5058   */\n      dup3\n        /* \"#utility.yul\":5041:5050   */\n      dup8\n        /* \"#utility.yul\":5037:5059   */\n      add\n        /* \"#utility.yul\":5002:5069   */\n      tag_600\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":4992:5069   */\n      swap3\n      pop\n        /* \"#utility.yul\":4947:5079   */\n      pop\n        /* \"#utility.yul\":5118:5120   */\n      0x40\n        /* \"#utility.yul\":5144:5194   */\n      tag_662\n        /* \"#utility.yul\":5186:5193   */\n      dup7\n        /* \"#utility.yul\":5177:5183   */\n      dup3\n        /* \"#utility.yul\":5166:5175   */\n      dup8\n        /* \"#utility.yul\":5162:5184   */\n      add\n        /* \"#utility.yul\":5144:5194   */\n      tag_593\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":5134:5194   */\n      swap2\n      pop\n        /* \"#utility.yul\":5089:5204   */\n      pop\n        /* \"#utility.yul\":4570:5211   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5217:5691   */\n    tag_69:\n        /* \"#utility.yul\":5285:5291   */\n      0x00\n        /* \"#utility.yul\":5293:5299   */\n      dup1\n        /* \"#utility.yul\":5342:5344   */\n      0x40\n        /* \"#utility.yul\":5330:5339   */\n      dup4\n        /* \"#utility.yul\":5321:5328   */\n      dup6\n        /* \"#utility.yul\":5317:5340   */\n      sub\n        /* \"#utility.yul\":5313:5345   */\n      slt\n        /* \"#utility.yul\":5310:5429   */\n      iszero\n      tag_664\n      jumpi\n        /* \"#utility.yul\":5348:5427   */\n      tag_665\n      tag_625\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":5310:5429   */\n    tag_664:\n        /* \"#utility.yul\":5468:5469   */\n      0x00\n        /* \"#utility.yul\":5493:5546   */\n      tag_666\n        /* \"#utility.yul\":5538:5545   */\n      dup6\n        /* \"#utility.yul\":5529:5535   */\n      dup3\n        /* \"#utility.yul\":5518:5527   */\n      dup7\n        /* \"#utility.yul\":5514:5536   */\n      add\n        /* \"#utility.yul\":5493:5546   */\n      tag_615\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":5483:5546   */\n      swap3\n      pop\n        /* \"#utility.yul\":5439:5556   */\n      pop\n        /* \"#utility.yul\":5595:5597   */\n      0x20\n        /* \"#utility.yul\":5621:5674   */\n      tag_667\n        /* \"#utility.yul\":5666:5673   */\n      dup6\n        /* \"#utility.yul\":5657:5663   */\n      dup3\n        /* \"#utility.yul\":5646:5655   */\n      dup7\n        /* \"#utility.yul\":5642:5664   */\n      add\n        /* \"#utility.yul\":5621:5674   */\n      tag_615\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":5611:5674   */\n      swap2\n      pop\n        /* \"#utility.yul\":5566:5684   */\n      pop\n        /* \"#utility.yul\":5217:5691   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5697:6310   */\n    tag_119:\n        /* \"#utility.yul\":5771:5777   */\n      0x00\n        /* \"#utility.yul\":5779:5785   */\n      dup1\n        /* \"#utility.yul\":5787:5793   */\n      0x00\n        /* \"#utility.yul\":5836:5838   */\n      0x60\n        /* \"#utility.yul\":5824:5833   */\n      dup5\n        /* \"#utility.yul\":5815:5822   */\n      dup7\n        /* \"#utility.yul\":5811:5834   */\n      sub\n        /* \"#utility.yul\":5807:5839   */\n      slt\n        /* \"#utility.yul\":5804:5923   */\n      iszero\n      tag_669\n      jumpi\n        /* \"#utility.yul\":5842:5921   */\n      tag_670\n      tag_625\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":5804:5923   */\n    tag_669:\n        /* \"#utility.yul\":5962:5963   */\n      0x00\n        /* \"#utility.yul\":5987:6040   */\n      tag_671\n        /* \"#utility.yul\":6032:6039   */\n      dup7\n        /* \"#utility.yul\":6023:6029   */\n      dup3\n        /* \"#utility.yul\":6012:6021   */\n      dup8\n        /* \"#utility.yul\":6008:6030   */\n      add\n        /* \"#utility.yul\":5987:6040   */\n      tag_615\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":5977:6040   */\n      swap4\n      pop\n        /* \"#utility.yul\":5933:6050   */\n      pop\n        /* \"#utility.yul\":6089:6091   */\n      0x20\n        /* \"#utility.yul\":6115:6168   */\n      tag_672\n        /* \"#utility.yul\":6160:6167   */\n      dup7\n        /* \"#utility.yul\":6151:6157   */\n      dup3\n        /* \"#utility.yul\":6140:6149   */\n      dup8\n        /* \"#utility.yul\":6136:6158   */\n      add\n        /* \"#utility.yul\":6115:6168   */\n      tag_615\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":6105:6168   */\n      swap3\n      pop\n        /* \"#utility.yul\":6060:6178   */\n      pop\n        /* \"#utility.yul\":6217:6219   */\n      0x40\n        /* \"#utility.yul\":6243:6293   */\n      tag_673\n        /* \"#utility.yul\":6285:6292   */\n      dup7\n        /* \"#utility.yul\":6276:6282   */\n      dup3\n        /* \"#utility.yul\":6265:6274   */\n      dup8\n        /* \"#utility.yul\":6261:6283   */\n      add\n        /* \"#utility.yul\":6243:6293   */\n      tag_593\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":6233:6293   */\n      swap2\n      pop\n        /* \"#utility.yul\":6188:6303   */\n      pop\n        /* \"#utility.yul\":5697:6310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":6316:6434   */\n    tag_674:\n        /* \"#utility.yul\":6403:6427   */\n      tag_676\n        /* \"#utility.yul\":6421:6426   */\n      dup2\n        /* \"#utility.yul\":6403:6427   */\n      tag_677\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":6398:6401   */\n      dup3\n        /* \"#utility.yul\":6391:6428   */\n      mstore\n        /* \"#utility.yul\":6316:6434   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6440:6813   */\n    tag_678:\n        /* \"#utility.yul\":6544:6547   */\n      0x00\n        /* \"#utility.yul\":6572:6610   */\n      tag_680\n        /* \"#utility.yul\":6604:6609   */\n      dup3\n        /* \"#utility.yul\":6572:6610   */\n      tag_681\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":6626:6714   */\n      tag_682\n        /* \"#utility.yul\":6707:6713   */\n      dup2\n        /* \"#utility.yul\":6702:6705   */\n      dup6\n        /* \"#utility.yul\":6626:6714   */\n      tag_683\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":6619:6714   */\n      swap4\n      pop\n        /* \"#utility.yul\":6723:6775   */\n      tag_684\n        /* \"#utility.yul\":6768:6774   */\n      dup2\n        /* \"#utility.yul\":6763:6766   */\n      dup6\n        /* \"#utility.yul\":6756:6760   */\n      0x20\n        /* \"#utility.yul\":6749:6754   */\n      dup7\n        /* \"#utility.yul\":6745:6761   */\n      add\n        /* \"#utility.yul\":6723:6775   */\n      tag_685\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":6800:6806   */\n      dup1\n        /* \"#utility.yul\":6795:6798   */\n      dup5\n        /* \"#utility.yul\":6791:6807   */\n      add\n        /* \"#utility.yul\":6784:6807   */\n      swap2\n      pop\n        /* \"#utility.yul\":6548:6813   */\n      pop\n        /* \"#utility.yul\":6440:6813   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6819:6978   */\n    tag_686:\n        /* \"#utility.yul\":6920:6971   */\n      tag_688\n        /* \"#utility.yul\":6965:6970   */\n      dup2\n        /* \"#utility.yul\":6920:6971   */\n      tag_689\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":6915:6918   */\n      dup3\n        /* \"#utility.yul\":6908:6972   */\n      mstore\n        /* \"#utility.yul\":6819:6978   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6984:7145   */\n    tag_690:\n        /* \"#utility.yul\":7086:7138   */\n      tag_692\n        /* \"#utility.yul\":7132:7137   */\n      dup2\n        /* \"#utility.yul\":7086:7138   */\n      tag_693\n      jump\t// in\n    tag_692:\n        /* \"#utility.yul\":7081:7084   */\n      dup3\n        /* \"#utility.yul\":7074:7139   */\n      mstore\n        /* \"#utility.yul\":6984:7145   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7151:7324   */\n    tag_694:\n        /* \"#utility.yul\":7259:7317   */\n      tag_696\n        /* \"#utility.yul\":7311:7316   */\n      dup2\n        /* \"#utility.yul\":7259:7317   */\n      tag_697\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":7254:7257   */\n      dup3\n        /* \"#utility.yul\":7247:7318   */\n      mstore\n        /* \"#utility.yul\":7151:7324   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7330:7694   */\n    tag_698:\n        /* \"#utility.yul\":7418:7421   */\n      0x00\n        /* \"#utility.yul\":7446:7485   */\n      tag_700\n        /* \"#utility.yul\":7479:7484   */\n      dup3\n        /* \"#utility.yul\":7446:7485   */\n      tag_701\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":7501:7572   */\n      tag_702\n        /* \"#utility.yul\":7565:7571   */\n      dup2\n        /* \"#utility.yul\":7560:7563   */\n      dup6\n        /* \"#utility.yul\":7501:7572   */\n      tag_703\n      jump\t// in\n    tag_702:\n        /* \"#utility.yul\":7494:7572   */\n      swap4\n      pop\n        /* \"#utility.yul\":7581:7633   */\n      tag_704\n        /* \"#utility.yul\":7626:7632   */\n      dup2\n        /* \"#utility.yul\":7621:7624   */\n      dup6\n        /* \"#utility.yul\":7614:7618   */\n      0x20\n        /* \"#utility.yul\":7607:7612   */\n      dup7\n        /* \"#utility.yul\":7603:7619   */\n      add\n        /* \"#utility.yul\":7581:7633   */\n      tag_685\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":7658:7687   */\n      tag_705\n        /* \"#utility.yul\":7680:7686   */\n      dup2\n        /* \"#utility.yul\":7658:7687   */\n      tag_706\n      jump\t// in\n    tag_705:\n        /* \"#utility.yul\":7653:7656   */\n      dup5\n        /* \"#utility.yul\":7649:7688   */\n      add\n        /* \"#utility.yul\":7642:7688   */\n      swap2\n      pop\n        /* \"#utility.yul\":7422:7694   */\n      pop\n        /* \"#utility.yul\":7330:7694   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7700:8066   */\n    tag_707:\n        /* \"#utility.yul\":7842:7845   */\n      0x00\n        /* \"#utility.yul\":7863:7930   */\n      tag_709\n        /* \"#utility.yul\":7927:7929   */\n      0x26\n        /* \"#utility.yul\":7922:7925   */\n      dup4\n        /* \"#utility.yul\":7863:7930   */\n      tag_703\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":7856:7930   */\n      swap2\n      pop\n        /* \"#utility.yul\":7939:8032   */\n      tag_710\n        /* \"#utility.yul\":8028:8031   */\n      dup3\n        /* \"#utility.yul\":7939:8032   */\n      tag_711\n      jump\t// in\n    tag_710:\n        /* \"#utility.yul\":8057:8059   */\n      0x40\n        /* \"#utility.yul\":8052:8055   */\n      dup3\n        /* \"#utility.yul\":8048:8060   */\n      add\n        /* \"#utility.yul\":8041:8060   */\n      swap1\n      pop\n        /* \"#utility.yul\":7700:8066   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8072:8438   */\n    tag_712:\n        /* \"#utility.yul\":8214:8217   */\n      0x00\n        /* \"#utility.yul\":8235:8302   */\n      tag_714\n        /* \"#utility.yul\":8299:8301   */\n      0x13\n        /* \"#utility.yul\":8294:8297   */\n      dup4\n        /* \"#utility.yul\":8235:8302   */\n      tag_703\n      jump\t// in\n    tag_714:\n        /* \"#utility.yul\":8228:8302   */\n      swap2\n      pop\n        /* \"#utility.yul\":8311:8404   */\n      tag_715\n        /* \"#utility.yul\":8400:8403   */\n      dup3\n        /* \"#utility.yul\":8311:8404   */\n      tag_716\n      jump\t// in\n    tag_715:\n        /* \"#utility.yul\":8429:8431   */\n      0x20\n        /* \"#utility.yul\":8424:8427   */\n      dup3\n        /* \"#utility.yul\":8420:8432   */\n      add\n        /* \"#utility.yul\":8413:8432   */\n      swap1\n      pop\n        /* \"#utility.yul\":8072:8438   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8444:8810   */\n    tag_717:\n        /* \"#utility.yul\":8586:8589   */\n      0x00\n        /* \"#utility.yul\":8607:8674   */\n      tag_719\n        /* \"#utility.yul\":8671:8673   */\n      0x1b\n        /* \"#utility.yul\":8666:8669   */\n      dup4\n        /* \"#utility.yul\":8607:8674   */\n      tag_703\n      jump\t// in\n    tag_719:\n        /* \"#utility.yul\":8600:8674   */\n      swap2\n      pop\n        /* \"#utility.yul\":8683:8776   */\n      tag_720\n        /* \"#utility.yul\":8772:8775   */\n      dup3\n        /* \"#utility.yul\":8683:8776   */\n      tag_721\n      jump\t// in\n    tag_720:\n        /* \"#utility.yul\":8801:8803   */\n      0x20\n        /* \"#utility.yul\":8796:8799   */\n      dup3\n        /* \"#utility.yul\":8792:8804   */\n      add\n        /* \"#utility.yul\":8785:8804   */\n      swap1\n      pop\n        /* \"#utility.yul\":8444:8810   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8816:9182   */\n    tag_722:\n        /* \"#utility.yul\":8958:8961   */\n      0x00\n        /* \"#utility.yul\":8979:9046   */\n      tag_724\n        /* \"#utility.yul\":9043:9045   */\n      0x1b\n        /* \"#utility.yul\":9038:9041   */\n      dup4\n        /* \"#utility.yul\":8979:9046   */\n      tag_703\n      jump\t// in\n    tag_724:\n        /* \"#utility.yul\":8972:9046   */\n      swap2\n      pop\n        /* \"#utility.yul\":9055:9148   */\n      tag_725\n        /* \"#utility.yul\":9144:9147   */\n      dup3\n        /* \"#utility.yul\":9055:9148   */\n      tag_726\n      jump\t// in\n    tag_725:\n        /* \"#utility.yul\":9173:9175   */\n      0x20\n        /* \"#utility.yul\":9168:9171   */\n      dup3\n        /* \"#utility.yul\":9164:9176   */\n      add\n        /* \"#utility.yul\":9157:9176   */\n      swap1\n      pop\n        /* \"#utility.yul\":8816:9182   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9188:9554   */\n    tag_727:\n        /* \"#utility.yul\":9330:9333   */\n      0x00\n        /* \"#utility.yul\":9351:9418   */\n      tag_729\n        /* \"#utility.yul\":9415:9417   */\n      0x26\n        /* \"#utility.yul\":9410:9413   */\n      dup4\n        /* \"#utility.yul\":9351:9418   */\n      tag_703\n      jump\t// in\n    tag_729:\n        /* \"#utility.yul\":9344:9418   */\n      swap2\n      pop\n        /* \"#utility.yul\":9427:9520   */\n      tag_730\n        /* \"#utility.yul\":9516:9519   */\n      dup3\n        /* \"#utility.yul\":9427:9520   */\n      tag_731\n      jump\t// in\n    tag_730:\n        /* \"#utility.yul\":9545:9547   */\n      0x40\n        /* \"#utility.yul\":9540:9543   */\n      dup3\n        /* \"#utility.yul\":9536:9548   */\n      add\n        /* \"#utility.yul\":9529:9548   */\n      swap1\n      pop\n        /* \"#utility.yul\":9188:9554   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9560:9926   */\n    tag_732:\n        /* \"#utility.yul\":9702:9705   */\n      0x00\n        /* \"#utility.yul\":9723:9790   */\n      tag_734\n        /* \"#utility.yul\":9787:9789   */\n      0x18\n        /* \"#utility.yul\":9782:9785   */\n      dup4\n        /* \"#utility.yul\":9723:9790   */\n      tag_703\n      jump\t// in\n    tag_734:\n        /* \"#utility.yul\":9716:9790   */\n      swap2\n      pop\n        /* \"#utility.yul\":9799:9892   */\n      tag_735\n        /* \"#utility.yul\":9888:9891   */\n      dup3\n        /* \"#utility.yul\":9799:9892   */\n      tag_736\n      jump\t// in\n    tag_735:\n        /* \"#utility.yul\":9917:9919   */\n      0x20\n        /* \"#utility.yul\":9912:9915   */\n      dup3\n        /* \"#utility.yul\":9908:9920   */\n      add\n        /* \"#utility.yul\":9901:9920   */\n      swap1\n      pop\n        /* \"#utility.yul\":9560:9926   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9932:10298   */\n    tag_737:\n        /* \"#utility.yul\":10074:10077   */\n      0x00\n        /* \"#utility.yul\":10095:10162   */\n      tag_739\n        /* \"#utility.yul\":10159:10161   */\n      0x21\n        /* \"#utility.yul\":10154:10157   */\n      dup4\n        /* \"#utility.yul\":10095:10162   */\n      tag_703\n      jump\t// in\n    tag_739:\n        /* \"#utility.yul\":10088:10162   */\n      swap2\n      pop\n        /* \"#utility.yul\":10171:10264   */\n      tag_740\n        /* \"#utility.yul\":10260:10263   */\n      dup3\n        /* \"#utility.yul\":10171:10264   */\n      tag_741\n      jump\t// in\n    tag_740:\n        /* \"#utility.yul\":10289:10291   */\n      0x40\n        /* \"#utility.yul\":10284:10287   */\n      dup3\n        /* \"#utility.yul\":10280:10292   */\n      add\n        /* \"#utility.yul\":10273:10292   */\n      swap1\n      pop\n        /* \"#utility.yul\":9932:10298   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10304:10670   */\n    tag_742:\n        /* \"#utility.yul\":10446:10449   */\n      0x00\n        /* \"#utility.yul\":10467:10534   */\n      tag_744\n        /* \"#utility.yul\":10531:10533   */\n      0x20\n        /* \"#utility.yul\":10526:10529   */\n      dup4\n        /* \"#utility.yul\":10467:10534   */\n      tag_703\n      jump\t// in\n    tag_744:\n        /* \"#utility.yul\":10460:10534   */\n      swap2\n      pop\n        /* \"#utility.yul\":10543:10636   */\n      tag_745\n        /* \"#utility.yul\":10632:10635   */\n      dup3\n        /* \"#utility.yul\":10543:10636   */\n      tag_746\n      jump\t// in\n    tag_745:\n        /* \"#utility.yul\":10661:10663   */\n      0x20\n        /* \"#utility.yul\":10656:10659   */\n      dup3\n        /* \"#utility.yul\":10652:10664   */\n      add\n        /* \"#utility.yul\":10645:10664   */\n      swap1\n      pop\n        /* \"#utility.yul\":10304:10670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10676:11042   */\n    tag_747:\n        /* \"#utility.yul\":10818:10821   */\n      0x00\n        /* \"#utility.yul\":10839:10906   */\n      tag_749\n        /* \"#utility.yul\":10903:10905   */\n      0x14\n        /* \"#utility.yul\":10898:10901   */\n      dup4\n        /* \"#utility.yul\":10839:10906   */\n      tag_703\n      jump\t// in\n    tag_749:\n        /* \"#utility.yul\":10832:10906   */\n      swap2\n      pop\n        /* \"#utility.yul\":10915:11008   */\n      tag_750\n        /* \"#utility.yul\":11004:11007   */\n      dup3\n        /* \"#utility.yul\":10915:11008   */\n      tag_751\n      jump\t// in\n    tag_750:\n        /* \"#utility.yul\":11033:11035   */\n      0x20\n        /* \"#utility.yul\":11028:11031   */\n      dup3\n        /* \"#utility.yul\":11024:11036   */\n      add\n        /* \"#utility.yul\":11017:11036   */\n      swap1\n      pop\n        /* \"#utility.yul\":10676:11042   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11048:11414   */\n    tag_752:\n        /* \"#utility.yul\":11190:11193   */\n      0x00\n        /* \"#utility.yul\":11211:11278   */\n      tag_754\n        /* \"#utility.yul\":11275:11277   */\n      0x1d\n        /* \"#utility.yul\":11270:11273   */\n      dup4\n        /* \"#utility.yul\":11211:11278   */\n      tag_703\n      jump\t// in\n    tag_754:\n        /* \"#utility.yul\":11204:11278   */\n      swap2\n      pop\n        /* \"#utility.yul\":11287:11380   */\n      tag_755\n        /* \"#utility.yul\":11376:11379   */\n      dup3\n        /* \"#utility.yul\":11287:11380   */\n      tag_756\n      jump\t// in\n    tag_755:\n        /* \"#utility.yul\":11405:11407   */\n      0x20\n        /* \"#utility.yul\":11400:11403   */\n      dup3\n        /* \"#utility.yul\":11396:11408   */\n      add\n        /* \"#utility.yul\":11389:11408   */\n      swap1\n      pop\n        /* \"#utility.yul\":11048:11414   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11420:11786   */\n    tag_757:\n        /* \"#utility.yul\":11562:11565   */\n      0x00\n        /* \"#utility.yul\":11583:11650   */\n      tag_759\n        /* \"#utility.yul\":11647:11649   */\n      0x12\n        /* \"#utility.yul\":11642:11645   */\n      dup4\n        /* \"#utility.yul\":11583:11650   */\n      tag_703\n      jump\t// in\n    tag_759:\n        /* \"#utility.yul\":11576:11650   */\n      swap2\n      pop\n        /* \"#utility.yul\":11659:11752   */\n      tag_760\n        /* \"#utility.yul\":11748:11751   */\n      dup3\n        /* \"#utility.yul\":11659:11752   */\n      tag_761\n      jump\t// in\n    tag_760:\n        /* \"#utility.yul\":11777:11779   */\n      0x20\n        /* \"#utility.yul\":11772:11775   */\n      dup3\n        /* \"#utility.yul\":11768:11780   */\n      add\n        /* \"#utility.yul\":11761:11780   */\n      swap1\n      pop\n        /* \"#utility.yul\":11420:11786   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11792:12158   */\n    tag_762:\n        /* \"#utility.yul\":11934:11937   */\n      0x00\n        /* \"#utility.yul\":11955:12022   */\n      tag_764\n        /* \"#utility.yul\":12019:12021   */\n      0x2a\n        /* \"#utility.yul\":12014:12017   */\n      dup4\n        /* \"#utility.yul\":11955:12022   */\n      tag_703\n      jump\t// in\n    tag_764:\n        /* \"#utility.yul\":11948:12022   */\n      swap2\n      pop\n        /* \"#utility.yul\":12031:12124   */\n      tag_765\n        /* \"#utility.yul\":12120:12123   */\n      dup3\n        /* \"#utility.yul\":12031:12124   */\n      tag_766\n      jump\t// in\n    tag_765:\n        /* \"#utility.yul\":12149:12151   */\n      0x40\n        /* \"#utility.yul\":12144:12147   */\n      dup3\n        /* \"#utility.yul\":12140:12152   */\n      add\n        /* \"#utility.yul\":12133:12152   */\n      swap1\n      pop\n        /* \"#utility.yul\":11792:12158   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12164:12530   */\n    tag_767:\n        /* \"#utility.yul\":12306:12309   */\n      0x00\n        /* \"#utility.yul\":12327:12394   */\n      tag_769\n        /* \"#utility.yul\":12391:12393   */\n      0x0c\n        /* \"#utility.yul\":12386:12389   */\n      dup4\n        /* \"#utility.yul\":12327:12394   */\n      tag_703\n      jump\t// in\n    tag_769:\n        /* \"#utility.yul\":12320:12394   */\n      swap2\n      pop\n        /* \"#utility.yul\":12403:12496   */\n      tag_770\n        /* \"#utility.yul\":12492:12495   */\n      dup3\n        /* \"#utility.yul\":12403:12496   */\n      tag_771\n      jump\t// in\n    tag_770:\n        /* \"#utility.yul\":12521:12523   */\n      0x20\n        /* \"#utility.yul\":12516:12519   */\n      dup3\n        /* \"#utility.yul\":12512:12524   */\n      add\n        /* \"#utility.yul\":12505:12524   */\n      swap1\n      pop\n        /* \"#utility.yul\":12164:12530   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12536:12902   */\n    tag_772:\n        /* \"#utility.yul\":12678:12681   */\n      0x00\n        /* \"#utility.yul\":12699:12766   */\n      tag_774\n        /* \"#utility.yul\":12763:12765   */\n      0x36\n        /* \"#utility.yul\":12758:12761   */\n      dup4\n        /* \"#utility.yul\":12699:12766   */\n      tag_703\n      jump\t// in\n    tag_774:\n        /* \"#utility.yul\":12692:12766   */\n      swap2\n      pop\n        /* \"#utility.yul\":12775:12868   */\n      tag_775\n        /* \"#utility.yul\":12864:12867   */\n      dup3\n        /* \"#utility.yul\":12775:12868   */\n      tag_776\n      jump\t// in\n    tag_775:\n        /* \"#utility.yul\":12893:12895   */\n      0x40\n        /* \"#utility.yul\":12888:12891   */\n      dup3\n        /* \"#utility.yul\":12884:12896   */\n      add\n        /* \"#utility.yul\":12877:12896   */\n      swap1\n      pop\n        /* \"#utility.yul\":12536:12902   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12908:13274   */\n    tag_777:\n        /* \"#utility.yul\":13050:13053   */\n      0x00\n        /* \"#utility.yul\":13071:13138   */\n      tag_779\n        /* \"#utility.yul\":13135:13137   */\n      0x14\n        /* \"#utility.yul\":13130:13133   */\n      dup4\n        /* \"#utility.yul\":13071:13138   */\n      tag_703\n      jump\t// in\n    tag_779:\n        /* \"#utility.yul\":13064:13138   */\n      swap2\n      pop\n        /* \"#utility.yul\":13147:13240   */\n      tag_780\n        /* \"#utility.yul\":13236:13239   */\n      dup3\n        /* \"#utility.yul\":13147:13240   */\n      tag_781\n      jump\t// in\n    tag_780:\n        /* \"#utility.yul\":13265:13267   */\n      0x20\n        /* \"#utility.yul\":13260:13263   */\n      dup3\n        /* \"#utility.yul\":13256:13268   */\n      add\n        /* \"#utility.yul\":13249:13268   */\n      swap1\n      pop\n        /* \"#utility.yul\":12908:13274   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13280:13398   */\n    tag_782:\n        /* \"#utility.yul\":13367:13391   */\n      tag_784\n        /* \"#utility.yul\":13385:13390   */\n      dup2\n        /* \"#utility.yul\":13367:13391   */\n      tag_785\n      jump\t// in\n    tag_784:\n        /* \"#utility.yul\":13362:13365   */\n      dup3\n        /* \"#utility.yul\":13355:13392   */\n      mstore\n        /* \"#utility.yul\":13280:13398   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13404:13675   */\n    tag_575:\n        /* \"#utility.yul\":13534:13537   */\n      0x00\n        /* \"#utility.yul\":13556:13649   */\n      tag_787\n        /* \"#utility.yul\":13645:13648   */\n      dup3\n        /* \"#utility.yul\":13636:13642   */\n      dup5\n        /* \"#utility.yul\":13556:13649   */\n      tag_678\n      jump\t// in\n    tag_787:\n        /* \"#utility.yul\":13549:13649   */\n      swap2\n      pop\n        /* \"#utility.yul\":13666:13669   */\n      dup2\n        /* \"#utility.yul\":13659:13669   */\n      swap1\n      pop\n        /* \"#utility.yul\":13404:13675   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13681:13903   */\n    tag_126:\n        /* \"#utility.yul\":13774:13778   */\n      0x00\n        /* \"#utility.yul\":13812:13814   */\n      0x20\n        /* \"#utility.yul\":13801:13810   */\n      dup3\n        /* \"#utility.yul\":13797:13815   */\n      add\n        /* \"#utility.yul\":13789:13815   */\n      swap1\n      pop\n        /* \"#utility.yul\":13825:13896   */\n      tag_789\n        /* \"#utility.yul\":13893:13894   */\n      0x00\n        /* \"#utility.yul\":13882:13891   */\n      dup4\n        /* \"#utility.yul\":13878:13895   */\n      add\n        /* \"#utility.yul\":13869:13875   */\n      dup5\n        /* \"#utility.yul\":13825:13896   */\n      tag_674\n      jump\t// in\n    tag_789:\n        /* \"#utility.yul\":13681:13903   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13909:14241   */\n    tag_532:\n        /* \"#utility.yul\":14030:14034   */\n      0x00\n        /* \"#utility.yul\":14068:14070   */\n      0x40\n        /* \"#utility.yul\":14057:14066   */\n      dup3\n        /* \"#utility.yul\":14053:14071   */\n      add\n        /* \"#utility.yul\":14045:14071   */\n      swap1\n      pop\n        /* \"#utility.yul\":14081:14152   */\n      tag_791\n        /* \"#utility.yul\":14149:14150   */\n      0x00\n        /* \"#utility.yul\":14138:14147   */\n      dup4\n        /* \"#utility.yul\":14134:14151   */\n      add\n        /* \"#utility.yul\":14125:14131   */\n      dup6\n        /* \"#utility.yul\":14081:14152   */\n      tag_674\n      jump\t// in\n    tag_791:\n        /* \"#utility.yul\":14162:14234   */\n      tag_792\n        /* \"#utility.yul\":14230:14232   */\n      0x20\n        /* \"#utility.yul\":14219:14228   */\n      dup4\n        /* \"#utility.yul\":14215:14233   */\n      add\n        /* \"#utility.yul\":14206:14212   */\n      dup5\n        /* \"#utility.yul\":14162:14234   */\n      tag_674\n      jump\t// in\n    tag_792:\n        /* \"#utility.yul\":13909:14241   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14247:14689   */\n    tag_528:\n        /* \"#utility.yul\":14396:14400   */\n      0x00\n        /* \"#utility.yul\":14434:14436   */\n      0x60\n        /* \"#utility.yul\":14423:14432   */\n      dup3\n        /* \"#utility.yul\":14419:14437   */\n      add\n        /* \"#utility.yul\":14411:14437   */\n      swap1\n      pop\n        /* \"#utility.yul\":14447:14518   */\n      tag_794\n        /* \"#utility.yul\":14515:14516   */\n      0x00\n        /* \"#utility.yul\":14504:14513   */\n      dup4\n        /* \"#utility.yul\":14500:14517   */\n      add\n        /* \"#utility.yul\":14491:14497   */\n      dup7\n        /* \"#utility.yul\":14447:14518   */\n      tag_674\n      jump\t// in\n    tag_794:\n        /* \"#utility.yul\":14528:14600   */\n      tag_795\n        /* \"#utility.yul\":14596:14598   */\n      0x20\n        /* \"#utility.yul\":14585:14594   */\n      dup4\n        /* \"#utility.yul\":14581:14599   */\n      add\n        /* \"#utility.yul\":14572:14578   */\n      dup6\n        /* \"#utility.yul\":14528:14600   */\n      tag_674\n      jump\t// in\n    tag_795:\n        /* \"#utility.yul\":14610:14682   */\n      tag_796\n        /* \"#utility.yul\":14678:14680   */\n      0x40\n        /* \"#utility.yul\":14667:14676   */\n      dup4\n        /* \"#utility.yul\":14663:14681   */\n      add\n        /* \"#utility.yul\":14654:14660   */\n      dup5\n        /* \"#utility.yul\":14610:14682   */\n      tag_782\n      jump\t// in\n    tag_796:\n        /* \"#utility.yul\":14247:14689   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14695:15027   */\n    tag_523:\n        /* \"#utility.yul\":14816:14820   */\n      0x00\n        /* \"#utility.yul\":14854:14856   */\n      0x40\n        /* \"#utility.yul\":14843:14852   */\n      dup3\n        /* \"#utility.yul\":14839:14857   */\n      add\n        /* \"#utility.yul\":14831:14857   */\n      swap1\n      pop\n        /* \"#utility.yul\":14867:14938   */\n      tag_798\n        /* \"#utility.yul\":14935:14936   */\n      0x00\n        /* \"#utility.yul\":14924:14933   */\n      dup4\n        /* \"#utility.yul\":14920:14937   */\n      add\n        /* \"#utility.yul\":14911:14917   */\n      dup6\n        /* \"#utility.yul\":14867:14938   */\n      tag_674\n      jump\t// in\n    tag_798:\n        /* \"#utility.yul\":14948:15020   */\n      tag_799\n        /* \"#utility.yul\":15016:15018   */\n      0x20\n        /* \"#utility.yul\":15005:15014   */\n      dup4\n        /* \"#utility.yul\":15001:15019   */\n      add\n        /* \"#utility.yul\":14992:14998   */\n      dup5\n        /* \"#utility.yul\":14948:15020   */\n      tag_782\n      jump\t// in\n    tag_799:\n        /* \"#utility.yul\":14695:15027   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15033:15283   */\n    tag_160:\n        /* \"#utility.yul\":15140:15144   */\n      0x00\n        /* \"#utility.yul\":15178:15180   */\n      0x20\n        /* \"#utility.yul\":15167:15176   */\n      dup3\n        /* \"#utility.yul\":15163:15181   */\n      add\n        /* \"#utility.yul\":15155:15181   */\n      swap1\n      pop\n        /* \"#utility.yul\":15191:15276   */\n      tag_801\n        /* \"#utility.yul\":15273:15274   */\n      0x00\n        /* \"#utility.yul\":15262:15271   */\n      dup4\n        /* \"#utility.yul\":15258:15275   */\n      add\n        /* \"#utility.yul\":15249:15255   */\n      dup5\n        /* \"#utility.yul\":15191:15276   */\n      tag_686\n      jump\t// in\n    tag_801:\n        /* \"#utility.yul\":15033:15283   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15289:15870   */\n    tag_63:\n        /* \"#utility.yul\":15480:15484   */\n      0x00\n        /* \"#utility.yul\":15518:15521   */\n      0x80\n        /* \"#utility.yul\":15507:15516   */\n      dup3\n        /* \"#utility.yul\":15503:15522   */\n      add\n        /* \"#utility.yul\":15495:15522   */\n      swap1\n      pop\n        /* \"#utility.yul\":15532:15617   */\n      tag_803\n        /* \"#utility.yul\":15614:15615   */\n      0x00\n        /* \"#utility.yul\":15603:15612   */\n      dup4\n        /* \"#utility.yul\":15599:15616   */\n      add\n        /* \"#utility.yul\":15590:15596   */\n      dup8\n        /* \"#utility.yul\":15532:15617   */\n      tag_686\n      jump\t// in\n    tag_803:\n        /* \"#utility.yul\":15627:15699   */\n      tag_804\n        /* \"#utility.yul\":15695:15697   */\n      0x20\n        /* \"#utility.yul\":15684:15693   */\n      dup4\n        /* \"#utility.yul\":15680:15698   */\n      add\n        /* \"#utility.yul\":15671:15677   */\n      dup7\n        /* \"#utility.yul\":15627:15699   */\n      tag_782\n      jump\t// in\n    tag_804:\n        /* \"#utility.yul\":15709:15781   */\n      tag_805\n        /* \"#utility.yul\":15777:15779   */\n      0x40\n        /* \"#utility.yul\":15766:15775   */\n      dup4\n        /* \"#utility.yul\":15762:15780   */\n      add\n        /* \"#utility.yul\":15753:15759   */\n      dup6\n        /* \"#utility.yul\":15709:15781   */\n      tag_782\n      jump\t// in\n    tag_805:\n        /* \"#utility.yul\":15791:15863   */\n      tag_806\n        /* \"#utility.yul\":15859:15861   */\n      0x60\n        /* \"#utility.yul\":15848:15857   */\n      dup4\n        /* \"#utility.yul\":15844:15862   */\n      add\n        /* \"#utility.yul\":15835:15841   */\n      dup5\n        /* \"#utility.yul\":15791:15863   */\n      tag_782\n      jump\t// in\n    tag_806:\n        /* \"#utility.yul\":15289:15870   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15876:16238   */\n    tag_114:\n        /* \"#utility.yul\":16012:16016   */\n      0x00\n        /* \"#utility.yul\":16050:16052   */\n      0x40\n        /* \"#utility.yul\":16039:16048   */\n      dup3\n        /* \"#utility.yul\":16035:16053   */\n      add\n        /* \"#utility.yul\":16027:16053   */\n      swap1\n      pop\n        /* \"#utility.yul\":16063:16149   */\n      tag_808\n        /* \"#utility.yul\":16146:16147   */\n      0x00\n        /* \"#utility.yul\":16135:16144   */\n      dup4\n        /* \"#utility.yul\":16131:16148   */\n      add\n        /* \"#utility.yul\":16122:16128   */\n      dup6\n        /* \"#utility.yul\":16063:16149   */\n      tag_690\n      jump\t// in\n    tag_808:\n        /* \"#utility.yul\":16159:16231   */\n      tag_809\n        /* \"#utility.yul\":16227:16229   */\n      0x20\n        /* \"#utility.yul\":16216:16225   */\n      dup4\n        /* \"#utility.yul\":16212:16230   */\n      add\n        /* \"#utility.yul\":16203:16209   */\n      dup5\n        /* \"#utility.yul\":16159:16231   */\n      tag_782\n      jump\t// in\n    tag_809:\n        /* \"#utility.yul\":15876:16238   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16244:16508   */\n    tag_130:\n        /* \"#utility.yul\":16358:16362   */\n      0x00\n        /* \"#utility.yul\":16396:16398   */\n      0x20\n        /* \"#utility.yul\":16385:16394   */\n      dup3\n        /* \"#utility.yul\":16381:16399   */\n      add\n        /* \"#utility.yul\":16373:16399   */\n      swap1\n      pop\n        /* \"#utility.yul\":16409:16501   */\n      tag_811\n        /* \"#utility.yul\":16498:16499   */\n      0x00\n        /* \"#utility.yul\":16487:16496   */\n      dup4\n        /* \"#utility.yul\":16483:16500   */\n      add\n        /* \"#utility.yul\":16474:16480   */\n      dup5\n        /* \"#utility.yul\":16409:16501   */\n      tag_694\n      jump\t// in\n    tag_811:\n        /* \"#utility.yul\":16244:16508   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16514:16827   */\n    tag_546:\n        /* \"#utility.yul\":16627:16631   */\n      0x00\n        /* \"#utility.yul\":16665:16667   */\n      0x20\n        /* \"#utility.yul\":16654:16663   */\n      dup3\n        /* \"#utility.yul\":16650:16668   */\n      add\n        /* \"#utility.yul\":16642:16668   */\n      swap1\n      pop\n        /* \"#utility.yul\":16714:16723   */\n      dup2\n        /* \"#utility.yul\":16708:16712   */\n      dup2\n        /* \"#utility.yul\":16704:16724   */\n      sub\n        /* \"#utility.yul\":16700:16701   */\n      0x00\n        /* \"#utility.yul\":16689:16698   */\n      dup4\n        /* \"#utility.yul\":16685:16702   */\n      add\n        /* \"#utility.yul\":16678:16725   */\n      mstore\n        /* \"#utility.yul\":16742:16820   */\n      tag_813\n        /* \"#utility.yul\":16815:16819   */\n      dup2\n        /* \"#utility.yul\":16806:16812   */\n      dup5\n        /* \"#utility.yul\":16742:16820   */\n      tag_698\n      jump\t// in\n    tag_813:\n        /* \"#utility.yul\":16734:16820   */\n      swap1\n      pop\n        /* \"#utility.yul\":16514:16827   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16833:17252   */\n    tag_475:\n        /* \"#utility.yul\":16999:17003   */\n      0x00\n        /* \"#utility.yul\":17037:17039   */\n      0x20\n        /* \"#utility.yul\":17026:17035   */\n      dup3\n        /* \"#utility.yul\":17022:17040   */\n      add\n        /* \"#utility.yul\":17014:17040   */\n      swap1\n      pop\n        /* \"#utility.yul\":17086:17095   */\n      dup2\n        /* \"#utility.yul\":17080:17084   */\n      dup2\n        /* \"#utility.yul\":17076:17096   */\n      sub\n        /* \"#utility.yul\":17072:17073   */\n      0x00\n        /* \"#utility.yul\":17061:17070   */\n      dup4\n        /* \"#utility.yul\":17057:17074   */\n      add\n        /* \"#utility.yul\":17050:17097   */\n      mstore\n        /* \"#utility.yul\":17114:17245   */\n      tag_815\n        /* \"#utility.yul\":17240:17244   */\n      dup2\n        /* \"#utility.yul\":17114:17245   */\n      tag_707\n      jump\t// in\n    tag_815:\n        /* \"#utility.yul\":17106:17245   */\n      swap1\n      pop\n        /* \"#utility.yul\":16833:17252   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17258:17677   */\n    tag_247:\n        /* \"#utility.yul\":17424:17428   */\n      0x00\n        /* \"#utility.yul\":17462:17464   */\n      0x20\n        /* \"#utility.yul\":17451:17460   */\n      dup3\n        /* \"#utility.yul\":17447:17465   */\n      add\n        /* \"#utility.yul\":17439:17465   */\n      swap1\n      pop\n        /* \"#utility.yul\":17511:17520   */\n      dup2\n        /* \"#utility.yul\":17505:17509   */\n      dup2\n        /* \"#utility.yul\":17501:17521   */\n      sub\n        /* \"#utility.yul\":17497:17498   */\n      0x00\n        /* \"#utility.yul\":17486:17495   */\n      dup4\n        /* \"#utility.yul\":17482:17499   */\n      add\n        /* \"#utility.yul\":17475:17522   */\n      mstore\n        /* \"#utility.yul\":17539:17670   */\n      tag_817\n        /* \"#utility.yul\":17665:17669   */\n      dup2\n        /* \"#utility.yul\":17539:17670   */\n      tag_712\n      jump\t// in\n    tag_817:\n        /* \"#utility.yul\":17531:17670   */\n      swap1\n      pop\n        /* \"#utility.yul\":17258:17677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17683:18102   */\n    tag_298:\n        /* \"#utility.yul\":17849:17853   */\n      0x00\n        /* \"#utility.yul\":17887:17889   */\n      0x20\n        /* \"#utility.yul\":17876:17885   */\n      dup3\n        /* \"#utility.yul\":17872:17890   */\n      add\n        /* \"#utility.yul\":17864:17890   */\n      swap1\n      pop\n        /* \"#utility.yul\":17936:17945   */\n      dup2\n        /* \"#utility.yul\":17930:17934   */\n      dup2\n        /* \"#utility.yul\":17926:17946   */\n      sub\n        /* \"#utility.yul\":17922:17923   */\n      0x00\n        /* \"#utility.yul\":17911:17920   */\n      dup4\n        /* \"#utility.yul\":17907:17924   */\n      add\n        /* \"#utility.yul\":17900:17947   */\n      mstore\n        /* \"#utility.yul\":17964:18095   */\n      tag_819\n        /* \"#utility.yul\":18090:18094   */\n      dup2\n        /* \"#utility.yul\":17964:18095   */\n      tag_717\n      jump\t// in\n    tag_819:\n        /* \"#utility.yul\":17956:18095   */\n      swap1\n      pop\n        /* \"#utility.yul\":17683:18102   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18108:18527   */\n    tag_519:\n        /* \"#utility.yul\":18274:18278   */\n      0x00\n        /* \"#utility.yul\":18312:18314   */\n      0x20\n        /* \"#utility.yul\":18301:18310   */\n      dup3\n        /* \"#utility.yul\":18297:18315   */\n      add\n        /* \"#utility.yul\":18289:18315   */\n      swap1\n      pop\n        /* \"#utility.yul\":18361:18370   */\n      dup2\n        /* \"#utility.yul\":18355:18359   */\n      dup2\n        /* \"#utility.yul\":18351:18371   */\n      sub\n        /* \"#utility.yul\":18347:18348   */\n      0x00\n        /* \"#utility.yul\":18336:18345   */\n      dup4\n        /* \"#utility.yul\":18332:18349   */\n      add\n        /* \"#utility.yul\":18325:18372   */\n      mstore\n        /* \"#utility.yul\":18389:18520   */\n      tag_821\n        /* \"#utility.yul\":18515:18519   */\n      dup2\n        /* \"#utility.yul\":18389:18520   */\n      tag_722\n      jump\t// in\n    tag_821:\n        /* \"#utility.yul\":18381:18520   */\n      swap1\n      pop\n        /* \"#utility.yul\":18108:18527   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18533:18952   */\n    tag_568:\n        /* \"#utility.yul\":18699:18703   */\n      0x00\n        /* \"#utility.yul\":18737:18739   */\n      0x20\n        /* \"#utility.yul\":18726:18735   */\n      dup3\n        /* \"#utility.yul\":18722:18740   */\n      add\n        /* \"#utility.yul\":18714:18740   */\n      swap1\n      pop\n        /* \"#utility.yul\":18786:18795   */\n      dup2\n        /* \"#utility.yul\":18780:18784   */\n      dup2\n        /* \"#utility.yul\":18776:18796   */\n      sub\n        /* \"#utility.yul\":18772:18773   */\n      0x00\n        /* \"#utility.yul\":18761:18770   */\n      dup4\n        /* \"#utility.yul\":18757:18774   */\n      add\n        /* \"#utility.yul\":18750:18797   */\n      mstore\n        /* \"#utility.yul\":18814:18945   */\n      tag_823\n        /* \"#utility.yul\":18940:18944   */\n      dup2\n        /* \"#utility.yul\":18814:18945   */\n      tag_727\n      jump\t// in\n    tag_823:\n        /* \"#utility.yul\":18806:18945   */\n      swap1\n      pop\n        /* \"#utility.yul\":18533:18952   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18958:19377   */\n    tag_451:\n        /* \"#utility.yul\":19124:19128   */\n      0x00\n        /* \"#utility.yul\":19162:19164   */\n      0x20\n        /* \"#utility.yul\":19151:19160   */\n      dup3\n        /* \"#utility.yul\":19147:19165   */\n      add\n        /* \"#utility.yul\":19139:19165   */\n      swap1\n      pop\n        /* \"#utility.yul\":19211:19220   */\n      dup2\n        /* \"#utility.yul\":19205:19209   */\n      dup2\n        /* \"#utility.yul\":19201:19221   */\n      sub\n        /* \"#utility.yul\":19197:19198   */\n      0x00\n        /* \"#utility.yul\":19186:19195   */\n      dup4\n        /* \"#utility.yul\":19182:19199   */\n      add\n        /* \"#utility.yul\":19175:19222   */\n      mstore\n        /* \"#utility.yul\":19239:19370   */\n      tag_825\n        /* \"#utility.yul\":19365:19369   */\n      dup2\n        /* \"#utility.yul\":19239:19370   */\n      tag_732\n      jump\t// in\n    tag_825:\n        /* \"#utility.yul\":19231:19370   */\n      swap1\n      pop\n        /* \"#utility.yul\":18958:19377   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19383:19802   */\n    tag_507:\n        /* \"#utility.yul\":19549:19553   */\n      0x00\n        /* \"#utility.yul\":19587:19589   */\n      0x20\n        /* \"#utility.yul\":19576:19585   */\n      dup3\n        /* \"#utility.yul\":19572:19590   */\n      add\n        /* \"#utility.yul\":19564:19590   */\n      swap1\n      pop\n        /* \"#utility.yul\":19636:19645   */\n      dup2\n        /* \"#utility.yul\":19630:19634   */\n      dup2\n        /* \"#utility.yul\":19626:19646   */\n      sub\n        /* \"#utility.yul\":19622:19623   */\n      0x00\n        /* \"#utility.yul\":19611:19620   */\n      dup4\n        /* \"#utility.yul\":19607:19624   */\n      add\n        /* \"#utility.yul\":19600:19647   */\n      mstore\n        /* \"#utility.yul\":19664:19795   */\n      tag_827\n        /* \"#utility.yul\":19790:19794   */\n      dup2\n        /* \"#utility.yul\":19664:19795   */\n      tag_737\n      jump\t// in\n    tag_827:\n        /* \"#utility.yul\":19656:19795   */\n      swap1\n      pop\n        /* \"#utility.yul\":19383:19802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19808:20227   */\n    tag_185:\n        /* \"#utility.yul\":19974:19978   */\n      0x00\n        /* \"#utility.yul\":20012:20014   */\n      0x20\n        /* \"#utility.yul\":20001:20010   */\n      dup3\n        /* \"#utility.yul\":19997:20015   */\n      add\n        /* \"#utility.yul\":19989:20015   */\n      swap1\n      pop\n        /* \"#utility.yul\":20061:20070   */\n      dup2\n        /* \"#utility.yul\":20055:20059   */\n      dup2\n        /* \"#utility.yul\":20051:20071   */\n      sub\n        /* \"#utility.yul\":20047:20048   */\n      0x00\n        /* \"#utility.yul\":20036:20045   */\n      dup4\n        /* \"#utility.yul\":20032:20049   */\n      add\n        /* \"#utility.yul\":20025:20072   */\n      mstore\n        /* \"#utility.yul\":20089:20220   */\n      tag_829\n        /* \"#utility.yul\":20215:20219   */\n      dup2\n        /* \"#utility.yul\":20089:20220   */\n      tag_742\n      jump\t// in\n    tag_829:\n        /* \"#utility.yul\":20081:20220   */\n      swap1\n      pop\n        /* \"#utility.yul\":19808:20227   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20233:20652   */\n    tag_431:\n        /* \"#utility.yul\":20399:20403   */\n      0x00\n        /* \"#utility.yul\":20437:20439   */\n      0x20\n        /* \"#utility.yul\":20426:20435   */\n      dup3\n        /* \"#utility.yul\":20422:20440   */\n      add\n        /* \"#utility.yul\":20414:20440   */\n      swap1\n      pop\n        /* \"#utility.yul\":20486:20495   */\n      dup2\n        /* \"#utility.yul\":20480:20484   */\n      dup2\n        /* \"#utility.yul\":20476:20496   */\n      sub\n        /* \"#utility.yul\":20472:20473   */\n      0x00\n        /* \"#utility.yul\":20461:20470   */\n      dup4\n        /* \"#utility.yul\":20457:20474   */\n      add\n        /* \"#utility.yul\":20450:20497   */\n      mstore\n        /* \"#utility.yul\":20514:20645   */\n      tag_831\n        /* \"#utility.yul\":20640:20644   */\n      dup2\n        /* \"#utility.yul\":20514:20645   */\n      tag_747\n      jump\t// in\n    tag_831:\n        /* \"#utility.yul\":20506:20645   */\n      swap1\n      pop\n        /* \"#utility.yul\":20233:20652   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20658:21077   */\n    tag_573:\n        /* \"#utility.yul\":20824:20828   */\n      0x00\n        /* \"#utility.yul\":20862:20864   */\n      0x20\n        /* \"#utility.yul\":20851:20860   */\n      dup3\n        /* \"#utility.yul\":20847:20865   */\n      add\n        /* \"#utility.yul\":20839:20865   */\n      swap1\n      pop\n        /* \"#utility.yul\":20911:20920   */\n      dup2\n        /* \"#utility.yul\":20905:20909   */\n      dup2\n        /* \"#utility.yul\":20901:20921   */\n      sub\n        /* \"#utility.yul\":20897:20898   */\n      0x00\n        /* \"#utility.yul\":20886:20895   */\n      dup4\n        /* \"#utility.yul\":20882:20899   */\n      add\n        /* \"#utility.yul\":20875:20922   */\n      mstore\n        /* \"#utility.yul\":20939:21070   */\n      tag_833\n        /* \"#utility.yul\":21065:21069   */\n      dup2\n        /* \"#utility.yul\":20939:21070   */\n      tag_752\n      jump\t// in\n    tag_833:\n        /* \"#utility.yul\":20931:21070   */\n      swap1\n      pop\n        /* \"#utility.yul\":20658:21077   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21083:21502   */\n    tag_194:\n        /* \"#utility.yul\":21249:21253   */\n      0x00\n        /* \"#utility.yul\":21287:21289   */\n      0x20\n        /* \"#utility.yul\":21276:21285   */\n      dup3\n        /* \"#utility.yul\":21272:21290   */\n      add\n        /* \"#utility.yul\":21264:21290   */\n      swap1\n      pop\n        /* \"#utility.yul\":21336:21345   */\n      dup2\n        /* \"#utility.yul\":21330:21334   */\n      dup2\n        /* \"#utility.yul\":21326:21346   */\n      sub\n        /* \"#utility.yul\":21322:21323   */\n      0x00\n        /* \"#utility.yul\":21311:21320   */\n      dup4\n        /* \"#utility.yul\":21307:21324   */\n      add\n        /* \"#utility.yul\":21300:21347   */\n      mstore\n        /* \"#utility.yul\":21364:21495   */\n      tag_835\n        /* \"#utility.yul\":21490:21494   */\n      dup2\n        /* \"#utility.yul\":21364:21495   */\n      tag_757\n      jump\t// in\n    tag_835:\n        /* \"#utility.yul\":21356:21495   */\n      swap1\n      pop\n        /* \"#utility.yul\":21083:21502   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21508:21927   */\n    tag_561:\n        /* \"#utility.yul\":21674:21678   */\n      0x00\n        /* \"#utility.yul\":21712:21714   */\n      0x20\n        /* \"#utility.yul\":21701:21710   */\n      dup3\n        /* \"#utility.yul\":21697:21715   */\n      add\n        /* \"#utility.yul\":21689:21715   */\n      swap1\n      pop\n        /* \"#utility.yul\":21761:21770   */\n      dup2\n        /* \"#utility.yul\":21755:21759   */\n      dup2\n        /* \"#utility.yul\":21751:21771   */\n      sub\n        /* \"#utility.yul\":21747:21748   */\n      0x00\n        /* \"#utility.yul\":21736:21745   */\n      dup4\n        /* \"#utility.yul\":21732:21749   */\n      add\n        /* \"#utility.yul\":21725:21772   */\n      mstore\n        /* \"#utility.yul\":21789:21920   */\n      tag_837\n        /* \"#utility.yul\":21915:21919   */\n      dup2\n        /* \"#utility.yul\":21789:21920   */\n      tag_762\n      jump\t// in\n    tag_837:\n        /* \"#utility.yul\":21781:21920   */\n      swap1\n      pop\n        /* \"#utility.yul\":21508:21927   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21933:22352   */\n    tag_342:\n        /* \"#utility.yul\":22099:22103   */\n      0x00\n        /* \"#utility.yul\":22137:22139   */\n      0x20\n        /* \"#utility.yul\":22126:22135   */\n      dup3\n        /* \"#utility.yul\":22122:22140   */\n      add\n        /* \"#utility.yul\":22114:22140   */\n      swap1\n      pop\n        /* \"#utility.yul\":22186:22195   */\n      dup2\n        /* \"#utility.yul\":22180:22184   */\n      dup2\n        /* \"#utility.yul\":22176:22196   */\n      sub\n        /* \"#utility.yul\":22172:22173   */\n      0x00\n        /* \"#utility.yul\":22161:22170   */\n      dup4\n        /* \"#utility.yul\":22157:22174   */\n      add\n        /* \"#utility.yul\":22150:22197   */\n      mstore\n        /* \"#utility.yul\":22214:22345   */\n      tag_839\n        /* \"#utility.yul\":22340:22344   */\n      dup2\n        /* \"#utility.yul\":22214:22345   */\n      tag_767\n      jump\t// in\n    tag_839:\n        /* \"#utility.yul\":22206:22345   */\n      swap1\n      pop\n        /* \"#utility.yul\":21933:22352   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22358:22777   */\n    tag_539:\n        /* \"#utility.yul\":22524:22528   */\n      0x00\n        /* \"#utility.yul\":22562:22564   */\n      0x20\n        /* \"#utility.yul\":22551:22560   */\n      dup3\n        /* \"#utility.yul\":22547:22565   */\n      add\n        /* \"#utility.yul\":22539:22565   */\n      swap1\n      pop\n        /* \"#utility.yul\":22611:22620   */\n      dup2\n        /* \"#utility.yul\":22605:22609   */\n      dup2\n        /* \"#utility.yul\":22601:22621   */\n      sub\n        /* \"#utility.yul\":22597:22598   */\n      0x00\n        /* \"#utility.yul\":22586:22595   */\n      dup4\n        /* \"#utility.yul\":22582:22599   */\n      add\n        /* \"#utility.yul\":22575:22622   */\n      mstore\n        /* \"#utility.yul\":22639:22770   */\n      tag_841\n        /* \"#utility.yul\":22765:22769   */\n      dup2\n        /* \"#utility.yul\":22639:22770   */\n      tag_772\n      jump\t// in\n    tag_841:\n        /* \"#utility.yul\":22631:22770   */\n      swap1\n      pop\n        /* \"#utility.yul\":22358:22777   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22783:23202   */\n    tag_318:\n        /* \"#utility.yul\":22949:22953   */\n      0x00\n        /* \"#utility.yul\":22987:22989   */\n      0x20\n        /* \"#utility.yul\":22976:22985   */\n      dup3\n        /* \"#utility.yul\":22972:22990   */\n      add\n        /* \"#utility.yul\":22964:22990   */\n      swap1\n      pop\n        /* \"#utility.yul\":23036:23045   */\n      dup2\n        /* \"#utility.yul\":23030:23034   */\n      dup2\n        /* \"#utility.yul\":23026:23046   */\n      sub\n        /* \"#utility.yul\":23022:23023   */\n      0x00\n        /* \"#utility.yul\":23011:23020   */\n      dup4\n        /* \"#utility.yul\":23007:23024   */\n      add\n        /* \"#utility.yul\":23000:23047   */\n      mstore\n        /* \"#utility.yul\":23064:23195   */\n      tag_843\n        /* \"#utility.yul\":23190:23194   */\n      dup2\n        /* \"#utility.yul\":23064:23195   */\n      tag_777\n      jump\t// in\n    tag_843:\n        /* \"#utility.yul\":23056:23195   */\n      swap1\n      pop\n        /* \"#utility.yul\":22783:23202   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23208:23430   */\n    tag_50:\n        /* \"#utility.yul\":23301:23305   */\n      0x00\n        /* \"#utility.yul\":23339:23341   */\n      0x20\n        /* \"#utility.yul\":23328:23337   */\n      dup3\n        /* \"#utility.yul\":23324:23342   */\n      add\n        /* \"#utility.yul\":23316:23342   */\n      swap1\n      pop\n        /* \"#utility.yul\":23352:23423   */\n      tag_845\n        /* \"#utility.yul\":23420:23421   */\n      0x00\n        /* \"#utility.yul\":23409:23418   */\n      dup4\n        /* \"#utility.yul\":23405:23422   */\n      add\n        /* \"#utility.yul\":23396:23402   */\n      dup5\n        /* \"#utility.yul\":23352:23423   */\n      tag_782\n      jump\t// in\n    tag_845:\n        /* \"#utility.yul\":23208:23430   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23436:23768   */\n    tag_153:\n        /* \"#utility.yul\":23557:23561   */\n      0x00\n        /* \"#utility.yul\":23595:23597   */\n      0x40\n        /* \"#utility.yul\":23584:23593   */\n      dup3\n        /* \"#utility.yul\":23580:23598   */\n      add\n        /* \"#utility.yul\":23572:23598   */\n      swap1\n      pop\n        /* \"#utility.yul\":23608:23679   */\n      tag_847\n        /* \"#utility.yul\":23676:23677   */\n      0x00\n        /* \"#utility.yul\":23665:23674   */\n      dup4\n        /* \"#utility.yul\":23661:23678   */\n      add\n        /* \"#utility.yul\":23652:23658   */\n      dup6\n        /* \"#utility.yul\":23608:23679   */\n      tag_782\n      jump\t// in\n    tag_847:\n        /* \"#utility.yul\":23689:23761   */\n      tag_848\n        /* \"#utility.yul\":23757:23759   */\n      0x20\n        /* \"#utility.yul\":23746:23755   */\n      dup4\n        /* \"#utility.yul\":23742:23760   */\n      add\n        /* \"#utility.yul\":23733:23739   */\n      dup5\n        /* \"#utility.yul\":23689:23761   */\n      tag_782\n      jump\t// in\n    tag_848:\n        /* \"#utility.yul\":23436:23768   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23855:23953   */\n    tag_681:\n        /* \"#utility.yul\":23906:23912   */\n      0x00\n        /* \"#utility.yul\":23940:23945   */\n      dup2\n        /* \"#utility.yul\":23934:23946   */\n      mload\n        /* \"#utility.yul\":23924:23946   */\n      swap1\n      pop\n        /* \"#utility.yul\":23855:23953   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23959:24058   */\n    tag_701:\n        /* \"#utility.yul\":24011:24017   */\n      0x00\n        /* \"#utility.yul\":24045:24050   */\n      dup2\n        /* \"#utility.yul\":24039:24051   */\n      mload\n        /* \"#utility.yul\":24029:24051   */\n      swap1\n      pop\n        /* \"#utility.yul\":23959:24058   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24064:24211   */\n    tag_683:\n        /* \"#utility.yul\":24165:24176   */\n      0x00\n        /* \"#utility.yul\":24202:24205   */\n      dup2\n        /* \"#utility.yul\":24187:24205   */\n      swap1\n      pop\n        /* \"#utility.yul\":24064:24211   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24217:24386   */\n    tag_703:\n        /* \"#utility.yul\":24301:24312   */\n      0x00\n        /* \"#utility.yul\":24335:24341   */\n      dup3\n        /* \"#utility.yul\":24330:24333   */\n      dup3\n        /* \"#utility.yul\":24323:24342   */\n      mstore\n        /* \"#utility.yul\":24375:24379   */\n      0x20\n        /* \"#utility.yul\":24370:24373   */\n      dup3\n        /* \"#utility.yul\":24366:24380   */\n      add\n        /* \"#utility.yul\":24351:24380   */\n      swap1\n      pop\n        /* \"#utility.yul\":24217:24386   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24392:24697   */\n    tag_516:\n        /* \"#utility.yul\":24432:24435   */\n      0x00\n        /* \"#utility.yul\":24451:24471   */\n      tag_856\n        /* \"#utility.yul\":24469:24470   */\n      dup3\n        /* \"#utility.yul\":24451:24471   */\n      tag_785\n      jump\t// in\n    tag_856:\n        /* \"#utility.yul\":24446:24471   */\n      swap2\n      pop\n        /* \"#utility.yul\":24485:24505   */\n      tag_857\n        /* \"#utility.yul\":24503:24504   */\n      dup4\n        /* \"#utility.yul\":24485:24505   */\n      tag_785\n      jump\t// in\n    tag_857:\n        /* \"#utility.yul\":24480:24505   */\n      swap3\n      pop\n        /* \"#utility.yul\":24639:24640   */\n      dup3\n        /* \"#utility.yul\":24571:24637   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":24567:24641   */\n      sub\n        /* \"#utility.yul\":24564:24565   */\n      dup3\n        /* \"#utility.yul\":24561:24642   */\n      gt\n        /* \"#utility.yul\":24558:24665   */\n      iszero\n      tag_858\n      jumpi\n        /* \"#utility.yul\":24645:24663   */\n      tag_859\n      tag_860\n      jump\t// in\n    tag_859:\n        /* \"#utility.yul\":24558:24665   */\n    tag_858:\n        /* \"#utility.yul\":24689:24690   */\n      dup3\n        /* \"#utility.yul\":24686:24687   */\n      dup3\n        /* \"#utility.yul\":24682:24691   */\n      add\n        /* \"#utility.yul\":24675:24691   */\n      swap1\n      pop\n        /* \"#utility.yul\":24392:24697   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24703:24888   */\n    tag_504:\n        /* \"#utility.yul\":24743:24744   */\n      0x00\n        /* \"#utility.yul\":24760:24780   */\n      tag_862\n        /* \"#utility.yul\":24778:24779   */\n      dup3\n        /* \"#utility.yul\":24760:24780   */\n      tag_785\n      jump\t// in\n    tag_862:\n        /* \"#utility.yul\":24755:24780   */\n      swap2\n      pop\n        /* \"#utility.yul\":24794:24814   */\n      tag_863\n        /* \"#utility.yul\":24812:24813   */\n      dup4\n        /* \"#utility.yul\":24794:24814   */\n      tag_785\n      jump\t// in\n    tag_863:\n        /* \"#utility.yul\":24789:24814   */\n      swap3\n      pop\n        /* \"#utility.yul\":24833:24834   */\n      dup3\n        /* \"#utility.yul\":24823:24858   */\n      tag_864\n      jumpi\n        /* \"#utility.yul\":24838:24856   */\n      tag_865\n      tag_866\n      jump\t// in\n    tag_865:\n        /* \"#utility.yul\":24823:24858   */\n    tag_864:\n        /* \"#utility.yul\":24880:24881   */\n      dup3\n        /* \"#utility.yul\":24877:24878   */\n      dup3\n        /* \"#utility.yul\":24873:24882   */\n      div\n        /* \"#utility.yul\":24868:24882   */\n      swap1\n      pop\n        /* \"#utility.yul\":24703:24888   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24894:25242   */\n    tag_502:\n        /* \"#utility.yul\":24934:24941   */\n      0x00\n        /* \"#utility.yul\":24957:24977   */\n      tag_868\n        /* \"#utility.yul\":24975:24976   */\n      dup3\n        /* \"#utility.yul\":24957:24977   */\n      tag_785\n      jump\t// in\n    tag_868:\n        /* \"#utility.yul\":24952:24977   */\n      swap2\n      pop\n        /* \"#utility.yul\":24991:25011   */\n      tag_869\n        /* \"#utility.yul\":25009:25010   */\n      dup4\n        /* \"#utility.yul\":24991:25011   */\n      tag_785\n      jump\t// in\n    tag_869:\n        /* \"#utility.yul\":24986:25011   */\n      swap3\n      pop\n        /* \"#utility.yul\":25179:25180   */\n      dup2\n        /* \"#utility.yul\":25111:25177   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":25107:25181   */\n      div\n        /* \"#utility.yul\":25104:25105   */\n      dup4\n        /* \"#utility.yul\":25101:25182   */\n      gt\n        /* \"#utility.yul\":25096:25097   */\n      dup3\n        /* \"#utility.yul\":25089:25098   */\n      iszero\n        /* \"#utility.yul\":25082:25099   */\n      iszero\n        /* \"#utility.yul\":25078:25183   */\n      and\n        /* \"#utility.yul\":25075:25206   */\n      iszero\n      tag_870\n      jumpi\n        /* \"#utility.yul\":25186:25204   */\n      tag_871\n      tag_860\n      jump\t// in\n    tag_871:\n        /* \"#utility.yul\":25075:25206   */\n    tag_870:\n        /* \"#utility.yul\":25234:25235   */\n      dup3\n        /* \"#utility.yul\":25231:25232   */\n      dup3\n        /* \"#utility.yul\":25227:25236   */\n      mul\n        /* \"#utility.yul\":25216:25236   */\n      swap1\n      pop\n        /* \"#utility.yul\":24894:25242   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25248:25439   */\n    tag_552:\n        /* \"#utility.yul\":25288:25292   */\n      0x00\n        /* \"#utility.yul\":25308:25328   */\n      tag_873\n        /* \"#utility.yul\":25326:25327   */\n      dup3\n        /* \"#utility.yul\":25308:25328   */\n      tag_785\n      jump\t// in\n    tag_873:\n        /* \"#utility.yul\":25303:25328   */\n      swap2\n      pop\n        /* \"#utility.yul\":25342:25362   */\n      tag_874\n        /* \"#utility.yul\":25360:25361   */\n      dup4\n        /* \"#utility.yul\":25342:25362   */\n      tag_785\n      jump\t// in\n    tag_874:\n        /* \"#utility.yul\":25337:25362   */\n      swap3\n      pop\n        /* \"#utility.yul\":25381:25382   */\n      dup3\n        /* \"#utility.yul\":25378:25379   */\n      dup3\n        /* \"#utility.yul\":25375:25383   */\n      lt\n        /* \"#utility.yul\":25372:25406   */\n      iszero\n      tag_875\n      jumpi\n        /* \"#utility.yul\":25386:25404   */\n      tag_876\n      tag_860\n      jump\t// in\n    tag_876:\n        /* \"#utility.yul\":25372:25406   */\n    tag_875:\n        /* \"#utility.yul\":25431:25432   */\n      dup3\n        /* \"#utility.yul\":25428:25429   */\n      dup3\n        /* \"#utility.yul\":25424:25433   */\n      sub\n        /* \"#utility.yul\":25416:25433   */\n      swap1\n      pop\n        /* \"#utility.yul\":25248:25439   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25445:25541   */\n    tag_677:\n        /* \"#utility.yul\":25482:25489   */\n      0x00\n        /* \"#utility.yul\":25511:25535   */\n      tag_878\n        /* \"#utility.yul\":25529:25534   */\n      dup3\n        /* \"#utility.yul\":25511:25535   */\n      tag_879\n      jump\t// in\n    tag_878:\n        /* \"#utility.yul\":25500:25535   */\n      swap1\n      pop\n        /* \"#utility.yul\":25445:25541   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25547:25637   */\n    tag_880:\n        /* \"#utility.yul\":25581:25588   */\n      0x00\n        /* \"#utility.yul\":25624:25629   */\n      dup2\n        /* \"#utility.yul\":25617:25630   */\n      iszero\n        /* \"#utility.yul\":25610:25631   */\n      iszero\n        /* \"#utility.yul\":25599:25631   */\n      swap1\n      pop\n        /* \"#utility.yul\":25547:25637   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25643:25753   */\n    tag_882:\n        /* \"#utility.yul\":25694:25701   */\n      0x00\n        /* \"#utility.yul\":25723:25747   */\n      tag_884\n        /* \"#utility.yul\":25741:25746   */\n      dup3\n        /* \"#utility.yul\":25723:25747   */\n      tag_677\n      jump\t// in\n    tag_884:\n        /* \"#utility.yul\":25712:25747   */\n      swap1\n      pop\n        /* \"#utility.yul\":25643:25753   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25759:25870   */\n    tag_885:\n        /* \"#utility.yul\":25811:25818   */\n      0x00\n        /* \"#utility.yul\":25840:25864   */\n      tag_887\n        /* \"#utility.yul\":25858:25863   */\n      dup3\n        /* \"#utility.yul\":25840:25864   */\n      tag_677\n      jump\t// in\n    tag_887:\n        /* \"#utility.yul\":25829:25864   */\n      swap1\n      pop\n        /* \"#utility.yul\":25759:25870   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25876:25993   */\n    tag_888:\n        /* \"#utility.yul\":25934:25941   */\n      0x00\n        /* \"#utility.yul\":25963:25987   */\n      tag_890\n        /* \"#utility.yul\":25981:25986   */\n      dup3\n        /* \"#utility.yul\":25963:25987   */\n      tag_677\n      jump\t// in\n    tag_890:\n        /* \"#utility.yul\":25952:25987   */\n      swap1\n      pop\n        /* \"#utility.yul\":25876:25993   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25999:26125   */\n    tag_879:\n        /* \"#utility.yul\":26036:26043   */\n      0x00\n        /* \"#utility.yul\":26076:26118   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":26069:26074   */\n      dup3\n        /* \"#utility.yul\":26065:26119   */\n      and\n        /* \"#utility.yul\":26054:26119   */\n      swap1\n      pop\n        /* \"#utility.yul\":25999:26125   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26131:26208   */\n    tag_785:\n        /* \"#utility.yul\":26168:26175   */\n      0x00\n        /* \"#utility.yul\":26197:26202   */\n      dup2\n        /* \"#utility.yul\":26186:26202   */\n      swap1\n      pop\n        /* \"#utility.yul\":26131:26208   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26214:26354   */\n    tag_689:\n        /* \"#utility.yul\":26278:26287   */\n      0x00\n        /* \"#utility.yul\":26311:26348   */\n      tag_894\n        /* \"#utility.yul\":26342:26347   */\n      dup3\n        /* \"#utility.yul\":26311:26348   */\n      tag_895\n      jump\t// in\n    tag_894:\n        /* \"#utility.yul\":26298:26348   */\n      swap1\n      pop\n        /* \"#utility.yul\":26214:26354   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26360:26501   */\n    tag_693:\n        /* \"#utility.yul\":26425:26434   */\n      0x00\n        /* \"#utility.yul\":26458:26495   */\n      tag_897\n        /* \"#utility.yul\":26489:26494   */\n      dup3\n        /* \"#utility.yul\":26458:26495   */\n      tag_895\n      jump\t// in\n    tag_897:\n        /* \"#utility.yul\":26445:26495   */\n      swap1\n      pop\n        /* \"#utility.yul\":26360:26501   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26507:26654   */\n    tag_697:\n        /* \"#utility.yul\":26578:26587   */\n      0x00\n        /* \"#utility.yul\":26611:26648   */\n      tag_899\n        /* \"#utility.yul\":26642:26647   */\n      dup3\n        /* \"#utility.yul\":26611:26648   */\n      tag_895\n      jump\t// in\n    tag_899:\n        /* \"#utility.yul\":26598:26648   */\n      swap1\n      pop\n        /* \"#utility.yul\":26507:26654   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26660:26786   */\n    tag_895:\n        /* \"#utility.yul\":26710:26719   */\n      0x00\n        /* \"#utility.yul\":26743:26780   */\n      tag_901\n        /* \"#utility.yul\":26774:26779   */\n      dup3\n        /* \"#utility.yul\":26743:26780   */\n      tag_902\n      jump\t// in\n    tag_901:\n        /* \"#utility.yul\":26730:26780   */\n      swap1\n      pop\n        /* \"#utility.yul\":26660:26786   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26792:26905   */\n    tag_902:\n        /* \"#utility.yul\":26842:26851   */\n      0x00\n        /* \"#utility.yul\":26875:26899   */\n      tag_904\n        /* \"#utility.yul\":26893:26898   */\n      dup3\n        /* \"#utility.yul\":26875:26899   */\n      tag_879\n      jump\t// in\n    tag_904:\n        /* \"#utility.yul\":26862:26899   */\n      swap1\n      pop\n        /* \"#utility.yul\":26792:26905   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26911:27218   */\n    tag_685:\n        /* \"#utility.yul\":26979:26980   */\n      0x00\n        /* \"#utility.yul\":26989:27102   */\n    tag_906:\n        /* \"#utility.yul\":27003:27009   */\n      dup4\n        /* \"#utility.yul\":27000:27001   */\n      dup2\n        /* \"#utility.yul\":26997:27010   */\n      lt\n        /* \"#utility.yul\":26989:27102   */\n      iszero\n      tag_908\n      jumpi\n        /* \"#utility.yul\":27088:27089   */\n      dup1\n        /* \"#utility.yul\":27083:27086   */\n      dup3\n        /* \"#utility.yul\":27079:27090   */\n      add\n        /* \"#utility.yul\":27073:27091   */\n      mload\n        /* \"#utility.yul\":27069:27070   */\n      dup2\n        /* \"#utility.yul\":27064:27067   */\n      dup5\n        /* \"#utility.yul\":27060:27071   */\n      add\n        /* \"#utility.yul\":27053:27092   */\n      mstore\n        /* \"#utility.yul\":27025:27027   */\n      0x20\n        /* \"#utility.yul\":27022:27023   */\n      dup2\n        /* \"#utility.yul\":27018:27028   */\n      add\n        /* \"#utility.yul\":27013:27028   */\n      swap1\n      pop\n        /* \"#utility.yul\":26989:27102   */\n      jump(tag_906)\n    tag_908:\n        /* \"#utility.yul\":27120:27126   */\n      dup4\n        /* \"#utility.yul\":27117:27118   */\n      dup2\n        /* \"#utility.yul\":27114:27127   */\n      gt\n        /* \"#utility.yul\":27111:27212   */\n      iszero\n      tag_909\n      jumpi\n        /* \"#utility.yul\":27200:27201   */\n      0x00\n        /* \"#utility.yul\":27191:27197   */\n      dup5\n        /* \"#utility.yul\":27186:27189   */\n      dup5\n        /* \"#utility.yul\":27182:27198   */\n      add\n        /* \"#utility.yul\":27175:27202   */\n      mstore\n        /* \"#utility.yul\":27111:27212   */\n    tag_909:\n        /* \"#utility.yul\":26960:27218   */\n      pop\n        /* \"#utility.yul\":26911:27218   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27224:27457   */\n    tag_388:\n        /* \"#utility.yul\":27263:27266   */\n      0x00\n        /* \"#utility.yul\":27286:27310   */\n      tag_911\n        /* \"#utility.yul\":27304:27309   */\n      dup3\n        /* \"#utility.yul\":27286:27310   */\n      tag_785\n      jump\t// in\n    tag_911:\n        /* \"#utility.yul\":27277:27310   */\n      swap2\n      pop\n        /* \"#utility.yul\":27332:27398   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":27325:27330   */\n      dup3\n        /* \"#utility.yul\":27322:27399   */\n      eq\n        /* \"#utility.yul\":27319:27422   */\n      iszero\n      tag_912\n      jumpi\n        /* \"#utility.yul\":27402:27420   */\n      tag_913\n      tag_860\n      jump\t// in\n    tag_913:\n        /* \"#utility.yul\":27319:27422   */\n    tag_912:\n        /* \"#utility.yul\":27449:27450   */\n      0x01\n        /* \"#utility.yul\":27442:27447   */\n      dup3\n        /* \"#utility.yul\":27438:27451   */\n      add\n        /* \"#utility.yul\":27431:27451   */\n      swap1\n      pop\n        /* \"#utility.yul\":27224:27457   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27463:27643   */\n    tag_860:\n        /* \"#utility.yul\":27511:27588   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":27508:27509   */\n      0x00\n        /* \"#utility.yul\":27501:27589   */\n      mstore\n        /* \"#utility.yul\":27608:27612   */\n      0x11\n        /* \"#utility.yul\":27605:27606   */\n      0x04\n        /* \"#utility.yul\":27598:27613   */\n      mstore\n        /* \"#utility.yul\":27632:27636   */\n      0x24\n        /* \"#utility.yul\":27629:27630   */\n      0x00\n        /* \"#utility.yul\":27622:27637   */\n      revert\n        /* \"#utility.yul\":27649:27829   */\n    tag_866:\n        /* \"#utility.yul\":27697:27774   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":27694:27695   */\n      0x00\n        /* \"#utility.yul\":27687:27775   */\n      mstore\n        /* \"#utility.yul\":27794:27798   */\n      0x12\n        /* \"#utility.yul\":27791:27792   */\n      0x04\n        /* \"#utility.yul\":27784:27799   */\n      mstore\n        /* \"#utility.yul\":27818:27822   */\n      0x24\n        /* \"#utility.yul\":27815:27816   */\n      0x00\n        /* \"#utility.yul\":27808:27823   */\n      revert\n        /* \"#utility.yul\":27835:28015   */\n    tag_190:\n        /* \"#utility.yul\":27883:27960   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":27880:27881   */\n      0x00\n        /* \"#utility.yul\":27873:27961   */\n      mstore\n        /* \"#utility.yul\":27980:27984   */\n      0x32\n        /* \"#utility.yul\":27977:27978   */\n      0x04\n        /* \"#utility.yul\":27970:27985   */\n      mstore\n        /* \"#utility.yul\":28004:28008   */\n      0x24\n        /* \"#utility.yul\":28001:28002   */\n      0x00\n        /* \"#utility.yul\":27994:28009   */\n      revert\n        /* \"#utility.yul\":28144:28261   */\n    tag_625:\n        /* \"#utility.yul\":28253:28254   */\n      0x00\n        /* \"#utility.yul\":28250:28251   */\n      dup1\n        /* \"#utility.yul\":28243:28255   */\n      revert\n        /* \"#utility.yul\":28267:28369   */\n    tag_706:\n        /* \"#utility.yul\":28308:28314   */\n      0x00\n        /* \"#utility.yul\":28359:28361   */\n      0x1f\n        /* \"#utility.yul\":28355:28362   */\n      not\n        /* \"#utility.yul\":28350:28352   */\n      0x1f\n        /* \"#utility.yul\":28343:28348   */\n      dup4\n        /* \"#utility.yul\":28339:28353   */\n      add\n        /* \"#utility.yul\":28335:28363   */\n      and\n        /* \"#utility.yul\":28325:28363   */\n      swap1\n      pop\n        /* \"#utility.yul\":28267:28369   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28375:28600   */\n    tag_711:\n        /* \"#utility.yul\":28515:28549   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":28511:28512   */\n      0x00\n        /* \"#utility.yul\":28503:28509   */\n      dup3\n        /* \"#utility.yul\":28499:28513   */\n      add\n        /* \"#utility.yul\":28492:28550   */\n      mstore\n        /* \"#utility.yul\":28584:28592   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":28579:28581   */\n      0x20\n        /* \"#utility.yul\":28571:28577   */\n      dup3\n        /* \"#utility.yul\":28567:28582   */\n      add\n        /* \"#utility.yul\":28560:28593   */\n      mstore\n        /* \"#utility.yul\":28375:28600   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28606:28775   */\n    tag_716:\n        /* \"#utility.yul\":28746:28767   */\n      0x506f776572206973206e6f7420656e6f75676800000000000000000000000000\n        /* \"#utility.yul\":28742:28743   */\n      0x00\n        /* \"#utility.yul\":28734:28740   */\n      dup3\n        /* \"#utility.yul\":28730:28744   */\n      add\n        /* \"#utility.yul\":28723:28768   */\n      mstore\n        /* \"#utility.yul\":28606:28775   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28781:28958   */\n    tag_721:\n        /* \"#utility.yul\":28921:28950   */\n      0x776974686472617720506f77657220627920756e7374616b696e670000000000\n        /* \"#utility.yul\":28917:28918   */\n      0x00\n        /* \"#utility.yul\":28909:28915   */\n      dup3\n        /* \"#utility.yul\":28905:28919   */\n      add\n        /* \"#utility.yul\":28898:28951   */\n      mstore\n        /* \"#utility.yul\":28781:28958   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28964:29141   */\n    tag_726:\n        /* \"#utility.yul\":29104:29133   */\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n        /* \"#utility.yul\":29100:29101   */\n      0x00\n        /* \"#utility.yul\":29092:29098   */\n      dup3\n        /* \"#utility.yul\":29088:29102   */\n      add\n        /* \"#utility.yul\":29081:29134   */\n      mstore\n        /* \"#utility.yul\":28964:29141   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29147:29372   */\n    tag_731:\n        /* \"#utility.yul\":29287:29321   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":29283:29284   */\n      0x00\n        /* \"#utility.yul\":29275:29281   */\n      dup3\n        /* \"#utility.yul\":29271:29285   */\n      add\n        /* \"#utility.yul\":29264:29322   */\n      mstore\n        /* \"#utility.yul\":29356:29364   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":29351:29353   */\n      0x20\n        /* \"#utility.yul\":29343:29349   */\n      dup3\n        /* \"#utility.yul\":29339:29354   */\n      add\n        /* \"#utility.yul\":29332:29365   */\n      mstore\n        /* \"#utility.yul\":29147:29372   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29378:29552   */\n    tag_736:\n        /* \"#utility.yul\":29518:29544   */\n      0x6465706f73697420506f776572206279207374616b696e670000000000000000\n        /* \"#utility.yul\":29514:29515   */\n      0x00\n        /* \"#utility.yul\":29506:29512   */\n      dup3\n        /* \"#utility.yul\":29502:29516   */\n      add\n        /* \"#utility.yul\":29495:29545   */\n      mstore\n        /* \"#utility.yul\":29378:29552   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29558:29778   */\n    tag_741:\n        /* \"#utility.yul\":29698:29732   */\n      0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f\n        /* \"#utility.yul\":29694:29695   */\n      0x00\n        /* \"#utility.yul\":29686:29692   */\n      dup3\n        /* \"#utility.yul\":29682:29696   */\n      add\n        /* \"#utility.yul\":29675:29733   */\n      mstore\n        /* \"#utility.yul\":29767:29770   */\n      0x7700000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":29762:29764   */\n      0x20\n        /* \"#utility.yul\":29754:29760   */\n      dup3\n        /* \"#utility.yul\":29750:29765   */\n      add\n        /* \"#utility.yul\":29743:29771   */\n      mstore\n        /* \"#utility.yul\":29558:29778   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29784:29966   */\n    tag_746:\n        /* \"#utility.yul\":29924:29958   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":29920:29921   */\n      0x00\n        /* \"#utility.yul\":29912:29918   */\n      dup3\n        /* \"#utility.yul\":29908:29922   */\n      add\n        /* \"#utility.yul\":29901:29959   */\n      mstore\n        /* \"#utility.yul\":29784:29966   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29972:30142   */\n    tag_751:\n        /* \"#utility.yul\":30112:30134   */\n      0x43616c6c6572206973206e6f742066616d696c79000000000000000000000000\n        /* \"#utility.yul\":30108:30109   */\n      0x00\n        /* \"#utility.yul\":30100:30106   */\n      dup3\n        /* \"#utility.yul\":30096:30110   */\n      add\n        /* \"#utility.yul\":30089:30135   */\n      mstore\n        /* \"#utility.yul\":29972:30142   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30148:30327   */\n    tag_756:\n        /* \"#utility.yul\":30288:30319   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":30284:30285   */\n      0x00\n        /* \"#utility.yul\":30276:30282   */\n      dup3\n        /* \"#utility.yul\":30272:30286   */\n      add\n        /* \"#utility.yul\":30265:30320   */\n      mstore\n        /* \"#utility.yul\":30148:30327   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30333:30501   */\n    tag_761:\n        /* \"#utility.yul\":30473:30493   */\n      0x77697468647261773a206e6f7420676f6f640000000000000000000000000000\n        /* \"#utility.yul\":30469:30470   */\n      0x00\n        /* \"#utility.yul\":30461:30467   */\n      dup3\n        /* \"#utility.yul\":30457:30471   */\n      add\n        /* \"#utility.yul\":30450:30494   */\n      mstore\n        /* \"#utility.yul\":30333:30501   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30507:30736   */\n    tag_766:\n        /* \"#utility.yul\":30647:30681   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":30643:30644   */\n      0x00\n        /* \"#utility.yul\":30635:30641   */\n      dup3\n        /* \"#utility.yul\":30631:30645   */\n      add\n        /* \"#utility.yul\":30624:30682   */\n      mstore\n        /* \"#utility.yul\":30716:30728   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":30711:30713   */\n      0x20\n        /* \"#utility.yul\":30703:30709   */\n      dup3\n        /* \"#utility.yul\":30699:30714   */\n      add\n        /* \"#utility.yul\":30692:30729   */\n      mstore\n        /* \"#utility.yul\":30507:30736   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30742:30904   */\n    tag_771:\n        /* \"#utility.yul\":30882:30896   */\n      0x6d6967726174653a206261640000000000000000000000000000000000000000\n        /* \"#utility.yul\":30878:30879   */\n      0x00\n        /* \"#utility.yul\":30870:30876   */\n      dup3\n        /* \"#utility.yul\":30866:30880   */\n      add\n        /* \"#utility.yul\":30859:30897   */\n      mstore\n        /* \"#utility.yul\":30742:30904   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30910:31151   */\n    tag_776:\n        /* \"#utility.yul\":31050:31084   */\n      0x5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f\n        /* \"#utility.yul\":31046:31047   */\n      0x00\n        /* \"#utility.yul\":31038:31044   */\n      dup3\n        /* \"#utility.yul\":31034:31048   */\n      add\n        /* \"#utility.yul\":31027:31085   */\n      mstore\n        /* \"#utility.yul\":31119:31143   */\n      0x20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000\n        /* \"#utility.yul\":31114:31116   */\n      0x20\n        /* \"#utility.yul\":31106:31112   */\n      dup3\n        /* \"#utility.yul\":31102:31117   */\n      add\n        /* \"#utility.yul\":31095:31144   */\n      mstore\n        /* \"#utility.yul\":30910:31151   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31157:31327   */\n    tag_781:\n        /* \"#utility.yul\":31297:31319   */\n      0x6d6967726174653a206e6f206d69677261746f72000000000000000000000000\n        /* \"#utility.yul\":31293:31294   */\n      0x00\n        /* \"#utility.yul\":31285:31291   */\n      dup3\n        /* \"#utility.yul\":31281:31295   */\n      add\n        /* \"#utility.yul\":31274:31320   */\n      mstore\n        /* \"#utility.yul\":31157:31327   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31333:31455   */\n    tag_592:\n        /* \"#utility.yul\":31406:31430   */\n      tag_937\n        /* \"#utility.yul\":31424:31429   */\n      dup2\n        /* \"#utility.yul\":31406:31430   */\n      tag_677\n      jump\t// in\n    tag_937:\n        /* \"#utility.yul\":31399:31404   */\n      dup2\n        /* \"#utility.yul\":31396:31431   */\n      eq\n        /* \"#utility.yul\":31386:31449   */\n      tag_938\n      jumpi\n        /* \"#utility.yul\":31445:31446   */\n      0x00\n        /* \"#utility.yul\":31442:31443   */\n      dup1\n        /* \"#utility.yul\":31435:31447   */\n      revert\n        /* \"#utility.yul\":31386:31449   */\n    tag_938:\n        /* \"#utility.yul\":31333:31455   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31461:31577   */\n    tag_596:\n        /* \"#utility.yul\":31531:31552   */\n      tag_940\n        /* \"#utility.yul\":31546:31551   */\n      dup2\n        /* \"#utility.yul\":31531:31552   */\n      tag_880\n      jump\t// in\n    tag_940:\n        /* \"#utility.yul\":31524:31529   */\n      dup2\n        /* \"#utility.yul\":31521:31553   */\n      eq\n        /* \"#utility.yul\":31511:31571   */\n      tag_941\n      jumpi\n        /* \"#utility.yul\":31567:31568   */\n      0x00\n        /* \"#utility.yul\":31564:31565   */\n      dup1\n        /* \"#utility.yul\":31557:31569   */\n      revert\n        /* \"#utility.yul\":31511:31571   */\n    tag_941:\n        /* \"#utility.yul\":31461:31577   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31583:31733   */\n    tag_603:\n        /* \"#utility.yul\":31670:31708   */\n      tag_943\n        /* \"#utility.yul\":31702:31707   */\n      dup2\n        /* \"#utility.yul\":31670:31708   */\n      tag_882\n      jump\t// in\n    tag_943:\n        /* \"#utility.yul\":31663:31668   */\n      dup2\n        /* \"#utility.yul\":31660:31709   */\n      eq\n        /* \"#utility.yul\":31650:31727   */\n      tag_944\n      jumpi\n        /* \"#utility.yul\":31723:31724   */\n      0x00\n        /* \"#utility.yul\":31720:31721   */\n      dup1\n        /* \"#utility.yul\":31713:31725   */\n      revert\n        /* \"#utility.yul\":31650:31727   */\n    tag_944:\n        /* \"#utility.yul\":31583:31733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31739:31891   */\n    tag_610:\n        /* \"#utility.yul\":31827:31866   */\n      tag_946\n        /* \"#utility.yul\":31860:31865   */\n      dup2\n        /* \"#utility.yul\":31827:31866   */\n      tag_885\n      jump\t// in\n    tag_946:\n        /* \"#utility.yul\":31820:31825   */\n      dup2\n        /* \"#utility.yul\":31817:31867   */\n      eq\n        /* \"#utility.yul\":31807:31885   */\n      tag_947\n      jumpi\n        /* \"#utility.yul\":31881:31882   */\n      0x00\n        /* \"#utility.yul\":31878:31879   */\n      dup1\n        /* \"#utility.yul\":31871:31883   */\n      revert\n        /* \"#utility.yul\":31807:31885   */\n    tag_947:\n        /* \"#utility.yul\":31739:31891   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31897:32061   */\n    tag_614:\n        /* \"#utility.yul\":31991:32036   */\n      tag_949\n        /* \"#utility.yul\":32030:32035   */\n      dup2\n        /* \"#utility.yul\":31991:32036   */\n      tag_888\n      jump\t// in\n    tag_949:\n        /* \"#utility.yul\":31984:31989   */\n      dup2\n        /* \"#utility.yul\":31981:32037   */\n      eq\n        /* \"#utility.yul\":31971:32055   */\n      tag_950\n      jumpi\n        /* \"#utility.yul\":32051:32052   */\n      0x00\n        /* \"#utility.yul\":32048:32049   */\n      dup1\n        /* \"#utility.yul\":32041:32053   */\n      revert\n        /* \"#utility.yul\":31971:32055   */\n    tag_950:\n        /* \"#utility.yul\":31897:32061   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32067:32189   */\n    tag_618:\n        /* \"#utility.yul\":32140:32164   */\n      tag_952\n        /* \"#utility.yul\":32158:32163   */\n      dup2\n        /* \"#utility.yul\":32140:32164   */\n      tag_785\n      jump\t// in\n    tag_952:\n        /* \"#utility.yul\":32133:32138   */\n      dup2\n        /* \"#utility.yul\":32130:32165   */\n      eq\n        /* \"#utility.yul\":32120:32183   */\n      tag_953\n      jumpi\n        /* \"#utility.yul\":32179:32180   */\n      0x00\n        /* \"#utility.yul\":32176:32177   */\n      dup1\n        /* \"#utility.yul\":32169:32181   */\n      revert\n        /* \"#utility.yul\":32120:32183   */\n    tag_953:\n        /* \"#utility.yul\":32067:32189   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206b52a6c08afcefd74110e5339af0d515af0bfd2ad19efbf69ced67c240f8f50964736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1064": {
									"entryPoint": null,
									"id": 1064,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_836": {
									"entryPoint": null,
									"id": 836,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_806": {
									"entryPoint": 434,
									"id": 806,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_916": {
									"entryPoint": 442,
									"id": 916,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_IERC20_$286_fromMemory": {
									"entryPoint": 638,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 661,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$286t_uint256t_uint256_fromMemory": {
									"entryPoint": 684,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$286": {
									"entryPoint": 796,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 816,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 848,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 858,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$286": {
									"entryPoint": 863,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2071:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:94:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "94:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "109:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "103:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "103:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "94:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "166:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$286",
																	"nodeType": "YulIdentifier",
																	"src": "125:40:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "125:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "125:47:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$286_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "62:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "70:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "78:5:1",
														"type": ""
													}
												],
												"src": "7:171:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "247:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "257:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "272:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "266:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "266:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "257:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "315:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "288:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "288:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "288:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "225:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "233:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "241:5:1",
														"type": ""
													}
												],
												"src": "184:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "458:566:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "504:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "506:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "506:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "506:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "479:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "488:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "475:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "475:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "500:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "471:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "471:32:1"
															},
															"nodeType": "YulIf",
															"src": "468:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "597:142:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "612:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "626:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "616:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "641:88:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "701:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "697:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "697:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "721:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$286_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "651:45:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "651:78:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "641:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "749:129:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "764:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "778:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "768:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "794:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "840:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "851:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "836:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "836:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "860:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "804:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "804:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "794:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "888:129:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "903:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "917:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "907:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "933:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "979:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "990:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "975:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "975:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "999:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "943:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "943:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "933:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$286t_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "412:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "423:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "435:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "443:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "451:6:1",
														"type": ""
													}
												],
												"src": "333:691:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1070:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1080:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1096:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1090:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1090:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1080:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1063:6:1",
														"type": ""
													}
												],
												"src": "1030:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1156:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1166:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1195:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1177:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1177:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1166:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1138:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1148:7:1",
														"type": ""
													}
												],
												"src": "1111:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1272:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1282:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1311:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1293:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1282:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$286",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1254:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1264:7:1",
														"type": ""
													}
												],
												"src": "1213:110:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1374:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1384:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1399:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1406:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1395:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1395:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1384:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1356:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1366:7:1",
														"type": ""
													}
												],
												"src": "1329:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1506:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1516:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1527:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1516:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1488:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1498:7:1",
														"type": ""
													}
												],
												"src": "1461:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1633:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1650:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1653:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1643:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1643:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1643:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1544:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1756:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1773:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1776:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1766:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1766:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1766:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1667:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1847:93:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1918:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1927:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1930:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1920:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1920:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1920:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1870:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1909:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$286",
																					"nodeType": "YulIdentifier",
																					"src": "1877:31:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1877:38:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1867:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1867:49:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1860:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1860:57:1"
															},
															"nodeType": "YulIf",
															"src": "1857:77:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$286",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1840:5:1",
														"type": ""
													}
												],
												"src": "1790:150:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1989:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2046:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2055:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2058:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2048:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2048:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2048:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2012:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2037:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2019:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2019:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2009:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2009:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2002:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2002:43:1"
															},
															"nodeType": "YulIf",
															"src": "1999:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1982:5:1",
														"type": ""
													}
												],
												"src": "1946:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_contract$_IERC20_$286_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$286(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$286t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$286_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$286(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_contract$_IERC20_$286(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$286(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600160045560006008553480156200001b57600080fd5b506040516200495b3803806200495b8339818101604052810190620000419190620002ac565b6200006162000055620001b260201b60201c565b620001ba60201b60201c565b82600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816003819055508060098190555060066040518060800160405280600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016103e8815260200160095481526020016000815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015550506103e860088190555050505062000393565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200028f816200035f565b92915050565b600081519050620002a68162000379565b92915050565b600080600060608486031215620002c857620002c76200035a565b5b6000620002d8868287016200027e565b9350506020620002eb8682870162000295565b9250506040620002fe8682870162000295565b9150509250925092565b6000620003158262000330565b9050919050565b6000620003298262000308565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b6200036a816200031c565b81146200037657600080fd5b50565b620003848162000350565b81146200039057600080fd5b50565b6145b880620003a36000396000f3fe608060405234801561001057600080fd5b50600436106102275760003560e01c806361c1b724116101305780638da5cb5b116100b8578063cf35fddf1161007c578063cf35fddf14610605578063d209db8c14610621578063e2bbb15814610651578063f2fde38b1461066d578063f3239ab51461068957610227565b80638da5cb5b1461054c5780638dbb1e3a1461056a57806393f1a40b1461059a578063c11490cc146105cb578063cb3cba55146105e757610227565b806371916982116100ff57806371916982146104a45780637cd07e47146104c257806383e32135146104e05780638aa28550146104fe5780638c51793b1461051c57610227565b806361c1b72414610443578063630b5ba11461047457806364482f791461047e578063715018a61461049a57610227565b806341441d3b116101b35780634ea2813c116101825780634ea2813c146103b557806351eb05a6146103d15780635312ea8e146103ed5780635990c569146104095780635ffe61461461042757610227565b806341441d3b14610343578063441a3e701461035f578063454b06081461037b57806348cd4cb11461039757610227565b806317caf6f1116101fa57806317caf6f1146102b55780631d5fbd87146102d35780631eaaa045146102ef57806323cf31181461030b5780633df7aff31461032757610227565b8063081e3eda1461022c5780630ba33a581461024a5780631058d281146102665780631526fe2714610282575b600080fd5b6102346106b9565b6040516102419190613e51565b60405180910390f35b610264600480360381019061025f91906135ba565b6106c6565b005b610280600480360381019061027b91906136ae565b610786565b005b61029c600480360381019061029791906136ae565b610a45565b6040516102ac9493929190613bc6565b60405180910390f35b6102bd610aa5565b6040516102ca9190613e51565b60405180910390f35b6102ed60048036038101906102e8919061379b565b610aab565b005b61030960048036038101906103049190613748565b610f3f565b005b61032560048036038101906103209190613681565b6110cc565b005b610341600480360381019061033c91906136ae565b61118c565b005b61035d600480360381019061035891906136ae565b611212565b005b6103796004803603810190610374919061379b565b61149a565b005b610395600480360381019061039091906136ae565b611791565b005b61039f611b11565b6040516103ac9190613e51565b60405180910390f35b6103cf60048036038101906103ca9190613641565b611b17565b005b6103eb60048036038101906103e691906136ae565b611c40565b005b610407600480360381019061040291906136ae565b611dee565b005b610411611f27565b60405161041e9190613e51565b60405180910390f35b610441600480360381019061043c91906136ae565b611f2d565b005b61045d600480360381019061045891906136ae565b611fb3565b60405161046b929190613c0b565b60405180910390f35b61047c612007565b005b610498600480360381019061049391906137db565b61203a565b005b6104a2612146565b005b6104ac6121ce565b6040516104b99190613b07565b60405180910390f35b6104ca6121f4565b6040516104d79190613c34565b60405180910390f35b6104e861221a565b6040516104f59190613b07565b60405180910390f35b610506612240565b6040516105139190613e51565b60405180910390f35b610536600480360381019061053191906135ba565b612246565b6040516105439190613e51565b60405180910390f35b61055461228f565b6040516105619190613b07565b60405180910390f35b610584600480360381019061057f919061379b565b6122b8565b6040516105919190613e51565b60405180910390f35b6105b460048036038101906105af9190613708565b6122e9565b6040516105c2929190613e6c565b60405180910390f35b6105e560048036038101906105e0919061379b565b61231a565b005b6105ef6123c4565b6040516105fc9190613bab565b60405180910390f35b61061f600480360381019061061a9190613708565b6123ea565b005b61063b600480360381019061063691906135ba565b61270f565b6040516106489190613e51565b60405180910390f35b61066b6004803603810190610666919061379b565b612727565b005b610687600480360381019061068291906135ba565b6129e7565b005b6106a3600480360381019061069e9190613708565b612adf565b6040516106b09190613e51565b60405180910390f35b6000600680549050905090565b6106ce612d13565b73ffffffffffffffffffffffffffffffffffffffff166106ec61228f565b73ffffffffffffffffffffffffffffffffffffffff1614610742576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073990613d51565b60405180910390fd5b80600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600660008154811061079d5761079c61418e565b5b9060005260206000209060040201905060006007600080815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508281600001541015610848576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083f90613db1565b60405180910390fd5b6108526000611c40565b600061089c826001015461088e64e8d4a5100061088087600301548760000154612d1b90919063ffffffff16565b612d9690919063ffffffff16565b612de090919063ffffffff16565b9050600081111561093d576108f981600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612e2a90919063ffffffff16565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b60008411156109b55761095d848360000154612de090919063ffffffff16565b82600001819055506109b433858560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612e889092919063ffffffff16565b5b6109e764e8d4a510006109d985600301548560000154612d1b90919063ffffffff16565b612d9690919063ffffffff16565b826001018190555060003373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b56886604051610a379190613e51565b60405180910390a350505050565b60068181548110610a5557600080fd5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154905084565b60085481565b600060068281548110610ac157610ac061418e565b5b9060005260206000209060040201905060006007600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008260030154905060008360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610b8d9190613b07565b60206040518083038186803b158015610ba557600080fd5b505afa158015610bb9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bdd91906136db565b9050836002015443118015610bf3575060008114155b15610c8e576000610c088560020154436122b8565b90506000610c4b600854610c3d8860010154610c2f60035487612d1b90919063ffffffff16565b612d1b90919063ffffffff16565b612d9690919063ffffffff16565b9050610c89610c7a84610c6c64e8d4a5100085612d1b90919063ffffffff16565b612d9690919063ffffffff16565b85612e2a90919063ffffffff16565b935050505b6000610cd48460010154610cc664e8d4a51000610cb8878960000154612d1b90919063ffffffff16565b612d9690919063ffffffff16565b612de090919063ffffffff16565b9050600060018881548110610cec57610ceb61418e565b5b906000526020600020906002020190506000610d50600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205484612e2a90919063ffffffff16565b90508160010154811115610d87576000881415610d7257610d716000610786565b5b60008814610d8657610d8588600061149a565b5b5b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826001015410610e0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0390613c91565b60405180910390fd5b610e628260010154600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612de090919063ffffffff16565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166317e5883c336040518263ffffffff1660e01b8152600401610f029190613b07565b600060405180830381600087803b158015610f1c57600080fd5b505af1158015610f30573d6000803e3d6000fd5b50505050505050505050505050565b610f47612d13565b73ffffffffffffffffffffffffffffffffffffffff16610f6561228f565b73ffffffffffffffffffffffffffffffffffffffff1614610fbb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb290613d51565b60405180910390fd5b8015610fca57610fc9612007565b5b60006009544311610fdd57600954610fdf565b435b9050610ff684600854612e2a90919063ffffffff16565b600881905550600660405180608001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018381526020016000815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030155505050505050565b6110d4612d13565b73ffffffffffffffffffffffffffffffffffffffff166110f261228f565b73ffffffffffffffffffffffffffffffffffffffff1614611148576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113f90613d51565b60405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b611194612d13565b73ffffffffffffffffffffffffffffffffffffffff166111b261228f565b73ffffffffffffffffffffffffffffffffffffffff1614611208576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111ff90613d51565b60405180910390fd5b8060038190555050565b600060066000815481106112295761122861418e565b5b9060005260206000209060040201905060006007600080815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506112976000611c40565b6000816000015411156113915760006112ee82600101546112e064e8d4a510006112d287600301548760000154612d1b90919063ffffffff16565b612d9690919063ffffffff16565b612de090919063ffffffff16565b9050600081111561138f5761134b81600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612e2a90919063ffffffff16565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b505b600083111561140b576113eb3330858560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612f0e909392919063ffffffff16565b611402838260000154612e2a90919063ffffffff16565b81600001819055505b61143d64e8d4a5100061142f84600301548460000154612d1b90919063ffffffff16565b612d9690919063ffffffff16565b816001018190555060003373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a158560405161148d9190613e51565b60405180910390a3505050565b60008214156114de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114d590613cb1565b60405180910390fd5b6000600683815481106114f4576114f361418e565b5b9060005260206000209060040201905060006007600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050828160000154101561159f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161159690613db1565b60405180910390fd5b6115a884611c40565b60006115f282600101546115e464e8d4a510006115d687600301548760000154612d1b90919063ffffffff16565b612d9690919063ffffffff16565b612de090919063ffffffff16565b905060008111156116935761164f81600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612e2a90919063ffffffff16565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6116aa848360000154612de090919063ffffffff16565b82600001819055506116e464e8d4a510006116d685600301548560000154612d1b90919063ffffffff16565b612d9690919063ffffffff16565b826001018190555061173b33858560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612e889092919063ffffffff16565b843373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568866040516117829190613e51565b60405180910390a35050505050565b600073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611823576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161181a90613e31565b60405180910390fd5b6000600682815481106118395761183861418e565b5b9060005260206000209060040201905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016118ad9190613b07565b60206040518083038186803b1580156118c557600080fd5b505afa1580156118d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118fd91906136db565b905061194c600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828473ffffffffffffffffffffffffffffffffffffffff16612f979092919063ffffffff16565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ce5494bb846040518263ffffffff1660e01b81526004016119a99190613bab565b602060405180830381600087803b1580156119c357600080fd5b505af11580156119d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119fb9190613614565b90508073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611a369190613b07565b60206040518083038186803b158015611a4e57600080fd5b505afa158015611a62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a8691906136db565b8214611ac7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611abe90613df1565b60405180910390fd5b808460000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b60095481565b611b1f612d13565b73ffffffffffffffffffffffffffffffffffffffff16611b3d61228f565b73ffffffffffffffffffffffffffffffffffffffff1614611b93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b8a90613d51565b60405180910390fd5b600160405180604001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550505050565b600060068281548110611c5657611c5561418e565b5b9060005260206000209060040201905080600201544311611c775750611deb565b60008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611cd69190613b07565b60206040518083038186803b158015611cee57600080fd5b505afa158015611d02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d2691906136db565b905060008111611d40574382600201819055505050611deb565b6000611d508360020154436122b8565b90506000611d93600854611d858660010154611d7760035487612d1b90919063ffffffff16565b612d1b90919063ffffffff16565b612d9690919063ffffffff16565b9050611dd5611dc284611db464e8d4a5100085612d1b90919063ffffffff16565b612d9690919063ffffffff16565b8560030154612e2a90919063ffffffff16565b8460030181905550438460020181905550505050505b50565b600060068281548110611e0457611e0361418e565b5b9060005260206000209060040201905060006007600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050611ebb3382600001548460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612e889092919063ffffffff16565b823373ffffffffffffffffffffffffffffffffffffffff167fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05958360000154604051611f069190613e51565b60405180910390a36000816000018190555060008160010181905550505050565b60035481565b611f35612d13565b73ffffffffffffffffffffffffffffffffffffffff16611f5361228f565b73ffffffffffffffffffffffffffffffffffffffff1614611fa9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fa090613d51565b60405180910390fd5b8060048190555050565b60018181548110611fc357600080fd5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b6000600680549050905060005b818110156120365761202581611c40565b8061202f906140e7565b9050612014565b5050565b612042612d13565b73ffffffffffffffffffffffffffffffffffffffff1661206061228f565b73ffffffffffffffffffffffffffffffffffffffff16146120b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120ad90613d51565b60405180910390fd5b80156120c5576120c4612007565b5b61211182612103600686815481106120e0576120df61418e565b5b906000526020600020906004020160010154600854612de090919063ffffffff16565b612e2a90919063ffffffff16565b600881905550816006848154811061212c5761212b61418e565b5b906000526020600020906004020160010181905550505050565b61214e612d13565b73ffffffffffffffffffffffffffffffffffffffff1661216c61228f565b73ffffffffffffffffffffffffffffffffffffffff16146121c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121b990613d51565b60405180910390fd5b6121cc60006130f5565b565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b6000600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006122e16004546122d38585612de090919063ffffffff16565b612d1b90919063ffffffff16565b905092915050565b6007602052816000526040600020602052806000526040600020600091509150508060000154908060010154905082565b612322612d13565b73ffffffffffffffffffffffffffffffffffffffff1661234061228f565b73ffffffffffffffffffffffffffffffffffffffff1614612396576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161238d90613d51565b60405180910390fd5b80600183815481106123ab576123aa61418e565b5b9060005260206000209060020201600101819055505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480612447575060006001115b612486576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161247d90613d71565b60405180910390fd5b6000600660008154811061249d5761249c61418e565b5b9060005260206000209060040201905060006007600080815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905061250b6000611c40565b600081600001541115612605576000612562826001015461255464e8d4a5100061254687600301548760000154612d1b90919063ffffffff16565b612d9690919063ffffffff16565b612de090919063ffffffff16565b90506000811115612603576125bf81600c60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612e2a90919063ffffffff16565b600c60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b505b600084111561267f5761265f3330868560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612f0e909392919063ffffffff16565b612676848260000154612e2a90919063ffffffff16565b81600001819055505b6126b164e8d4a510006126a384600301548460000154612d1b90919063ffffffff16565b612d9690919063ffffffff16565b816001018190555060008373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15866040516127019190613e51565b60405180910390a350505050565b600c6020528060005260406000206000915090505481565b600082141561276b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161276290613d11565b60405180910390fd5b6000600683815481106127815761278061418e565b5b9060005260206000209060040201905060006007600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506127ee84611c40565b6000816000015411156128e8576000612845826001015461283764e8d4a5100061282987600301548760000154612d1b90919063ffffffff16565b612d9690919063ffffffff16565b612de090919063ffffffff16565b905060008111156128e6576128a281600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612e2a90919063ffffffff16565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b505b6129393330858560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612f0e909392919063ffffffff16565b612950838260000154612e2a90919063ffffffff16565b816000018190555061298a64e8d4a5100061297c84600301548460000154612d1b90919063ffffffff16565b612d9690919063ffffffff16565b8160010181905550833373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15856040516129d99190613e51565b60405180910390a350505050565b6129ef612d13565b73ffffffffffffffffffffffffffffffffffffffff16612a0d61228f565b73ffffffffffffffffffffffffffffffffffffffff1614612a63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a5a90613d51565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612ad3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612aca90613c71565b60405180910390fd5b612adc816130f5565b50565b60008060068481548110612af657612af561418e565b5b9060005260206000209060040201905060006007600086815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008260030154905060008360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401612bc29190613b07565b60206040518083038186803b158015612bda57600080fd5b505afa158015612bee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c1291906136db565b9050836002015443118015612c28575060008114155b15612cc3576000612c3d8560020154436122b8565b90506000612c80600854612c728860010154612c6460035487612d1b90919063ffffffff16565b612d1b90919063ffffffff16565b612d9690919063ffffffff16565b9050612cbe612caf84612ca164e8d4a5100085612d1b90919063ffffffff16565b612d9690919063ffffffff16565b85612e2a90919063ffffffff16565b935050505b612d078360010154612cf964e8d4a51000612ceb868860000154612d1b90919063ffffffff16565b612d9690919063ffffffff16565b612de090919063ffffffff16565b94505050505092915050565b600033905090565b600080831415612d2e5760009050612d90565b60008284612d3c9190613f4e565b9050828482612d4b9190613f1d565b14612d8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d8290613d31565b60405180910390fd5b809150505b92915050565b6000612dd883836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506131b9565b905092915050565b6000612e2283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061321c565b905092915050565b6000808284612e399190613ec7565b905083811015612e7e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612e7590613cd1565b60405180910390fd5b8091505092915050565b612f098363a9059cbb60e01b8484604051602401612ea7929190613b82565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050613280565b505050565b612f91846323b872dd60e01b858585604051602401612f2f93929190613b4b565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050613280565b50505050565b6000811480613030575060008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b8152600401612fde929190613b22565b60206040518083038186803b158015612ff657600080fd5b505afa15801561300a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061302e91906136db565b145b61306f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161306690613e11565b60405180910390fd5b6130f08363095ea7b360e01b848460405160240161308e929190613b82565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050613280565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008083118290613200576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016131f79190613c4f565b60405180910390fd5b506000838561320f9190613f1d565b9050809150509392505050565b6000838311158290613264576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161325b9190613c4f565b60405180910390fd5b50600083856132739190613fa8565b9050809150509392505050565b60006132e2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166133479092919063ffffffff16565b9050600081511115613342578080602001905181019061330291906135e7565b613341576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161333890613dd1565b60405180910390fd5b5b505050565b6060613356848460008561335f565b90509392505050565b6060824710156133a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161339b90613cf1565b60405180910390fd5b6133ad85613473565b6133ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016133e390613d91565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516134159190613af0565b60006040518083038185875af1925050503d8060008114613452576040519150601f19603f3d011682016040523d82523d6000602084013e613457565b606091505b5091509150613467828286613496565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b606083156134a6578290506134f6565b6000835111156134b95782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016134ed9190613c4f565b60405180910390fd5b9392505050565b60008135905061350c816144f8565b92915050565b6000813590506135218161450f565b92915050565b6000815190506135368161450f565b92915050565b60008135905061354b81614526565b92915050565b60008151905061356081614526565b92915050565b6000813590506135758161453d565b92915050565b60008135905061358a81614554565b92915050565b60008135905061359f8161456b565b92915050565b6000815190506135b48161456b565b92915050565b6000602082840312156135d0576135cf6141bd565b5b60006135de848285016134fd565b91505092915050565b6000602082840312156135fd576135fc6141bd565b5b600061360b84828501613527565b91505092915050565b60006020828403121561362a576136296141bd565b5b600061363884828501613551565b91505092915050565b60008060408385031215613658576136576141bd565b5b600061366685828601613566565b925050602061367785828601613590565b9150509250929050565b600060208284031215613697576136966141bd565b5b60006136a58482850161357b565b91505092915050565b6000602082840312156136c4576136c36141bd565b5b60006136d284828501613590565b91505092915050565b6000602082840312156136f1576136f06141bd565b5b60006136ff848285016135a5565b91505092915050565b6000806040838503121561371f5761371e6141bd565b5b600061372d85828601613590565b925050602061373e858286016134fd565b9150509250929050565b600080600060608486031215613761576137606141bd565b5b600061376f86828701613590565b93505060206137808682870161353c565b925050604061379186828701613512565b9150509250925092565b600080604083850312156137b2576137b16141bd565b5b60006137c085828601613590565b92505060206137d185828601613590565b9150509250929050565b6000806000606084860312156137f4576137f36141bd565b5b600061380286828701613590565b935050602061381386828701613590565b925050604061382486828701613512565b9150509250925092565b61383781613fdc565b82525050565b600061384882613e95565b6138528185613eab565b93506138628185602086016140b4565b80840191505092915050565b6138778161405a565b82525050565b6138868161406c565b82525050565b6138958161407e565b82525050565b60006138a682613ea0565b6138b08185613eb6565b93506138c08185602086016140b4565b6138c9816141c2565b840191505092915050565b60006138e1602683613eb6565b91506138ec826141d3565b604082019050919050565b6000613904601383613eb6565b915061390f82614222565b602082019050919050565b6000613927601b83613eb6565b91506139328261424b565b602082019050919050565b600061394a601b83613eb6565b915061395582614274565b602082019050919050565b600061396d602683613eb6565b91506139788261429d565b604082019050919050565b6000613990601883613eb6565b915061399b826142ec565b602082019050919050565b60006139b3602183613eb6565b91506139be82614315565b604082019050919050565b60006139d6602083613eb6565b91506139e182614364565b602082019050919050565b60006139f9601483613eb6565b9150613a048261438d565b602082019050919050565b6000613a1c601d83613eb6565b9150613a27826143b6565b602082019050919050565b6000613a3f601283613eb6565b9150613a4a826143df565b602082019050919050565b6000613a62602a83613eb6565b9150613a6d82614408565b604082019050919050565b6000613a85600c83613eb6565b9150613a9082614457565b602082019050919050565b6000613aa8603683613eb6565b9150613ab382614480565b604082019050919050565b6000613acb601483613eb6565b9150613ad6826144cf565b602082019050919050565b613aea81614050565b82525050565b6000613afc828461383d565b915081905092915050565b6000602082019050613b1c600083018461382e565b92915050565b6000604082019050613b37600083018561382e565b613b44602083018461382e565b9392505050565b6000606082019050613b60600083018661382e565b613b6d602083018561382e565b613b7a6040830184613ae1565b949350505050565b6000604082019050613b97600083018561382e565b613ba46020830184613ae1565b9392505050565b6000602082019050613bc0600083018461386e565b92915050565b6000608082019050613bdb600083018761386e565b613be86020830186613ae1565b613bf56040830185613ae1565b613c026060830184613ae1565b95945050505050565b6000604082019050613c20600083018561387d565b613c2d6020830184613ae1565b9392505050565b6000602082019050613c49600083018461388c565b92915050565b60006020820190508181036000830152613c69818461389b565b905092915050565b60006020820190508181036000830152613c8a816138d4565b9050919050565b60006020820190508181036000830152613caa816138f7565b9050919050565b60006020820190508181036000830152613cca8161391a565b9050919050565b60006020820190508181036000830152613cea8161393d565b9050919050565b60006020820190508181036000830152613d0a81613960565b9050919050565b60006020820190508181036000830152613d2a81613983565b9050919050565b60006020820190508181036000830152613d4a816139a6565b9050919050565b60006020820190508181036000830152613d6a816139c9565b9050919050565b60006020820190508181036000830152613d8a816139ec565b9050919050565b60006020820190508181036000830152613daa81613a0f565b9050919050565b60006020820190508181036000830152613dca81613a32565b9050919050565b60006020820190508181036000830152613dea81613a55565b9050919050565b60006020820190508181036000830152613e0a81613a78565b9050919050565b60006020820190508181036000830152613e2a81613a9b565b9050919050565b60006020820190508181036000830152613e4a81613abe565b9050919050565b6000602082019050613e666000830184613ae1565b92915050565b6000604082019050613e816000830185613ae1565b613e8e6020830184613ae1565b9392505050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000613ed282614050565b9150613edd83614050565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613f1257613f11614130565b5b828201905092915050565b6000613f2882614050565b9150613f3383614050565b925082613f4357613f4261415f565b5b828204905092915050565b6000613f5982614050565b9150613f6483614050565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613f9d57613f9c614130565b5b828202905092915050565b6000613fb382614050565b9150613fbe83614050565b925082821015613fd157613fd0614130565b5b828203905092915050565b6000613fe782614030565b9050919050565b60008115159050919050565b600061400582613fdc565b9050919050565b600061401782613fdc565b9050919050565b600061402982613fdc565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061406582614090565b9050919050565b600061407782614090565b9050919050565b600061408982614090565b9050919050565b600061409b826140a2565b9050919050565b60006140ad82614030565b9050919050565b60005b838110156140d25780820151818401526020810190506140b7565b838111156140e1576000848401525b50505050565b60006140f282614050565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561412557614124614130565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f506f776572206973206e6f7420656e6f75676800000000000000000000000000600082015250565b7f776974686472617720506f77657220627920756e7374616b696e670000000000600082015250565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f6465706f73697420506f776572206279207374616b696e670000000000000000600082015250565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f43616c6c6572206973206e6f742066616d696c79000000000000000000000000600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f77697468647261773a206e6f7420676f6f640000000000000000000000000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f6d6967726174653a206261640000000000000000000000000000000000000000600082015250565b7f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60008201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000602082015250565b7f6d6967726174653a206e6f206d69677261746f72000000000000000000000000600082015250565b61450181613fdc565b811461450c57600080fd5b50565b61451881613fee565b811461452357600080fd5b50565b61452f81613ffa565b811461453a57600080fd5b50565b6145468161400c565b811461455157600080fd5b50565b61455d8161401e565b811461456857600080fd5b50565b61457481614050565b811461457f57600080fd5b5056fea26469706673582212206b52a6c08afcefd74110e5339af0d515af0bfd2ad19efbf69ced67c240f8f50964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x4 SSTORE PUSH1 0x0 PUSH1 0x8 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x495B CODESIZE SUB DUP1 PUSH3 0x495B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x41 SWAP2 SWAP1 PUSH3 0x2AC JUMP JUMPDEST PUSH3 0x61 PUSH3 0x55 PUSH3 0x1B2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1BA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP3 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3E8 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE POP POP PUSH2 0x3E8 PUSH1 0x8 DUP2 SWAP1 SSTORE POP POP POP POP PUSH3 0x393 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x28F DUP2 PUSH3 0x35F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2A6 DUP2 PUSH3 0x379 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x2C8 JUMPI PUSH3 0x2C7 PUSH3 0x35A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2D8 DUP7 DUP3 DUP8 ADD PUSH3 0x27E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x2EB DUP7 DUP3 DUP8 ADD PUSH3 0x295 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x2FE DUP7 DUP3 DUP8 ADD PUSH3 0x295 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x315 DUP3 PUSH3 0x330 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x329 DUP3 PUSH3 0x308 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x36A DUP2 PUSH3 0x31C JUMP JUMPDEST DUP2 EQ PUSH3 0x376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x384 DUP2 PUSH3 0x350 JUMP JUMPDEST DUP2 EQ PUSH3 0x390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x45B8 DUP1 PUSH3 0x3A3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x227 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x61C1B724 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xCF35FDDF GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xCF35FDDF EQ PUSH2 0x605 JUMPI DUP1 PUSH4 0xD209DB8C EQ PUSH2 0x621 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x651 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x66D JUMPI DUP1 PUSH4 0xF3239AB5 EQ PUSH2 0x689 JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x54C JUMPI DUP1 PUSH4 0x8DBB1E3A EQ PUSH2 0x56A JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x59A JUMPI DUP1 PUSH4 0xC11490CC EQ PUSH2 0x5CB JUMPI DUP1 PUSH4 0xCB3CBA55 EQ PUSH2 0x5E7 JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x71916982 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x71916982 EQ PUSH2 0x4A4 JUMPI DUP1 PUSH4 0x7CD07E47 EQ PUSH2 0x4C2 JUMPI DUP1 PUSH4 0x83E32135 EQ PUSH2 0x4E0 JUMPI DUP1 PUSH4 0x8AA28550 EQ PUSH2 0x4FE JUMPI DUP1 PUSH4 0x8C51793B EQ PUSH2 0x51C JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x61C1B724 EQ PUSH2 0x443 JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x474 JUMPI DUP1 PUSH4 0x64482F79 EQ PUSH2 0x47E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x49A JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x41441D3B GT PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x4EA2813C GT PUSH2 0x182 JUMPI DUP1 PUSH4 0x4EA2813C EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x3D1 JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0x5990C569 EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0x5FFE6146 EQ PUSH2 0x427 JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x41441D3B EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0x454B0608 EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x397 JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x17CAF6F1 GT PUSH2 0x1FA JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x1D5FBD87 EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x1EAAA045 EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0x23CF3118 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x3DF7AFF3 EQ PUSH2 0x327 JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0xBA33A58 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x1058D281 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x282 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x234 PUSH2 0x6B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x3E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x264 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x35BA JUMP JUMPDEST PUSH2 0x6C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x280 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x36AE JUMP JUMPDEST PUSH2 0x786 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x36AE JUMP JUMPDEST PUSH2 0xA45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AC SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3BC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BD PUSH2 0xAA5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x3E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x379B JUMP JUMPDEST PUSH2 0xAAB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x309 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x3748 JUMP JUMPDEST PUSH2 0xF3F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x325 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x3681 JUMP JUMPDEST PUSH2 0x10CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x341 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x36AE JUMP JUMPDEST PUSH2 0x118C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x36AE JUMP JUMPDEST PUSH2 0x1212 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x379 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x374 SWAP2 SWAP1 PUSH2 0x379B JUMP JUMPDEST PUSH2 0x149A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x395 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x390 SWAP2 SWAP1 PUSH2 0x36AE JUMP JUMPDEST PUSH2 0x1791 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39F PUSH2 0x1B11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AC SWAP2 SWAP1 PUSH2 0x3E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CA SWAP2 SWAP1 PUSH2 0x3641 JUMP JUMPDEST PUSH2 0x1B17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E6 SWAP2 SWAP1 PUSH2 0x36AE JUMP JUMPDEST PUSH2 0x1C40 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x407 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x36AE JUMP JUMPDEST PUSH2 0x1DEE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x411 PUSH2 0x1F27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41E SWAP2 SWAP1 PUSH2 0x3E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x441 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43C SWAP2 SWAP1 PUSH2 0x36AE JUMP JUMPDEST PUSH2 0x1F2D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x45D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x458 SWAP2 SWAP1 PUSH2 0x36AE JUMP JUMPDEST PUSH2 0x1FB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46B SWAP3 SWAP2 SWAP1 PUSH2 0x3C0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47C PUSH2 0x2007 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x498 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x493 SWAP2 SWAP1 PUSH2 0x37DB JUMP JUMPDEST PUSH2 0x203A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A2 PUSH2 0x2146 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4AC PUSH2 0x21CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B9 SWAP2 SWAP1 PUSH2 0x3B07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4CA PUSH2 0x21F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D7 SWAP2 SWAP1 PUSH2 0x3C34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E8 PUSH2 0x221A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F5 SWAP2 SWAP1 PUSH2 0x3B07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x506 PUSH2 0x2240 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x513 SWAP2 SWAP1 PUSH2 0x3E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x536 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x531 SWAP2 SWAP1 PUSH2 0x35BA JUMP JUMPDEST PUSH2 0x2246 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x543 SWAP2 SWAP1 PUSH2 0x3E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x554 PUSH2 0x228F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x561 SWAP2 SWAP1 PUSH2 0x3B07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x584 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x57F SWAP2 SWAP1 PUSH2 0x379B JUMP JUMPDEST PUSH2 0x22B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x591 SWAP2 SWAP1 PUSH2 0x3E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5AF SWAP2 SWAP1 PUSH2 0x3708 JUMP JUMPDEST PUSH2 0x22E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C2 SWAP3 SWAP2 SWAP1 PUSH2 0x3E6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5E0 SWAP2 SWAP1 PUSH2 0x379B JUMP JUMPDEST PUSH2 0x231A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5EF PUSH2 0x23C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5FC SWAP2 SWAP1 PUSH2 0x3BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x61A SWAP2 SWAP1 PUSH2 0x3708 JUMP JUMPDEST PUSH2 0x23EA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x63B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x636 SWAP2 SWAP1 PUSH2 0x35BA JUMP JUMPDEST PUSH2 0x270F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x648 SWAP2 SWAP1 PUSH2 0x3E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x66B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x666 SWAP2 SWAP1 PUSH2 0x379B JUMP JUMPDEST PUSH2 0x2727 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x687 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x682 SWAP2 SWAP1 PUSH2 0x35BA JUMP JUMPDEST PUSH2 0x29E7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x69E SWAP2 SWAP1 PUSH2 0x3708 JUMP JUMPDEST PUSH2 0x2ADF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B0 SWAP2 SWAP1 PUSH2 0x3E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6CE PUSH2 0x2D13 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6EC PUSH2 0x228F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x742 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x739 SWAP1 PUSH2 0x3D51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x79D JUMPI PUSH2 0x79C PUSH2 0x418E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP3 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x848 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83F SWAP1 PUSH2 0x3DB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x852 PUSH1 0x0 PUSH2 0x1C40 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x89C DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x88E PUSH5 0xE8D4A51000 PUSH2 0x880 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2D1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D96 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2DE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x93D JUMPI PUSH2 0x8F9 DUP2 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2E2A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP5 GT ISZERO PUSH2 0x9B5 JUMPI PUSH2 0x95D DUP5 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x2DE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x9B4 CALLER DUP6 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2E88 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH2 0x9E7 PUSH5 0xE8D4A51000 PUSH2 0x9D9 DUP6 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x2D1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D96 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP7 PUSH1 0x40 MLOAD PUSH2 0xA37 SWAP2 SWAP1 PUSH2 0x3E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xAC1 JUMPI PUSH2 0xAC0 PUSH2 0x418E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB8D SWAP2 SWAP1 PUSH2 0x3B07 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBB9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBDD SWAP2 SWAP1 PUSH2 0x36DB JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD NUMBER GT DUP1 ISZERO PUSH2 0xBF3 JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0xC8E JUMPI PUSH1 0x0 PUSH2 0xC08 DUP6 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x22B8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC4B PUSH1 0x8 SLOAD PUSH2 0xC3D DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0xC2F PUSH1 0x3 SLOAD DUP8 PUSH2 0x2D1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D96 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC89 PUSH2 0xC7A DUP5 PUSH2 0xC6C PUSH5 0xE8D4A51000 DUP6 PUSH2 0x2D1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D96 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x2E2A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH1 0x0 PUSH2 0xCD4 DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0xCC6 PUSH5 0xE8D4A51000 PUSH2 0xCB8 DUP8 DUP10 PUSH1 0x0 ADD SLOAD PUSH2 0x2D1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D96 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2DE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0xCEC JUMPI PUSH2 0xCEB PUSH2 0x418E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP PUSH1 0x0 PUSH2 0xD50 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP5 PUSH2 0x2E2A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 ADD SLOAD DUP2 GT ISZERO PUSH2 0xD87 JUMPI PUSH1 0x0 DUP9 EQ ISZERO PUSH2 0xD72 JUMPI PUSH2 0xD71 PUSH1 0x0 PUSH2 0x786 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP9 EQ PUSH2 0xD86 JUMPI PUSH2 0xD85 DUP9 PUSH1 0x0 PUSH2 0x149A JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH1 0x1 ADD SLOAD LT PUSH2 0xE0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE03 SWAP1 PUSH2 0x3C91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE62 DUP3 PUSH1 0x1 ADD SLOAD PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2DE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x17E5883C CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF02 SWAP2 SWAP1 PUSH2 0x3B07 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF30 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF47 PUSH2 0x2D13 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF65 PUSH2 0x228F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFBB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB2 SWAP1 PUSH2 0x3D51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0xFCA JUMPI PUSH2 0xFC9 PUSH2 0x2007 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD NUMBER GT PUSH2 0xFDD JUMPI PUSH1 0x9 SLOAD PUSH2 0xFDF JUMP JUMPDEST NUMBER JUMPDEST SWAP1 POP PUSH2 0xFF6 DUP5 PUSH1 0x8 SLOAD PUSH2 0x2E2A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x10D4 PUSH2 0x2D13 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10F2 PUSH2 0x228F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1148 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x113F SWAP1 PUSH2 0x3D51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1194 PUSH2 0x2D13 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11B2 PUSH2 0x228F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1208 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11FF SWAP1 PUSH2 0x3D51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x1229 JUMPI PUSH2 0x1228 PUSH2 0x418E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1297 PUSH1 0x0 PUSH2 0x1C40 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x1391 JUMPI PUSH1 0x0 PUSH2 0x12EE DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x12E0 PUSH5 0xE8D4A51000 PUSH2 0x12D2 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2D1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D96 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2DE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x138F JUMPI PUSH2 0x134B DUP2 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2E2A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x140B JUMPI PUSH2 0x13EB CALLER ADDRESS DUP6 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2F0E SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1402 DUP4 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x2E2A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x143D PUSH5 0xE8D4A51000 PUSH2 0x142F DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x2D1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D96 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP6 PUSH1 0x40 MLOAD PUSH2 0x148D SWAP2 SWAP1 PUSH2 0x3E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x14DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D5 SWAP1 PUSH2 0x3CB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x14F4 JUMPI PUSH2 0x14F3 PUSH2 0x418E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP3 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x159F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1596 SWAP1 PUSH2 0x3DB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15A8 DUP5 PUSH2 0x1C40 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15F2 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x15E4 PUSH5 0xE8D4A51000 PUSH2 0x15D6 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2D1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D96 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2DE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1693 JUMPI PUSH2 0x164F DUP2 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2E2A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x16AA DUP5 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x2DE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x16E4 PUSH5 0xE8D4A51000 PUSH2 0x16D6 DUP6 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x2D1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D96 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x173B CALLER DUP6 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2E88 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1782 SWAP2 SWAP1 PUSH2 0x3E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1823 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x181A SWAP1 PUSH2 0x3E31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1839 JUMPI PUSH2 0x1838 PUSH2 0x418E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18AD SWAP2 SWAP1 PUSH2 0x3B07 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18FD SWAP2 SWAP1 PUSH2 0x36DB JUMP JUMPDEST SWAP1 POP PUSH2 0x194C PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2F97 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCE5494BB DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19A9 SWAP2 SWAP1 PUSH2 0x3BAB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x19D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19FB SWAP2 SWAP1 PUSH2 0x3614 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A36 SWAP2 SWAP1 PUSH2 0x3B07 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A62 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A86 SWAP2 SWAP1 PUSH2 0x36DB JUMP JUMPDEST DUP3 EQ PUSH2 0x1AC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ABE SWAP1 PUSH2 0x3DF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP5 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1B1F PUSH2 0x2D13 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B3D PUSH2 0x228F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B93 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B8A SWAP1 PUSH2 0x3D51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1C56 JUMPI PUSH2 0x1C55 PUSH2 0x418E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD NUMBER GT PUSH2 0x1C77 JUMPI POP PUSH2 0x1DEB JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CD6 SWAP2 SWAP1 PUSH2 0x3B07 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D02 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D26 SWAP2 SWAP1 PUSH2 0x36DB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x1D40 JUMPI NUMBER DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x1DEB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D50 DUP4 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x22B8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1D93 PUSH1 0x8 SLOAD PUSH2 0x1D85 DUP7 PUSH1 0x1 ADD SLOAD PUSH2 0x1D77 PUSH1 0x3 SLOAD DUP8 PUSH2 0x2D1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D96 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1DD5 PUSH2 0x1DC2 DUP5 PUSH2 0x1DB4 PUSH5 0xE8D4A51000 DUP6 PUSH2 0x2D1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D96 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH1 0x3 ADD SLOAD PUSH2 0x2E2A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP NUMBER DUP5 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1E04 JUMPI PUSH2 0x1E03 PUSH2 0x418E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1EBB CALLER DUP3 PUSH1 0x0 ADD SLOAD DUP5 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2E88 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 DUP4 PUSH1 0x0 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x1F06 SWAP2 SWAP1 PUSH2 0x3E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1F35 PUSH2 0x2D13 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F53 PUSH2 0x228F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1FA9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FA0 SWAP1 PUSH2 0x3D51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1FC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2036 JUMPI PUSH2 0x2025 DUP2 PUSH2 0x1C40 JUMP JUMPDEST DUP1 PUSH2 0x202F SWAP1 PUSH2 0x40E7 JUMP JUMPDEST SWAP1 POP PUSH2 0x2014 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2042 PUSH2 0x2D13 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2060 PUSH2 0x228F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x20B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20AD SWAP1 PUSH2 0x3D51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x20C5 JUMPI PUSH2 0x20C4 PUSH2 0x2007 JUMP JUMPDEST JUMPDEST PUSH2 0x2111 DUP3 PUSH2 0x2103 PUSH1 0x6 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x20E0 JUMPI PUSH2 0x20DF PUSH2 0x418E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x8 SLOAD PUSH2 0x2DE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2E2A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x212C JUMPI PUSH2 0x212B PUSH2 0x418E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x214E PUSH2 0x2D13 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x216C PUSH2 0x228F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x21C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21B9 SWAP1 PUSH2 0x3D51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x21CC PUSH1 0x0 PUSH2 0x30F5 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22E1 PUSH1 0x4 SLOAD PUSH2 0x22D3 DUP6 DUP6 PUSH2 0x2DE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0x2322 PUSH2 0x2D13 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2340 PUSH2 0x228F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2396 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x238D SWAP1 PUSH2 0x3D51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x23AB JUMPI PUSH2 0x23AA PUSH2 0x418E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x2447 JUMPI POP PUSH1 0x0 PUSH1 0x1 GT JUMPDEST PUSH2 0x2486 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x247D SWAP1 PUSH2 0x3D71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x249D JUMPI PUSH2 0x249C PUSH2 0x418E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x250B PUSH1 0x0 PUSH2 0x1C40 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x2605 JUMPI PUSH1 0x0 PUSH2 0x2562 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x2554 PUSH5 0xE8D4A51000 PUSH2 0x2546 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2D1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D96 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2DE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x2603 JUMPI PUSH2 0x25BF DUP2 PUSH1 0xC PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2E2A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP5 GT ISZERO PUSH2 0x267F JUMPI PUSH2 0x265F CALLER ADDRESS DUP7 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2F0E SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2676 DUP5 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x2E2A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x26B1 PUSH5 0xE8D4A51000 PUSH2 0x26A3 DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x2D1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D96 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP7 PUSH1 0x40 MLOAD PUSH2 0x2701 SWAP2 SWAP1 PUSH2 0x3E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x276B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2762 SWAP1 PUSH2 0x3D11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2781 JUMPI PUSH2 0x2780 PUSH2 0x418E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x27EE DUP5 PUSH2 0x1C40 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x28E8 JUMPI PUSH1 0x0 PUSH2 0x2845 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x2837 PUSH5 0xE8D4A51000 PUSH2 0x2829 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2D1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D96 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2DE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x28E6 JUMPI PUSH2 0x28A2 DUP2 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2E2A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMPDEST PUSH2 0x2939 CALLER ADDRESS DUP6 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2F0E SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2950 DUP4 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x2E2A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x298A PUSH5 0xE8D4A51000 PUSH2 0x297C DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x2D1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D96 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP6 PUSH1 0x40 MLOAD PUSH2 0x29D9 SWAP2 SWAP1 PUSH2 0x3E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x29EF PUSH2 0x2D13 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2A0D PUSH2 0x228F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2A63 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A5A SWAP1 PUSH2 0x3D51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2AD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2ACA SWAP1 PUSH2 0x3C71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2ADC DUP2 PUSH2 0x30F5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2AF6 JUMPI PUSH2 0x2AF5 PUSH2 0x418E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BC2 SWAP2 SWAP1 PUSH2 0x3B07 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2BDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2BEE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C12 SWAP2 SWAP1 PUSH2 0x36DB JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD NUMBER GT DUP1 ISZERO PUSH2 0x2C28 JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x2CC3 JUMPI PUSH1 0x0 PUSH2 0x2C3D DUP6 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x22B8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2C80 PUSH1 0x8 SLOAD PUSH2 0x2C72 DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0x2C64 PUSH1 0x3 SLOAD DUP8 PUSH2 0x2D1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D96 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x2CBE PUSH2 0x2CAF DUP5 PUSH2 0x2CA1 PUSH5 0xE8D4A51000 DUP6 PUSH2 0x2D1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D96 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x2E2A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH2 0x2D07 DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x2CF9 PUSH5 0xE8D4A51000 PUSH2 0x2CEB DUP7 DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0x2D1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D96 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2DE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x2D2E JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x2D90 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0x2D3C SWAP2 SWAP1 PUSH2 0x3F4E JUMP JUMPDEST SWAP1 POP DUP3 DUP5 DUP3 PUSH2 0x2D4B SWAP2 SWAP1 PUSH2 0x3F1D JUMP JUMPDEST EQ PUSH2 0x2D8B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D82 SWAP1 PUSH2 0x3D31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DD8 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x31B9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E22 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x321C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0x2E39 SWAP2 SWAP1 PUSH2 0x3EC7 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x2E7E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E75 SWAP1 PUSH2 0x3CD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2F09 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2EA7 SWAP3 SWAP2 SWAP1 PUSH2 0x3B82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x3280 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2F91 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2F2F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3B4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x3280 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 EQ DUP1 PUSH2 0x3030 JUMPI POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E ADDRESS DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FDE SWAP3 SWAP2 SWAP1 PUSH2 0x3B22 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2FF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x300A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x302E SWAP2 SWAP1 PUSH2 0x36DB JUMP JUMPDEST EQ JUMPDEST PUSH2 0x306F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3066 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x30F0 DUP4 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x308E SWAP3 SWAP2 SWAP1 PUSH2 0x3B82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x3280 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x3200 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31F7 SWAP2 SWAP1 PUSH2 0x3C4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0x320F SWAP2 SWAP1 PUSH2 0x3F1D JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x3264 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x325B SWAP2 SWAP1 PUSH2 0x3C4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0x3273 SWAP2 SWAP1 PUSH2 0x3FA8 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32E2 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3347 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x3342 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x3302 SWAP2 SWAP1 PUSH2 0x35E7 JUMP JUMPDEST PUSH2 0x3341 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3338 SWAP1 PUSH2 0x3DD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3356 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x335F JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x33A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x339B SWAP1 PUSH2 0x3CF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x33AD DUP6 PUSH2 0x3473 JUMP JUMPDEST PUSH2 0x33EC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33E3 SWAP1 PUSH2 0x3D91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x3415 SWAP2 SWAP1 PUSH2 0x3AF0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3452 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3457 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x3467 DUP3 DUP3 DUP7 PUSH2 0x3496 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x34A6 JUMPI DUP3 SWAP1 POP PUSH2 0x34F6 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x34B9 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34ED SWAP2 SWAP1 PUSH2 0x3C4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x350C DUP2 PUSH2 0x44F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3521 DUP2 PUSH2 0x450F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3536 DUP2 PUSH2 0x450F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x354B DUP2 PUSH2 0x4526 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3560 DUP2 PUSH2 0x4526 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3575 DUP2 PUSH2 0x453D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x358A DUP2 PUSH2 0x4554 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x359F DUP2 PUSH2 0x456B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x35B4 DUP2 PUSH2 0x456B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x35D0 JUMPI PUSH2 0x35CF PUSH2 0x41BD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x35DE DUP5 DUP3 DUP6 ADD PUSH2 0x34FD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x35FD JUMPI PUSH2 0x35FC PUSH2 0x41BD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x360B DUP5 DUP3 DUP6 ADD PUSH2 0x3527 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x362A JUMPI PUSH2 0x3629 PUSH2 0x41BD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3638 DUP5 DUP3 DUP6 ADD PUSH2 0x3551 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3658 JUMPI PUSH2 0x3657 PUSH2 0x41BD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3666 DUP6 DUP3 DUP7 ADD PUSH2 0x3566 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3677 DUP6 DUP3 DUP7 ADD PUSH2 0x3590 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3697 JUMPI PUSH2 0x3696 PUSH2 0x41BD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x36A5 DUP5 DUP3 DUP6 ADD PUSH2 0x357B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x36C4 JUMPI PUSH2 0x36C3 PUSH2 0x41BD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x36D2 DUP5 DUP3 DUP6 ADD PUSH2 0x3590 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x36F1 JUMPI PUSH2 0x36F0 PUSH2 0x41BD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x36FF DUP5 DUP3 DUP6 ADD PUSH2 0x35A5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x371F JUMPI PUSH2 0x371E PUSH2 0x41BD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x372D DUP6 DUP3 DUP7 ADD PUSH2 0x3590 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x373E DUP6 DUP3 DUP7 ADD PUSH2 0x34FD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3761 JUMPI PUSH2 0x3760 PUSH2 0x41BD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x376F DUP7 DUP3 DUP8 ADD PUSH2 0x3590 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3780 DUP7 DUP3 DUP8 ADD PUSH2 0x353C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3791 DUP7 DUP3 DUP8 ADD PUSH2 0x3512 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x37B2 JUMPI PUSH2 0x37B1 PUSH2 0x41BD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37C0 DUP6 DUP3 DUP7 ADD PUSH2 0x3590 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x37D1 DUP6 DUP3 DUP7 ADD PUSH2 0x3590 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x37F4 JUMPI PUSH2 0x37F3 PUSH2 0x41BD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3802 DUP7 DUP3 DUP8 ADD PUSH2 0x3590 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3813 DUP7 DUP3 DUP8 ADD PUSH2 0x3590 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3824 DUP7 DUP3 DUP8 ADD PUSH2 0x3512 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x3837 DUP2 PUSH2 0x3FDC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3848 DUP3 PUSH2 0x3E95 JUMP JUMPDEST PUSH2 0x3852 DUP2 DUP6 PUSH2 0x3EAB JUMP JUMPDEST SWAP4 POP PUSH2 0x3862 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x40B4 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3877 DUP2 PUSH2 0x405A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3886 DUP2 PUSH2 0x406C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3895 DUP2 PUSH2 0x407E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38A6 DUP3 PUSH2 0x3EA0 JUMP JUMPDEST PUSH2 0x38B0 DUP2 DUP6 PUSH2 0x3EB6 JUMP JUMPDEST SWAP4 POP PUSH2 0x38C0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x40B4 JUMP JUMPDEST PUSH2 0x38C9 DUP2 PUSH2 0x41C2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38E1 PUSH1 0x26 DUP4 PUSH2 0x3EB6 JUMP JUMPDEST SWAP2 POP PUSH2 0x38EC DUP3 PUSH2 0x41D3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3904 PUSH1 0x13 DUP4 PUSH2 0x3EB6 JUMP JUMPDEST SWAP2 POP PUSH2 0x390F DUP3 PUSH2 0x4222 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3927 PUSH1 0x1B DUP4 PUSH2 0x3EB6 JUMP JUMPDEST SWAP2 POP PUSH2 0x3932 DUP3 PUSH2 0x424B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x394A PUSH1 0x1B DUP4 PUSH2 0x3EB6 JUMP JUMPDEST SWAP2 POP PUSH2 0x3955 DUP3 PUSH2 0x4274 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x396D PUSH1 0x26 DUP4 PUSH2 0x3EB6 JUMP JUMPDEST SWAP2 POP PUSH2 0x3978 DUP3 PUSH2 0x429D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3990 PUSH1 0x18 DUP4 PUSH2 0x3EB6 JUMP JUMPDEST SWAP2 POP PUSH2 0x399B DUP3 PUSH2 0x42EC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39B3 PUSH1 0x21 DUP4 PUSH2 0x3EB6 JUMP JUMPDEST SWAP2 POP PUSH2 0x39BE DUP3 PUSH2 0x4315 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39D6 PUSH1 0x20 DUP4 PUSH2 0x3EB6 JUMP JUMPDEST SWAP2 POP PUSH2 0x39E1 DUP3 PUSH2 0x4364 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39F9 PUSH1 0x14 DUP4 PUSH2 0x3EB6 JUMP JUMPDEST SWAP2 POP PUSH2 0x3A04 DUP3 PUSH2 0x438D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A1C PUSH1 0x1D DUP4 PUSH2 0x3EB6 JUMP JUMPDEST SWAP2 POP PUSH2 0x3A27 DUP3 PUSH2 0x43B6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A3F PUSH1 0x12 DUP4 PUSH2 0x3EB6 JUMP JUMPDEST SWAP2 POP PUSH2 0x3A4A DUP3 PUSH2 0x43DF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A62 PUSH1 0x2A DUP4 PUSH2 0x3EB6 JUMP JUMPDEST SWAP2 POP PUSH2 0x3A6D DUP3 PUSH2 0x4408 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A85 PUSH1 0xC DUP4 PUSH2 0x3EB6 JUMP JUMPDEST SWAP2 POP PUSH2 0x3A90 DUP3 PUSH2 0x4457 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AA8 PUSH1 0x36 DUP4 PUSH2 0x3EB6 JUMP JUMPDEST SWAP2 POP PUSH2 0x3AB3 DUP3 PUSH2 0x4480 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3ACB PUSH1 0x14 DUP4 PUSH2 0x3EB6 JUMP JUMPDEST SWAP2 POP PUSH2 0x3AD6 DUP3 PUSH2 0x44CF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3AEA DUP2 PUSH2 0x4050 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AFC DUP3 DUP5 PUSH2 0x383D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3B1C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x382E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3B37 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x382E JUMP JUMPDEST PUSH2 0x3B44 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x382E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3B60 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x382E JUMP JUMPDEST PUSH2 0x3B6D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x382E JUMP JUMPDEST PUSH2 0x3B7A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3AE1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3B97 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x382E JUMP JUMPDEST PUSH2 0x3BA4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3AE1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3BC0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x386E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3BDB PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x386E JUMP JUMPDEST PUSH2 0x3BE8 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3AE1 JUMP JUMPDEST PUSH2 0x3BF5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3AE1 JUMP JUMPDEST PUSH2 0x3C02 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3AE1 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3C20 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x387D JUMP JUMPDEST PUSH2 0x3C2D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3AE1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3C49 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x388C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C69 DUP2 DUP5 PUSH2 0x389B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C8A DUP2 PUSH2 0x38D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3CAA DUP2 PUSH2 0x38F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3CCA DUP2 PUSH2 0x391A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3CEA DUP2 PUSH2 0x393D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D0A DUP2 PUSH2 0x3960 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D2A DUP2 PUSH2 0x3983 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D4A DUP2 PUSH2 0x39A6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D6A DUP2 PUSH2 0x39C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D8A DUP2 PUSH2 0x39EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DAA DUP2 PUSH2 0x3A0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DCA DUP2 PUSH2 0x3A32 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DEA DUP2 PUSH2 0x3A55 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E0A DUP2 PUSH2 0x3A78 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E2A DUP2 PUSH2 0x3A9B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E4A DUP2 PUSH2 0x3ABE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3E66 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3AE1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3E81 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3AE1 JUMP JUMPDEST PUSH2 0x3E8E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3AE1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3ED2 DUP3 PUSH2 0x4050 JUMP JUMPDEST SWAP2 POP PUSH2 0x3EDD DUP4 PUSH2 0x4050 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x3F12 JUMPI PUSH2 0x3F11 PUSH2 0x4130 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F28 DUP3 PUSH2 0x4050 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F33 DUP4 PUSH2 0x4050 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3F43 JUMPI PUSH2 0x3F42 PUSH2 0x415F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F59 DUP3 PUSH2 0x4050 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F64 DUP4 PUSH2 0x4050 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3F9D JUMPI PUSH2 0x3F9C PUSH2 0x4130 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FB3 DUP3 PUSH2 0x4050 JUMP JUMPDEST SWAP2 POP PUSH2 0x3FBE DUP4 PUSH2 0x4050 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x3FD1 JUMPI PUSH2 0x3FD0 PUSH2 0x4130 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FE7 DUP3 PUSH2 0x4030 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4005 DUP3 PUSH2 0x3FDC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4017 DUP3 PUSH2 0x3FDC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4029 DUP3 PUSH2 0x3FDC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4065 DUP3 PUSH2 0x4090 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4077 DUP3 PUSH2 0x4090 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4089 DUP3 PUSH2 0x4090 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x409B DUP3 PUSH2 0x40A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40AD DUP3 PUSH2 0x4030 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x40D2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x40B7 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x40E1 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40F2 DUP3 PUSH2 0x4050 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x4125 JUMPI PUSH2 0x4124 PUSH2 0x4130 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x506F776572206973206E6F7420656E6F75676800000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x776974686472617720506F77657220627920756E7374616B696E670000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6465706F73697420506F776572206279207374616B696E670000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F742066616D696C79000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x77697468647261773A206E6F7420676F6F640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6D6967726174653A206261640000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20746F206E6F6E2D7A65726F20616C6C6F77616E636500000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6D6967726174653A206E6F206D69677261746F72000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x4501 DUP2 PUSH2 0x3FDC JUMP JUMPDEST DUP2 EQ PUSH2 0x450C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x4518 DUP2 PUSH2 0x3FEE JUMP JUMPDEST DUP2 EQ PUSH2 0x4523 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x452F DUP2 PUSH2 0x3FFA JUMP JUMPDEST DUP2 EQ PUSH2 0x453A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x4546 DUP2 PUSH2 0x400C JUMP JUMPDEST DUP2 EQ PUSH2 0x4551 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x455D DUP2 PUSH2 0x401E JUMP JUMPDEST DUP2 EQ PUSH2 0x4568 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x4574 DUP2 PUSH2 0x4050 JUMP JUMPDEST DUP2 EQ PUSH2 0x457F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x52A6C08AFCEFD74110E5339A CREATE 0xD5 ISZERO 0xAF SIGNEXTEND REVERT 0x2A 0xD1 SWAP15 0xFB 0xF6 SWAP13 0xED PUSH8 0xC240F8F50964736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "22111:14004:0:-:0;;;23774:1;23740:35;;24217:1;24184:34;;24724:462;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19984:32;20003:12;:10;;;:12;;:::i;:::-;19984:18;;;:32;;:::i;:::-;24845:4;24839:3;;:10;;;;;;;;;;;;;;;;;;24876:14;24860:13;:30;;;;24914:11;24901:10;:24;;;;24971:8;24985:155;;;;;;;;25018:3;;;;;;;;;;;24985:155;;;;;;25048:4;24985:155;;;;25084:10;;24985:155;;;;25127:1;24985:155;;;24971:170;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25172:4;25154:15;:22;;;;24724:462;;;22111:14004;;19479:98;19532:7;19559:10;19552:17;;19479:98;:::o;21375:191::-;21449:16;21468:6;;;;;;;;;;;21449:25;;21494:8;21485:6;;:17;;;;;;;;;;;;;;;;;;21549:8;21518:40;;21539:8;21518:40;;;;;;;;;;;;21438:128;21375:191;:::o;7:171:1:-;78:5;109:6;103:13;94:22;;125:47;166:5;125:47;:::i;:::-;7:171;;;;:::o;184:143::-;241:5;272:6;266:13;257:22;;288:33;315:5;288:33;:::i;:::-;184:143;;;;:::o;333:691::-;435:6;443;451;500:2;488:9;479:7;475:23;471:32;468:119;;;506:79;;:::i;:::-;468:119;626:1;651:78;721:7;712:6;701:9;697:22;651:78;:::i;:::-;641:88;;597:142;778:2;804:64;860:7;851:6;840:9;836:22;804:64;:::i;:::-;794:74;;749:129;917:2;943:64;999:7;990:6;979:9;975:22;943:64;:::i;:::-;933:74;;888:129;333:691;;;;;:::o;1111:96::-;1148:7;1177:24;1195:5;1177:24;:::i;:::-;1166:35;;1111:96;;;:::o;1213:110::-;1264:7;1293:24;1311:5;1293:24;:::i;:::-;1282:35;;1213:110;;;:::o;1329:126::-;1366:7;1406:42;1399:5;1395:54;1384:65;;1329:126;;;:::o;1461:77::-;1498:7;1527:5;1516:16;;1461:77;;;:::o;1667:117::-;1776:1;1773;1766:12;1790:150;1877:38;1909:5;1877:38;:::i;:::-;1870:5;1867:49;1857:77;;1930:1;1927;1920:12;1857:77;1790:150;:::o;1946:122::-;2019:24;2037:5;2019:24;:::i;:::-;2012:5;2009:35;1999:63;;2058:1;2055;2048:12;1999:63;1946:122;:::o;22111:14004:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BONUS_MULTIPLIER_975": {
									"entryPoint": 8768,
									"id": 975,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DDTMasterchef_998": {
									"entryPoint": 8654,
									"id": 998,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DDT_970": {
									"entryPoint": 9156,
									"id": 970,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@NFTStakeAddress_996": {
									"entryPoint": 8730,
									"id": 996,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PowerPerBlock_972": {
									"entryPoint": 7975,
									"id": 972,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_796": {
									"entryPoint": 12928,
									"id": 796,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_806": {
									"entryPoint": 11539,
									"id": 806,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_916": {
									"entryPoint": 12533,
									"id": 916,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addNFT_1108": {
									"entryPoint": 6935,
									"id": 1108,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@add_1373": {
									"entryPoint": 3903,
									"id": 1373,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_27": {
									"entryPoint": 11818,
									"id": 27,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@claimNFTReward_1304": {
									"entryPoint": 2731,
									"id": 1304,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@deposit_1863": {
									"entryPoint": 10023,
									"id": 1863,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@div_124": {
									"entryPoint": 11670,
									"id": 124,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_152": {
									"entryPoint": 12729,
									"id": 152,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@emergencyWithdraw_2428": {
									"entryPoint": 7662,
									"id": 2428,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@enterStakingCompund_2253": {
									"entryPoint": 9194,
									"id": 2253,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@enterStaking_2114": {
									"entryPoint": 4626,
									"id": 2114,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionCallWithValue_442": {
									"entryPoint": 13151,
									"id": 442,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_372": {
									"entryPoint": 13127,
									"id": 372,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getMultiplier_1521": {
									"entryPoint": 8888,
									"id": 1521,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getPowerBalance_1088": {
									"entryPoint": 8774,
									"id": 1088,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isContract_301": {
									"entryPoint": 13427,
									"id": 301,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@leaveStaking_2371": {
									"entryPoint": 1926,
									"id": 2371,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@massUpdatePools_1648": {
									"entryPoint": 8199,
									"id": 1648,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@migrate_1503": {
									"entryPoint": 6033,
									"id": 1503,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@migrator_978": {
									"entryPoint": 8692,
									"id": 978,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_107": {
									"entryPoint": 11547,
									"id": 107,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@nftsInfo_967": {
									"entryPoint": 8115,
									"id": 967,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_845": {
									"entryPoint": 8847,
									"id": 845,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pendingPower_1623": {
									"entryPoint": 10975,
									"id": 1623,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@poolInfo_982": {
									"entryPoint": 2629,
									"id": 982,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@poolLength_1325": {
									"entryPoint": 1721,
									"id": 1325,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@powerBalance_1002": {
									"entryPoint": 9999,
									"id": 1002,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_873": {
									"entryPoint": 8518,
									"id": 873,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeApprove_674": {
									"entryPoint": 12183,
									"id": 674,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_630": {
									"entryPoint": 12046,
									"id": 630,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_604": {
									"entryPoint": 11912,
									"id": 604,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setMigrator_1424": {
									"entryPoint": 4300,
									"id": 1424,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@set_1411": {
									"entryPoint": 8250,
									"id": 1411,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@startBlock_994": {
									"entryPoint": 6929,
									"id": 994,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_44": {
									"entryPoint": 11744,
									"id": 44,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sub_72": {
									"entryPoint": 12828,
									"id": 72,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@totalAllocPoint_992": {
									"entryPoint": 2725,
									"id": 992,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_896": {
									"entryPoint": 10727,
									"id": 896,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateMultiplier_1316": {
									"entryPoint": 7981,
									"id": 1316,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateNFTStakeAddress_1076": {
									"entryPoint": 1734,
									"id": 1076,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateNFT_1125": {
									"entryPoint": 8986,
									"id": 1125,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@updatePool_1739": {
									"entryPoint": 7232,
									"id": 1739,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updatePowerPerBlock_2440": {
									"entryPoint": 4492,
									"id": 2440,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userInfo_989": {
									"entryPoint": 8937,
									"id": 989,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResult_577": {
									"entryPoint": 13462,
									"id": 577,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdraw_1985": {
									"entryPoint": 5274,
									"id": 1985,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 13565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 13586,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 13607,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$286": {
									"entryPoint": 13628,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$286_fromMemory": {
									"entryPoint": 13649,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC721_$933": {
									"entryPoint": 13670,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IMigratorChef_$927": {
									"entryPoint": 13691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 13712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 13733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 13754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 13799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$286_fromMemory": {
									"entryPoint": 13844,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC721_$933t_uint256": {
									"entryPoint": 13889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_contract$_IMigratorChef_$927": {
									"entryPoint": 13953,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 13998,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 14043,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 14088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_contract$_IERC20_$286t_bool": {
									"entryPoint": 14152,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 14235,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_bool": {
									"entryPoint": 14299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 14382,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 14397,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack": {
									"entryPoint": 14446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC721_$933_to_t_address_fromStack": {
									"entryPoint": 14461,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IMigratorChef_$927_to_t_address_fromStack": {
									"entryPoint": 14476,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 14491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 14548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 14583,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 14618,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 14653,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 14688,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 14723,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 14758,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 14793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bc4ca777991637c8f4f9389bf11e23dc4a8215e948b482bac5c123f20ce84c64_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 14828,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 14863,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 14898,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 14933,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 14968,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 15003,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 15038,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 15073,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 15088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 15111,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 15138,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 15179,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 15234,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$286__to_t_address__fromStack_reversed": {
									"entryPoint": 15275,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$286_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 15302,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC721_$933_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 15371,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IMigratorChef_$927__to_t_address__fromStack_reversed": {
									"entryPoint": 15412,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 15439,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 15473,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 15505,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 15537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 15569,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 15601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 15633,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 15665,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 15697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bc4ca777991637c8f4f9389bf11e23dc4a8215e948b482bac5c123f20ce84c64__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 15729,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 15761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 15793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 15825,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 15857,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 15889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 15921,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 15953,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 15980,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 16021,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 16032,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 16043,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 16054,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 16071,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 16157,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 16206,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 16296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 16348,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 16366,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$286": {
									"entryPoint": 16378,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC721_$933": {
									"entryPoint": 16396,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IMigratorChef_$927": {
									"entryPoint": 16414,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 16432,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 16464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$286_to_t_address": {
									"entryPoint": 16474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC721_$933_to_t_address": {
									"entryPoint": 16492,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IMigratorChef_$927_to_t_address": {
									"entryPoint": 16510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 16528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 16546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 16564,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 16615,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 16688,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 16735,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 16782,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 16829,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 16834,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 16851,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406": {
									"entryPoint": 16930,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f": {
									"entryPoint": 16971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a": {
									"entryPoint": 17012,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 17053,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108": {
									"entryPoint": 17132,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3": {
									"entryPoint": 17173,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 17252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bc4ca777991637c8f4f9389bf11e23dc4a8215e948b482bac5c123f20ce84c64": {
									"entryPoint": 17293,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 17334,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df": {
									"entryPoint": 17375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd": {
									"entryPoint": 17416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8": {
									"entryPoint": 17495,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25": {
									"entryPoint": 17536,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445": {
									"entryPoint": 17615,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 17656,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 17679,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$286": {
									"entryPoint": 17702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC721_$933": {
									"entryPoint": 17725,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IMigratorChef_$927": {
									"entryPoint": 17748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 17771,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:32192:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "201:84:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "211:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "233:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "220:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "220:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "211:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "273:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "249:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "249:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "249:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "179:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "187:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "195:5:1",
														"type": ""
													}
												],
												"src": "152:133:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "351:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "361:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "370:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "370:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "361:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "416:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "392:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "392:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "392:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "329:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "337:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "345:5:1",
														"type": ""
													}
												],
												"src": "291:137:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "500:101:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "510:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "532:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "519:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "519:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "510:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "589:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$286",
																	"nodeType": "YulIdentifier",
																	"src": "548:40:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "548:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "548:47:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$286",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "478:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "486:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "494:5:1",
														"type": ""
													}
												],
												"src": "434:167:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "684:94:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "694:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "709:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "703:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "703:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "694:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "766:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$286",
																	"nodeType": "YulIdentifier",
																	"src": "725:40:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "725:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "725:47:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$286_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "662:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "670:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "678:5:1",
														"type": ""
													}
												],
												"src": "607:171:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "851:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "861:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "883:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "870:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "870:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "861:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "941:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC721_$933",
																	"nodeType": "YulIdentifier",
																	"src": "899:41:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "899:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "899:48:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC721_$933",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "829:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "837:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "845:5:1",
														"type": ""
													}
												],
												"src": "784:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1032:108:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1042:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1064:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1051:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1051:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1042:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1128:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IMigratorChef_$927",
																	"nodeType": "YulIdentifier",
																	"src": "1080:47:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1080:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1080:54:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IMigratorChef_$927",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1010:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1018:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1026:5:1",
														"type": ""
													}
												],
												"src": "959:181:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1198:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1208:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1230:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1217:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1217:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1208:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1273:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1246:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1246:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1246:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1176:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1184:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1192:5:1",
														"type": ""
													}
												],
												"src": "1146:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1354:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1364:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1379:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1373:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1373:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1364:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1422:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1395:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1395:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1395:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1332:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1340:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1348:5:1",
														"type": ""
													}
												],
												"src": "1291:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1506:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1552:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1554:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1554:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1554:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1527:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1536:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1523:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1523:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1548:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1519:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1519:32:1"
															},
															"nodeType": "YulIf",
															"src": "1516:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1645:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1660:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1674:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1664:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1689:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1724:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1735:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1720:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1720:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1744:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1699:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1699:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1689:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1476:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1487:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1499:6:1",
														"type": ""
													}
												],
												"src": "1440:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1849:271:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1895:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1897:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1897:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1897:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1870:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1879:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1866:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1866:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1891:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1862:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1862:32:1"
															},
															"nodeType": "YulIf",
															"src": "1859:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1988:125:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2003:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2017:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2007:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2032:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2075:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2086:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2071:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2071:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2095:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2042:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2042:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2032:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1819:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1830:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1842:6:1",
														"type": ""
													}
												],
												"src": "1775:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2217:288:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2263:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2265:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2265:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2265:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2238:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2247:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2234:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2234:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2259:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2230:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2230:32:1"
															},
															"nodeType": "YulIf",
															"src": "2227:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2356:142:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2371:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2385:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2375:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2400:88:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2460:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2471:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2456:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2456:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2480:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$286_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2410:45:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2410:78:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2400:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$286_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2187:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2198:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2210:6:1",
														"type": ""
													}
												],
												"src": "2126:379:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2609:406:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2655:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2657:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2657:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2657:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2630:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2639:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2626:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2626:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2651:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2622:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2622:32:1"
															},
															"nodeType": "YulIf",
															"src": "2619:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2748:132:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2763:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2777:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2767:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2792:78:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2842:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2853:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2838:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2838:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2862:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC721_$933",
																			"nodeType": "YulIdentifier",
																			"src": "2802:35:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2802:68:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2792:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2890:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2905:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2919:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2909:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2935:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2970:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2981:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2966:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2966:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2990:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2945:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2945:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2935:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC721_$933t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2571:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2582:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2594:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2602:6:1",
														"type": ""
													}
												],
												"src": "2511:504:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3108:284:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3154:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3156:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3156:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3156:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3129:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3138:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3125:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3125:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3150:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3121:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3121:32:1"
															},
															"nodeType": "YulIf",
															"src": "3118:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3247:138:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3262:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3276:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3266:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3291:84:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3347:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3358:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3343:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3343:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3367:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IMigratorChef_$927",
																			"nodeType": "YulIdentifier",
																			"src": "3301:41:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3301:74:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3291:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IMigratorChef_$927",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3078:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3089:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3101:6:1",
														"type": ""
													}
												],
												"src": "3021:371:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3464:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3510:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3512:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3512:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3512:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3485:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3494:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3481:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3481:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3506:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3477:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3477:32:1"
															},
															"nodeType": "YulIf",
															"src": "3474:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3603:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3618:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3632:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3622:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3647:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3682:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3693:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3678:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3678:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3702:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3657:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3657:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3647:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3434:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3445:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3457:6:1",
														"type": ""
													}
												],
												"src": "3398:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3810:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3856:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3858:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3858:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3858:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3831:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3840:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3827:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3827:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3852:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3823:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3823:32:1"
															},
															"nodeType": "YulIf",
															"src": "3820:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3949:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3964:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3978:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3968:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3993:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4039:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4050:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4035:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4035:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4059:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4003:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4003:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3993:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3780:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3791:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3803:6:1",
														"type": ""
													}
												],
												"src": "3733:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4173:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4219:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4221:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4221:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4221:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4194:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4203:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4190:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4190:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4215:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4186:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4186:32:1"
															},
															"nodeType": "YulIf",
															"src": "4183:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "4312:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4327:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4341:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4331:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4356:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4391:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4402:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4387:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4387:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4411:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4366:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4366:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4356:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4439:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4454:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4468:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4458:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4484:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4519:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4530:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4515:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4515:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4539:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4494:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4494:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4484:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4135:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4146:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4158:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4166:6:1",
														"type": ""
													}
												],
												"src": "4090:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4681:530:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4727:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4729:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4729:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4729:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4702:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4711:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4698:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4698:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4723:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4694:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4694:32:1"
															},
															"nodeType": "YulIf",
															"src": "4691:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "4820:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4835:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4849:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4839:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4864:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4899:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4910:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4895:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4895:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4919:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4874:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4874:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4864:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4947:132:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4962:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4976:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4966:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4992:77:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5041:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5052:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5037:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5037:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5061:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$286",
																			"nodeType": "YulIdentifier",
																			"src": "5002:34:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5002:67:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4992:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5089:115:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5104:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5118:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5108:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5134:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5166:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5177:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5162:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5162:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5186:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "5144:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5144:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5134:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_contract$_IERC20_$286t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4635:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4646:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4658:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4666:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4674:6:1",
														"type": ""
													}
												],
												"src": "4570:641:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5300:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5346:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5348:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5348:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5348:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5321:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5330:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5317:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5317:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5342:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5313:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5313:32:1"
															},
															"nodeType": "YulIf",
															"src": "5310:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "5439:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5454:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5468:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5458:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5483:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5518:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5529:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5514:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5514:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5538:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5493:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5493:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5483:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5566:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5581:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5595:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5585:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5611:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5646:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5657:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5642:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5642:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5666:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5621:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5621:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5611:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5262:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5273:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5285:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5293:6:1",
														"type": ""
													}
												],
												"src": "5217:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5794:516:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5840:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5842:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5842:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5842:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5815:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5824:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5811:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5811:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5836:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5807:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5807:32:1"
															},
															"nodeType": "YulIf",
															"src": "5804:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "5933:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5948:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5962:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5952:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5977:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6012:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6023:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6008:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6008:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6032:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5987:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5987:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5977:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6060:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6075:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6089:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6079:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6105:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6140:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6151:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6136:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6136:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6160:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6115:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6115:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6105:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6188:115:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6203:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6217:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6207:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6233:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6265:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6276:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6261:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6261:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6285:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6243:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6243:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "6233:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5748:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5759:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5771:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5779:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5787:6:1",
														"type": ""
													}
												],
												"src": "5697:613:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6381:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6398:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6421:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6403:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6403:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6391:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6391:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6391:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6369:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6376:3:1",
														"type": ""
													}
												],
												"src": "6316:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6548:265:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6558:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6604:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6572:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6572:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6562:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6619:95:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6702:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6707:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6626:75:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6626:88:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6619:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6749:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6756:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6745:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6745:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6763:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6768:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6723:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6723:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6723:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6784:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6795:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6800:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6791:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6791:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6784:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6529:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6536:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6544:3:1",
														"type": ""
													}
												],
												"src": "6440:373:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6898:80:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6915:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6965:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$286_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6920:44:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6920:51:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6908:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6908:64:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6908:64:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6886:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6893:3:1",
														"type": ""
													}
												],
												"src": "6819:159:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7064:81:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7081:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7132:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC721_$933_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7086:45:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7086:52:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7074:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7074:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7074:65:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC721_$933_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7052:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7059:3:1",
														"type": ""
													}
												],
												"src": "6984:161:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7237:87:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7254:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7311:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IMigratorChef_$927_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7259:51:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7259:58:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7247:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7247:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7247:71:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_IMigratorChef_$927_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7225:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7232:3:1",
														"type": ""
													}
												],
												"src": "7151:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7422:272:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7432:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7479:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7446:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7446:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7436:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7494:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7560:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7565:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7501:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7501:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7494:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7607:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7614:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7603:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7603:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7621:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7626:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "7581:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7581:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7581:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7642:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7653:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7680:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7658:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7658:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7649:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7649:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7642:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7403:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7410:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7418:3:1",
														"type": ""
													}
												],
												"src": "7330:364:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7846:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7856:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7922:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7927:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7863:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7863:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7856:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8028:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "7939:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7939:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7939:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8041:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8052:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8057:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8048:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8048:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8041:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7834:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7842:3:1",
														"type": ""
													}
												],
												"src": "7700:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8218:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8228:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8294:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8299:2:1",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8235:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8235:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8228:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8400:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406",
																	"nodeType": "YulIdentifier",
																	"src": "8311:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8311:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8311:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8413:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8424:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8429:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8420:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8420:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8413:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8206:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8214:3:1",
														"type": ""
													}
												],
												"src": "8072:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8590:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8600:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8666:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8671:2:1",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8607:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8607:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8600:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8772:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f",
																	"nodeType": "YulIdentifier",
																	"src": "8683:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8683:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8683:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8785:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8796:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8801:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8792:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8792:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8785:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8578:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8586:3:1",
														"type": ""
													}
												],
												"src": "8444:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8962:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8972:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9038:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9043:2:1",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8979:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8979:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8972:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9144:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																	"nodeType": "YulIdentifier",
																	"src": "9055:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9055:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9055:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9157:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9168:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9173:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9164:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9164:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9157:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8950:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8958:3:1",
														"type": ""
													}
												],
												"src": "8816:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9334:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9344:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9410:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9415:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9351:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9351:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9344:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9516:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "9427:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9427:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9427:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9529:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9540:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9545:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9536:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9536:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9529:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9322:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9330:3:1",
														"type": ""
													}
												],
												"src": "9188:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9706:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9716:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9782:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9787:2:1",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9723:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9723:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9716:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9888:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108",
																	"nodeType": "YulIdentifier",
																	"src": "9799:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9799:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9799:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9901:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9912:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9917:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9908:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9908:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9901:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9694:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9702:3:1",
														"type": ""
													}
												],
												"src": "9560:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10078:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10088:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10154:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10159:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10095:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10095:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10088:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10260:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																	"nodeType": "YulIdentifier",
																	"src": "10171:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10171:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10171:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10273:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10284:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10289:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10280:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10280:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10273:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10066:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10074:3:1",
														"type": ""
													}
												],
												"src": "9932:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10450:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10460:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10526:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10531:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10467:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10467:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10460:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10632:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "10543:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10543:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10543:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10645:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10656:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10661:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10652:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10652:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10645:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10438:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10446:3:1",
														"type": ""
													}
												],
												"src": "10304:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10822:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10832:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10898:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10903:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10839:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10839:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10832:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11004:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bc4ca777991637c8f4f9389bf11e23dc4a8215e948b482bac5c123f20ce84c64",
																	"nodeType": "YulIdentifier",
																	"src": "10915:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10915:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10915:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11017:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11028:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11033:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11024:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11024:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11017:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bc4ca777991637c8f4f9389bf11e23dc4a8215e948b482bac5c123f20ce84c64_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10810:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10818:3:1",
														"type": ""
													}
												],
												"src": "10676:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11194:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11204:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11270:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11275:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11211:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11211:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11204:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11376:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "11287:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11287:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11287:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11389:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11400:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11405:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11396:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11396:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11389:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11182:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11190:3:1",
														"type": ""
													}
												],
												"src": "11048:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11566:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11576:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11642:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11647:2:1",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11583:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11583:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11576:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11748:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																	"nodeType": "YulIdentifier",
																	"src": "11659:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11659:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11659:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11761:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11772:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11777:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11768:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11768:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11761:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11554:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11562:3:1",
														"type": ""
													}
												],
												"src": "11420:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11938:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11948:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12014:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12019:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11955:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11955:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11948:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12120:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																	"nodeType": "YulIdentifier",
																	"src": "12031:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12031:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12031:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12133:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12144:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12149:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12140:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12140:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12133:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11926:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11934:3:1",
														"type": ""
													}
												],
												"src": "11792:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12310:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12320:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12386:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12391:2:1",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12327:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12327:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12320:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12492:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8",
																	"nodeType": "YulIdentifier",
																	"src": "12403:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12403:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12403:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12505:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12516:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12521:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12512:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12512:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12505:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12298:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12306:3:1",
														"type": ""
													}
												],
												"src": "12164:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12682:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12692:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12758:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12763:2:1",
																		"type": "",
																		"value": "54"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12699:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12699:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12692:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12864:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																	"nodeType": "YulIdentifier",
																	"src": "12775:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12775:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12775:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12877:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12888:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12893:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12884:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12884:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12877:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12670:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12678:3:1",
														"type": ""
													}
												],
												"src": "12536:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13054:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13064:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13130:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13135:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13071:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13071:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13064:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13236:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445",
																	"nodeType": "YulIdentifier",
																	"src": "13147:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13147:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13147:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13249:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13260:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13265:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13256:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13256:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13249:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13042:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13050:3:1",
														"type": ""
													}
												],
												"src": "12908:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13345:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13362:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13385:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "13367:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13367:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13355:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13355:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13355:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13333:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13340:3:1",
														"type": ""
													}
												],
												"src": "13280:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13538:137:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13549:100:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13636:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13645:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13556:79:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13556:93:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13549:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13659:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "13666:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13659:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13517:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13523:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13534:3:1",
														"type": ""
													}
												],
												"src": "13404:271:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13779:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13789:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13801:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13812:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13797:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13797:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13789:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13869:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13882:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13893:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13878:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13878:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13825:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13825:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13825:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13751:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13763:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13774:4:1",
														"type": ""
													}
												],
												"src": "13681:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14035:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14045:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14057:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14068:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14053:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14053:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14045:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14125:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14138:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14149:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14134:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14134:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14081:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14081:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14081:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14206:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14219:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14230:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14215:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14215:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14162:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14162:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14162:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13999:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14011:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14019:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14030:4:1",
														"type": ""
													}
												],
												"src": "13909:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14401:288:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14411:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14423:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14434:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14419:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14419:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14411:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14491:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14504:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14515:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14500:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14500:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14447:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14447:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14447:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14572:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14585:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14596:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14581:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14581:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14528:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14528:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14528:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "14654:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14667:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14678:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14663:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14663:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14610:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14610:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14610:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14357:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "14369:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14377:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14385:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14396:4:1",
														"type": ""
													}
												],
												"src": "14247:442:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14821:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14831:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14843:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14854:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14839:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14839:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14831:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14911:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14924:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14935:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14920:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14920:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14867:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14867:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14867:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14992:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15005:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15016:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15001:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15001:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14948:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14948:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14948:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14785:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14797:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14805:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14816:4:1",
														"type": ""
													}
												],
												"src": "14695:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15145:138:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15155:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15167:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15178:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15163:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15163:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15155:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15249:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15262:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15273:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15258:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15258:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15191:57:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15191:85:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15191:85:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$286__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15117:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15129:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15140:4:1",
														"type": ""
													}
												],
												"src": "15033:250:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15485:385:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15495:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15507:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15518:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15503:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15503:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15495:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15590:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15603:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15614:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15599:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15599:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15532:57:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15532:85:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15532:85:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15671:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15684:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15695:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15680:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15680:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15627:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15627:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15627:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "15753:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15766:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15777:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15762:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15762:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15709:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15709:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15709:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "15835:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15848:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15859:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15844:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15844:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15791:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15791:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15791:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$286_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15433:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15445:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15453:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15461:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15469:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15480:4:1",
														"type": ""
													}
												],
												"src": "15289:581:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16017:221:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16027:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16039:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16050:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16035:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16035:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16027:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16122:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16135:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16146:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16131:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16131:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC721_$933_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16063:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16063:86:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16063:86:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16203:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16216:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16227:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16212:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16212:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16159:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16159:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16159:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721_$933_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15981:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15993:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16001:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16012:4:1",
														"type": ""
													}
												],
												"src": "15876:362:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16363:145:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16373:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16385:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16396:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16381:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16381:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16373:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16474:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16487:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16498:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16483:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16483:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IMigratorChef_$927_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16409:64:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16409:92:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16409:92:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IMigratorChef_$927__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16335:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16347:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16358:4:1",
														"type": ""
													}
												],
												"src": "16244:264:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16632:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16642:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16654:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16665:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16650:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16650:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16642:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16689:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16700:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16685:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16685:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16708:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16714:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16704:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16704:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16678:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16678:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16678:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16734:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16806:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16815:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16742:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16742:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16734:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16604:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16616:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16627:4:1",
														"type": ""
													}
												],
												"src": "16514:313:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17004:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17014:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17026:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17037:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17022:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17022:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17014:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17061:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17072:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17057:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17057:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17080:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17086:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17076:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17076:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17050:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17050:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17050:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17106:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17240:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17114:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17114:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17106:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16984:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16999:4:1",
														"type": ""
													}
												],
												"src": "16833:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17429:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17439:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17451:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17462:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17447:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17447:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17439:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17486:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17497:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17482:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17482:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17505:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17511:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17501:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17501:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17475:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17475:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17475:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17531:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17665:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17539:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17539:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17531:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17409:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17424:4:1",
														"type": ""
													}
												],
												"src": "17258:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17854:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17864:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17876:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17887:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17872:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17872:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17864:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17911:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17922:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17907:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17907:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17930:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17936:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17926:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17926:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17900:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17900:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17900:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17956:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18090:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17964:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17964:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17956:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17834:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17849:4:1",
														"type": ""
													}
												],
												"src": "17683:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18279:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18289:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18301:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18312:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18297:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18297:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18289:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18336:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18347:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18332:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18332:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18355:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18361:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18351:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18351:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18325:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18325:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18325:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18381:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18515:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18389:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18389:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18381:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18259:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18274:4:1",
														"type": ""
													}
												],
												"src": "18108:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18704:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18714:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18726:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18737:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18722:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18722:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18714:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18761:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18772:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18757:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18757:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18780:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18786:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18776:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18776:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18750:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18750:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18750:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18806:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18940:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18814:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18814:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18806:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18684:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18699:4:1",
														"type": ""
													}
												],
												"src": "18533:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19129:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19139:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19151:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19162:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19147:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19147:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19139:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19186:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19197:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19182:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19182:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19205:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19211:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19201:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19201:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19175:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19175:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19175:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19231:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19365:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19239:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19239:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19231:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19109:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19124:4:1",
														"type": ""
													}
												],
												"src": "18958:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19554:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19564:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19576:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19587:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19572:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19572:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19564:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19611:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19622:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19607:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19607:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19630:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19636:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19626:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19626:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19600:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19600:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19600:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19656:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19790:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19664:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19664:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19656:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19534:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19549:4:1",
														"type": ""
													}
												],
												"src": "19383:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19979:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19989:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20001:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20012:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19997:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19997:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19989:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20036:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20047:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20032:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20032:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20055:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20061:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20051:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20051:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20025:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20025:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20025:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20081:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20215:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20089:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20089:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20081:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19959:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19974:4:1",
														"type": ""
													}
												],
												"src": "19808:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20404:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20414:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20426:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20437:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20422:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20422:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20414:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20461:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20472:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20457:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20457:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20480:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20486:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20476:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20476:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20450:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20450:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20450:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20506:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20640:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bc4ca777991637c8f4f9389bf11e23dc4a8215e948b482bac5c123f20ce84c64_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20514:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20514:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20506:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bc4ca777991637c8f4f9389bf11e23dc4a8215e948b482bac5c123f20ce84c64__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20384:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20399:4:1",
														"type": ""
													}
												],
												"src": "20233:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20829:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20839:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20851:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20862:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20847:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20847:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20839:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20886:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20897:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20882:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20882:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20905:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20911:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20901:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20901:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20875:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20875:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20875:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20931:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21065:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20939:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20939:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20931:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20809:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20824:4:1",
														"type": ""
													}
												],
												"src": "20658:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21254:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21264:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21276:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21287:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21272:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21272:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21264:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21311:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21322:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21307:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21307:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21330:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21336:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21326:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21326:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21300:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21300:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21300:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21356:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21490:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21364:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21364:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21356:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21234:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21249:4:1",
														"type": ""
													}
												],
												"src": "21083:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21679:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21689:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21701:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21712:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21697:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21697:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21689:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21736:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21747:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21732:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21732:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21755:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21761:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21751:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21751:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21725:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21725:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21725:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21781:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21915:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21789:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21789:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21781:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21659:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21674:4:1",
														"type": ""
													}
												],
												"src": "21508:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22104:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22114:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22126:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22137:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22122:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22122:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22114:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22161:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22172:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22157:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22157:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22180:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22186:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22176:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22176:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22150:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22150:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22150:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22206:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22340:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22214:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22214:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22206:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22084:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22099:4:1",
														"type": ""
													}
												],
												"src": "21933:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22529:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22539:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22551:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22562:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22547:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22547:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22539:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22586:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22597:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22582:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22582:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22605:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22611:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22601:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22601:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22575:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22575:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22575:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22631:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22765:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22639:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22639:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22631:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22509:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22524:4:1",
														"type": ""
													}
												],
												"src": "22358:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22954:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22964:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22976:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22987:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22972:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22972:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22964:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23011:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23022:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23007:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23007:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23030:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23036:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23026:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23026:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23000:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23000:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23000:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23056:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23190:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23064:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23064:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23056:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22934:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22949:4:1",
														"type": ""
													}
												],
												"src": "22783:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23306:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23316:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23328:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23339:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23324:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23324:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23316:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "23396:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23409:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23420:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23405:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23405:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23352:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23352:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23352:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23278:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23290:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23301:4:1",
														"type": ""
													}
												],
												"src": "23208:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23562:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23572:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23584:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23595:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23580:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23580:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23572:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "23652:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23665:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23676:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23661:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23661:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23608:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23608:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23608:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "23733:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23746:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23757:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23742:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23742:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23689:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23689:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23689:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23526:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "23538:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23546:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23557:4:1",
														"type": ""
													}
												],
												"src": "23436:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23814:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23824:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23840:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "23834:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23834:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "23824:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23807:6:1",
														"type": ""
													}
												],
												"src": "23774:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23913:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23924:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23940:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "23934:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23934:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "23924:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23896:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "23906:6:1",
														"type": ""
													}
												],
												"src": "23855:98:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24018:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24029:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24045:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "24039:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24039:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "24029:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24001:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24011:6:1",
														"type": ""
													}
												],
												"src": "23959:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24177:34:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24187:18:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "24202:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "24187:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24149:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24154:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "24165:11:1",
														"type": ""
													}
												],
												"src": "24064:147:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24313:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24330:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24335:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24323:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24323:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24323:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24351:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24370:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24375:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24366:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24366:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "24351:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24285:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24290:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "24301:11:1",
														"type": ""
													}
												],
												"src": "24217:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24436:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24446:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "24469:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "24451:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24451:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "24446:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "24480:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "24503:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "24485:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24485:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "24480:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24643:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "24645:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24645:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24645:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "24564:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24571:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "24639:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24567:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24567:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "24561:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24561:81:1"
															},
															"nodeType": "YulIf",
															"src": "24558:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24675:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "24686:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "24689:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24682:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24682:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "24675:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "24423:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "24426:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "24432:3:1",
														"type": ""
													}
												],
												"src": "24392:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24745:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24755:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "24778:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "24760:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24760:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "24755:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "24789:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "24812:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "24794:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24794:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "24789:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24836:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "24838:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24838:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24838:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "24833:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "24826:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24826:9:1"
															},
															"nodeType": "YulIf",
															"src": "24823:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24868:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "24877:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "24880:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "24873:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24873:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "24868:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "24734:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "24737:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "24743:1:1",
														"type": ""
													}
												],
												"src": "24703:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24942:300:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24952:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "24975:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "24957:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24957:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "24952:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "24986:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25009:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "24991:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24991:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "24986:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25184:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "25186:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25186:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25186:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "25096:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "25089:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "25089:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "25082:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25082:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "25104:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "25111:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "25179:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "25107:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "25107:74:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "25101:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25101:81:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "25078:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25078:105:1"
															},
															"nodeType": "YulIf",
															"src": "25075:131:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25216:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25231:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25234:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "25227:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25227:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "25216:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "24925:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "24928:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "24934:7:1",
														"type": ""
													}
												],
												"src": "24894:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25293:146:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25303:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25326:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "25308:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25308:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "25303:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25337:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25360:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "25342:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25342:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "25337:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25384:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "25386:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25386:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25386:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25378:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25381:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "25375:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25375:8:1"
															},
															"nodeType": "YulIf",
															"src": "25372:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25416:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25428:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25431:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "25424:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25424:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "25416:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "25279:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "25282:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "25288:4:1",
														"type": ""
													}
												],
												"src": "25248:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25490:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25500:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25529:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "25511:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25511:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "25500:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25472:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "25482:7:1",
														"type": ""
													}
												],
												"src": "25445:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25589:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25599:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "25624:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "25617:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25617:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "25610:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25610:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "25599:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25571:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "25581:7:1",
														"type": ""
													}
												],
												"src": "25547:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25702:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25712:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25741:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "25723:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25723:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "25712:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$286",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25684:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "25694:7:1",
														"type": ""
													}
												],
												"src": "25643:110:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25819:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25829:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25858:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "25840:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25840:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "25829:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC721_$933",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25801:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "25811:7:1",
														"type": ""
													}
												],
												"src": "25759:111:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25942:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25952:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25981:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "25963:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25963:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "25952:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IMigratorChef_$927",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25924:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "25934:7:1",
														"type": ""
													}
												],
												"src": "25876:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26044:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26054:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26069:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26076:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "26065:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26065:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "26054:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26026:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "26036:7:1",
														"type": ""
													}
												],
												"src": "25999:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26176:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26186:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "26197:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "26186:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26158:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "26168:7:1",
														"type": ""
													}
												],
												"src": "26131:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26288:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26298:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26342:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "26311:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26311:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "26298:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$286_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26268:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "26278:9:1",
														"type": ""
													}
												],
												"src": "26214:140:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26435:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26445:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26489:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "26458:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26458:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "26445:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC721_$933_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26415:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "26425:9:1",
														"type": ""
													}
												],
												"src": "26360:141:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26588:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26598:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26642:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "26611:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26611:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "26598:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IMigratorChef_$927_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26568:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "26578:9:1",
														"type": ""
													}
												],
												"src": "26507:147:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26720:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26730:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26774:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "26743:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26743:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "26730:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26700:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "26710:9:1",
														"type": ""
													}
												],
												"src": "26660:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26852:53:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26862:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26893:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "26875:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26875:24:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "26862:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26832:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "26842:9:1",
														"type": ""
													}
												],
												"src": "26792:113:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26960:258:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26970:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "26979:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "26974:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "27039:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "27064:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "27069:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "27060:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "27060:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "27083:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "27088:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "27079:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "27079:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "27073:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "27073:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "27053:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27053:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27053:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "27000:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "27003:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "26997:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26997:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "27011:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "27013:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "27022:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "27025:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "27018:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27018:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "27013:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "26993:3:1",
																"statements": []
															},
															"src": "26989:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "27136:76:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "27186:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "27191:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "27182:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "27182:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "27200:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "27175:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27175:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27175:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "27117:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "27120:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "27114:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27114:13:1"
															},
															"nodeType": "YulIf",
															"src": "27111:101:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "26942:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "26947:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "26952:6:1",
														"type": ""
													}
												],
												"src": "26911:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27267:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27277:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27304:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "27286:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27286:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "27277:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "27400:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "27402:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27402:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27402:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27325:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27332:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "27322:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27322:77:1"
															},
															"nodeType": "YulIf",
															"src": "27319:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27431:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27442:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27449:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27438:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27438:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "27431:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27253:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "27263:3:1",
														"type": ""
													}
												],
												"src": "27224:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27491:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27508:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27511:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27501:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27501:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27501:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27605:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27608:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27598:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27598:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27598:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27629:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27632:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "27622:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27622:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27622:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "27463:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27677:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27694:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27697:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27687:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27687:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27687:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27791:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27794:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27784:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27784:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27784:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27815:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27818:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "27808:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27808:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27808:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "27649:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27863:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27880:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27883:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27873:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27873:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27873:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27977:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27980:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27970:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27970:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27970:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28001:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28004:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "27994:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27994:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27994:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "27835:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28110:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28130:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "28120:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28120:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28120:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "28021:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28233:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28250:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28253:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "28243:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28243:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28243:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "28144:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28315:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28325:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "28343:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28350:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28339:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28339:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28359:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "28355:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28355:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "28335:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28335:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "28325:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "28298:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "28308:6:1",
														"type": ""
													}
												],
												"src": "28267:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28481:119:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28503:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28511:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28499:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28499:14:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28515:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28492:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28492:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28492:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28571:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28579:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28567:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28567:15:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28584:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28560:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28560:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28560:33:1"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "28473:6:1",
														"type": ""
													}
												],
												"src": "28375:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28712:63:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28734:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28742:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28730:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28730:14:1"
																	},
																	{
																		"hexValue": "506f776572206973206e6f7420656e6f756768",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28746:21:1",
																		"type": "",
																		"value": "Power is not enough"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28723:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28723:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28723:45:1"
														}
													]
												},
												"name": "store_literal_in_memory_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "28704:6:1",
														"type": ""
													}
												],
												"src": "28606:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28887:71:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28909:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28917:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28905:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28905:14:1"
																	},
																	{
																		"hexValue": "776974686472617720506f77657220627920756e7374616b696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28921:29:1",
																		"type": "",
																		"value": "withdraw Power by unstaking"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28898:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28898:53:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28898:53:1"
														}
													]
												},
												"name": "store_literal_in_memory_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "28879:6:1",
														"type": ""
													}
												],
												"src": "28781:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29070:71:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29092:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29100:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29088:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29088:14:1"
																	},
																	{
																		"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29104:29:1",
																		"type": "",
																		"value": "SafeMath: addition overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29081:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29081:53:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29081:53:1"
														}
													]
												},
												"name": "store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "29062:6:1",
														"type": ""
													}
												],
												"src": "28964:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29253:119:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29275:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29283:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29271:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29271:14:1"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29287:34:1",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29264:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29264:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29264:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29343:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29351:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29339:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29339:15:1"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29356:8:1",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29332:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29332:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29332:33:1"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "29245:6:1",
														"type": ""
													}
												],
												"src": "29147:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29484:68:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29506:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29514:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29502:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29502:14:1"
																	},
																	{
																		"hexValue": "6465706f73697420506f776572206279207374616b696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29518:26:1",
																		"type": "",
																		"value": "deposit Power by staking"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29495:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29495:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29495:50:1"
														}
													]
												},
												"name": "store_literal_in_memory_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "29476:6:1",
														"type": ""
													}
												],
												"src": "29378:174:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29664:114:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29686:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29694:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29682:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29682:14:1"
																	},
																	{
																		"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29698:34:1",
																		"type": "",
																		"value": "SafeMath: multiplication overflo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29675:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29675:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29675:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29754:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29762:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29750:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29750:15:1"
																	},
																	{
																		"hexValue": "77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29767:3:1",
																		"type": "",
																		"value": "w"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29743:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29743:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29743:28:1"
														}
													]
												},
												"name": "store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "29656:6:1",
														"type": ""
													}
												],
												"src": "29558:220:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29890:76:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29912:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29920:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29908:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29908:14:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29924:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29901:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29901:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29901:58:1"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "29882:6:1",
														"type": ""
													}
												],
												"src": "29784:182:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30078:64:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30100:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30108:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30096:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30096:14:1"
																	},
																	{
																		"hexValue": "43616c6c6572206973206e6f742066616d696c79",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30112:22:1",
																		"type": "",
																		"value": "Caller is not family"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30089:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30089:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30089:46:1"
														}
													]
												},
												"name": "store_literal_in_memory_bc4ca777991637c8f4f9389bf11e23dc4a8215e948b482bac5c123f20ce84c64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "30070:6:1",
														"type": ""
													}
												],
												"src": "29972:170:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30254:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30276:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30284:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30272:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30272:14:1"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30288:31:1",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30265:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30265:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30265:55:1"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "30246:6:1",
														"type": ""
													}
												],
												"src": "30148:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30439:62:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30461:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30469:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30457:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30457:14:1"
																	},
																	{
																		"hexValue": "77697468647261773a206e6f7420676f6f64",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30473:20:1",
																		"type": "",
																		"value": "withdraw: not good"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30450:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30450:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30450:44:1"
														}
													]
												},
												"name": "store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "30431:6:1",
														"type": ""
													}
												],
												"src": "30333:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30613:123:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30635:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30643:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30631:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30631:14:1"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30647:34:1",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30624:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30624:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30624:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30703:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30711:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30699:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30699:15:1"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30716:12:1",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30692:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30692:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30692:37:1"
														}
													]
												},
												"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "30605:6:1",
														"type": ""
													}
												],
												"src": "30507:229:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30848:56:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30870:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30878:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30866:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30866:14:1"
																	},
																	{
																		"hexValue": "6d6967726174653a20626164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30882:14:1",
																		"type": "",
																		"value": "migrate: bad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30859:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30859:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30859:38:1"
														}
													]
												},
												"name": "store_literal_in_memory_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "30840:6:1",
														"type": ""
													}
												],
												"src": "30742:162:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31016:135:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31038:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31046:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31034:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31034:14:1"
																	},
																	{
																		"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31050:34:1",
																		"type": "",
																		"value": "SafeERC20: approve from non-zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31027:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "31027:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31027:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31106:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31114:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31102:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31102:15:1"
																	},
																	{
																		"hexValue": "20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31119:24:1",
																		"type": "",
																		"value": " to non-zero allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31095:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "31095:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31095:49:1"
														}
													]
												},
												"name": "store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "31008:6:1",
														"type": ""
													}
												],
												"src": "30910:241:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31263:64:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31285:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31293:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31281:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31281:14:1"
																	},
																	{
																		"hexValue": "6d6967726174653a206e6f206d69677261746f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31297:22:1",
																		"type": "",
																		"value": "migrate: no migrator"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31274:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "31274:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31274:46:1"
														}
													]
												},
												"name": "store_literal_in_memory_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "31255:6:1",
														"type": ""
													}
												],
												"src": "31157:170:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31376:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "31433:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "31442:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "31445:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "31435:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "31435:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "31435:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "31399:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "31424:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "31406:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "31406:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "31396:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31396:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "31389:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "31389:43:1"
															},
															"nodeType": "YulIf",
															"src": "31386:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "31369:5:1",
														"type": ""
													}
												],
												"src": "31333:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31501:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "31555:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "31564:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "31567:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "31557:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "31557:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "31557:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "31524:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "31546:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "31531:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "31531:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "31521:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31521:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "31514:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "31514:40:1"
															},
															"nodeType": "YulIf",
															"src": "31511:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "31494:5:1",
														"type": ""
													}
												],
												"src": "31461:116:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31640:93:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "31711:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "31720:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "31723:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "31713:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "31713:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "31713:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "31663:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "31702:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$286",
																					"nodeType": "YulIdentifier",
																					"src": "31670:31:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "31670:38:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "31660:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31660:49:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "31653:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "31653:57:1"
															},
															"nodeType": "YulIf",
															"src": "31650:77:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$286",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "31633:5:1",
														"type": ""
													}
												],
												"src": "31583:150:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31797:94:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "31869:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "31878:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "31881:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "31871:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "31871:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "31871:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "31820:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "31860:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC721_$933",
																					"nodeType": "YulIdentifier",
																					"src": "31827:32:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "31827:39:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "31817:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31817:50:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "31810:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "31810:58:1"
															},
															"nodeType": "YulIf",
															"src": "31807:78:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC721_$933",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "31790:5:1",
														"type": ""
													}
												],
												"src": "31739:152:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31961:100:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "32039:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32048:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32051:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "32041:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "32041:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "32041:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "31984:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "32030:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IMigratorChef_$927",
																					"nodeType": "YulIdentifier",
																					"src": "31991:38:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "31991:45:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "31981:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31981:56:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "31974:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "31974:64:1"
															},
															"nodeType": "YulIf",
															"src": "31971:84:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IMigratorChef_$927",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "31954:5:1",
														"type": ""
													}
												],
												"src": "31897:164:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32110:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "32167:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32176:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32179:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "32169:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "32169:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "32169:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "32133:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "32158:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "32140:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "32140:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "32130:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32130:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "32123:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "32123:43:1"
															},
															"nodeType": "YulIf",
															"src": "32120:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "32103:5:1",
														"type": ""
													}
												],
												"src": "32067:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_contract$_IERC20_$286(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$286(value)\n    }\n\n    function abi_decode_t_contract$_IERC20_$286_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$286(value)\n    }\n\n    function abi_decode_t_contract$_IERC721_$933(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC721_$933(value)\n    }\n\n    function abi_decode_t_contract$_IMigratorChef_$927(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IMigratorChef_$927(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$286_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$286_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IERC721_$933t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC721_$933(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IMigratorChef_$927(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IMigratorChef_$927(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_contract$_IERC20_$286t_bool(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IERC20_$286(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$286_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC721_$933_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC721_$933_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IMigratorChef_$927_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IMigratorChef_$927_to_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_bc4ca777991637c8f4f9389bf11e23dc4a8215e948b482bac5c123f20ce84c64_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_bc4ca777991637c8f4f9389bf11e23dc4a8215e948b482bac5c123f20ce84c64(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 54)\n        store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$286__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$286_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC721_$933_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_contract$_IERC721_$933_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IMigratorChef_$927__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IMigratorChef_$927_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_bc4ca777991637c8f4f9389bf11e23dc4a8215e948b482bac5c123f20ce84c64__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bc4ca777991637c8f4f9389bf11e23dc4a8215e948b482bac5c123f20ce84c64_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_contract$_IERC20_$286(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_IERC721_$933(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_IMigratorChef_$927(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$286_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_contract$_IERC721_$933_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_contract$_IMigratorChef_$927_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406(memPtr) {\n\n        mstore(add(memPtr, 0), \"Power is not enough\")\n\n    }\n\n    function store_literal_in_memory_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f(memPtr) {\n\n        mstore(add(memPtr, 0), \"withdraw Power by unstaking\")\n\n    }\n\n    function store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeMath: addition overflow\")\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function store_literal_in_memory_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108(memPtr) {\n\n        mstore(add(memPtr, 0), \"deposit Power by staking\")\n\n    }\n\n    function store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeMath: multiplication overflo\")\n\n        mstore(add(memPtr, 32), \"w\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_bc4ca777991637c8f4f9389bf11e23dc4a8215e948b482bac5c123f20ce84c64(memPtr) {\n\n        mstore(add(memPtr, 0), \"Caller is not family\")\n\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df(memPtr) {\n\n        mstore(add(memPtr, 0), \"withdraw: not good\")\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function store_literal_in_memory_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8(memPtr) {\n\n        mstore(add(memPtr, 0), \"migrate: bad\")\n\n    }\n\n    function store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: approve from non-zero\")\n\n        mstore(add(memPtr, 32), \" to non-zero allowance\")\n\n    }\n\n    function store_literal_in_memory_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445(memPtr) {\n\n        mstore(add(memPtr, 0), \"migrate: no migrator\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IERC20_$286(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$286(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IERC721_$933(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC721_$933(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IMigratorChef_$927(value) {\n        if iszero(eq(value, cleanup_t_contract$_IMigratorChef_$927(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x227 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x61C1B724 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xCF35FDDF GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xCF35FDDF EQ PUSH2 0x605 JUMPI DUP1 PUSH4 0xD209DB8C EQ PUSH2 0x621 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x651 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x66D JUMPI DUP1 PUSH4 0xF3239AB5 EQ PUSH2 0x689 JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x54C JUMPI DUP1 PUSH4 0x8DBB1E3A EQ PUSH2 0x56A JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x59A JUMPI DUP1 PUSH4 0xC11490CC EQ PUSH2 0x5CB JUMPI DUP1 PUSH4 0xCB3CBA55 EQ PUSH2 0x5E7 JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x71916982 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x71916982 EQ PUSH2 0x4A4 JUMPI DUP1 PUSH4 0x7CD07E47 EQ PUSH2 0x4C2 JUMPI DUP1 PUSH4 0x83E32135 EQ PUSH2 0x4E0 JUMPI DUP1 PUSH4 0x8AA28550 EQ PUSH2 0x4FE JUMPI DUP1 PUSH4 0x8C51793B EQ PUSH2 0x51C JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x61C1B724 EQ PUSH2 0x443 JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x474 JUMPI DUP1 PUSH4 0x64482F79 EQ PUSH2 0x47E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x49A JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x41441D3B GT PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x4EA2813C GT PUSH2 0x182 JUMPI DUP1 PUSH4 0x4EA2813C EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x3D1 JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0x5990C569 EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0x5FFE6146 EQ PUSH2 0x427 JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x41441D3B EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0x454B0608 EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x397 JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x17CAF6F1 GT PUSH2 0x1FA JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x1D5FBD87 EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x1EAAA045 EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0x23CF3118 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x3DF7AFF3 EQ PUSH2 0x327 JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0xBA33A58 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x1058D281 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x282 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x234 PUSH2 0x6B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x3E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x264 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x35BA JUMP JUMPDEST PUSH2 0x6C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x280 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x36AE JUMP JUMPDEST PUSH2 0x786 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x36AE JUMP JUMPDEST PUSH2 0xA45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AC SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3BC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BD PUSH2 0xAA5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x3E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x379B JUMP JUMPDEST PUSH2 0xAAB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x309 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x3748 JUMP JUMPDEST PUSH2 0xF3F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x325 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x3681 JUMP JUMPDEST PUSH2 0x10CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x341 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x36AE JUMP JUMPDEST PUSH2 0x118C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x36AE JUMP JUMPDEST PUSH2 0x1212 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x379 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x374 SWAP2 SWAP1 PUSH2 0x379B JUMP JUMPDEST PUSH2 0x149A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x395 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x390 SWAP2 SWAP1 PUSH2 0x36AE JUMP JUMPDEST PUSH2 0x1791 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39F PUSH2 0x1B11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AC SWAP2 SWAP1 PUSH2 0x3E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CA SWAP2 SWAP1 PUSH2 0x3641 JUMP JUMPDEST PUSH2 0x1B17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E6 SWAP2 SWAP1 PUSH2 0x36AE JUMP JUMPDEST PUSH2 0x1C40 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x407 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x36AE JUMP JUMPDEST PUSH2 0x1DEE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x411 PUSH2 0x1F27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41E SWAP2 SWAP1 PUSH2 0x3E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x441 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43C SWAP2 SWAP1 PUSH2 0x36AE JUMP JUMPDEST PUSH2 0x1F2D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x45D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x458 SWAP2 SWAP1 PUSH2 0x36AE JUMP JUMPDEST PUSH2 0x1FB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46B SWAP3 SWAP2 SWAP1 PUSH2 0x3C0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47C PUSH2 0x2007 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x498 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x493 SWAP2 SWAP1 PUSH2 0x37DB JUMP JUMPDEST PUSH2 0x203A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A2 PUSH2 0x2146 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4AC PUSH2 0x21CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B9 SWAP2 SWAP1 PUSH2 0x3B07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4CA PUSH2 0x21F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D7 SWAP2 SWAP1 PUSH2 0x3C34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E8 PUSH2 0x221A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F5 SWAP2 SWAP1 PUSH2 0x3B07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x506 PUSH2 0x2240 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x513 SWAP2 SWAP1 PUSH2 0x3E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x536 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x531 SWAP2 SWAP1 PUSH2 0x35BA JUMP JUMPDEST PUSH2 0x2246 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x543 SWAP2 SWAP1 PUSH2 0x3E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x554 PUSH2 0x228F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x561 SWAP2 SWAP1 PUSH2 0x3B07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x584 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x57F SWAP2 SWAP1 PUSH2 0x379B JUMP JUMPDEST PUSH2 0x22B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x591 SWAP2 SWAP1 PUSH2 0x3E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5AF SWAP2 SWAP1 PUSH2 0x3708 JUMP JUMPDEST PUSH2 0x22E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C2 SWAP3 SWAP2 SWAP1 PUSH2 0x3E6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5E0 SWAP2 SWAP1 PUSH2 0x379B JUMP JUMPDEST PUSH2 0x231A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5EF PUSH2 0x23C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5FC SWAP2 SWAP1 PUSH2 0x3BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x61A SWAP2 SWAP1 PUSH2 0x3708 JUMP JUMPDEST PUSH2 0x23EA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x63B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x636 SWAP2 SWAP1 PUSH2 0x35BA JUMP JUMPDEST PUSH2 0x270F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x648 SWAP2 SWAP1 PUSH2 0x3E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x66B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x666 SWAP2 SWAP1 PUSH2 0x379B JUMP JUMPDEST PUSH2 0x2727 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x687 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x682 SWAP2 SWAP1 PUSH2 0x35BA JUMP JUMPDEST PUSH2 0x29E7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x69E SWAP2 SWAP1 PUSH2 0x3708 JUMP JUMPDEST PUSH2 0x2ADF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B0 SWAP2 SWAP1 PUSH2 0x3E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6CE PUSH2 0x2D13 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6EC PUSH2 0x228F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x742 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x739 SWAP1 PUSH2 0x3D51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x79D JUMPI PUSH2 0x79C PUSH2 0x418E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP3 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x848 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83F SWAP1 PUSH2 0x3DB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x852 PUSH1 0x0 PUSH2 0x1C40 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x89C DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x88E PUSH5 0xE8D4A51000 PUSH2 0x880 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2D1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D96 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2DE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x93D JUMPI PUSH2 0x8F9 DUP2 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2E2A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP5 GT ISZERO PUSH2 0x9B5 JUMPI PUSH2 0x95D DUP5 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x2DE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x9B4 CALLER DUP6 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2E88 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH2 0x9E7 PUSH5 0xE8D4A51000 PUSH2 0x9D9 DUP6 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x2D1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D96 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP7 PUSH1 0x40 MLOAD PUSH2 0xA37 SWAP2 SWAP1 PUSH2 0x3E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xAC1 JUMPI PUSH2 0xAC0 PUSH2 0x418E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB8D SWAP2 SWAP1 PUSH2 0x3B07 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBB9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBDD SWAP2 SWAP1 PUSH2 0x36DB JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD NUMBER GT DUP1 ISZERO PUSH2 0xBF3 JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0xC8E JUMPI PUSH1 0x0 PUSH2 0xC08 DUP6 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x22B8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC4B PUSH1 0x8 SLOAD PUSH2 0xC3D DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0xC2F PUSH1 0x3 SLOAD DUP8 PUSH2 0x2D1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D96 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC89 PUSH2 0xC7A DUP5 PUSH2 0xC6C PUSH5 0xE8D4A51000 DUP6 PUSH2 0x2D1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D96 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x2E2A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH1 0x0 PUSH2 0xCD4 DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0xCC6 PUSH5 0xE8D4A51000 PUSH2 0xCB8 DUP8 DUP10 PUSH1 0x0 ADD SLOAD PUSH2 0x2D1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D96 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2DE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0xCEC JUMPI PUSH2 0xCEB PUSH2 0x418E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP PUSH1 0x0 PUSH2 0xD50 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP5 PUSH2 0x2E2A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 ADD SLOAD DUP2 GT ISZERO PUSH2 0xD87 JUMPI PUSH1 0x0 DUP9 EQ ISZERO PUSH2 0xD72 JUMPI PUSH2 0xD71 PUSH1 0x0 PUSH2 0x786 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP9 EQ PUSH2 0xD86 JUMPI PUSH2 0xD85 DUP9 PUSH1 0x0 PUSH2 0x149A JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH1 0x1 ADD SLOAD LT PUSH2 0xE0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE03 SWAP1 PUSH2 0x3C91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE62 DUP3 PUSH1 0x1 ADD SLOAD PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2DE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x17E5883C CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF02 SWAP2 SWAP1 PUSH2 0x3B07 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF30 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF47 PUSH2 0x2D13 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF65 PUSH2 0x228F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFBB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB2 SWAP1 PUSH2 0x3D51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0xFCA JUMPI PUSH2 0xFC9 PUSH2 0x2007 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD NUMBER GT PUSH2 0xFDD JUMPI PUSH1 0x9 SLOAD PUSH2 0xFDF JUMP JUMPDEST NUMBER JUMPDEST SWAP1 POP PUSH2 0xFF6 DUP5 PUSH1 0x8 SLOAD PUSH2 0x2E2A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x10D4 PUSH2 0x2D13 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10F2 PUSH2 0x228F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1148 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x113F SWAP1 PUSH2 0x3D51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1194 PUSH2 0x2D13 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11B2 PUSH2 0x228F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1208 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11FF SWAP1 PUSH2 0x3D51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x1229 JUMPI PUSH2 0x1228 PUSH2 0x418E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1297 PUSH1 0x0 PUSH2 0x1C40 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x1391 JUMPI PUSH1 0x0 PUSH2 0x12EE DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x12E0 PUSH5 0xE8D4A51000 PUSH2 0x12D2 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2D1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D96 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2DE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x138F JUMPI PUSH2 0x134B DUP2 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2E2A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x140B JUMPI PUSH2 0x13EB CALLER ADDRESS DUP6 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2F0E SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1402 DUP4 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x2E2A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x143D PUSH5 0xE8D4A51000 PUSH2 0x142F DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x2D1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D96 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP6 PUSH1 0x40 MLOAD PUSH2 0x148D SWAP2 SWAP1 PUSH2 0x3E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x14DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D5 SWAP1 PUSH2 0x3CB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x14F4 JUMPI PUSH2 0x14F3 PUSH2 0x418E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP3 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x159F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1596 SWAP1 PUSH2 0x3DB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15A8 DUP5 PUSH2 0x1C40 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15F2 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x15E4 PUSH5 0xE8D4A51000 PUSH2 0x15D6 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2D1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D96 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2DE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1693 JUMPI PUSH2 0x164F DUP2 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2E2A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x16AA DUP5 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x2DE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x16E4 PUSH5 0xE8D4A51000 PUSH2 0x16D6 DUP6 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x2D1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D96 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x173B CALLER DUP6 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2E88 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1782 SWAP2 SWAP1 PUSH2 0x3E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1823 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x181A SWAP1 PUSH2 0x3E31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1839 JUMPI PUSH2 0x1838 PUSH2 0x418E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18AD SWAP2 SWAP1 PUSH2 0x3B07 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18FD SWAP2 SWAP1 PUSH2 0x36DB JUMP JUMPDEST SWAP1 POP PUSH2 0x194C PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2F97 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCE5494BB DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19A9 SWAP2 SWAP1 PUSH2 0x3BAB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x19D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19FB SWAP2 SWAP1 PUSH2 0x3614 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A36 SWAP2 SWAP1 PUSH2 0x3B07 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A62 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A86 SWAP2 SWAP1 PUSH2 0x36DB JUMP JUMPDEST DUP3 EQ PUSH2 0x1AC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ABE SWAP1 PUSH2 0x3DF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP5 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1B1F PUSH2 0x2D13 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B3D PUSH2 0x228F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B93 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B8A SWAP1 PUSH2 0x3D51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1C56 JUMPI PUSH2 0x1C55 PUSH2 0x418E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD NUMBER GT PUSH2 0x1C77 JUMPI POP PUSH2 0x1DEB JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CD6 SWAP2 SWAP1 PUSH2 0x3B07 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D02 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D26 SWAP2 SWAP1 PUSH2 0x36DB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x1D40 JUMPI NUMBER DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x1DEB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D50 DUP4 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x22B8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1D93 PUSH1 0x8 SLOAD PUSH2 0x1D85 DUP7 PUSH1 0x1 ADD SLOAD PUSH2 0x1D77 PUSH1 0x3 SLOAD DUP8 PUSH2 0x2D1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D96 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1DD5 PUSH2 0x1DC2 DUP5 PUSH2 0x1DB4 PUSH5 0xE8D4A51000 DUP6 PUSH2 0x2D1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D96 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH1 0x3 ADD SLOAD PUSH2 0x2E2A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP NUMBER DUP5 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1E04 JUMPI PUSH2 0x1E03 PUSH2 0x418E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1EBB CALLER DUP3 PUSH1 0x0 ADD SLOAD DUP5 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2E88 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 DUP4 PUSH1 0x0 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x1F06 SWAP2 SWAP1 PUSH2 0x3E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1F35 PUSH2 0x2D13 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F53 PUSH2 0x228F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1FA9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FA0 SWAP1 PUSH2 0x3D51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1FC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2036 JUMPI PUSH2 0x2025 DUP2 PUSH2 0x1C40 JUMP JUMPDEST DUP1 PUSH2 0x202F SWAP1 PUSH2 0x40E7 JUMP JUMPDEST SWAP1 POP PUSH2 0x2014 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2042 PUSH2 0x2D13 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2060 PUSH2 0x228F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x20B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20AD SWAP1 PUSH2 0x3D51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x20C5 JUMPI PUSH2 0x20C4 PUSH2 0x2007 JUMP JUMPDEST JUMPDEST PUSH2 0x2111 DUP3 PUSH2 0x2103 PUSH1 0x6 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x20E0 JUMPI PUSH2 0x20DF PUSH2 0x418E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x8 SLOAD PUSH2 0x2DE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2E2A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x212C JUMPI PUSH2 0x212B PUSH2 0x418E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x214E PUSH2 0x2D13 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x216C PUSH2 0x228F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x21C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21B9 SWAP1 PUSH2 0x3D51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x21CC PUSH1 0x0 PUSH2 0x30F5 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22E1 PUSH1 0x4 SLOAD PUSH2 0x22D3 DUP6 DUP6 PUSH2 0x2DE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0x2322 PUSH2 0x2D13 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2340 PUSH2 0x228F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2396 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x238D SWAP1 PUSH2 0x3D51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x23AB JUMPI PUSH2 0x23AA PUSH2 0x418E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x2447 JUMPI POP PUSH1 0x0 PUSH1 0x1 GT JUMPDEST PUSH2 0x2486 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x247D SWAP1 PUSH2 0x3D71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x249D JUMPI PUSH2 0x249C PUSH2 0x418E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x250B PUSH1 0x0 PUSH2 0x1C40 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x2605 JUMPI PUSH1 0x0 PUSH2 0x2562 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x2554 PUSH5 0xE8D4A51000 PUSH2 0x2546 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2D1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D96 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2DE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x2603 JUMPI PUSH2 0x25BF DUP2 PUSH1 0xC PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2E2A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP5 GT ISZERO PUSH2 0x267F JUMPI PUSH2 0x265F CALLER ADDRESS DUP7 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2F0E SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2676 DUP5 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x2E2A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x26B1 PUSH5 0xE8D4A51000 PUSH2 0x26A3 DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x2D1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D96 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP7 PUSH1 0x40 MLOAD PUSH2 0x2701 SWAP2 SWAP1 PUSH2 0x3E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x276B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2762 SWAP1 PUSH2 0x3D11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2781 JUMPI PUSH2 0x2780 PUSH2 0x418E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x27EE DUP5 PUSH2 0x1C40 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x28E8 JUMPI PUSH1 0x0 PUSH2 0x2845 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x2837 PUSH5 0xE8D4A51000 PUSH2 0x2829 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2D1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D96 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2DE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x28E6 JUMPI PUSH2 0x28A2 DUP2 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2E2A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMPDEST PUSH2 0x2939 CALLER ADDRESS DUP6 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2F0E SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2950 DUP4 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x2E2A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x298A PUSH5 0xE8D4A51000 PUSH2 0x297C DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x2D1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D96 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP6 PUSH1 0x40 MLOAD PUSH2 0x29D9 SWAP2 SWAP1 PUSH2 0x3E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x29EF PUSH2 0x2D13 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2A0D PUSH2 0x228F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2A63 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A5A SWAP1 PUSH2 0x3D51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2AD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2ACA SWAP1 PUSH2 0x3C71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2ADC DUP2 PUSH2 0x30F5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2AF6 JUMPI PUSH2 0x2AF5 PUSH2 0x418E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BC2 SWAP2 SWAP1 PUSH2 0x3B07 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2BDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2BEE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C12 SWAP2 SWAP1 PUSH2 0x36DB JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD NUMBER GT DUP1 ISZERO PUSH2 0x2C28 JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x2CC3 JUMPI PUSH1 0x0 PUSH2 0x2C3D DUP6 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x22B8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2C80 PUSH1 0x8 SLOAD PUSH2 0x2C72 DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0x2C64 PUSH1 0x3 SLOAD DUP8 PUSH2 0x2D1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D96 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x2CBE PUSH2 0x2CAF DUP5 PUSH2 0x2CA1 PUSH5 0xE8D4A51000 DUP6 PUSH2 0x2D1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D96 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x2E2A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH2 0x2D07 DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x2CF9 PUSH5 0xE8D4A51000 PUSH2 0x2CEB DUP7 DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0x2D1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D96 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2DE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x2D2E JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x2D90 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0x2D3C SWAP2 SWAP1 PUSH2 0x3F4E JUMP JUMPDEST SWAP1 POP DUP3 DUP5 DUP3 PUSH2 0x2D4B SWAP2 SWAP1 PUSH2 0x3F1D JUMP JUMPDEST EQ PUSH2 0x2D8B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D82 SWAP1 PUSH2 0x3D31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DD8 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x31B9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E22 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x321C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0x2E39 SWAP2 SWAP1 PUSH2 0x3EC7 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x2E7E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E75 SWAP1 PUSH2 0x3CD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2F09 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2EA7 SWAP3 SWAP2 SWAP1 PUSH2 0x3B82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x3280 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2F91 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2F2F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3B4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x3280 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 EQ DUP1 PUSH2 0x3030 JUMPI POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E ADDRESS DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FDE SWAP3 SWAP2 SWAP1 PUSH2 0x3B22 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2FF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x300A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x302E SWAP2 SWAP1 PUSH2 0x36DB JUMP JUMPDEST EQ JUMPDEST PUSH2 0x306F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3066 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x30F0 DUP4 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x308E SWAP3 SWAP2 SWAP1 PUSH2 0x3B82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x3280 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x3200 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31F7 SWAP2 SWAP1 PUSH2 0x3C4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0x320F SWAP2 SWAP1 PUSH2 0x3F1D JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x3264 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x325B SWAP2 SWAP1 PUSH2 0x3C4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0x3273 SWAP2 SWAP1 PUSH2 0x3FA8 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32E2 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3347 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x3342 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x3302 SWAP2 SWAP1 PUSH2 0x35E7 JUMP JUMPDEST PUSH2 0x3341 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3338 SWAP1 PUSH2 0x3DD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3356 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x335F JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x33A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x339B SWAP1 PUSH2 0x3CF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x33AD DUP6 PUSH2 0x3473 JUMP JUMPDEST PUSH2 0x33EC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33E3 SWAP1 PUSH2 0x3D91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x3415 SWAP2 SWAP1 PUSH2 0x3AF0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3452 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3457 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x3467 DUP3 DUP3 DUP7 PUSH2 0x3496 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x34A6 JUMPI DUP3 SWAP1 POP PUSH2 0x34F6 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x34B9 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34ED SWAP2 SWAP1 PUSH2 0x3C4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x350C DUP2 PUSH2 0x44F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3521 DUP2 PUSH2 0x450F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3536 DUP2 PUSH2 0x450F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x354B DUP2 PUSH2 0x4526 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3560 DUP2 PUSH2 0x4526 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3575 DUP2 PUSH2 0x453D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x358A DUP2 PUSH2 0x4554 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x359F DUP2 PUSH2 0x456B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x35B4 DUP2 PUSH2 0x456B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x35D0 JUMPI PUSH2 0x35CF PUSH2 0x41BD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x35DE DUP5 DUP3 DUP6 ADD PUSH2 0x34FD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x35FD JUMPI PUSH2 0x35FC PUSH2 0x41BD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x360B DUP5 DUP3 DUP6 ADD PUSH2 0x3527 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x362A JUMPI PUSH2 0x3629 PUSH2 0x41BD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3638 DUP5 DUP3 DUP6 ADD PUSH2 0x3551 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3658 JUMPI PUSH2 0x3657 PUSH2 0x41BD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3666 DUP6 DUP3 DUP7 ADD PUSH2 0x3566 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3677 DUP6 DUP3 DUP7 ADD PUSH2 0x3590 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3697 JUMPI PUSH2 0x3696 PUSH2 0x41BD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x36A5 DUP5 DUP3 DUP6 ADD PUSH2 0x357B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x36C4 JUMPI PUSH2 0x36C3 PUSH2 0x41BD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x36D2 DUP5 DUP3 DUP6 ADD PUSH2 0x3590 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x36F1 JUMPI PUSH2 0x36F0 PUSH2 0x41BD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x36FF DUP5 DUP3 DUP6 ADD PUSH2 0x35A5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x371F JUMPI PUSH2 0x371E PUSH2 0x41BD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x372D DUP6 DUP3 DUP7 ADD PUSH2 0x3590 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x373E DUP6 DUP3 DUP7 ADD PUSH2 0x34FD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3761 JUMPI PUSH2 0x3760 PUSH2 0x41BD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x376F DUP7 DUP3 DUP8 ADD PUSH2 0x3590 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3780 DUP7 DUP3 DUP8 ADD PUSH2 0x353C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3791 DUP7 DUP3 DUP8 ADD PUSH2 0x3512 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x37B2 JUMPI PUSH2 0x37B1 PUSH2 0x41BD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37C0 DUP6 DUP3 DUP7 ADD PUSH2 0x3590 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x37D1 DUP6 DUP3 DUP7 ADD PUSH2 0x3590 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x37F4 JUMPI PUSH2 0x37F3 PUSH2 0x41BD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3802 DUP7 DUP3 DUP8 ADD PUSH2 0x3590 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3813 DUP7 DUP3 DUP8 ADD PUSH2 0x3590 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3824 DUP7 DUP3 DUP8 ADD PUSH2 0x3512 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x3837 DUP2 PUSH2 0x3FDC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3848 DUP3 PUSH2 0x3E95 JUMP JUMPDEST PUSH2 0x3852 DUP2 DUP6 PUSH2 0x3EAB JUMP JUMPDEST SWAP4 POP PUSH2 0x3862 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x40B4 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3877 DUP2 PUSH2 0x405A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3886 DUP2 PUSH2 0x406C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3895 DUP2 PUSH2 0x407E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38A6 DUP3 PUSH2 0x3EA0 JUMP JUMPDEST PUSH2 0x38B0 DUP2 DUP6 PUSH2 0x3EB6 JUMP JUMPDEST SWAP4 POP PUSH2 0x38C0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x40B4 JUMP JUMPDEST PUSH2 0x38C9 DUP2 PUSH2 0x41C2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38E1 PUSH1 0x26 DUP4 PUSH2 0x3EB6 JUMP JUMPDEST SWAP2 POP PUSH2 0x38EC DUP3 PUSH2 0x41D3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3904 PUSH1 0x13 DUP4 PUSH2 0x3EB6 JUMP JUMPDEST SWAP2 POP PUSH2 0x390F DUP3 PUSH2 0x4222 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3927 PUSH1 0x1B DUP4 PUSH2 0x3EB6 JUMP JUMPDEST SWAP2 POP PUSH2 0x3932 DUP3 PUSH2 0x424B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x394A PUSH1 0x1B DUP4 PUSH2 0x3EB6 JUMP JUMPDEST SWAP2 POP PUSH2 0x3955 DUP3 PUSH2 0x4274 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x396D PUSH1 0x26 DUP4 PUSH2 0x3EB6 JUMP JUMPDEST SWAP2 POP PUSH2 0x3978 DUP3 PUSH2 0x429D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3990 PUSH1 0x18 DUP4 PUSH2 0x3EB6 JUMP JUMPDEST SWAP2 POP PUSH2 0x399B DUP3 PUSH2 0x42EC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39B3 PUSH1 0x21 DUP4 PUSH2 0x3EB6 JUMP JUMPDEST SWAP2 POP PUSH2 0x39BE DUP3 PUSH2 0x4315 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39D6 PUSH1 0x20 DUP4 PUSH2 0x3EB6 JUMP JUMPDEST SWAP2 POP PUSH2 0x39E1 DUP3 PUSH2 0x4364 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39F9 PUSH1 0x14 DUP4 PUSH2 0x3EB6 JUMP JUMPDEST SWAP2 POP PUSH2 0x3A04 DUP3 PUSH2 0x438D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A1C PUSH1 0x1D DUP4 PUSH2 0x3EB6 JUMP JUMPDEST SWAP2 POP PUSH2 0x3A27 DUP3 PUSH2 0x43B6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A3F PUSH1 0x12 DUP4 PUSH2 0x3EB6 JUMP JUMPDEST SWAP2 POP PUSH2 0x3A4A DUP3 PUSH2 0x43DF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A62 PUSH1 0x2A DUP4 PUSH2 0x3EB6 JUMP JUMPDEST SWAP2 POP PUSH2 0x3A6D DUP3 PUSH2 0x4408 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A85 PUSH1 0xC DUP4 PUSH2 0x3EB6 JUMP JUMPDEST SWAP2 POP PUSH2 0x3A90 DUP3 PUSH2 0x4457 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AA8 PUSH1 0x36 DUP4 PUSH2 0x3EB6 JUMP JUMPDEST SWAP2 POP PUSH2 0x3AB3 DUP3 PUSH2 0x4480 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3ACB PUSH1 0x14 DUP4 PUSH2 0x3EB6 JUMP JUMPDEST SWAP2 POP PUSH2 0x3AD6 DUP3 PUSH2 0x44CF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3AEA DUP2 PUSH2 0x4050 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AFC DUP3 DUP5 PUSH2 0x383D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3B1C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x382E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3B37 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x382E JUMP JUMPDEST PUSH2 0x3B44 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x382E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3B60 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x382E JUMP JUMPDEST PUSH2 0x3B6D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x382E JUMP JUMPDEST PUSH2 0x3B7A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3AE1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3B97 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x382E JUMP JUMPDEST PUSH2 0x3BA4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3AE1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3BC0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x386E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3BDB PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x386E JUMP JUMPDEST PUSH2 0x3BE8 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3AE1 JUMP JUMPDEST PUSH2 0x3BF5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3AE1 JUMP JUMPDEST PUSH2 0x3C02 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3AE1 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3C20 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x387D JUMP JUMPDEST PUSH2 0x3C2D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3AE1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3C49 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x388C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C69 DUP2 DUP5 PUSH2 0x389B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C8A DUP2 PUSH2 0x38D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3CAA DUP2 PUSH2 0x38F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3CCA DUP2 PUSH2 0x391A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3CEA DUP2 PUSH2 0x393D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D0A DUP2 PUSH2 0x3960 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D2A DUP2 PUSH2 0x3983 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D4A DUP2 PUSH2 0x39A6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D6A DUP2 PUSH2 0x39C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D8A DUP2 PUSH2 0x39EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DAA DUP2 PUSH2 0x3A0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DCA DUP2 PUSH2 0x3A32 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DEA DUP2 PUSH2 0x3A55 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E0A DUP2 PUSH2 0x3A78 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E2A DUP2 PUSH2 0x3A9B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E4A DUP2 PUSH2 0x3ABE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3E66 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3AE1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3E81 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3AE1 JUMP JUMPDEST PUSH2 0x3E8E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3AE1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3ED2 DUP3 PUSH2 0x4050 JUMP JUMPDEST SWAP2 POP PUSH2 0x3EDD DUP4 PUSH2 0x4050 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x3F12 JUMPI PUSH2 0x3F11 PUSH2 0x4130 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F28 DUP3 PUSH2 0x4050 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F33 DUP4 PUSH2 0x4050 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3F43 JUMPI PUSH2 0x3F42 PUSH2 0x415F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F59 DUP3 PUSH2 0x4050 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F64 DUP4 PUSH2 0x4050 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3F9D JUMPI PUSH2 0x3F9C PUSH2 0x4130 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FB3 DUP3 PUSH2 0x4050 JUMP JUMPDEST SWAP2 POP PUSH2 0x3FBE DUP4 PUSH2 0x4050 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x3FD1 JUMPI PUSH2 0x3FD0 PUSH2 0x4130 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FE7 DUP3 PUSH2 0x4030 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4005 DUP3 PUSH2 0x3FDC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4017 DUP3 PUSH2 0x3FDC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4029 DUP3 PUSH2 0x3FDC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4065 DUP3 PUSH2 0x4090 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4077 DUP3 PUSH2 0x4090 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4089 DUP3 PUSH2 0x4090 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x409B DUP3 PUSH2 0x40A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40AD DUP3 PUSH2 0x4030 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x40D2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x40B7 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x40E1 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40F2 DUP3 PUSH2 0x4050 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x4125 JUMPI PUSH2 0x4124 PUSH2 0x4130 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x506F776572206973206E6F7420656E6F75676800000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x776974686472617720506F77657220627920756E7374616B696E670000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6465706F73697420506F776572206279207374616B696E670000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F742066616D696C79000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x77697468647261773A206E6F7420676F6F640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6D6967726174653A206261640000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20746F206E6F6E2D7A65726F20616C6C6F77616E636500000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6D6967726174653A206E6F206D69677261746F72000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x4501 DUP2 PUSH2 0x3FDC JUMP JUMPDEST DUP2 EQ PUSH2 0x450C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x4518 DUP2 PUSH2 0x3FEE JUMP JUMPDEST DUP2 EQ PUSH2 0x4523 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x452F DUP2 PUSH2 0x3FFA JUMP JUMPDEST DUP2 EQ PUSH2 0x453A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x4546 DUP2 PUSH2 0x400C JUMP JUMPDEST DUP2 EQ PUSH2 0x4551 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x455D DUP2 PUSH2 0x401E JUMP JUMPDEST DUP2 EQ PUSH2 0x4568 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x4574 DUP2 PUSH2 0x4050 JUMP JUMPDEST DUP2 EQ PUSH2 0x457F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x52A6C08AFCEFD74110E5339A CREATE 0xD5 ISZERO 0xAF SIGNEXTEND REVERT 0x2A 0xD1 SWAP15 0xFB 0xF6 SWAP13 0xED PUSH8 0xC240F8F50964736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "22111:14004:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27199:95;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25194:126;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;34809:747;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;23943:26;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;24184:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25792:1268;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;27463:560;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;28501:102;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;36003:109;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;33056:797;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;32216:787;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;28726:491;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;24276:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25454:206;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;30608:690;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;35635:356;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;23657:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;27068:123;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;23533:26;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;30352:180;;;:::i;:::-;;28120:305;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;20756:103;;;:::i;:::-;;24347:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;23880:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;24310:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;23740:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25328:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;20105:87;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;29293:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;24025:64;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;25668:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;23593:17;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;33861:896;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;24384:47;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;31368:796;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;21014:201;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;29502:767;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;27199:95;27244:7;27271:8;:15;;;;27264:22;;27199:95;:::o;25194:126::-;20336:12;:10;:12::i;:::-;20325:23;;:7;:5;:7::i;:::-;:23;;;20317:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;25296:16:::1;25278:15;;:34;;;;;;;;;;;;;;;;;;25194:126:::0;:::o;34809:747::-;34866:21;34890:8;34899:1;34890:11;;;;;;;;:::i;:::-;;;;;;;;;;;;34866:35;;34912:21;34936:8;:11;34945:1;34936:11;;;;;;;;;;;:23;34948:10;34936:23;;;;;;;;;;;;;;;34912:47;;34993:7;34978:4;:11;;;:22;;34970:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;35034:13;35045:1;35034:10;:13::i;:::-;35058:15;35076:69;35129:4;:15;;;35076:48;35119:4;35076:38;35092:4;:21;;;35076:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;:52;;:69;;;;:::i;:::-;35058:87;;35169:1;35159:7;:11;35156:107;;;35214:37;35243:7;35214:12;:24;35227:10;35214:24;;;;;;;;;;;;;;;;:28;;:37;;;;:::i;:::-;35187:12;:24;35200:10;35187:24;;;;;;;;;;;;;;;:64;;;;35156:107;35286:1;35276:7;:11;35273:151;;;35318:24;35334:7;35318:4;:11;;;:15;;:24;;;;:::i;:::-;35304:4;:11;;:38;;;;35357:55;35391:10;35404:7;35357:4;:12;;;;;;;;;;;;:25;;;;:55;;;;;:::i;:::-;35273:151;35452:48;35495:4;35452:38;35468:4;:21;;;35452:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;35434:4;:15;;:66;;;;35537:1;35525:10;35516:32;;;35540:7;35516:32;;;;;;:::i;:::-;;;;;;;;34855:701;;;34809:747;:::o;23943:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;24184:34::-;;;;:::o;25792:1268::-;25863:21;25887:8;25896:4;25887:14;;;;;;;;:::i;:::-;;;;;;;;;;;;25863:38;;25912:21;25936:8;:14;25945:4;25936:14;;;;;;;;;;;:26;25951:10;25936:26;;;;;;;;;;;;;;;25912:50;;25973:24;26000:4;:21;;;25973:48;;26032:16;26051:4;:12;;;;;;;;;;;;:22;;;26082:4;26051:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;26032:56;;26118:4;:20;;;26103:12;:35;:52;;;;;26154:1;26142:8;:13;;26103:52;26099:354;;;26172:18;26193:49;26207:4;:20;;;26229:12;26193:13;:49::i;:::-;26172:70;;26257:19;26279:71;26334:15;;26279:50;26313:4;:15;;;26279:29;26294:13;;26279:10;:14;;:29;;;;:::i;:::-;:33;;:50;;;;:::i;:::-;:54;;:71;;;;:::i;:::-;26257:93;;26384:57;26405:35;26431:8;26405:21;26421:4;26405:11;:15;;:21;;;;:::i;:::-;:25;;:35;;;;:::i;:::-;26384:16;:20;;:57;;;;:::i;:::-;26365:76;;26157:296;;26099:354;26463:15;26481:64;26529:4;:15;;;26481:43;26519:4;26481:33;26497:16;26481:4;:11;;;:15;;:33;;;;:::i;:::-;:37;;:43;;;;:::i;:::-;:47;;:64;;;;:::i;:::-;26463:82;;26556:20;26579:8;26588:5;26579:15;;;;;;;;:::i;:::-;;;;;;;;;;;;26556:38;;26605:13;26621:37;26633:12;:24;26646:10;26633:24;;;;;;;;;;;;;;;;26621:7;:11;;:37;;;;:::i;:::-;26605:53;;26680:3;:9;;;26672:5;:17;26669:188;;;26716:1;26708:4;:9;26705:63;;;26737:15;26750:1;26737:12;:15::i;:::-;26705:63;26793:1;26785:4;:9;26782:64;;26814:16;26823:4;26828:1;26814:8;:16::i;:::-;26782:64;26669:188;26887:12;:24;26900:10;26887:24;;;;;;;;;;;;;;;;26875:3;:9;;;:36;26867:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;26973:39;27002:3;:9;;;26973:12;:24;26986:10;26973:24;;;;;;;;;;;;;;;;:28;;:39;;;;:::i;:::-;26946:12;:24;26959:10;26946:24;;;;;;;;;;;;;;;:66;;;;27023:3;:7;;;;;;;;;;;;:17;;;27041:10;27023:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25852:1208;;;;;;;25792:1268;;:::o;27463:560::-;20336:12;:10;:12::i;:::-;20325:23;;:7;:5;:7::i;:::-;:23;;;20317:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;27566:11:::1;27562:61;;;27594:17;:15;:17::i;:::-;27562:61;27633:23;27674:10;;27659:12;:25;:53;;27702:10;;27659:53;;;27687:12;27659:53;27633:79;;27741:32;27761:11;27741:15;;:19;;:32;;;;:::i;:::-;27723:15;:50;;;;27784:8;27812:192;;;;;;;;27849:8;27812:192;;;;;;27888:11;27812:192;;;;27935:15;27812:192;;;;27987:1;27812:192;;::::0;27784:231:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27551:472;27463:560:::0;;;:::o;28501:102::-;20336:12;:10;:12::i;:::-;20325:23;;:7;:5;:7::i;:::-;:23;;;20317:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;28586:9:::1;28575:8;;:20;;;;;;;;;;;;;;;;;;28501:102:::0;:::o;36003:109::-;20336:12;:10;:12::i;:::-;20325:23;;:7;:5;:7::i;:::-;:23;;;20317:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;36095:9:::1;36079:13;:25;;;;36003:109:::0;:::o;33056:797::-;33113:21;33137:8;33146:1;33137:11;;;;;;;;:::i;:::-;;;;;;;;;;;;33113:35;;33159:21;33183:8;:11;33192:1;33183:11;;;;;;;;;;;:32;33203:10;33183:32;;;;;;;;;;;;;;;33159:56;;33236:13;33247:1;33236:10;:13::i;:::-;33278:1;33264:4;:11;;;:15;33260:282;;;33296:15;33314:69;33367:4;:15;;;33314:48;33357:4;33314:38;33330:4;:21;;;33314:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;:52;;:69;;;;:::i;:::-;33296:87;;33411:1;33401:7;:11;33398:133;;;33469:46;33507:7;33469:12;:33;33490:10;33469:33;;;;;;;;;;;;;;;;:37;;:46;;;;:::i;:::-;33433:12;:33;33454:10;33433:33;;;;;;;;;;;;;;;:82;;;;33398:133;33281:261;33260:282;33565:1;33555:7;:11;33552:170;;;33583:74;33621:10;33642:4;33649:7;33583:4;:12;;;;;;;;;;;;:29;;;;:74;;;;;;:::i;:::-;33686:24;33702:7;33686:4;:11;;;:15;;:24;;;;:::i;:::-;33672:4;:11;;:38;;;;33552:170;33750:48;33793:4;33750:38;33766:4;:21;;;33750:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;33732:4;:15;;:66;;;;33834:1;33822:10;33814:31;;;33837:7;33814:31;;;;;;:::i;:::-;;;;;;;;33102:751;;33056:797;:::o;32216:787::-;32302:1;32294:4;:9;;32285:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;32348:21;32372:8;32381:4;32372:14;;;;;;;;:::i;:::-;;;;;;;;;;;;32348:38;;32397:21;32421:8;:14;32430:4;32421:14;;;;;;;;;;;:26;32436:10;32421:26;;;;;;;;;;;;;;;32397:50;;32481:7;32466:4;:11;;;:22;;32458:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;32522:16;32533:4;32522:10;:16::i;:::-;32549:15;32567:69;32620:4;:15;;;32567:48;32610:4;32567:38;32583:4;:21;;;32567:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;:52;;:69;;;;:::i;:::-;32549:87;;32660:1;32650:7;:11;32647:106;;;32704:37;32733:7;32704:12;:24;32717:10;32704:24;;;;;;;;;;;;;;;;:28;;:37;;;;:::i;:::-;32677:12;:24;32690:10;32677:24;;;;;;;;;;;;;;;:64;;;;32647:106;32777:24;32793:7;32777:4;:11;;;:15;;:24;;;;:::i;:::-;32763:4;:11;;:38;;;;32830:48;32873:4;32830:38;32846:4;:21;;;32830:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;32812:4;:15;;:66;;;;32889:55;32923:10;32936:7;32889:4;:12;;;;;;;;;;;;:25;;;;:55;;;;;:::i;:::-;32981:4;32969:10;32960:35;;;32987:7;32960:35;;;;;;:::i;:::-;;;;;;;;32272:731;;;32216:787;;:::o;28726:491::-;28812:1;28783:31;;28791:8;;;;;;;;;;;28783:31;;;;28775:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;28850:21;28874:8;28883:4;28874:14;;;;;;;;:::i;:::-;;;;;;;;;;;;28850:38;;28899:14;28916:4;:12;;;;;;;;;;;;28899:29;;28939:11;28953:7;:17;;;28979:4;28953:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;28939:46;;28996:43;29024:8;;;;;;;;;;;29035:3;28996:7;:19;;;;:43;;;;;:::i;:::-;29050:17;29070:8;;;;;;;;;;;:16;;;29087:7;29070:25;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;29050:45;;29121:10;:20;;;29150:4;29121:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;29114:3;:42;29106:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;29199:10;29184:4;:12;;;:25;;;;;;;;;;;;;;;;;;28764:453;;;;28726:491;:::o;24276:25::-;;;;:::o;25454:206::-;20336:12;:10;:12::i;:::-;20325:23;;:7;:5;:7::i;:::-;:23;;;20317:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;25528:8:::1;25556:85;;;;;;;;25589:4;25556:85;;;;;;25619:6;25556:85;;::::0;25528:124:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25454:206:::0;;:::o;30608:690::-;30660:21;30684:8;30693:4;30684:14;;;;;;;;:::i;:::-;;;;;;;;;;;;30660:38;;30729:4;:20;;;30713:12;:36;30709:75;;30766:7;;;30709:75;30794:16;30813:4;:12;;;;;;;;;;;;:22;;;30844:4;30813:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;30794:56;;30877:1;30865:8;:13;30861:102;;30918:12;30895:4;:20;;:35;;;;30945:7;;;;30861:102;30973:18;30994:49;31008:4;:20;;;31030:12;30994:13;:49::i;:::-;30973:70;;31054:19;31076:71;31131:15;;31076:50;31110:4;:15;;;31076:29;31091:13;;31076:10;:14;;:29;;;;:::i;:::-;:33;;:50;;;;:::i;:::-;:54;;:71;;;;:::i;:::-;31054:93;;31182:62;31208:35;31234:8;31208:21;31224:4;31208:11;:15;;:21;;;;:::i;:::-;:25;;:35;;;;:::i;:::-;31182:4;:21;;;:25;;:62;;;;:::i;:::-;31158:4;:21;;:86;;;;31278:12;31255:4;:20;;:35;;;;30649:649;;;;30608:690;;:::o;35635:356::-;35694:21;35718:8;35727:4;35718:14;;;;;;;;:::i;:::-;;;;;;;;;;;;35694:38;;35743:21;35767:8;:14;35776:4;35767:14;;;;;;;;;;;:26;35782:10;35767:26;;;;;;;;;;;;;;;35743:50;;35804:59;35838:10;35851:4;:11;;;35804:4;:12;;;;;;;;;;;;:25;;;;:59;;;;;:::i;:::-;35909:4;35897:10;35879:48;;;35915:4;:11;;;35879:48;;;;;;:::i;:::-;;;;;;;;35952:1;35938:4;:11;;:15;;;;35982:1;35964:4;:15;;:19;;;;35683:308;;35635:356;:::o;23657:28::-;;;;:::o;27068:123::-;20336:12;:10;:12::i;:::-;20325:23;;:7;:5;:7::i;:::-;:23;;;20317:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;27167:16:::1;27148;:35;;;;27068:123:::0;:::o;23533:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;30352:180::-;30397:14;30414:8;:15;;;;30397:32;;30445:11;30440:85;30468:6;30462:3;:12;30440:85;;;30498:15;30509:3;30498:10;:15::i;:::-;30476:5;;;;:::i;:::-;;;30440:85;;;;30386:146;30352:180::o;28120:305::-;20336:12;:10;:12::i;:::-;20325:23;;:7;:5;:7::i;:::-;:23;;;20317:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;28219:11:::1;28215:61;;;28247:17;:15;:17::i;:::-;28215:61;28304:63;28355:11;28304:46;28324:8;28333:4;28324:14;;;;;;;;:::i;:::-;;;;;;;;;;;;:25;;;28304:15;;:19;;:46;;;;:::i;:::-;:50;;:63;;;;:::i;:::-;28286:15;:81;;;;28406:11;28378:8;28387:4;28378:14;;;;;;;;:::i;:::-;;;;;;;;;;;;:25;;:39;;;;28120:305:::0;;;:::o;20756:103::-;20336:12;:10;:12::i;:::-;20325:23;;:7;:5;:7::i;:::-;:23;;;20317:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;20821:30:::1;20848:1;20821:18;:30::i;:::-;20756:103::o:0;24347:28::-;;;;;;;;;;;;;:::o;23880:29::-;;;;;;;;;;;;;:::o;24310:30::-;;;;;;;;;;;;;:::o;23740:35::-;;;;:::o;25328:118::-;25390:7;25417:12;:21;25430:7;25417:21;;;;;;;;;;;;;;;;25410:28;;25328:118;;;:::o;20105:87::-;20151:7;20178:6;;;;;;;;;;;20171:13;;20105:87;:::o;29293:144::-;29365:7;29393:36;29412:16;;29393:14;29401:5;29393:3;:7;;:14;;;;:::i;:::-;:18;;:36;;;;:::i;:::-;29386:43;;29293:144;;;;:::o;24025:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;25668:116::-;20336:12;:10;:12::i;:::-;20325:23;;:7;:5;:7::i;:::-;:23;;;20317:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;25770:6:::1;25746:8;25755:5;25746:15;;;;;;;;:::i;:::-;;;;;;;;;;;;:21;;:30;;;;25668:116:::0;;:::o;23593:17::-;;;;;;;;;;;;;:::o;33861:896::-;33965:15;;;;;;;;;;;33951:29;;:10;:29;;;:38;;;;33988:1;33984;:5;33951:38;33943:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;34025:21;34049:8;34058:1;34049:11;;;;;;;;:::i;:::-;;;;;;;;;;;;34025:35;;34071:21;34095:8;:11;34104:1;34095:11;;;;;;;;;;;:30;34115:8;34095:30;;;;;;;;;;;;;;;34071:54;;34146:13;34157:1;34146:10;:13::i;:::-;34188:1;34174:4;:11;;;:15;34170:278;;;34206:15;34224:69;34277:4;:15;;;34224:48;34267:4;34224:38;34240:4;:21;;;34224:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;:52;;:69;;;;:::i;:::-;34206:87;;34321:1;34311:7;:11;34308:129;;;34377:44;34413:7;34377:12;:31;34398:8;34377:31;;;;;;;;;;;;;;;;:35;;:44;;;;:::i;:::-;34343:12;:31;34364:8;34343:31;;;;;;;;;;;;;;;:78;;;;34308:129;34191:257;34170:278;34471:1;34461:7;:11;34458:170;;;34489:74;34527:10;34548:4;34555:7;34489:4;:12;;;;;;;;;;;;:29;;;;:74;;;;;;:::i;:::-;34592:24;34608:7;34592:4;:11;;;:15;;:24;;;;:::i;:::-;34578:4;:11;;:38;;;;34458:170;34656:48;34699:4;34656:38;34672:4;:21;;;34656:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;34638:4;:15;;:66;;;;34738:1;34728:8;34720:29;;;34741:7;34720:29;;;;;;:::i;:::-;;;;;;;;33932:825;;33861:896;;:::o;24384:47::-;;;;;;;;;;;;;;;;;:::o;31368:796::-;31453:1;31445:4;:9;;31436:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;31496:21;31520:8;31529:4;31520:14;;;;;;;;:::i;:::-;;;;;;;;;;;;31496:38;;31545:21;31569:8;:14;31578:4;31569:14;;;;;;;;;;;:26;31584:10;31569:26;;;;;;;;;;;;;;;31545:50;;31606:16;31617:4;31606:10;:16::i;:::-;31651:1;31637:4;:11;;;:15;31633:263;;;31669:15;31687:69;31740:4;:15;;;31687:48;31730:4;31687:38;31703:4;:21;;;31687:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;:52;;:69;;;;:::i;:::-;31669:87;;31784:1;31774:7;:11;31771:114;;;31832:37;31861:7;31832:12;:24;31845:10;31832:24;;;;;;;;;;;;;;;;:28;;:37;;;;:::i;:::-;31805:12;:24;31818:10;31805:24;;;;;;;;;;;;;;;:64;;;;31771:114;31654:242;31633:263;31906:74;31944:10;31965:4;31972:7;31906:4;:12;;;;;;;;;;;;:29;;;;:74;;;;;;:::i;:::-;32005:24;32021:7;32005:4;:11;;;:15;;:24;;;;:::i;:::-;31991:4;:11;;:38;;;;32058:48;32101:4;32058:38;32074:4;:21;;;32058:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;32040:4;:15;;:66;;;;32142:4;32130:10;32122:34;;;32148:7;32122:34;;;;;;:::i;:::-;;;;;;;;31423:741;;31368:796;;:::o;21014:201::-;20336:12;:10;:12::i;:::-;20325:23;;:7;:5;:7::i;:::-;:23;;;20317:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;21123:1:::1;21103:22;;:8;:22;;;;21095:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;21179:28;21198:8;21179:18;:28::i;:::-;21014:201:::0;:::o;29502:767::-;29576:7;29595:21;29619:8;29628:4;29619:14;;;;;;;;:::i;:::-;;;;;;;;;;;;29595:38;;29644:21;29668:8;:14;29677:4;29668:14;;;;;;;;;;;:21;29683:5;29668:21;;;;;;;;;;;;;;;29644:45;;29700:24;29727:4;:21;;;29700:48;;29759:16;29778:4;:12;;;;;;;;;;;;:22;;;29809:4;29778:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;29759:56;;29845:4;:20;;;29830:12;:35;:52;;;;;29881:1;29869:8;:13;;29830:52;29826:354;;;29899:18;29920:49;29934:4;:20;;;29956:12;29920:13;:49::i;:::-;29899:70;;29984:19;30006:71;30061:15;;30006:50;30040:4;:15;;;30006:29;30021:13;;30006:10;:14;;:29;;;;:::i;:::-;:33;;:50;;;;:::i;:::-;:54;;:71;;;;:::i;:::-;29984:93;;30111:57;30132:35;30158:8;30132:21;30148:4;30132:11;:15;;:21;;;;:::i;:::-;:25;;:35;;;;:::i;:::-;30111:16;:20;;:57;;;;:::i;:::-;30092:76;;29884:296;;29826:354;30197:64;30245:4;:15;;;30197:43;30235:4;30197:33;30213:16;30197:4;:11;;;:15;;:33;;;;:::i;:::-;:37;;:43;;;;:::i;:::-;:47;;:64;;;;:::i;:::-;30190:71;;;;;;29502:767;;;;:::o;19479:98::-;19532:7;19559:10;19552:17;;19479:98;:::o;1757:471::-;1815:7;2065:1;2060;:6;2056:47;;;2090:1;2083:8;;;;2056:47;2115:9;2131:1;2127;:5;;;;:::i;:::-;2115:17;;2160:1;2155;2151;:5;;;;:::i;:::-;:10;2143:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2219:1;2212:8;;;1757:471;;;;;:::o;2696:132::-;2754:7;2781:39;2785:1;2788;2781:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;2774:46;;2696:132;;;;:::o;841:136::-;899:7;926:43;930:1;933;926:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;919:50;;841:136;;;;:::o;385:181::-;443:7;463:9;479:1;475;:5;;;;:::i;:::-;463:17;;504:1;499;:6;;491:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;557:1;550:8;;;385:181;;;;:::o;16150:211::-;16267:86;16287:5;16317:23;;;16342:2;16346:5;16294:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16267:19;:86::i;:::-;16150:211;;;:::o;16369:248::-;16513:96;16533:5;16563:27;;;16592:4;16598:2;16602:5;16540:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16513:19;:96::i;:::-;16369:248;;;;:::o;16886:616::-;17259:1;17250:5;:10;17249:62;;;;17309:1;17266:5;:15;;;17290:4;17297:7;17266:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;17249:62;17227:166;;;;;;;;;;;;:::i;:::-;;;;;;;;;17404:90;17424:5;17454:22;;;17478:7;17487:5;17431:62;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17404:19;:90::i;:::-;16886:616;;;:::o;21375:191::-;21449:16;21468:6;;;;;;;;;;;21449:25;;21494:8;21485:6;;:17;;;;;;;;;;;;;;;;;;21549:8;21518:40;;21539:8;21518:40;;;;;;;;;;;;21438:128;21375:191;:::o;3358:345::-;3444:7;3543:1;3539;:5;3546:12;3531:28;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;3570:9;3586:1;3582;:5;;;;:::i;:::-;3570:17;;3694:1;3687:8;;;3358:345;;;;;:::o;1314:192::-;1400:7;1433:1;1428;:6;;1436:12;1420:29;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1460:9;1476:1;1472;:5;;;;:::i;:::-;1460:17;;1497:1;1490:8;;;1314:192;;;;;:::o;18723:716::-;19147:23;19173:69;19201:4;19173:69;;;;;;;;;;;;;;;;;19181:5;19173:27;;;;:69;;;;;:::i;:::-;19147:95;;19277:1;19257:10;:17;:21;19253:179;;;19354:10;19343:30;;;;;;;;;;;;:::i;:::-;19335:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;19253:179;18793:646;18723:716;;:::o;11566:229::-;11703:12;11735:52;11757:6;11765:4;11771:1;11774:12;11735:21;:52::i;:::-;11728:59;;11566:229;;;;;:::o;12686:510::-;12856:12;12914:5;12889:21;:30;;12881:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;12981:18;12992:6;12981:10;:18::i;:::-;12973:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;13047:12;13061:23;13088:6;:11;;13107:5;13114:4;13088:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13046:73;;;;13137:51;13154:7;13163:10;13175:12;13137:16;:51::i;:::-;13130:58;;;;12686:510;;;;;;:::o;8821:326::-;8881:4;9138:1;9116:7;:19;;;:23;9109:30;;8821:326;;;:::o;15372:712::-;15522:12;15551:7;15547:530;;;15582:10;15575:17;;;;15547:530;15716:1;15696:10;:17;:21;15692:374;;;15894:10;15888:17;15955:15;15942:10;15938:2;15934:19;15927:44;15692:374;16037:12;16030:20;;;;;;;;;;;:::i;:::-;;;;;;;;15372:712;;;;;;:::o;7:139:1:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:133::-;195:5;233:6;220:20;211:29;;249:30;273:5;249:30;:::i;:::-;152:133;;;;:::o;291:137::-;345:5;376:6;370:13;361:22;;392:30;416:5;392:30;:::i;:::-;291:137;;;;:::o;434:167::-;494:5;532:6;519:20;510:29;;548:47;589:5;548:47;:::i;:::-;434:167;;;;:::o;607:171::-;678:5;709:6;703:13;694:22;;725:47;766:5;725:47;:::i;:::-;607:171;;;;:::o;784:169::-;845:5;883:6;870:20;861:29;;899:48;941:5;899:48;:::i;:::-;784:169;;;;:::o;959:181::-;1026:5;1064:6;1051:20;1042:29;;1080:54;1128:5;1080:54;:::i;:::-;959:181;;;;:::o;1146:139::-;1192:5;1230:6;1217:20;1208:29;;1246:33;1273:5;1246:33;:::i;:::-;1146:139;;;;:::o;1291:143::-;1348:5;1379:6;1373:13;1364:22;;1395:33;1422:5;1395:33;:::i;:::-;1291:143;;;;:::o;1440:329::-;1499:6;1548:2;1536:9;1527:7;1523:23;1519:32;1516:119;;;1554:79;;:::i;:::-;1516:119;1674:1;1699:53;1744:7;1735:6;1724:9;1720:22;1699:53;:::i;:::-;1689:63;;1645:117;1440:329;;;;:::o;1775:345::-;1842:6;1891:2;1879:9;1870:7;1866:23;1862:32;1859:119;;;1897:79;;:::i;:::-;1859:119;2017:1;2042:61;2095:7;2086:6;2075:9;2071:22;2042:61;:::i;:::-;2032:71;;1988:125;1775:345;;;;:::o;2126:379::-;2210:6;2259:2;2247:9;2238:7;2234:23;2230:32;2227:119;;;2265:79;;:::i;:::-;2227:119;2385:1;2410:78;2480:7;2471:6;2460:9;2456:22;2410:78;:::i;:::-;2400:88;;2356:142;2126:379;;;;:::o;2511:504::-;2594:6;2602;2651:2;2639:9;2630:7;2626:23;2622:32;2619:119;;;2657:79;;:::i;:::-;2619:119;2777:1;2802:68;2862:7;2853:6;2842:9;2838:22;2802:68;:::i;:::-;2792:78;;2748:132;2919:2;2945:53;2990:7;2981:6;2970:9;2966:22;2945:53;:::i;:::-;2935:63;;2890:118;2511:504;;;;;:::o;3021:371::-;3101:6;3150:2;3138:9;3129:7;3125:23;3121:32;3118:119;;;3156:79;;:::i;:::-;3118:119;3276:1;3301:74;3367:7;3358:6;3347:9;3343:22;3301:74;:::i;:::-;3291:84;;3247:138;3021:371;;;;:::o;3398:329::-;3457:6;3506:2;3494:9;3485:7;3481:23;3477:32;3474:119;;;3512:79;;:::i;:::-;3474:119;3632:1;3657:53;3702:7;3693:6;3682:9;3678:22;3657:53;:::i;:::-;3647:63;;3603:117;3398:329;;;;:::o;3733:351::-;3803:6;3852:2;3840:9;3831:7;3827:23;3823:32;3820:119;;;3858:79;;:::i;:::-;3820:119;3978:1;4003:64;4059:7;4050:6;4039:9;4035:22;4003:64;:::i;:::-;3993:74;;3949:128;3733:351;;;;:::o;4090:474::-;4158:6;4166;4215:2;4203:9;4194:7;4190:23;4186:32;4183:119;;;4221:79;;:::i;:::-;4183:119;4341:1;4366:53;4411:7;4402:6;4391:9;4387:22;4366:53;:::i;:::-;4356:63;;4312:117;4468:2;4494:53;4539:7;4530:6;4519:9;4515:22;4494:53;:::i;:::-;4484:63;;4439:118;4090:474;;;;;:::o;4570:641::-;4658:6;4666;4674;4723:2;4711:9;4702:7;4698:23;4694:32;4691:119;;;4729:79;;:::i;:::-;4691:119;4849:1;4874:53;4919:7;4910:6;4899:9;4895:22;4874:53;:::i;:::-;4864:63;;4820:117;4976:2;5002:67;5061:7;5052:6;5041:9;5037:22;5002:67;:::i;:::-;4992:77;;4947:132;5118:2;5144:50;5186:7;5177:6;5166:9;5162:22;5144:50;:::i;:::-;5134:60;;5089:115;4570:641;;;;;:::o;5217:474::-;5285:6;5293;5342:2;5330:9;5321:7;5317:23;5313:32;5310:119;;;5348:79;;:::i;:::-;5310:119;5468:1;5493:53;5538:7;5529:6;5518:9;5514:22;5493:53;:::i;:::-;5483:63;;5439:117;5595:2;5621:53;5666:7;5657:6;5646:9;5642:22;5621:53;:::i;:::-;5611:63;;5566:118;5217:474;;;;;:::o;5697:613::-;5771:6;5779;5787;5836:2;5824:9;5815:7;5811:23;5807:32;5804:119;;;5842:79;;:::i;:::-;5804:119;5962:1;5987:53;6032:7;6023:6;6012:9;6008:22;5987:53;:::i;:::-;5977:63;;5933:117;6089:2;6115:53;6160:7;6151:6;6140:9;6136:22;6115:53;:::i;:::-;6105:63;;6060:118;6217:2;6243:50;6285:7;6276:6;6265:9;6261:22;6243:50;:::i;:::-;6233:60;;6188:115;5697:613;;;;;:::o;6316:118::-;6403:24;6421:5;6403:24;:::i;:::-;6398:3;6391:37;6316:118;;:::o;6440:373::-;6544:3;6572:38;6604:5;6572:38;:::i;:::-;6626:88;6707:6;6702:3;6626:88;:::i;:::-;6619:95;;6723:52;6768:6;6763:3;6756:4;6749:5;6745:16;6723:52;:::i;:::-;6800:6;6795:3;6791:16;6784:23;;6548:265;6440:373;;;;:::o;6819:159::-;6920:51;6965:5;6920:51;:::i;:::-;6915:3;6908:64;6819:159;;:::o;6984:161::-;7086:52;7132:5;7086:52;:::i;:::-;7081:3;7074:65;6984:161;;:::o;7151:173::-;7259:58;7311:5;7259:58;:::i;:::-;7254:3;7247:71;7151:173;;:::o;7330:364::-;7418:3;7446:39;7479:5;7446:39;:::i;:::-;7501:71;7565:6;7560:3;7501:71;:::i;:::-;7494:78;;7581:52;7626:6;7621:3;7614:4;7607:5;7603:16;7581:52;:::i;:::-;7658:29;7680:6;7658:29;:::i;:::-;7653:3;7649:39;7642:46;;7422:272;7330:364;;;;:::o;7700:366::-;7842:3;7863:67;7927:2;7922:3;7863:67;:::i;:::-;7856:74;;7939:93;8028:3;7939:93;:::i;:::-;8057:2;8052:3;8048:12;8041:19;;7700:366;;;:::o;8072:::-;8214:3;8235:67;8299:2;8294:3;8235:67;:::i;:::-;8228:74;;8311:93;8400:3;8311:93;:::i;:::-;8429:2;8424:3;8420:12;8413:19;;8072:366;;;:::o;8444:::-;8586:3;8607:67;8671:2;8666:3;8607:67;:::i;:::-;8600:74;;8683:93;8772:3;8683:93;:::i;:::-;8801:2;8796:3;8792:12;8785:19;;8444:366;;;:::o;8816:::-;8958:3;8979:67;9043:2;9038:3;8979:67;:::i;:::-;8972:74;;9055:93;9144:3;9055:93;:::i;:::-;9173:2;9168:3;9164:12;9157:19;;8816:366;;;:::o;9188:::-;9330:3;9351:67;9415:2;9410:3;9351:67;:::i;:::-;9344:74;;9427:93;9516:3;9427:93;:::i;:::-;9545:2;9540:3;9536:12;9529:19;;9188:366;;;:::o;9560:::-;9702:3;9723:67;9787:2;9782:3;9723:67;:::i;:::-;9716:74;;9799:93;9888:3;9799:93;:::i;:::-;9917:2;9912:3;9908:12;9901:19;;9560:366;;;:::o;9932:::-;10074:3;10095:67;10159:2;10154:3;10095:67;:::i;:::-;10088:74;;10171:93;10260:3;10171:93;:::i;:::-;10289:2;10284:3;10280:12;10273:19;;9932:366;;;:::o;10304:::-;10446:3;10467:67;10531:2;10526:3;10467:67;:::i;:::-;10460:74;;10543:93;10632:3;10543:93;:::i;:::-;10661:2;10656:3;10652:12;10645:19;;10304:366;;;:::o;10676:::-;10818:3;10839:67;10903:2;10898:3;10839:67;:::i;:::-;10832:74;;10915:93;11004:3;10915:93;:::i;:::-;11033:2;11028:3;11024:12;11017:19;;10676:366;;;:::o;11048:::-;11190:3;11211:67;11275:2;11270:3;11211:67;:::i;:::-;11204:74;;11287:93;11376:3;11287:93;:::i;:::-;11405:2;11400:3;11396:12;11389:19;;11048:366;;;:::o;11420:::-;11562:3;11583:67;11647:2;11642:3;11583:67;:::i;:::-;11576:74;;11659:93;11748:3;11659:93;:::i;:::-;11777:2;11772:3;11768:12;11761:19;;11420:366;;;:::o;11792:::-;11934:3;11955:67;12019:2;12014:3;11955:67;:::i;:::-;11948:74;;12031:93;12120:3;12031:93;:::i;:::-;12149:2;12144:3;12140:12;12133:19;;11792:366;;;:::o;12164:::-;12306:3;12327:67;12391:2;12386:3;12327:67;:::i;:::-;12320:74;;12403:93;12492:3;12403:93;:::i;:::-;12521:2;12516:3;12512:12;12505:19;;12164:366;;;:::o;12536:::-;12678:3;12699:67;12763:2;12758:3;12699:67;:::i;:::-;12692:74;;12775:93;12864:3;12775:93;:::i;:::-;12893:2;12888:3;12884:12;12877:19;;12536:366;;;:::o;12908:::-;13050:3;13071:67;13135:2;13130:3;13071:67;:::i;:::-;13064:74;;13147:93;13236:3;13147:93;:::i;:::-;13265:2;13260:3;13256:12;13249:19;;12908:366;;;:::o;13280:118::-;13367:24;13385:5;13367:24;:::i;:::-;13362:3;13355:37;13280:118;;:::o;13404:271::-;13534:3;13556:93;13645:3;13636:6;13556:93;:::i;:::-;13549:100;;13666:3;13659:10;;13404:271;;;;:::o;13681:222::-;13774:4;13812:2;13801:9;13797:18;13789:26;;13825:71;13893:1;13882:9;13878:17;13869:6;13825:71;:::i;:::-;13681:222;;;;:::o;13909:332::-;14030:4;14068:2;14057:9;14053:18;14045:26;;14081:71;14149:1;14138:9;14134:17;14125:6;14081:71;:::i;:::-;14162:72;14230:2;14219:9;14215:18;14206:6;14162:72;:::i;:::-;13909:332;;;;;:::o;14247:442::-;14396:4;14434:2;14423:9;14419:18;14411:26;;14447:71;14515:1;14504:9;14500:17;14491:6;14447:71;:::i;:::-;14528:72;14596:2;14585:9;14581:18;14572:6;14528:72;:::i;:::-;14610;14678:2;14667:9;14663:18;14654:6;14610:72;:::i;:::-;14247:442;;;;;;:::o;14695:332::-;14816:4;14854:2;14843:9;14839:18;14831:26;;14867:71;14935:1;14924:9;14920:17;14911:6;14867:71;:::i;:::-;14948:72;15016:2;15005:9;15001:18;14992:6;14948:72;:::i;:::-;14695:332;;;;;:::o;15033:250::-;15140:4;15178:2;15167:9;15163:18;15155:26;;15191:85;15273:1;15262:9;15258:17;15249:6;15191:85;:::i;:::-;15033:250;;;;:::o;15289:581::-;15480:4;15518:3;15507:9;15503:19;15495:27;;15532:85;15614:1;15603:9;15599:17;15590:6;15532:85;:::i;:::-;15627:72;15695:2;15684:9;15680:18;15671:6;15627:72;:::i;:::-;15709;15777:2;15766:9;15762:18;15753:6;15709:72;:::i;:::-;15791;15859:2;15848:9;15844:18;15835:6;15791:72;:::i;:::-;15289:581;;;;;;;:::o;15876:362::-;16012:4;16050:2;16039:9;16035:18;16027:26;;16063:86;16146:1;16135:9;16131:17;16122:6;16063:86;:::i;:::-;16159:72;16227:2;16216:9;16212:18;16203:6;16159:72;:::i;:::-;15876:362;;;;;:::o;16244:264::-;16358:4;16396:2;16385:9;16381:18;16373:26;;16409:92;16498:1;16487:9;16483:17;16474:6;16409:92;:::i;:::-;16244:264;;;;:::o;16514:313::-;16627:4;16665:2;16654:9;16650:18;16642:26;;16714:9;16708:4;16704:20;16700:1;16689:9;16685:17;16678:47;16742:78;16815:4;16806:6;16742:78;:::i;:::-;16734:86;;16514:313;;;;:::o;16833:419::-;16999:4;17037:2;17026:9;17022:18;17014:26;;17086:9;17080:4;17076:20;17072:1;17061:9;17057:17;17050:47;17114:131;17240:4;17114:131;:::i;:::-;17106:139;;16833:419;;;:::o;17258:::-;17424:4;17462:2;17451:9;17447:18;17439:26;;17511:9;17505:4;17501:20;17497:1;17486:9;17482:17;17475:47;17539:131;17665:4;17539:131;:::i;:::-;17531:139;;17258:419;;;:::o;17683:::-;17849:4;17887:2;17876:9;17872:18;17864:26;;17936:9;17930:4;17926:20;17922:1;17911:9;17907:17;17900:47;17964:131;18090:4;17964:131;:::i;:::-;17956:139;;17683:419;;;:::o;18108:::-;18274:4;18312:2;18301:9;18297:18;18289:26;;18361:9;18355:4;18351:20;18347:1;18336:9;18332:17;18325:47;18389:131;18515:4;18389:131;:::i;:::-;18381:139;;18108:419;;;:::o;18533:::-;18699:4;18737:2;18726:9;18722:18;18714:26;;18786:9;18780:4;18776:20;18772:1;18761:9;18757:17;18750:47;18814:131;18940:4;18814:131;:::i;:::-;18806:139;;18533:419;;;:::o;18958:::-;19124:4;19162:2;19151:9;19147:18;19139:26;;19211:9;19205:4;19201:20;19197:1;19186:9;19182:17;19175:47;19239:131;19365:4;19239:131;:::i;:::-;19231:139;;18958:419;;;:::o;19383:::-;19549:4;19587:2;19576:9;19572:18;19564:26;;19636:9;19630:4;19626:20;19622:1;19611:9;19607:17;19600:47;19664:131;19790:4;19664:131;:::i;:::-;19656:139;;19383:419;;;:::o;19808:::-;19974:4;20012:2;20001:9;19997:18;19989:26;;20061:9;20055:4;20051:20;20047:1;20036:9;20032:17;20025:47;20089:131;20215:4;20089:131;:::i;:::-;20081:139;;19808:419;;;:::o;20233:::-;20399:4;20437:2;20426:9;20422:18;20414:26;;20486:9;20480:4;20476:20;20472:1;20461:9;20457:17;20450:47;20514:131;20640:4;20514:131;:::i;:::-;20506:139;;20233:419;;;:::o;20658:::-;20824:4;20862:2;20851:9;20847:18;20839:26;;20911:9;20905:4;20901:20;20897:1;20886:9;20882:17;20875:47;20939:131;21065:4;20939:131;:::i;:::-;20931:139;;20658:419;;;:::o;21083:::-;21249:4;21287:2;21276:9;21272:18;21264:26;;21336:9;21330:4;21326:20;21322:1;21311:9;21307:17;21300:47;21364:131;21490:4;21364:131;:::i;:::-;21356:139;;21083:419;;;:::o;21508:::-;21674:4;21712:2;21701:9;21697:18;21689:26;;21761:9;21755:4;21751:20;21747:1;21736:9;21732:17;21725:47;21789:131;21915:4;21789:131;:::i;:::-;21781:139;;21508:419;;;:::o;21933:::-;22099:4;22137:2;22126:9;22122:18;22114:26;;22186:9;22180:4;22176:20;22172:1;22161:9;22157:17;22150:47;22214:131;22340:4;22214:131;:::i;:::-;22206:139;;21933:419;;;:::o;22358:::-;22524:4;22562:2;22551:9;22547:18;22539:26;;22611:9;22605:4;22601:20;22597:1;22586:9;22582:17;22575:47;22639:131;22765:4;22639:131;:::i;:::-;22631:139;;22358:419;;;:::o;22783:::-;22949:4;22987:2;22976:9;22972:18;22964:26;;23036:9;23030:4;23026:20;23022:1;23011:9;23007:17;23000:47;23064:131;23190:4;23064:131;:::i;:::-;23056:139;;22783:419;;;:::o;23208:222::-;23301:4;23339:2;23328:9;23324:18;23316:26;;23352:71;23420:1;23409:9;23405:17;23396:6;23352:71;:::i;:::-;23208:222;;;;:::o;23436:332::-;23557:4;23595:2;23584:9;23580:18;23572:26;;23608:71;23676:1;23665:9;23661:17;23652:6;23608:71;:::i;:::-;23689:72;23757:2;23746:9;23742:18;23733:6;23689:72;:::i;:::-;23436:332;;;;;:::o;23855:98::-;23906:6;23940:5;23934:12;23924:22;;23855:98;;;:::o;23959:99::-;24011:6;24045:5;24039:12;24029:22;;23959:99;;;:::o;24064:147::-;24165:11;24202:3;24187:18;;24064:147;;;;:::o;24217:169::-;24301:11;24335:6;24330:3;24323:19;24375:4;24370:3;24366:14;24351:29;;24217:169;;;;:::o;24392:305::-;24432:3;24451:20;24469:1;24451:20;:::i;:::-;24446:25;;24485:20;24503:1;24485:20;:::i;:::-;24480:25;;24639:1;24571:66;24567:74;24564:1;24561:81;24558:107;;;24645:18;;:::i;:::-;24558:107;24689:1;24686;24682:9;24675:16;;24392:305;;;;:::o;24703:185::-;24743:1;24760:20;24778:1;24760:20;:::i;:::-;24755:25;;24794:20;24812:1;24794:20;:::i;:::-;24789:25;;24833:1;24823:35;;24838:18;;:::i;:::-;24823:35;24880:1;24877;24873:9;24868:14;;24703:185;;;;:::o;24894:348::-;24934:7;24957:20;24975:1;24957:20;:::i;:::-;24952:25;;24991:20;25009:1;24991:20;:::i;:::-;24986:25;;25179:1;25111:66;25107:74;25104:1;25101:81;25096:1;25089:9;25082:17;25078:105;25075:131;;;25186:18;;:::i;:::-;25075:131;25234:1;25231;25227:9;25216:20;;24894:348;;;;:::o;25248:191::-;25288:4;25308:20;25326:1;25308:20;:::i;:::-;25303:25;;25342:20;25360:1;25342:20;:::i;:::-;25337:25;;25381:1;25378;25375:8;25372:34;;;25386:18;;:::i;:::-;25372:34;25431:1;25428;25424:9;25416:17;;25248:191;;;;:::o;25445:96::-;25482:7;25511:24;25529:5;25511:24;:::i;:::-;25500:35;;25445:96;;;:::o;25547:90::-;25581:7;25624:5;25617:13;25610:21;25599:32;;25547:90;;;:::o;25643:110::-;25694:7;25723:24;25741:5;25723:24;:::i;:::-;25712:35;;25643:110;;;:::o;25759:111::-;25811:7;25840:24;25858:5;25840:24;:::i;:::-;25829:35;;25759:111;;;:::o;25876:117::-;25934:7;25963:24;25981:5;25963:24;:::i;:::-;25952:35;;25876:117;;;:::o;25999:126::-;26036:7;26076:42;26069:5;26065:54;26054:65;;25999:126;;;:::o;26131:77::-;26168:7;26197:5;26186:16;;26131:77;;;:::o;26214:140::-;26278:9;26311:37;26342:5;26311:37;:::i;:::-;26298:50;;26214:140;;;:::o;26360:141::-;26425:9;26458:37;26489:5;26458:37;:::i;:::-;26445:50;;26360:141;;;:::o;26507:147::-;26578:9;26611:37;26642:5;26611:37;:::i;:::-;26598:50;;26507:147;;;:::o;26660:126::-;26710:9;26743:37;26774:5;26743:37;:::i;:::-;26730:50;;26660:126;;;:::o;26792:113::-;26842:9;26875:24;26893:5;26875:24;:::i;:::-;26862:37;;26792:113;;;:::o;26911:307::-;26979:1;26989:113;27003:6;27000:1;26997:13;26989:113;;;27088:1;27083:3;27079:11;27073:18;27069:1;27064:3;27060:11;27053:39;27025:2;27022:1;27018:10;27013:15;;26989:113;;;27120:6;27117:1;27114:13;27111:101;;;27200:1;27191:6;27186:3;27182:16;27175:27;27111:101;26960:258;26911:307;;;:::o;27224:233::-;27263:3;27286:24;27304:5;27286:24;:::i;:::-;27277:33;;27332:66;27325:5;27322:77;27319:103;;;27402:18;;:::i;:::-;27319:103;27449:1;27442:5;27438:13;27431:20;;27224:233;;;:::o;27463:180::-;27511:77;27508:1;27501:88;27608:4;27605:1;27598:15;27632:4;27629:1;27622:15;27649:180;27697:77;27694:1;27687:88;27794:4;27791:1;27784:15;27818:4;27815:1;27808:15;27835:180;27883:77;27880:1;27873:88;27980:4;27977:1;27970:15;28004:4;28001:1;27994:15;28144:117;28253:1;28250;28243:12;28267:102;28308:6;28359:2;28355:7;28350:2;28343:5;28339:14;28335:28;28325:38;;28267:102;;;:::o;28375:225::-;28515:34;28511:1;28503:6;28499:14;28492:58;28584:8;28579:2;28571:6;28567:15;28560:33;28375:225;:::o;28606:169::-;28746:21;28742:1;28734:6;28730:14;28723:45;28606:169;:::o;28781:177::-;28921:29;28917:1;28909:6;28905:14;28898:53;28781:177;:::o;28964:::-;29104:29;29100:1;29092:6;29088:14;29081:53;28964:177;:::o;29147:225::-;29287:34;29283:1;29275:6;29271:14;29264:58;29356:8;29351:2;29343:6;29339:15;29332:33;29147:225;:::o;29378:174::-;29518:26;29514:1;29506:6;29502:14;29495:50;29378:174;:::o;29558:220::-;29698:34;29694:1;29686:6;29682:14;29675:58;29767:3;29762:2;29754:6;29750:15;29743:28;29558:220;:::o;29784:182::-;29924:34;29920:1;29912:6;29908:14;29901:58;29784:182;:::o;29972:170::-;30112:22;30108:1;30100:6;30096:14;30089:46;29972:170;:::o;30148:179::-;30288:31;30284:1;30276:6;30272:14;30265:55;30148:179;:::o;30333:168::-;30473:20;30469:1;30461:6;30457:14;30450:44;30333:168;:::o;30507:229::-;30647:34;30643:1;30635:6;30631:14;30624:58;30716:12;30711:2;30703:6;30699:15;30692:37;30507:229;:::o;30742:162::-;30882:14;30878:1;30870:6;30866:14;30859:38;30742:162;:::o;30910:241::-;31050:34;31046:1;31038:6;31034:14;31027:58;31119:24;31114:2;31106:6;31102:15;31095:49;30910:241;:::o;31157:170::-;31297:22;31293:1;31285:6;31281:14;31274:46;31157:170;:::o;31333:122::-;31406:24;31424:5;31406:24;:::i;:::-;31399:5;31396:35;31386:63;;31445:1;31442;31435:12;31386:63;31333:122;:::o;31461:116::-;31531:21;31546:5;31531:21;:::i;:::-;31524:5;31521:32;31511:60;;31567:1;31564;31557:12;31511:60;31461:116;:::o;31583:150::-;31670:38;31702:5;31670:38;:::i;:::-;31663:5;31660:49;31650:77;;31723:1;31720;31713:12;31650:77;31583:150;:::o;31739:152::-;31827:39;31860:5;31827:39;:::i;:::-;31820:5;31817:50;31807:78;;31881:1;31878;31871:12;31807:78;31739:152;:::o;31897:164::-;31991:45;32030:5;31991:45;:::i;:::-;31984:5;31981:56;31971:84;;32051:1;32048;32041:12;31971:84;31897:164;:::o;32067:122::-;32140:24;32158:5;32140:24;:::i;:::-;32133:5;32130:35;32120:63;;32179:1;32176;32169:12;32120:63;32067:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "3569600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"BONUS_MULTIPLIER()": "2540",
								"DDT()": "2733",
								"DDTMasterchef()": "2559",
								"NFTStakeAddress()": "2603",
								"PowerPerBlock()": "2540",
								"add(uint256,address,bool)": "infinite",
								"addNFT(address,uint256)": "73759",
								"claimNFTReward(uint256,uint256)": "infinite",
								"deposit(uint256,uint256)": "infinite",
								"emergencyWithdraw(uint256)": "infinite",
								"enterStaking(uint256)": "infinite",
								"enterStakingCompund(uint256,address)": "infinite",
								"getMultiplier(uint256,uint256)": "infinite",
								"getPowerBalance(address)": "2974",
								"leaveStaking(uint256)": "infinite",
								"massUpdatePools()": "infinite",
								"migrate(uint256)": "infinite",
								"migrator()": "2667",
								"nftsInfo(uint256)": "infinite",
								"owner()": "2567",
								"pendingPower(uint256,address)": "infinite",
								"poolInfo(uint256)": "infinite",
								"poolLength()": "2492",
								"powerBalance(address)": "2880",
								"renounceOwnership()": "30486",
								"set(uint256,uint256,bool)": "infinite",
								"setMigrator(address)": "27117",
								"startBlock()": "2541",
								"totalAllocPoint()": "2475",
								"transferOwnership(address)": "30833",
								"updateMultiplier(uint256)": "24893",
								"updateNFT(uint256,uint256)": "infinite",
								"updateNFTStakeAddress(address)": "27031",
								"updatePool(uint256)": "infinite",
								"updatePowerPerBlock(uint256)": "24894",
								"userInfo(uint256,address)": "infinite",
								"withdraw(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 22111,
									"end": 36115,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 22111,
									"end": 36115,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 22111,
									"end": 36115,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23774,
									"end": 23775,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 23740,
									"end": 23775,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 23740,
									"end": 23775,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24217,
									"end": 24218,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24184,
									"end": 24218,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 24184,
									"end": 24218,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24724,
									"end": 25186,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 24724,
									"end": 25186,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24724,
									"end": 25186,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 24724,
									"end": 25186,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24724,
									"end": 25186,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 24724,
									"end": 25186,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24724,
									"end": 25186,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24724,
									"end": 25186,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 24724,
									"end": 25186,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24724,
									"end": 25186,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24724,
									"end": 25186,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24724,
									"end": 25186,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24724,
									"end": 25186,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24724,
									"end": 25186,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 24724,
									"end": 25186,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 24724,
									"end": 25186,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 24724,
									"end": 25186,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24724,
									"end": 25186,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 24724,
									"end": 25186,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 24724,
									"end": 25186,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 24724,
									"end": 25186,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24724,
									"end": 25186,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24724,
									"end": 25186,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24724,
									"end": 25186,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24724,
									"end": 25186,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24724,
									"end": 25186,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24724,
									"end": 25186,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24724,
									"end": 25186,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24724,
									"end": 25186,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 24724,
									"end": 25186,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24724,
									"end": 25186,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24724,
									"end": 25186,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 24724,
									"end": 25186,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 24724,
									"end": 25186,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 24724,
									"end": 25186,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19984,
									"end": 20016,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 20003,
									"end": 20015,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 20003,
									"end": 20013,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 20003,
									"end": 20013,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20003,
									"end": 20013,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 20003,
									"end": 20015,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20003,
									"end": 20015,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 20003,
									"end": 20015,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 20003,
									"end": 20015,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 20003,
									"end": 20015,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19984,
									"end": 20002,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 19984,
									"end": 20002,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 19984,
									"end": 20002,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 19984,
									"end": 20016,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 19984,
									"end": 20016,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 19984,
									"end": 20016,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 19984,
									"end": 20016,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 19984,
									"end": 20016,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24845,
									"end": 24849,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24839,
									"end": 24842,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 24839,
									"end": 24842,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24839,
									"end": 24849,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 24839,
									"end": 24849,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 24839,
									"end": 24849,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24839,
									"end": 24849,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 24839,
									"end": 24849,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24839,
									"end": 24849,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24839,
									"end": 24849,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 24839,
									"end": 24849,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 24839,
									"end": 24849,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24839,
									"end": 24849,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24839,
									"end": 24849,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 24839,
									"end": 24849,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24839,
									"end": 24849,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24839,
									"end": 24849,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 24839,
									"end": 24849,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 24839,
									"end": 24849,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24839,
									"end": 24849,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24839,
									"end": 24849,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24876,
									"end": 24890,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24860,
									"end": 24873,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 24860,
									"end": 24890,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24860,
									"end": 24890,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24860,
									"end": 24890,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24860,
									"end": 24890,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24914,
									"end": 24925,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24901,
									"end": 24911,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 24901,
									"end": 24925,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24901,
									"end": 24925,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24901,
									"end": 24925,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24901,
									"end": 24925,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 24979,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 24985,
									"end": 25140,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24985,
									"end": 25140,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24985,
									"end": 25140,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24985,
									"end": 25140,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 24985,
									"end": 25140,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24985,
									"end": 25140,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24985,
									"end": 25140,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24985,
									"end": 25140,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25018,
									"end": 25021,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 25018,
									"end": 25021,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25018,
									"end": 25021,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25018,
									"end": 25021,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 25018,
									"end": 25021,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25018,
									"end": 25021,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 25018,
									"end": 25021,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 25018,
									"end": 25021,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25018,
									"end": 25021,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 25018,
									"end": 25021,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 25018,
									"end": 25021,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24985,
									"end": 25140,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24985,
									"end": 25140,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24985,
									"end": 25140,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24985,
									"end": 25140,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24985,
									"end": 25140,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 24985,
									"end": 25140,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25048,
									"end": 25052,
									"name": "PUSH",
									"source": 0,
									"value": "3E8"
								},
								{
									"begin": 24985,
									"end": 25140,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24985,
									"end": 25140,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24985,
									"end": 25140,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 24985,
									"end": 25140,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25084,
									"end": 25094,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 25084,
									"end": 25094,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 24985,
									"end": 25140,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24985,
									"end": 25140,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24985,
									"end": 25140,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 24985,
									"end": 25140,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25127,
									"end": 25128,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24985,
									"end": 25140,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24985,
									"end": 25140,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24985,
									"end": 25140,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24971,
									"end": 25141,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25172,
									"end": 25176,
									"name": "PUSH",
									"source": 0,
									"value": "3E8"
								},
								{
									"begin": 25154,
									"end": 25169,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 25154,
									"end": 25176,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25154,
									"end": 25176,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25154,
									"end": 25176,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 25154,
									"end": 25176,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24724,
									"end": 25186,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24724,
									"end": 25186,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24724,
									"end": 25186,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22111,
									"end": 36115,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 22111,
									"end": 36115,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 19479,
									"end": 19577,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 19479,
									"end": 19577,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19532,
									"end": 19539,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19559,
									"end": 19569,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 19552,
									"end": 19569,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19552,
									"end": 19569,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 19479,
									"end": 19577,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19479,
									"end": 19577,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 21375,
									"end": 21566,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 21375,
									"end": 21566,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21449,
									"end": 21465,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21449,
									"end": 21474,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21449,
									"end": 21474,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21494,
									"end": 21502,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21491,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21485,
									"end": 21491,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21549,
									"end": 21557,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21539,
									"end": 21547,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 21438,
									"end": 21566,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21375,
									"end": 21566,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21375,
									"end": 21566,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 178,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 7,
									"end": 178,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 78,
									"end": 83,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 115,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 103,
									"end": 116,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 94,
									"end": 116,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 94,
									"end": 116,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 125,
									"end": 172,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 166,
									"end": 171,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 125,
									"end": 172,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 172,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 125,
									"end": 172,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 125,
									"end": 172,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7,
									"end": 178,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7,
									"end": 178,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7,
									"end": 178,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 178,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 178,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 184,
									"end": 327,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 184,
									"end": 327,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 241,
									"end": 246,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 272,
									"end": 278,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 266,
									"end": 279,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 257,
									"end": 279,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 257,
									"end": 279,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 288,
									"end": 321,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 315,
									"end": 320,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 288,
									"end": 321,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 288,
									"end": 321,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 288,
									"end": 321,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 288,
									"end": 321,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 184,
									"end": 327,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 184,
									"end": 327,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 184,
									"end": 327,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 184,
									"end": 327,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 184,
									"end": 327,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 333,
									"end": 1024,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 333,
									"end": 1024,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 435,
									"end": 441,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 443,
									"end": 449,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 451,
									"end": 457,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 500,
									"end": 502,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 488,
									"end": 497,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 479,
									"end": 486,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 475,
									"end": 498,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 471,
									"end": 503,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 468,
									"end": 587,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 468,
									"end": 587,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 468,
									"end": 587,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 506,
									"end": 585,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 506,
									"end": 585,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 506,
									"end": 585,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 506,
									"end": 585,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 506,
									"end": 585,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 468,
									"end": 587,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 468,
									"end": 587,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 626,
									"end": 627,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 651,
									"end": 729,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 721,
									"end": 728,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 701,
									"end": 710,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 697,
									"end": 719,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 651,
									"end": 729,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 651,
									"end": 729,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 651,
									"end": 729,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 651,
									"end": 729,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 641,
									"end": 729,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 641,
									"end": 729,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 597,
									"end": 739,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 778,
									"end": 780,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 804,
									"end": 868,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 860,
									"end": 867,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 851,
									"end": 857,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 840,
									"end": 849,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 836,
									"end": 858,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 804,
									"end": 868,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 804,
									"end": 868,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 804,
									"end": 868,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 804,
									"end": 868,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 794,
									"end": 868,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 794,
									"end": 868,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 749,
									"end": 878,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 917,
									"end": 919,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 943,
									"end": 1007,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 999,
									"end": 1006,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 990,
									"end": 996,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 979,
									"end": 988,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 975,
									"end": 997,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 943,
									"end": 1007,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 943,
									"end": 1007,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 943,
									"end": 1007,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 943,
									"end": 1007,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 933,
									"end": 1007,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 933,
									"end": 1007,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 888,
									"end": 1017,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 333,
									"end": 1024,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 333,
									"end": 1024,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 333,
									"end": 1024,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 333,
									"end": 1024,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 333,
									"end": 1024,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 333,
									"end": 1024,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1111,
									"end": 1207,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 1111,
									"end": 1207,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1148,
									"end": 1155,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1177,
									"end": 1201,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1195,
									"end": 1200,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1177,
									"end": 1201,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1177,
									"end": 1201,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1177,
									"end": 1201,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1177,
									"end": 1201,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1201,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1201,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1111,
									"end": 1207,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1111,
									"end": 1207,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1111,
									"end": 1207,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1111,
									"end": 1207,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1213,
									"end": 1323,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1213,
									"end": 1323,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1264,
									"end": 1271,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1293,
									"end": 1317,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1311,
									"end": 1316,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1293,
									"end": 1317,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 1293,
									"end": 1317,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1293,
									"end": 1317,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1293,
									"end": 1317,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1282,
									"end": 1317,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1282,
									"end": 1317,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1213,
									"end": 1323,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1213,
									"end": 1323,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1213,
									"end": 1323,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1213,
									"end": 1323,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1329,
									"end": 1455,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1329,
									"end": 1455,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1366,
									"end": 1373,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1406,
									"end": 1448,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1399,
									"end": 1404,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1395,
									"end": 1449,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1384,
									"end": 1449,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1384,
									"end": 1449,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1329,
									"end": 1455,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1329,
									"end": 1455,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1329,
									"end": 1455,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1329,
									"end": 1455,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1461,
									"end": 1538,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1461,
									"end": 1538,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1498,
									"end": 1505,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1527,
									"end": 1532,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1516,
									"end": 1532,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1516,
									"end": 1532,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1461,
									"end": 1538,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1461,
									"end": 1538,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1461,
									"end": 1538,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1461,
									"end": 1538,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1667,
									"end": 1784,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1667,
									"end": 1784,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1776,
									"end": 1777,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1773,
									"end": 1774,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1766,
									"end": 1778,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1790,
									"end": 1940,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1790,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1877,
									"end": 1915,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1909,
									"end": 1914,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1877,
									"end": 1915,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1877,
									"end": 1915,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1877,
									"end": 1915,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1877,
									"end": 1915,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1870,
									"end": 1875,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1867,
									"end": 1916,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1857,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 1857,
									"end": 1934,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1930,
									"end": 1931,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1927,
									"end": 1928,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1920,
									"end": 1932,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1857,
									"end": 1934,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 1857,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1790,
									"end": 1940,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1790,
									"end": 1940,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1946,
									"end": 2068,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1946,
									"end": 2068,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2019,
									"end": 2043,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 2037,
									"end": 2042,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2019,
									"end": 2043,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 2019,
									"end": 2043,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2019,
									"end": 2043,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 2019,
									"end": 2043,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2012,
									"end": 2017,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2009,
									"end": 2044,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1999,
									"end": 2062,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 1999,
									"end": 2062,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2058,
									"end": 2059,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2055,
									"end": 2056,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2048,
									"end": 2060,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1999,
									"end": 2062,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 1999,
									"end": 2062,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2068,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2068,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 22111,
									"end": 36115,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 22111,
									"end": 36115,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22111,
									"end": 36115,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 22111,
									"end": 36115,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22111,
									"end": 36115,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 22111,
									"end": 36115,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22111,
									"end": 36115,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 22111,
									"end": 36115,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22111,
									"end": 36115,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206b52a6c08afcefd74110e5339af0d515af0bfd2ad19efbf69ced67c240f8f50964736f6c63430008070033",
									".code": [
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "61C1B724"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "CF35FDDF"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "CF35FDDF"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "D209DB8C"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "E2BBB158"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "F3239AB5"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "8DBB1E3A"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "93F1A40B"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "C11490CC"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "CB3CBA55"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "71916982"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "71916982"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "7CD07E47"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "83E32135"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "8AA28550"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "8C51793B"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "61C1B724"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "630B5BA1"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "64482F79"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "41441D3B"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "4EA2813C"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "4EA2813C"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "51EB05A6"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "5312EA8E"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "5990C569"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "5FFE6146"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "41441D3B"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "441A3E70"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "454B0608"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "48CD4CB1"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "17CAF6F1"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "17CAF6F1"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "1D5FBD87"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "1EAAA045"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "23CF3118"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "3DF7AFF3"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "81E3EDA"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "BA33A58"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "1058D281"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "1526FE27"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 36115,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27199,
											"end": 27294,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 27199,
											"end": 27294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27199,
											"end": 27294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 27199,
											"end": 27294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 27199,
											"end": 27294,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27199,
											"end": 27294,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 27199,
											"end": 27294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27199,
											"end": 27294,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27199,
											"end": 27294,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27199,
											"end": 27294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 27199,
											"end": 27294,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27199,
											"end": 27294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27199,
											"end": 27294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 27199,
											"end": 27294,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27199,
											"end": 27294,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 27199,
											"end": 27294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27199,
											"end": 27294,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27199,
											"end": 27294,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27199,
											"end": 27294,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27199,
											"end": 27294,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27199,
											"end": 27294,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27199,
											"end": 27294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27199,
											"end": 27294,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25194,
											"end": 25320,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25194,
											"end": 25320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25194,
											"end": 25320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 25194,
											"end": 25320,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25194,
											"end": 25320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25194,
											"end": 25320,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25194,
											"end": 25320,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25194,
											"end": 25320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25194,
											"end": 25320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25194,
											"end": 25320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25194,
											"end": 25320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 25194,
											"end": 25320,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25194,
											"end": 25320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25194,
											"end": 25320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 25194,
											"end": 25320,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25194,
											"end": 25320,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 25194,
											"end": 25320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25194,
											"end": 25320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 25194,
											"end": 25320,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25194,
											"end": 25320,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 25194,
											"end": 25320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25194,
											"end": 25320,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 34809,
											"end": 35556,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 34809,
											"end": 35556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34809,
											"end": 35556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 34809,
											"end": 35556,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34809,
											"end": 35556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34809,
											"end": 35556,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 34809,
											"end": 35556,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34809,
											"end": 35556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34809,
											"end": 35556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34809,
											"end": 35556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34809,
											"end": 35556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 34809,
											"end": 35556,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34809,
											"end": 35556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34809,
											"end": 35556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 34809,
											"end": 35556,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34809,
											"end": 35556,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 34809,
											"end": 35556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34809,
											"end": 35556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 34809,
											"end": 35556,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34809,
											"end": 35556,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 34809,
											"end": 35556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34809,
											"end": 35556,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25792,
											"end": 27060,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 25792,
											"end": 27060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25792,
											"end": 27060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 25792,
											"end": 27060,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25792,
											"end": 27060,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25792,
											"end": 27060,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25792,
											"end": 27060,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25792,
											"end": 27060,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25792,
											"end": 27060,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25792,
											"end": 27060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25792,
											"end": 27060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 25792,
											"end": 27060,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25792,
											"end": 27060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25792,
											"end": 27060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 25792,
											"end": 27060,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25792,
											"end": 27060,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 25792,
											"end": 27060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25792,
											"end": 27060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 25792,
											"end": 27060,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25792,
											"end": 27060,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 25792,
											"end": 27060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25792,
											"end": 27060,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 28023,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 27463,
											"end": 28023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 28023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 27463,
											"end": 28023,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27463,
											"end": 28023,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 28023,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 28023,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 28023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 28023,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 28023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 28023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 27463,
											"end": 28023,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 28023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 28023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 27463,
											"end": 28023,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27463,
											"end": 28023,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 27463,
											"end": 28023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 28023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 27463,
											"end": 28023,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27463,
											"end": 28023,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 27463,
											"end": 28023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 28023,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 28501,
											"end": 28603,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 28501,
											"end": 28603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28501,
											"end": 28603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 28501,
											"end": 28603,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28501,
											"end": 28603,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28501,
											"end": 28603,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28501,
											"end": 28603,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28501,
											"end": 28603,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28501,
											"end": 28603,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28501,
											"end": 28603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28501,
											"end": 28603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 28501,
											"end": 28603,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28501,
											"end": 28603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28501,
											"end": 28603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 28501,
											"end": 28603,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28501,
											"end": 28603,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 28501,
											"end": 28603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28501,
											"end": 28603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 28501,
											"end": 28603,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28501,
											"end": 28603,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 28501,
											"end": 28603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28501,
											"end": 28603,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 36003,
											"end": 36112,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 36003,
											"end": 36112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36003,
											"end": 36112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 36003,
											"end": 36112,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36003,
											"end": 36112,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36003,
											"end": 36112,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 36003,
											"end": 36112,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36003,
											"end": 36112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36003,
											"end": 36112,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36003,
											"end": 36112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36003,
											"end": 36112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 36003,
											"end": 36112,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36003,
											"end": 36112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36003,
											"end": 36112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 36003,
											"end": 36112,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36003,
											"end": 36112,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 36003,
											"end": 36112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36003,
											"end": 36112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 36003,
											"end": 36112,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36003,
											"end": 36112,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 36003,
											"end": 36112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36003,
											"end": 36112,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 33056,
											"end": 33853,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 33056,
											"end": 33853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33056,
											"end": 33853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 33056,
											"end": 33853,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33056,
											"end": 33853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33056,
											"end": 33853,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 33056,
											"end": 33853,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33056,
											"end": 33853,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33056,
											"end": 33853,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33056,
											"end": 33853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33056,
											"end": 33853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 33056,
											"end": 33853,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33056,
											"end": 33853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33056,
											"end": 33853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 33056,
											"end": 33853,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33056,
											"end": 33853,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 33056,
											"end": 33853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33056,
											"end": 33853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 33056,
											"end": 33853,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33056,
											"end": 33853,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 33056,
											"end": 33853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33056,
											"end": 33853,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 32216,
											"end": 33003,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 32216,
											"end": 33003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32216,
											"end": 33003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 32216,
											"end": 33003,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32216,
											"end": 33003,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32216,
											"end": 33003,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32216,
											"end": 33003,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32216,
											"end": 33003,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32216,
											"end": 33003,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32216,
											"end": 33003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32216,
											"end": 33003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 32216,
											"end": 33003,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32216,
											"end": 33003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32216,
											"end": 33003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 32216,
											"end": 33003,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32216,
											"end": 33003,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 32216,
											"end": 33003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32216,
											"end": 33003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 32216,
											"end": 33003,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32216,
											"end": 33003,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 32216,
											"end": 33003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32216,
											"end": 33003,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 28726,
											"end": 29217,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 28726,
											"end": 29217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28726,
											"end": 29217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 28726,
											"end": 29217,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28726,
											"end": 29217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28726,
											"end": 29217,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28726,
											"end": 29217,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28726,
											"end": 29217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28726,
											"end": 29217,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28726,
											"end": 29217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28726,
											"end": 29217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 28726,
											"end": 29217,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28726,
											"end": 29217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28726,
											"end": 29217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 28726,
											"end": 29217,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28726,
											"end": 29217,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 28726,
											"end": 29217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28726,
											"end": 29217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 28726,
											"end": 29217,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28726,
											"end": 29217,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 28726,
											"end": 29217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28726,
											"end": 29217,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25454,
											"end": 25660,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 25454,
											"end": 25660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25454,
											"end": 25660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 25454,
											"end": 25660,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25454,
											"end": 25660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25454,
											"end": 25660,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25454,
											"end": 25660,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25454,
											"end": 25660,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25454,
											"end": 25660,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25454,
											"end": 25660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25454,
											"end": 25660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 25454,
											"end": 25660,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25454,
											"end": 25660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25454,
											"end": 25660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 25454,
											"end": 25660,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25454,
											"end": 25660,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 25454,
											"end": 25660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25454,
											"end": 25660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 25454,
											"end": 25660,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25454,
											"end": 25660,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 25454,
											"end": 25660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25454,
											"end": 25660,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 30608,
											"end": 31298,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 30608,
											"end": 31298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30608,
											"end": 31298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 30608,
											"end": 31298,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30608,
											"end": 31298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30608,
											"end": 31298,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30608,
											"end": 31298,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30608,
											"end": 31298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30608,
											"end": 31298,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30608,
											"end": 31298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30608,
											"end": 31298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 30608,
											"end": 31298,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30608,
											"end": 31298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30608,
											"end": 31298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 30608,
											"end": 31298,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30608,
											"end": 31298,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 30608,
											"end": 31298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30608,
											"end": 31298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 30608,
											"end": 31298,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30608,
											"end": 31298,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 30608,
											"end": 31298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30608,
											"end": 31298,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 35635,
											"end": 35991,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 35635,
											"end": 35991,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35635,
											"end": 35991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 35635,
											"end": 35991,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35635,
											"end": 35991,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35635,
											"end": 35991,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 35635,
											"end": 35991,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35635,
											"end": 35991,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35635,
											"end": 35991,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35635,
											"end": 35991,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35635,
											"end": 35991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 35635,
											"end": 35991,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35635,
											"end": 35991,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35635,
											"end": 35991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 35635,
											"end": 35991,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35635,
											"end": 35991,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 35635,
											"end": 35991,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35635,
											"end": 35991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 35635,
											"end": 35991,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35635,
											"end": 35991,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 35635,
											"end": 35991,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35635,
											"end": 35991,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 27068,
											"end": 27191,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27068,
											"end": 27191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27068,
											"end": 27191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 27068,
											"end": 27191,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27068,
											"end": 27191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27068,
											"end": 27191,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27068,
											"end": 27191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27068,
											"end": 27191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27068,
											"end": 27191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27068,
											"end": 27191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27068,
											"end": 27191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 27068,
											"end": 27191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27068,
											"end": 27191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27068,
											"end": 27191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 27068,
											"end": 27191,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27068,
											"end": 27191,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 27068,
											"end": 27191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27068,
											"end": 27191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 27068,
											"end": 27191,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27068,
											"end": 27191,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 27068,
											"end": 27191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27068,
											"end": 27191,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 30352,
											"end": 30532,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 30352,
											"end": 30532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30352,
											"end": 30532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 30352,
											"end": 30532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 30352,
											"end": 30532,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30352,
											"end": 30532,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 30352,
											"end": 30532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30352,
											"end": 30532,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 28120,
											"end": 28425,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 28120,
											"end": 28425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28120,
											"end": 28425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 28120,
											"end": 28425,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28120,
											"end": 28425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28120,
											"end": 28425,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28120,
											"end": 28425,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28120,
											"end": 28425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28120,
											"end": 28425,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28120,
											"end": 28425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28120,
											"end": 28425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 28120,
											"end": 28425,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28120,
											"end": 28425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28120,
											"end": 28425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 28120,
											"end": 28425,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28120,
											"end": 28425,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 28120,
											"end": 28425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28120,
											"end": 28425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 28120,
											"end": 28425,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28120,
											"end": 28425,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 28120,
											"end": 28425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28120,
											"end": 28425,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24375,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 24347,
											"end": 24375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 24347,
											"end": 24375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 24347,
											"end": 24375,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24347,
											"end": 24375,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 24347,
											"end": 24375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24375,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24347,
											"end": 24375,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 24347,
											"end": 24375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 24347,
											"end": 24375,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24347,
											"end": 24375,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 24347,
											"end": 24375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24375,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24347,
											"end": 24375,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24375,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24375,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25328,
											"end": 25446,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 25328,
											"end": 25446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25328,
											"end": 25446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 25328,
											"end": 25446,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25328,
											"end": 25446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25328,
											"end": 25446,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25328,
											"end": 25446,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25328,
											"end": 25446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25328,
											"end": 25446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25328,
											"end": 25446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25328,
											"end": 25446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 25328,
											"end": 25446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25328,
											"end": 25446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25328,
											"end": 25446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 25328,
											"end": 25446,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25328,
											"end": 25446,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 25328,
											"end": 25446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25328,
											"end": 25446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 25328,
											"end": 25446,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25328,
											"end": 25446,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 25328,
											"end": 25446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25328,
											"end": 25446,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25328,
											"end": 25446,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25328,
											"end": 25446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 25328,
											"end": 25446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25328,
											"end": 25446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25328,
											"end": 25446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 25328,
											"end": 25446,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25328,
											"end": 25446,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 25328,
											"end": 25446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25328,
											"end": 25446,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25328,
											"end": 25446,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25328,
											"end": 25446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25328,
											"end": 25446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25328,
											"end": 25446,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25328,
											"end": 25446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25328,
											"end": 25446,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 29293,
											"end": 29437,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 29293,
											"end": 29437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29293,
											"end": 29437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 29293,
											"end": 29437,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29293,
											"end": 29437,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29293,
											"end": 29437,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29293,
											"end": 29437,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29293,
											"end": 29437,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29293,
											"end": 29437,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29293,
											"end": 29437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29293,
											"end": 29437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 29293,
											"end": 29437,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29293,
											"end": 29437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29293,
											"end": 29437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 29293,
											"end": 29437,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29293,
											"end": 29437,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 29293,
											"end": 29437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29293,
											"end": 29437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 29293,
											"end": 29437,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29293,
											"end": 29437,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 29293,
											"end": 29437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29293,
											"end": 29437,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29293,
											"end": 29437,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29293,
											"end": 29437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 29293,
											"end": 29437,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29293,
											"end": 29437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29293,
											"end": 29437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 29293,
											"end": 29437,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29293,
											"end": 29437,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 29293,
											"end": 29437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29293,
											"end": 29437,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29293,
											"end": 29437,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29293,
											"end": 29437,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29293,
											"end": 29437,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29293,
											"end": 29437,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29293,
											"end": 29437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29293,
											"end": 29437,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25668,
											"end": 25784,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 25668,
											"end": 25784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25668,
											"end": 25784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 25668,
											"end": 25784,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25668,
											"end": 25784,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25668,
											"end": 25784,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25668,
											"end": 25784,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25668,
											"end": 25784,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25668,
											"end": 25784,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25668,
											"end": 25784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25668,
											"end": 25784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 25668,
											"end": 25784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25668,
											"end": 25784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25668,
											"end": 25784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 25668,
											"end": 25784,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25668,
											"end": 25784,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 25668,
											"end": 25784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25668,
											"end": 25784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 25668,
											"end": 25784,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25668,
											"end": 25784,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 25668,
											"end": 25784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25668,
											"end": 25784,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 33861,
											"end": 34757,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 33861,
											"end": 34757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33861,
											"end": 34757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 33861,
											"end": 34757,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33861,
											"end": 34757,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33861,
											"end": 34757,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 33861,
											"end": 34757,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33861,
											"end": 34757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33861,
											"end": 34757,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33861,
											"end": 34757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33861,
											"end": 34757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 33861,
											"end": 34757,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33861,
											"end": 34757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33861,
											"end": 34757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 33861,
											"end": 34757,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33861,
											"end": 34757,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 33861,
											"end": 34757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33861,
											"end": 34757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 33861,
											"end": 34757,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33861,
											"end": 34757,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 33861,
											"end": 34757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33861,
											"end": 34757,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 31368,
											"end": 32164,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 31368,
											"end": 32164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31368,
											"end": 32164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 31368,
											"end": 32164,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31368,
											"end": 32164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31368,
											"end": 32164,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31368,
											"end": 32164,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31368,
											"end": 32164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31368,
											"end": 32164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31368,
											"end": 32164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31368,
											"end": 32164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 31368,
											"end": 32164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31368,
											"end": 32164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31368,
											"end": 32164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 31368,
											"end": 32164,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31368,
											"end": 32164,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 31368,
											"end": 32164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31368,
											"end": 32164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 31368,
											"end": 32164,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31368,
											"end": 32164,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 31368,
											"end": 32164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31368,
											"end": 32164,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 29502,
											"end": 30269,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 29502,
											"end": 30269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29502,
											"end": 30269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 29502,
											"end": 30269,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29502,
											"end": 30269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29502,
											"end": 30269,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29502,
											"end": 30269,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29502,
											"end": 30269,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29502,
											"end": 30269,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29502,
											"end": 30269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29502,
											"end": 30269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 29502,
											"end": 30269,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29502,
											"end": 30269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29502,
											"end": 30269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 29502,
											"end": 30269,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29502,
											"end": 30269,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 29502,
											"end": 30269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29502,
											"end": 30269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 29502,
											"end": 30269,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29502,
											"end": 30269,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 29502,
											"end": 30269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29502,
											"end": 30269,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29502,
											"end": 30269,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29502,
											"end": 30269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 29502,
											"end": 30269,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29502,
											"end": 30269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29502,
											"end": 30269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 29502,
											"end": 30269,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29502,
											"end": 30269,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 29502,
											"end": 30269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29502,
											"end": 30269,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29502,
											"end": 30269,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29502,
											"end": 30269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29502,
											"end": 30269,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29502,
											"end": 30269,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29502,
											"end": 30269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29502,
											"end": 30269,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 27199,
											"end": 27294,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 27199,
											"end": 27294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27244,
											"end": 27251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27271,
											"end": 27279,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 27271,
											"end": 27286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27271,
											"end": 27286,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27271,
											"end": 27286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27271,
											"end": 27286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27264,
											"end": 27286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27264,
											"end": 27286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27199,
											"end": 27294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27199,
											"end": 27294,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25194,
											"end": 25320,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 25194,
											"end": 25320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 20336,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25296,
											"end": 25312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25293,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 25278,
											"end": 25293,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25278,
											"end": 25312,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25278,
											"end": 25312,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25312,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25312,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25278,
											"end": 25312,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25312,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25312,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25312,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25312,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25278,
											"end": 25312,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25312,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25312,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25312,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25194,
											"end": 25320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25194,
											"end": 25320,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 34809,
											"end": 35556,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 34809,
											"end": 35556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34866,
											"end": 34887,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34890,
											"end": 34898,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 34899,
											"end": 34900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34890,
											"end": 34901,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34890,
											"end": 34901,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34890,
											"end": 34901,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34890,
											"end": 34901,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34890,
											"end": 34901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 34890,
											"end": 34901,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34890,
											"end": 34901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 34890,
											"end": 34901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 34890,
											"end": 34901,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34890,
											"end": 34901,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 34890,
											"end": 34901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34890,
											"end": 34901,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 34890,
											"end": 34901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34890,
											"end": 34901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34890,
											"end": 34901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34890,
											"end": 34901,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34890,
											"end": 34901,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34890,
											"end": 34901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34890,
											"end": 34901,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34890,
											"end": 34901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34890,
											"end": 34901,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34890,
											"end": 34901,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 34890,
											"end": 34901,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34866,
											"end": 34901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34866,
											"end": 34901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34912,
											"end": 34933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34936,
											"end": 34944,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 34936,
											"end": 34947,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34945,
											"end": 34946,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34936,
											"end": 34947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34936,
											"end": 34947,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34936,
											"end": 34947,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34936,
											"end": 34947,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34936,
											"end": 34947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34936,
											"end": 34947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34936,
											"end": 34947,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34936,
											"end": 34947,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34936,
											"end": 34947,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34936,
											"end": 34947,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34936,
											"end": 34947,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34936,
											"end": 34959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34948,
											"end": 34958,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 34936,
											"end": 34959,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34936,
											"end": 34959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34936,
											"end": 34959,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34936,
											"end": 34959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34936,
											"end": 34959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34936,
											"end": 34959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34936,
											"end": 34959,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34936,
											"end": 34959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34936,
											"end": 34959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34936,
											"end": 34959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34936,
											"end": 34959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34936,
											"end": 34959,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34936,
											"end": 34959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34936,
											"end": 34959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34936,
											"end": 34959,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34912,
											"end": 34959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34912,
											"end": 34959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34993,
											"end": 35000,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34978,
											"end": 34982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34978,
											"end": 34989,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34978,
											"end": 34989,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34978,
											"end": 34989,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34978,
											"end": 35000,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34978,
											"end": 35000,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34970,
											"end": 35023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 34970,
											"end": 35023,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34970,
											"end": 35023,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34970,
											"end": 35023,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34970,
											"end": 35023,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 34970,
											"end": 35023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34970,
											"end": 35023,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34970,
											"end": 35023,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34970,
											"end": 35023,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34970,
											"end": 35023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 34970,
											"end": 35023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34970,
											"end": 35023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 34970,
											"end": 35023,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34970,
											"end": 35023,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 34970,
											"end": 35023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34970,
											"end": 35023,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34970,
											"end": 35023,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34970,
											"end": 35023,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34970,
											"end": 35023,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34970,
											"end": 35023,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34970,
											"end": 35023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34970,
											"end": 35023,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34970,
											"end": 35023,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 34970,
											"end": 35023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35034,
											"end": 35047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 35045,
											"end": 35046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35034,
											"end": 35044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 35034,
											"end": 35047,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35034,
											"end": 35047,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 35034,
											"end": 35047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35058,
											"end": 35073,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35076,
											"end": 35145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 35129,
											"end": 35133,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35129,
											"end": 35144,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35129,
											"end": 35144,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35129,
											"end": 35144,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35076,
											"end": 35124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 35119,
											"end": 35123,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 35076,
											"end": 35114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 35092,
											"end": 35096,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 35092,
											"end": 35113,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 35092,
											"end": 35113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35092,
											"end": 35113,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35076,
											"end": 35080,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 35076,
											"end": 35087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35076,
											"end": 35087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35076,
											"end": 35087,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35076,
											"end": 35091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 35076,
											"end": 35091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35076,
											"end": 35114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35076,
											"end": 35114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35076,
											"end": 35114,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35076,
											"end": 35114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35076,
											"end": 35114,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35076,
											"end": 35114,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 35076,
											"end": 35114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35076,
											"end": 35118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 35076,
											"end": 35118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35076,
											"end": 35124,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35076,
											"end": 35124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35076,
											"end": 35124,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35076,
											"end": 35124,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35076,
											"end": 35124,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35076,
											"end": 35124,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 35076,
											"end": 35124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35076,
											"end": 35128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 35076,
											"end": 35128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35076,
											"end": 35145,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35076,
											"end": 35145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35076,
											"end": 35145,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35076,
											"end": 35145,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35076,
											"end": 35145,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35076,
											"end": 35145,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 35076,
											"end": 35145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35058,
											"end": 35145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35058,
											"end": 35145,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35169,
											"end": 35170,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35159,
											"end": 35166,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35159,
											"end": 35170,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 35156,
											"end": 35263,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35156,
											"end": 35263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 35156,
											"end": 35263,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35214,
											"end": 35251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 35243,
											"end": 35250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35214,
											"end": 35226,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 35214,
											"end": 35238,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35227,
											"end": 35237,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 35214,
											"end": 35238,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35214,
											"end": 35238,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35214,
											"end": 35238,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35214,
											"end": 35238,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35214,
											"end": 35238,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35214,
											"end": 35238,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35214,
											"end": 35238,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35214,
											"end": 35238,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35214,
											"end": 35238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35214,
											"end": 35238,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35214,
											"end": 35238,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35214,
											"end": 35238,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35214,
											"end": 35238,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35214,
											"end": 35238,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35214,
											"end": 35238,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35214,
											"end": 35238,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35214,
											"end": 35242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 35214,
											"end": 35242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35214,
											"end": 35251,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35214,
											"end": 35251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35214,
											"end": 35251,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35214,
											"end": 35251,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35214,
											"end": 35251,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35214,
											"end": 35251,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 35214,
											"end": 35251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35187,
											"end": 35199,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 35187,
											"end": 35211,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35200,
											"end": 35210,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 35187,
											"end": 35211,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35187,
											"end": 35211,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35187,
											"end": 35211,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35187,
											"end": 35211,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35187,
											"end": 35211,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35187,
											"end": 35211,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35187,
											"end": 35211,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35187,
											"end": 35211,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35187,
											"end": 35211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35187,
											"end": 35211,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35187,
											"end": 35211,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35187,
											"end": 35211,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35187,
											"end": 35211,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35187,
											"end": 35211,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35187,
											"end": 35211,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35187,
											"end": 35251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35187,
											"end": 35251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35187,
											"end": 35251,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 35187,
											"end": 35251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35156,
											"end": 35263,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 35156,
											"end": 35263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35286,
											"end": 35287,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35276,
											"end": 35283,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35276,
											"end": 35287,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 35273,
											"end": 35424,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35273,
											"end": 35424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 35273,
											"end": 35424,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35318,
											"end": 35342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 35334,
											"end": 35341,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35318,
											"end": 35322,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35318,
											"end": 35329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35318,
											"end": 35329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35318,
											"end": 35329,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35318,
											"end": 35333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 35318,
											"end": 35333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35318,
											"end": 35342,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35318,
											"end": 35342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35318,
											"end": 35342,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35318,
											"end": 35342,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35318,
											"end": 35342,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35318,
											"end": 35342,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 35318,
											"end": 35342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35304,
											"end": 35308,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35304,
											"end": 35315,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35304,
											"end": 35315,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35304,
											"end": 35342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35304,
											"end": 35342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35304,
											"end": 35342,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 35304,
											"end": 35342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35357,
											"end": 35412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 35391,
											"end": 35401,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 35404,
											"end": 35411,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35357,
											"end": 35361,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35357,
											"end": 35369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35357,
											"end": 35369,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35357,
											"end": 35369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35357,
											"end": 35369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35357,
											"end": 35369,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35357,
											"end": 35369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35357,
											"end": 35369,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 35357,
											"end": 35369,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 35357,
											"end": 35369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35357,
											"end": 35369,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 35357,
											"end": 35369,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35357,
											"end": 35369,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35357,
											"end": 35382,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35357,
											"end": 35382,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35357,
											"end": 35382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 35357,
											"end": 35382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35357,
											"end": 35412,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35357,
											"end": 35412,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35357,
											"end": 35412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35357,
											"end": 35412,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35357,
											"end": 35412,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35357,
											"end": 35412,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35357,
											"end": 35412,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 35357,
											"end": 35412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35273,
											"end": 35424,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 35273,
											"end": 35424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35452,
											"end": 35500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 35495,
											"end": 35499,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 35452,
											"end": 35490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 35468,
											"end": 35472,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35468,
											"end": 35489,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 35468,
											"end": 35489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35468,
											"end": 35489,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35452,
											"end": 35456,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35452,
											"end": 35463,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35452,
											"end": 35463,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35452,
											"end": 35463,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35452,
											"end": 35467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 35452,
											"end": 35467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35452,
											"end": 35490,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35452,
											"end": 35490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35452,
											"end": 35490,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35452,
											"end": 35490,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35452,
											"end": 35490,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35452,
											"end": 35490,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 35452,
											"end": 35490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35452,
											"end": 35494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 35452,
											"end": 35494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35452,
											"end": 35500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35452,
											"end": 35500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35452,
											"end": 35500,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35452,
											"end": 35500,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35452,
											"end": 35500,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35452,
											"end": 35500,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 35452,
											"end": 35500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35434,
											"end": 35438,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35434,
											"end": 35449,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35434,
											"end": 35449,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35434,
											"end": 35500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35434,
											"end": 35500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35434,
											"end": 35500,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 35434,
											"end": 35500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35537,
											"end": 35538,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35525,
											"end": 35535,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 35516,
											"end": 35548,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35516,
											"end": 35548,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35516,
											"end": 35548,
											"name": "PUSH",
											"source": 0,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 35540,
											"end": 35547,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 35516,
											"end": 35548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35516,
											"end": 35548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35516,
											"end": 35548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 35516,
											"end": 35548,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35516,
											"end": 35548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35516,
											"end": 35548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 35516,
											"end": 35548,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35516,
											"end": 35548,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 35516,
											"end": 35548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35516,
											"end": 35548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35516,
											"end": 35548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35516,
											"end": 35548,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35516,
											"end": 35548,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35516,
											"end": 35548,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35516,
											"end": 35548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35516,
											"end": 35548,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 34855,
											"end": 35556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34855,
											"end": 35556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34855,
											"end": 35556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34809,
											"end": 35556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34809,
											"end": 35556,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25792,
											"end": 27060,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 25792,
											"end": 27060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25863,
											"end": 25884,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25887,
											"end": 25895,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 25896,
											"end": 25900,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25887,
											"end": 25901,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25887,
											"end": 25901,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25887,
											"end": 25901,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25887,
											"end": 25901,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 25887,
											"end": 25901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 25887,
											"end": 25901,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25887,
											"end": 25901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 25887,
											"end": 25901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 25887,
											"end": 25901,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25887,
											"end": 25901,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 25887,
											"end": 25901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25887,
											"end": 25901,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 25887,
											"end": 25901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25887,
											"end": 25901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25887,
											"end": 25901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25887,
											"end": 25901,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25887,
											"end": 25901,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25887,
											"end": 25901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25887,
											"end": 25901,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25887,
											"end": 25901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25887,
											"end": 25901,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25887,
											"end": 25901,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25887,
											"end": 25901,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25863,
											"end": 25901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25863,
											"end": 25901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25912,
											"end": 25933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25936,
											"end": 25944,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 25936,
											"end": 25950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25945,
											"end": 25949,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25936,
											"end": 25950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25936,
											"end": 25950,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25936,
											"end": 25950,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25936,
											"end": 25950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25936,
											"end": 25950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25936,
											"end": 25950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25936,
											"end": 25950,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25936,
											"end": 25950,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25936,
											"end": 25950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25936,
											"end": 25950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25936,
											"end": 25950,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25936,
											"end": 25962,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25951,
											"end": 25961,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 25936,
											"end": 25962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25936,
											"end": 25962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25936,
											"end": 25962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25936,
											"end": 25962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25936,
											"end": 25962,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25936,
											"end": 25962,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25936,
											"end": 25962,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25936,
											"end": 25962,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25936,
											"end": 25962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25936,
											"end": 25962,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25936,
											"end": 25962,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25936,
											"end": 25962,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25936,
											"end": 25962,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25936,
											"end": 25962,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25936,
											"end": 25962,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25912,
											"end": 25962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25912,
											"end": 25962,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25973,
											"end": 25997,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26000,
											"end": 26004,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26000,
											"end": 26021,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 26000,
											"end": 26021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26000,
											"end": 26021,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25973,
											"end": 26021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25973,
											"end": 26021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26032,
											"end": 26048,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26051,
											"end": 26055,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26063,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26051,
											"end": 26063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26063,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26051,
											"end": 26063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26063,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26063,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26051,
											"end": 26063,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26063,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26063,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26051,
											"end": 26063,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26073,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26051,
											"end": 26073,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26073,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 26082,
											"end": 26086,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 26051,
											"end": 26088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26032,
											"end": 26088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26032,
											"end": 26088,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26118,
											"end": 26122,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26118,
											"end": 26138,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26118,
											"end": 26138,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26118,
											"end": 26138,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26115,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26138,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26155,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 26103,
											"end": 26155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26154,
											"end": 26155,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26142,
											"end": 26150,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26142,
											"end": 26155,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26142,
											"end": 26155,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26155,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 26103,
											"end": 26155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26099,
											"end": 26453,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26099,
											"end": 26453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 26099,
											"end": 26453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26193,
											"end": 26242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 26207,
											"end": 26211,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26207,
											"end": 26227,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26207,
											"end": 26227,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26207,
											"end": 26227,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26229,
											"end": 26241,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 26193,
											"end": 26206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 26193,
											"end": 26242,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26193,
											"end": 26242,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 26193,
											"end": 26242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26242,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26257,
											"end": 26276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26279,
											"end": 26350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 26334,
											"end": 26349,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 26334,
											"end": 26349,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 26313,
											"end": 26317,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 26313,
											"end": 26328,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26313,
											"end": 26328,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26313,
											"end": 26328,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 26294,
											"end": 26307,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 26294,
											"end": 26307,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26289,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 26279,
											"end": 26293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26308,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26279,
											"end": 26308,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26279,
											"end": 26308,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 26279,
											"end": 26308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 26279,
											"end": 26312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26329,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26279,
											"end": 26329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26329,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26279,
											"end": 26329,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 26279,
											"end": 26329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 26279,
											"end": 26333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26350,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26279,
											"end": 26350,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26350,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26279,
											"end": 26350,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 26279,
											"end": 26350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26257,
											"end": 26350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26257,
											"end": 26350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26384,
											"end": 26441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 26405,
											"end": 26440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 26431,
											"end": 26439,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26405,
											"end": 26426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 26421,
											"end": 26425,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 26405,
											"end": 26416,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26405,
											"end": 26420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 26405,
											"end": 26420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26405,
											"end": 26426,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26405,
											"end": 26426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26405,
											"end": 26426,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26405,
											"end": 26426,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26405,
											"end": 26426,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26405,
											"end": 26426,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 26405,
											"end": 26426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26405,
											"end": 26430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 26405,
											"end": 26430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26405,
											"end": 26440,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26405,
											"end": 26440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26405,
											"end": 26440,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26405,
											"end": 26440,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26405,
											"end": 26440,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26405,
											"end": 26440,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 26405,
											"end": 26440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26384,
											"end": 26400,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26384,
											"end": 26404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 26384,
											"end": 26404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26384,
											"end": 26441,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26384,
											"end": 26441,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26384,
											"end": 26441,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26384,
											"end": 26441,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26384,
											"end": 26441,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26384,
											"end": 26441,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 26384,
											"end": 26441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26365,
											"end": 26441,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 26365,
											"end": 26441,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26157,
											"end": 26453,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26157,
											"end": 26453,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26099,
											"end": 26453,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 26099,
											"end": 26453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26463,
											"end": 26478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26481,
											"end": 26545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 26529,
											"end": 26533,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26529,
											"end": 26544,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26529,
											"end": 26544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26529,
											"end": 26544,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26481,
											"end": 26524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 26519,
											"end": 26523,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 26481,
											"end": 26514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 26497,
											"end": 26513,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 26481,
											"end": 26485,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 26481,
											"end": 26492,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26481,
											"end": 26492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26481,
											"end": 26492,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26481,
											"end": 26496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 26481,
											"end": 26496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26481,
											"end": 26514,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26481,
											"end": 26514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26481,
											"end": 26514,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26481,
											"end": 26514,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26481,
											"end": 26514,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26481,
											"end": 26514,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 26481,
											"end": 26514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26481,
											"end": 26518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 26481,
											"end": 26518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26481,
											"end": 26524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26481,
											"end": 26524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26481,
											"end": 26524,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26481,
											"end": 26524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26481,
											"end": 26524,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26481,
											"end": 26524,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 26481,
											"end": 26524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26481,
											"end": 26528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 26481,
											"end": 26528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26481,
											"end": 26545,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26481,
											"end": 26545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26481,
											"end": 26545,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26481,
											"end": 26545,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26481,
											"end": 26545,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26481,
											"end": 26545,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 26481,
											"end": 26545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26463,
											"end": 26545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26463,
											"end": 26545,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26556,
											"end": 26576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26579,
											"end": 26587,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26588,
											"end": 26593,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 26579,
											"end": 26594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26579,
											"end": 26594,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26579,
											"end": 26594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26579,
											"end": 26594,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26579,
											"end": 26594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 26579,
											"end": 26594,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26579,
											"end": 26594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 26579,
											"end": 26594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 26579,
											"end": 26594,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26579,
											"end": 26594,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 26579,
											"end": 26594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26579,
											"end": 26594,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 26579,
											"end": 26594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26579,
											"end": 26594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26579,
											"end": 26594,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26579,
											"end": 26594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26579,
											"end": 26594,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26579,
											"end": 26594,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26579,
											"end": 26594,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26579,
											"end": 26594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26579,
											"end": 26594,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26579,
											"end": 26594,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 26579,
											"end": 26594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26556,
											"end": 26594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26556,
											"end": 26594,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26605,
											"end": 26618,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26621,
											"end": 26658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 26633,
											"end": 26645,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 26633,
											"end": 26657,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26646,
											"end": 26656,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26633,
											"end": 26657,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26633,
											"end": 26657,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26633,
											"end": 26657,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26633,
											"end": 26657,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26633,
											"end": 26657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26633,
											"end": 26657,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26633,
											"end": 26657,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26633,
											"end": 26657,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26633,
											"end": 26657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26633,
											"end": 26657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26633,
											"end": 26657,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26633,
											"end": 26657,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26633,
											"end": 26657,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26633,
											"end": 26657,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26633,
											"end": 26657,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26633,
											"end": 26657,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26621,
											"end": 26628,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26621,
											"end": 26632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 26621,
											"end": 26632,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26621,
											"end": 26658,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26621,
											"end": 26658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26621,
											"end": 26658,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26621,
											"end": 26658,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26621,
											"end": 26658,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26621,
											"end": 26658,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 26621,
											"end": 26658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26605,
											"end": 26658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26605,
											"end": 26658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26680,
											"end": 26683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26680,
											"end": 26689,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26680,
											"end": 26689,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26680,
											"end": 26689,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26672,
											"end": 26677,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26672,
											"end": 26689,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26669,
											"end": 26857,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26669,
											"end": 26857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 26669,
											"end": 26857,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26716,
											"end": 26717,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26708,
											"end": 26712,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 26708,
											"end": 26717,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26705,
											"end": 26768,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26705,
											"end": 26768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 26705,
											"end": 26768,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26737,
											"end": 26752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 26750,
											"end": 26751,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26737,
											"end": 26749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 26737,
											"end": 26752,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26737,
											"end": 26752,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 26737,
											"end": 26752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26705,
											"end": 26768,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 26705,
											"end": 26768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26793,
											"end": 26794,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26785,
											"end": 26789,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 26785,
											"end": 26794,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26782,
											"end": 26846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 26782,
											"end": 26846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26814,
											"end": 26830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 26823,
											"end": 26827,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 26828,
											"end": 26829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26814,
											"end": 26822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 26814,
											"end": 26830,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26814,
											"end": 26830,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 26814,
											"end": 26830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26782,
											"end": 26846,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 26782,
											"end": 26846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26669,
											"end": 26857,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 26669,
											"end": 26857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26887,
											"end": 26899,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 26887,
											"end": 26911,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26900,
											"end": 26910,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26887,
											"end": 26911,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26887,
											"end": 26911,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26887,
											"end": 26911,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26887,
											"end": 26911,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26887,
											"end": 26911,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26887,
											"end": 26911,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26887,
											"end": 26911,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26887,
											"end": 26911,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26887,
											"end": 26911,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26887,
											"end": 26911,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26887,
											"end": 26911,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26887,
											"end": 26911,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26887,
											"end": 26911,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26887,
											"end": 26911,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26887,
											"end": 26911,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26887,
											"end": 26911,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26875,
											"end": 26878,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26875,
											"end": 26884,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26875,
											"end": 26884,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26875,
											"end": 26884,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26875,
											"end": 26911,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26867,
											"end": 26935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 26867,
											"end": 26935,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26867,
											"end": 26935,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26867,
											"end": 26935,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26867,
											"end": 26935,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26867,
											"end": 26935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26867,
											"end": 26935,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26867,
											"end": 26935,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26867,
											"end": 26935,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26867,
											"end": 26935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 26867,
											"end": 26935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26867,
											"end": 26935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 26867,
											"end": 26935,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26867,
											"end": 26935,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 26867,
											"end": 26935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26867,
											"end": 26935,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26867,
											"end": 26935,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26867,
											"end": 26935,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26867,
											"end": 26935,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26867,
											"end": 26935,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26867,
											"end": 26935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26867,
											"end": 26935,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26867,
											"end": 26935,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 26867,
											"end": 26935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26973,
											"end": 27012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 27002,
											"end": 27005,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27002,
											"end": 27011,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27002,
											"end": 27011,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27002,
											"end": 27011,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26973,
											"end": 26985,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 26973,
											"end": 26997,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26986,
											"end": 26996,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26973,
											"end": 26997,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26973,
											"end": 26997,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26973,
											"end": 26997,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26973,
											"end": 26997,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26973,
											"end": 26997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26973,
											"end": 26997,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26973,
											"end": 26997,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26973,
											"end": 26997,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26973,
											"end": 26997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26973,
											"end": 26997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26973,
											"end": 26997,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26973,
											"end": 26997,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26973,
											"end": 26997,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26973,
											"end": 26997,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26973,
											"end": 26997,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26973,
											"end": 26997,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26973,
											"end": 27001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 26973,
											"end": 27001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26973,
											"end": 27012,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26973,
											"end": 27012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26973,
											"end": 27012,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26973,
											"end": 27012,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26973,
											"end": 27012,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26973,
											"end": 27012,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 26973,
											"end": 27012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26946,
											"end": 26958,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 26946,
											"end": 26970,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26959,
											"end": 26969,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26946,
											"end": 26970,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26946,
											"end": 26970,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26946,
											"end": 26970,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26946,
											"end": 26970,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26946,
											"end": 26970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26946,
											"end": 26970,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26946,
											"end": 26970,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26946,
											"end": 26970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26946,
											"end": 26970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26946,
											"end": 26970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26946,
											"end": 26970,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26946,
											"end": 26970,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26946,
											"end": 26970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26946,
											"end": 26970,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26946,
											"end": 26970,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26946,
											"end": 27012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26946,
											"end": 27012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26946,
											"end": 27012,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26946,
											"end": 27012,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27026,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27023,
											"end": 27030,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27023,
											"end": 27030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27030,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27030,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 27023,
											"end": 27030,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27030,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27030,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27023,
											"end": 27030,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27040,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27023,
											"end": 27040,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27040,
											"name": "PUSH",
											"source": 0,
											"value": "17E5883C"
										},
										{
											"begin": 27041,
											"end": 27051,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27023,
											"end": 27052,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25852,
											"end": 27060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25852,
											"end": 27060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25852,
											"end": 27060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25852,
											"end": 27060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25852,
											"end": 27060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25852,
											"end": 27060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25852,
											"end": 27060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25792,
											"end": 27060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25792,
											"end": 27060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25792,
											"end": 27060,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27463,
											"end": 28023,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 27463,
											"end": 28023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 20336,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27566,
											"end": 27577,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27562,
											"end": 27623,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27562,
											"end": 27623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 27562,
											"end": 27623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27594,
											"end": 27611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 27594,
											"end": 27609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 27594,
											"end": 27611,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27594,
											"end": 27611,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 27594,
											"end": 27611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27562,
											"end": 27623,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 27562,
											"end": 27623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27633,
											"end": 27656,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27674,
											"end": 27684,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 27674,
											"end": 27684,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27659,
											"end": 27671,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 27659,
											"end": 27684,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27659,
											"end": 27712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 27659,
											"end": 27712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27702,
											"end": 27712,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 27702,
											"end": 27712,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27659,
											"end": 27712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 27659,
											"end": 27712,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27659,
											"end": 27712,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 27659,
											"end": 27712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27687,
											"end": 27699,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 27659,
											"end": 27712,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 27659,
											"end": 27712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27633,
											"end": 27712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27633,
											"end": 27712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27741,
											"end": 27773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 27761,
											"end": 27772,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27741,
											"end": 27756,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 27741,
											"end": 27756,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27741,
											"end": 27760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 27741,
											"end": 27760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27741,
											"end": 27773,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27741,
											"end": 27773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27741,
											"end": 27773,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 27741,
											"end": 27773,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27741,
											"end": 27773,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27741,
											"end": 27773,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 27741,
											"end": 27773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27723,
											"end": 27738,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 27723,
											"end": 27773,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27723,
											"end": 27773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27723,
											"end": 27773,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27723,
											"end": 27773,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 27792,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 27812,
											"end": 28004,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27812,
											"end": 28004,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27812,
											"end": 28004,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27812,
											"end": 28004,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27812,
											"end": 28004,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27812,
											"end": 28004,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27812,
											"end": 28004,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27812,
											"end": 28004,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27849,
											"end": 27857,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27812,
											"end": 28004,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27812,
											"end": 28004,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27812,
											"end": 28004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27812,
											"end": 28004,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27812,
											"end": 28004,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27812,
											"end": 28004,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27888,
											"end": 27899,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 27812,
											"end": 28004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27812,
											"end": 28004,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27812,
											"end": 28004,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27812,
											"end": 28004,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27935,
											"end": 27950,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27812,
											"end": 28004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27812,
											"end": 28004,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27812,
											"end": 28004,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27812,
											"end": 28004,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27987,
											"end": 27988,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27812,
											"end": 28004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27812,
											"end": 28004,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27812,
											"end": 28004,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 28015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27551,
											"end": 28023,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 28023,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 28023,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 28023,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 28023,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28501,
											"end": 28603,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 28501,
											"end": 28603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 20336,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28586,
											"end": 28595,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28575,
											"end": 28583,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 28575,
											"end": 28583,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28575,
											"end": 28595,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28575,
											"end": 28595,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 28575,
											"end": 28595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28575,
											"end": 28595,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28575,
											"end": 28595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28575,
											"end": 28595,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28575,
											"end": 28595,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28575,
											"end": 28595,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 28575,
											"end": 28595,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28575,
											"end": 28595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28575,
											"end": 28595,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28575,
											"end": 28595,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28575,
											"end": 28595,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28575,
											"end": 28595,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28575,
											"end": 28595,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 28575,
											"end": 28595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28575,
											"end": 28595,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28575,
											"end": 28595,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28501,
											"end": 28603,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28501,
											"end": 28603,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 36003,
											"end": 36112,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 36003,
											"end": 36112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 20336,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36095,
											"end": 36104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36079,
											"end": 36092,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 36079,
											"end": 36104,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36079,
											"end": 36104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36079,
											"end": 36104,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 36079,
											"end": 36104,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36003,
											"end": 36112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36003,
											"end": 36112,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 33056,
											"end": 33853,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 33056,
											"end": 33853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33113,
											"end": 33134,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33137,
											"end": 33145,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 33146,
											"end": 33147,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33137,
											"end": 33148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33137,
											"end": 33148,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33137,
											"end": 33148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33137,
											"end": 33148,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33137,
											"end": 33148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 33137,
											"end": 33148,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33137,
											"end": 33148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 33137,
											"end": 33148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 33137,
											"end": 33148,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33137,
											"end": 33148,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 33137,
											"end": 33148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33137,
											"end": 33148,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 33137,
											"end": 33148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33137,
											"end": 33148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33137,
											"end": 33148,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33137,
											"end": 33148,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33137,
											"end": 33148,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33137,
											"end": 33148,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33137,
											"end": 33148,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33137,
											"end": 33148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33137,
											"end": 33148,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33137,
											"end": 33148,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 33137,
											"end": 33148,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33113,
											"end": 33148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33113,
											"end": 33148,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33159,
											"end": 33180,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33183,
											"end": 33191,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 33183,
											"end": 33194,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33192,
											"end": 33193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33183,
											"end": 33194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33183,
											"end": 33194,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33183,
											"end": 33194,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33183,
											"end": 33194,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33183,
											"end": 33194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33183,
											"end": 33194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33183,
											"end": 33194,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33183,
											"end": 33194,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33183,
											"end": 33194,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33183,
											"end": 33194,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33183,
											"end": 33194,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33183,
											"end": 33215,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33203,
											"end": 33213,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33183,
											"end": 33215,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33183,
											"end": 33215,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33183,
											"end": 33215,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33183,
											"end": 33215,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33183,
											"end": 33215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33183,
											"end": 33215,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33183,
											"end": 33215,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33183,
											"end": 33215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33183,
											"end": 33215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33183,
											"end": 33215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33183,
											"end": 33215,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33183,
											"end": 33215,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33183,
											"end": 33215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33183,
											"end": 33215,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33183,
											"end": 33215,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33159,
											"end": 33215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33159,
											"end": 33215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33236,
											"end": 33249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 33247,
											"end": 33248,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33236,
											"end": 33246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 33236,
											"end": 33249,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33236,
											"end": 33249,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 33236,
											"end": 33249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33278,
											"end": 33279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33264,
											"end": 33268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 33275,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33264,
											"end": 33275,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 33275,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33264,
											"end": 33279,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 33260,
											"end": 33542,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33260,
											"end": 33542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 33260,
											"end": 33542,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33296,
											"end": 33311,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33314,
											"end": 33383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 33367,
											"end": 33371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33367,
											"end": 33382,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33367,
											"end": 33382,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33367,
											"end": 33382,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33314,
											"end": 33362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 33357,
											"end": 33361,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 33314,
											"end": 33352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 33330,
											"end": 33334,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 33330,
											"end": 33351,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 33330,
											"end": 33351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33330,
											"end": 33351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33314,
											"end": 33318,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 33314,
											"end": 33325,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33314,
											"end": 33325,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33314,
											"end": 33325,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33314,
											"end": 33329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 33314,
											"end": 33329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33314,
											"end": 33352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33314,
											"end": 33352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33314,
											"end": 33352,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33314,
											"end": 33352,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33314,
											"end": 33352,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33314,
											"end": 33352,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 33314,
											"end": 33352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33314,
											"end": 33356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 33314,
											"end": 33356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33314,
											"end": 33362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33314,
											"end": 33362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33314,
											"end": 33362,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33314,
											"end": 33362,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33314,
											"end": 33362,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33314,
											"end": 33362,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 33314,
											"end": 33362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33314,
											"end": 33366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 33314,
											"end": 33366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33314,
											"end": 33383,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33314,
											"end": 33383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33314,
											"end": 33383,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33314,
											"end": 33383,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33314,
											"end": 33383,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33314,
											"end": 33383,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 33314,
											"end": 33383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33296,
											"end": 33383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33296,
											"end": 33383,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33411,
											"end": 33412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33401,
											"end": 33408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33401,
											"end": 33412,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 33398,
											"end": 33531,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33398,
											"end": 33531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 33398,
											"end": 33531,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33469,
											"end": 33515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 33507,
											"end": 33514,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33469,
											"end": 33481,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 33469,
											"end": 33502,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33490,
											"end": 33500,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33469,
											"end": 33502,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33469,
											"end": 33502,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33469,
											"end": 33502,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33469,
											"end": 33502,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33469,
											"end": 33502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33469,
											"end": 33502,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33469,
											"end": 33502,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33469,
											"end": 33502,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33469,
											"end": 33502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33469,
											"end": 33502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33469,
											"end": 33502,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33469,
											"end": 33502,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33469,
											"end": 33502,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33469,
											"end": 33502,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33469,
											"end": 33502,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33469,
											"end": 33502,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33469,
											"end": 33506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 33469,
											"end": 33506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33469,
											"end": 33515,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33469,
											"end": 33515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33469,
											"end": 33515,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33469,
											"end": 33515,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33469,
											"end": 33515,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33469,
											"end": 33515,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 33469,
											"end": 33515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33433,
											"end": 33445,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 33433,
											"end": 33466,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33454,
											"end": 33464,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33433,
											"end": 33466,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33433,
											"end": 33466,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33433,
											"end": 33466,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33433,
											"end": 33466,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33433,
											"end": 33466,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33433,
											"end": 33466,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33433,
											"end": 33466,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33433,
											"end": 33466,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33433,
											"end": 33466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33433,
											"end": 33466,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33433,
											"end": 33466,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33433,
											"end": 33466,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33433,
											"end": 33466,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33433,
											"end": 33466,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33433,
											"end": 33466,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33433,
											"end": 33515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33433,
											"end": 33515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33433,
											"end": 33515,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33433,
											"end": 33515,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33398,
											"end": 33531,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 33398,
											"end": 33531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33281,
											"end": 33542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33260,
											"end": 33542,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 33260,
											"end": 33542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33565,
											"end": 33566,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33555,
											"end": 33562,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33555,
											"end": 33566,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 33552,
											"end": 33722,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33552,
											"end": 33722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 33552,
											"end": 33722,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33583,
											"end": 33657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 33621,
											"end": 33631,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33642,
											"end": 33646,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 33649,
											"end": 33656,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33583,
											"end": 33587,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33583,
											"end": 33595,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33583,
											"end": 33595,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33583,
											"end": 33595,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33583,
											"end": 33595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33583,
											"end": 33595,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33583,
											"end": 33595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33583,
											"end": 33595,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 33583,
											"end": 33595,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 33583,
											"end": 33595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33583,
											"end": 33595,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 33583,
											"end": 33595,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33583,
											"end": 33595,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33583,
											"end": 33612,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33583,
											"end": 33612,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33583,
											"end": 33612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 33583,
											"end": 33612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33583,
											"end": 33657,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 33583,
											"end": 33657,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33583,
											"end": 33657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33583,
											"end": 33657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33583,
											"end": 33657,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33583,
											"end": 33657,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33583,
											"end": 33657,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33583,
											"end": 33657,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 33583,
											"end": 33657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33686,
											"end": 33710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 33702,
											"end": 33709,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33686,
											"end": 33690,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33686,
											"end": 33697,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33686,
											"end": 33697,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33686,
											"end": 33697,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33686,
											"end": 33701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 33686,
											"end": 33701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33686,
											"end": 33710,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33686,
											"end": 33710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33686,
											"end": 33710,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33686,
											"end": 33710,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33686,
											"end": 33710,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33686,
											"end": 33710,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 33686,
											"end": 33710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33672,
											"end": 33676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33672,
											"end": 33683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33672,
											"end": 33683,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33672,
											"end": 33710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33672,
											"end": 33710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33672,
											"end": 33710,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33672,
											"end": 33710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33552,
											"end": 33722,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 33552,
											"end": 33722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33750,
											"end": 33798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 33793,
											"end": 33797,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 33750,
											"end": 33788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 33766,
											"end": 33770,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33766,
											"end": 33787,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 33766,
											"end": 33787,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33766,
											"end": 33787,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33750,
											"end": 33754,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33750,
											"end": 33761,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33750,
											"end": 33761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33750,
											"end": 33761,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33750,
											"end": 33765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 33750,
											"end": 33765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33750,
											"end": 33788,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33750,
											"end": 33788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33750,
											"end": 33788,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33750,
											"end": 33788,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33750,
											"end": 33788,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33750,
											"end": 33788,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 33750,
											"end": 33788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33750,
											"end": 33792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 33750,
											"end": 33792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33750,
											"end": 33798,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33750,
											"end": 33798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33750,
											"end": 33798,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33750,
											"end": 33798,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33750,
											"end": 33798,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33750,
											"end": 33798,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 33750,
											"end": 33798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33732,
											"end": 33736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33732,
											"end": 33747,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33732,
											"end": 33747,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33732,
											"end": 33798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33732,
											"end": 33798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33732,
											"end": 33798,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33732,
											"end": 33798,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33834,
											"end": 33835,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33822,
											"end": 33832,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33814,
											"end": 33845,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33814,
											"end": 33845,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33814,
											"end": 33845,
											"name": "PUSH",
											"source": 0,
											"value": "90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
										},
										{
											"begin": 33837,
											"end": 33844,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33814,
											"end": 33845,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33814,
											"end": 33845,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33814,
											"end": 33845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 33814,
											"end": 33845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33814,
											"end": 33845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33814,
											"end": 33845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 33814,
											"end": 33845,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33814,
											"end": 33845,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 33814,
											"end": 33845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33814,
											"end": 33845,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33814,
											"end": 33845,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33814,
											"end": 33845,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33814,
											"end": 33845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33814,
											"end": 33845,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33814,
											"end": 33845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33814,
											"end": 33845,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 33102,
											"end": 33853,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33102,
											"end": 33853,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33056,
											"end": 33853,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33056,
											"end": 33853,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 32216,
											"end": 33003,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 32216,
											"end": 33003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32302,
											"end": 32303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32294,
											"end": 32298,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32294,
											"end": 32303,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 32294,
											"end": 32303,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32285,
											"end": 32335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 32285,
											"end": 32335,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32285,
											"end": 32335,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32285,
											"end": 32335,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32285,
											"end": 32335,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32285,
											"end": 32335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32285,
											"end": 32335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32285,
											"end": 32335,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32285,
											"end": 32335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32285,
											"end": 32335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 32285,
											"end": 32335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32285,
											"end": 32335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 32285,
											"end": 32335,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32285,
											"end": 32335,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 32285,
											"end": 32335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32285,
											"end": 32335,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32285,
											"end": 32335,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32285,
											"end": 32335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32285,
											"end": 32335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32285,
											"end": 32335,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32285,
											"end": 32335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32285,
											"end": 32335,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32285,
											"end": 32335,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 32285,
											"end": 32335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32348,
											"end": 32369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32372,
											"end": 32380,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 32381,
											"end": 32385,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32372,
											"end": 32386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32372,
											"end": 32386,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32372,
											"end": 32386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32372,
											"end": 32386,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32372,
											"end": 32386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 32372,
											"end": 32386,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32372,
											"end": 32386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 32372,
											"end": 32386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 32372,
											"end": 32386,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32372,
											"end": 32386,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 32372,
											"end": 32386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32372,
											"end": 32386,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 32372,
											"end": 32386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32372,
											"end": 32386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32372,
											"end": 32386,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32372,
											"end": 32386,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32372,
											"end": 32386,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32372,
											"end": 32386,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32372,
											"end": 32386,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32372,
											"end": 32386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32372,
											"end": 32386,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32372,
											"end": 32386,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 32372,
											"end": 32386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32348,
											"end": 32386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32348,
											"end": 32386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32397,
											"end": 32418,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32421,
											"end": 32429,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 32421,
											"end": 32435,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32430,
											"end": 32434,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32421,
											"end": 32435,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32421,
											"end": 32435,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32421,
											"end": 32435,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32421,
											"end": 32435,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32421,
											"end": 32435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32421,
											"end": 32435,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32421,
											"end": 32435,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32421,
											"end": 32435,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32421,
											"end": 32435,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32421,
											"end": 32435,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32421,
											"end": 32435,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32421,
											"end": 32447,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32436,
											"end": 32446,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32421,
											"end": 32447,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32421,
											"end": 32447,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32421,
											"end": 32447,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32421,
											"end": 32447,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32421,
											"end": 32447,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32421,
											"end": 32447,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32421,
											"end": 32447,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32421,
											"end": 32447,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32421,
											"end": 32447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32421,
											"end": 32447,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32421,
											"end": 32447,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32421,
											"end": 32447,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32421,
											"end": 32447,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32421,
											"end": 32447,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32421,
											"end": 32447,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32397,
											"end": 32447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32397,
											"end": 32447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32481,
											"end": 32488,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32466,
											"end": 32470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32466,
											"end": 32477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32466,
											"end": 32477,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32466,
											"end": 32477,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32466,
											"end": 32488,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32466,
											"end": 32488,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32458,
											"end": 32511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 32458,
											"end": 32511,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32458,
											"end": 32511,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32458,
											"end": 32511,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32458,
											"end": 32511,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32458,
											"end": 32511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32458,
											"end": 32511,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32458,
											"end": 32511,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32458,
											"end": 32511,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32458,
											"end": 32511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 32458,
											"end": 32511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32458,
											"end": 32511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 32458,
											"end": 32511,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32458,
											"end": 32511,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 32458,
											"end": 32511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32458,
											"end": 32511,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32458,
											"end": 32511,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32458,
											"end": 32511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32458,
											"end": 32511,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32458,
											"end": 32511,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32458,
											"end": 32511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32458,
											"end": 32511,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32458,
											"end": 32511,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 32458,
											"end": 32511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32522,
											"end": 32538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 32533,
											"end": 32537,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32522,
											"end": 32532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 32522,
											"end": 32538,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32522,
											"end": 32538,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 32522,
											"end": 32538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32564,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32567,
											"end": 32636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 32620,
											"end": 32624,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32620,
											"end": 32635,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32620,
											"end": 32635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32620,
											"end": 32635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32567,
											"end": 32615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 32610,
											"end": 32614,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 32567,
											"end": 32605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 32583,
											"end": 32587,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 32583,
											"end": 32604,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 32583,
											"end": 32604,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32583,
											"end": 32604,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32567,
											"end": 32571,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 32567,
											"end": 32578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32567,
											"end": 32578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32567,
											"end": 32578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32567,
											"end": 32582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 32567,
											"end": 32582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32567,
											"end": 32605,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32567,
											"end": 32605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32567,
											"end": 32605,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32567,
											"end": 32605,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32567,
											"end": 32605,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32567,
											"end": 32605,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 32567,
											"end": 32605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32567,
											"end": 32609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 32567,
											"end": 32609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32567,
											"end": 32615,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32567,
											"end": 32615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32567,
											"end": 32615,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32567,
											"end": 32615,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32567,
											"end": 32615,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32567,
											"end": 32615,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 32567,
											"end": 32615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32567,
											"end": 32619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 32567,
											"end": 32619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32567,
											"end": 32636,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32567,
											"end": 32636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32567,
											"end": 32636,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32567,
											"end": 32636,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32567,
											"end": 32636,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32567,
											"end": 32636,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 32567,
											"end": 32636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32636,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32660,
											"end": 32661,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32650,
											"end": 32657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32650,
											"end": 32661,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 32647,
											"end": 32753,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32647,
											"end": 32753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 32647,
											"end": 32753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32704,
											"end": 32741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 32733,
											"end": 32740,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32704,
											"end": 32716,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 32704,
											"end": 32728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32717,
											"end": 32727,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32704,
											"end": 32728,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32704,
											"end": 32728,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32704,
											"end": 32728,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32704,
											"end": 32728,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32704,
											"end": 32728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32704,
											"end": 32728,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32704,
											"end": 32728,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32704,
											"end": 32728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32704,
											"end": 32728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32704,
											"end": 32728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32704,
											"end": 32728,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32704,
											"end": 32728,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32704,
											"end": 32728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32704,
											"end": 32728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32704,
											"end": 32728,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32704,
											"end": 32728,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32704,
											"end": 32732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 32704,
											"end": 32732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32704,
											"end": 32741,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32704,
											"end": 32741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32704,
											"end": 32741,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32704,
											"end": 32741,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32704,
											"end": 32741,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32704,
											"end": 32741,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 32704,
											"end": 32741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32677,
											"end": 32689,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 32677,
											"end": 32701,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32690,
											"end": 32700,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32677,
											"end": 32701,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32677,
											"end": 32701,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32677,
											"end": 32701,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32677,
											"end": 32701,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32677,
											"end": 32701,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32677,
											"end": 32701,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32677,
											"end": 32701,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32677,
											"end": 32701,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32677,
											"end": 32701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32677,
											"end": 32701,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32677,
											"end": 32701,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32677,
											"end": 32701,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32677,
											"end": 32701,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32677,
											"end": 32701,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32677,
											"end": 32701,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32677,
											"end": 32741,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32677,
											"end": 32741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32677,
											"end": 32741,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32677,
											"end": 32741,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32647,
											"end": 32753,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 32647,
											"end": 32753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32777,
											"end": 32801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 32793,
											"end": 32800,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32777,
											"end": 32781,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32777,
											"end": 32788,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32777,
											"end": 32788,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32777,
											"end": 32788,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32777,
											"end": 32792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 32777,
											"end": 32792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32777,
											"end": 32801,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32777,
											"end": 32801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32777,
											"end": 32801,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32777,
											"end": 32801,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32777,
											"end": 32801,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32777,
											"end": 32801,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 32777,
											"end": 32801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32763,
											"end": 32767,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32763,
											"end": 32774,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32763,
											"end": 32774,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32763,
											"end": 32801,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32763,
											"end": 32801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32763,
											"end": 32801,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32763,
											"end": 32801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32830,
											"end": 32878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 32873,
											"end": 32877,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 32830,
											"end": 32868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 32846,
											"end": 32850,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32846,
											"end": 32867,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 32846,
											"end": 32867,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32846,
											"end": 32867,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32830,
											"end": 32834,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32830,
											"end": 32841,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32830,
											"end": 32841,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32830,
											"end": 32841,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32830,
											"end": 32845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 32830,
											"end": 32845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32830,
											"end": 32868,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32830,
											"end": 32868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32830,
											"end": 32868,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32830,
											"end": 32868,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32830,
											"end": 32868,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32830,
											"end": 32868,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 32830,
											"end": 32868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32830,
											"end": 32872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 32830,
											"end": 32872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32830,
											"end": 32878,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32830,
											"end": 32878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32830,
											"end": 32878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32830,
											"end": 32878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32830,
											"end": 32878,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32830,
											"end": 32878,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 32830,
											"end": 32878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32812,
											"end": 32816,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32812,
											"end": 32827,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32812,
											"end": 32827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32812,
											"end": 32878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32812,
											"end": 32878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32812,
											"end": 32878,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32812,
											"end": 32878,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32889,
											"end": 32944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 32923,
											"end": 32933,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32936,
											"end": 32943,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32889,
											"end": 32893,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32889,
											"end": 32901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32889,
											"end": 32901,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32889,
											"end": 32901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32889,
											"end": 32901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32889,
											"end": 32901,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32889,
											"end": 32901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32889,
											"end": 32901,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 32889,
											"end": 32901,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 32889,
											"end": 32901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32889,
											"end": 32901,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 32889,
											"end": 32901,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32889,
											"end": 32901,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32889,
											"end": 32914,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32889,
											"end": 32914,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32889,
											"end": 32914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 32889,
											"end": 32914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32889,
											"end": 32944,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32889,
											"end": 32944,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32889,
											"end": 32944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32889,
											"end": 32944,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32889,
											"end": 32944,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32889,
											"end": 32944,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32889,
											"end": 32944,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 32889,
											"end": 32944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32981,
											"end": 32985,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32969,
											"end": 32979,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32960,
											"end": 32995,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32960,
											"end": 32995,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32960,
											"end": 32995,
											"name": "PUSH",
											"source": 0,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 32987,
											"end": 32994,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 32960,
											"end": 32995,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32960,
											"end": 32995,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32960,
											"end": 32995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 32960,
											"end": 32995,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32960,
											"end": 32995,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32960,
											"end": 32995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 32960,
											"end": 32995,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32960,
											"end": 32995,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 32960,
											"end": 32995,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32960,
											"end": 32995,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32960,
											"end": 32995,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32960,
											"end": 32995,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32960,
											"end": 32995,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32960,
											"end": 32995,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32960,
											"end": 32995,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32960,
											"end": 32995,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 32272,
											"end": 33003,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32272,
											"end": 33003,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32272,
											"end": 33003,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32216,
											"end": 33003,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32216,
											"end": 33003,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32216,
											"end": 33003,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28726,
											"end": 29217,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 28726,
											"end": 29217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28812,
											"end": 28813,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28783,
											"end": 28814,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28783,
											"end": 28814,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28791,
											"end": 28799,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 28791,
											"end": 28799,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28791,
											"end": 28799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28791,
											"end": 28799,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28791,
											"end": 28799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28791,
											"end": 28799,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28791,
											"end": 28799,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 28791,
											"end": 28799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28791,
											"end": 28799,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 28791,
											"end": 28799,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28791,
											"end": 28799,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28783,
											"end": 28814,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28783,
											"end": 28814,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28783,
											"end": 28814,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28783,
											"end": 28814,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28775,
											"end": 28839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 28775,
											"end": 28839,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28775,
											"end": 28839,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28775,
											"end": 28839,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28775,
											"end": 28839,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28775,
											"end": 28839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28775,
											"end": 28839,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28775,
											"end": 28839,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28775,
											"end": 28839,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28775,
											"end": 28839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 28775,
											"end": 28839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28775,
											"end": 28839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 28775,
											"end": 28839,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28775,
											"end": 28839,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 28775,
											"end": 28839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28775,
											"end": 28839,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28775,
											"end": 28839,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28775,
											"end": 28839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28775,
											"end": 28839,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28775,
											"end": 28839,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28775,
											"end": 28839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28775,
											"end": 28839,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28775,
											"end": 28839,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 28775,
											"end": 28839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28850,
											"end": 28871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28874,
											"end": 28882,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28883,
											"end": 28887,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28874,
											"end": 28888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28874,
											"end": 28888,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28874,
											"end": 28888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28874,
											"end": 28888,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28874,
											"end": 28888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 28874,
											"end": 28888,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28874,
											"end": 28888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 28874,
											"end": 28888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 28874,
											"end": 28888,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28874,
											"end": 28888,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 28874,
											"end": 28888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28874,
											"end": 28888,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 28874,
											"end": 28888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28874,
											"end": 28888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28874,
											"end": 28888,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28874,
											"end": 28888,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28874,
											"end": 28888,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28874,
											"end": 28888,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28874,
											"end": 28888,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28874,
											"end": 28888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28874,
											"end": 28888,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28874,
											"end": 28888,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28874,
											"end": 28888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28850,
											"end": 28888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28850,
											"end": 28888,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28899,
											"end": 28913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28916,
											"end": 28920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28916,
											"end": 28928,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28916,
											"end": 28928,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28916,
											"end": 28928,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28916,
											"end": 28928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28916,
											"end": 28928,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28916,
											"end": 28928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28916,
											"end": 28928,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28916,
											"end": 28928,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 28916,
											"end": 28928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28916,
											"end": 28928,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 28916,
											"end": 28928,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28916,
											"end": 28928,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28899,
											"end": 28928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28899,
											"end": 28928,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28939,
											"end": 28950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28953,
											"end": 28960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28970,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28953,
											"end": 28970,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28970,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 28979,
											"end": 28983,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 28953,
											"end": 28985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28939,
											"end": 28985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28939,
											"end": 28985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28996,
											"end": 29039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 29024,
											"end": 29032,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 29024,
											"end": 29032,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29024,
											"end": 29032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29024,
											"end": 29032,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29024,
											"end": 29032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29024,
											"end": 29032,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29024,
											"end": 29032,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29024,
											"end": 29032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29024,
											"end": 29032,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29024,
											"end": 29032,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29024,
											"end": 29032,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29035,
											"end": 29038,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28996,
											"end": 29003,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28996,
											"end": 29015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28996,
											"end": 29015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28996,
											"end": 29015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 28996,
											"end": 29015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28996,
											"end": 29039,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28996,
											"end": 29039,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28996,
											"end": 29039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28996,
											"end": 29039,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 28996,
											"end": 29039,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28996,
											"end": 29039,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28996,
											"end": 29039,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 28996,
											"end": 29039,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29050,
											"end": 29067,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29070,
											"end": 29078,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 29070,
											"end": 29078,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29070,
											"end": 29078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29078,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29078,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29070,
											"end": 29078,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29078,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29078,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29070,
											"end": 29078,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29086,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29070,
											"end": 29086,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29086,
											"name": "PUSH",
											"source": 0,
											"value": "CE5494BB"
										},
										{
											"begin": 29087,
											"end": 29094,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "tag",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 29070,
											"end": 29095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29050,
											"end": 29095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29050,
											"end": 29095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29141,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29121,
											"end": 29141,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29141,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 29150,
											"end": 29154,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "tag",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "tag",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "tag",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 29121,
											"end": 29156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29117,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29114,
											"end": 29156,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29106,
											"end": 29173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 29106,
											"end": 29173,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29106,
											"end": 29173,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29106,
											"end": 29173,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29106,
											"end": 29173,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29106,
											"end": 29173,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29106,
											"end": 29173,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29106,
											"end": 29173,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29106,
											"end": 29173,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29106,
											"end": 29173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 29106,
											"end": 29173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29106,
											"end": 29173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 29106,
											"end": 29173,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29106,
											"end": 29173,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 29106,
											"end": 29173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29106,
											"end": 29173,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29106,
											"end": 29173,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29106,
											"end": 29173,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29106,
											"end": 29173,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29106,
											"end": 29173,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29106,
											"end": 29173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29106,
											"end": 29173,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29106,
											"end": 29173,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 29106,
											"end": 29173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29199,
											"end": 29209,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29184,
											"end": 29188,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29184,
											"end": 29196,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29184,
											"end": 29196,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29184,
											"end": 29196,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29184,
											"end": 29209,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29184,
											"end": 29209,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29184,
											"end": 29209,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29184,
											"end": 29209,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29184,
											"end": 29209,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29184,
											"end": 29209,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29184,
											"end": 29209,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29184,
											"end": 29209,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 29184,
											"end": 29209,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29184,
											"end": 29209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29184,
											"end": 29209,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29184,
											"end": 29209,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29184,
											"end": 29209,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29184,
											"end": 29209,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29184,
											"end": 29209,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 29184,
											"end": 29209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29184,
											"end": 29209,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29184,
											"end": 29209,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28764,
											"end": 29217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28764,
											"end": 29217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28764,
											"end": 29217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28764,
											"end": 29217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28726,
											"end": 29217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28726,
											"end": 29217,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25454,
											"end": 25660,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 25454,
											"end": 25660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 20336,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "tag",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25536,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25556,
											"end": 25641,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25556,
											"end": 25641,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25556,
											"end": 25641,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25556,
											"end": 25641,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25556,
											"end": 25641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25556,
											"end": 25641,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25556,
											"end": 25641,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25556,
											"end": 25641,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25589,
											"end": 25593,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25556,
											"end": 25641,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25556,
											"end": 25641,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25556,
											"end": 25641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25556,
											"end": 25641,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25556,
											"end": 25641,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25556,
											"end": 25641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25619,
											"end": 25625,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25556,
											"end": 25641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25556,
											"end": 25641,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25556,
											"end": 25641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25454,
											"end": 25660,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25454,
											"end": 25660,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25454,
											"end": 25660,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30608,
											"end": 31298,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 30608,
											"end": 31298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30660,
											"end": 30681,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30684,
											"end": 30692,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 30693,
											"end": 30697,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30684,
											"end": 30698,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30684,
											"end": 30698,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30684,
											"end": 30698,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30684,
											"end": 30698,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30684,
											"end": 30698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 30684,
											"end": 30698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30684,
											"end": 30698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 30684,
											"end": 30698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 30684,
											"end": 30698,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30684,
											"end": 30698,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 30684,
											"end": 30698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30684,
											"end": 30698,
											"name": "tag",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 30684,
											"end": 30698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30684,
											"end": 30698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30684,
											"end": 30698,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30684,
											"end": 30698,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30684,
											"end": 30698,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30684,
											"end": 30698,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30684,
											"end": 30698,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30684,
											"end": 30698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30684,
											"end": 30698,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30684,
											"end": 30698,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 30684,
											"end": 30698,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30660,
											"end": 30698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30660,
											"end": 30698,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30729,
											"end": 30733,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30729,
											"end": 30749,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 30729,
											"end": 30749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30729,
											"end": 30749,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30713,
											"end": 30725,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 30713,
											"end": 30749,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30709,
											"end": 30784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 30709,
											"end": 30784,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30766,
											"end": 30773,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30766,
											"end": 30773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 30766,
											"end": 30773,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30709,
											"end": 30784,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 30709,
											"end": 30784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30794,
											"end": 30810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30813,
											"end": 30817,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30813,
											"end": 30825,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30813,
											"end": 30825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30825,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30825,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 30813,
											"end": 30825,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30825,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30825,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30813,
											"end": 30825,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30835,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30813,
											"end": 30835,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30835,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 30844,
											"end": 30848,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "tag",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "tag",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "tag",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "tag",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 30813,
											"end": 30850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30794,
											"end": 30850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30794,
											"end": 30850,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30877,
											"end": 30878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30865,
											"end": 30873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30865,
											"end": 30878,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30861,
											"end": 30963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 30861,
											"end": 30963,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30918,
											"end": 30930,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 30895,
											"end": 30899,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30895,
											"end": 30915,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 30895,
											"end": 30915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30895,
											"end": 30930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30895,
											"end": 30930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30895,
											"end": 30930,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30895,
											"end": 30930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30945,
											"end": 30952,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30945,
											"end": 30952,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30945,
											"end": 30952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 30945,
											"end": 30952,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30861,
											"end": 30963,
											"name": "tag",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 30861,
											"end": 30963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30973,
											"end": 30991,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30994,
											"end": 31043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 31008,
											"end": 31012,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31008,
											"end": 31028,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31008,
											"end": 31028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31008,
											"end": 31028,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31030,
											"end": 31042,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 30994,
											"end": 31007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 30994,
											"end": 31043,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30994,
											"end": 31043,
											"name": "tag",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 30994,
											"end": 31043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30973,
											"end": 31043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30973,
											"end": 31043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31054,
											"end": 31073,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31076,
											"end": 31147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 31131,
											"end": 31146,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 31131,
											"end": 31146,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31076,
											"end": 31126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 31110,
											"end": 31114,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31110,
											"end": 31125,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31110,
											"end": 31125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31110,
											"end": 31125,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31076,
											"end": 31105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 31091,
											"end": 31104,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31091,
											"end": 31104,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31076,
											"end": 31086,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31076,
											"end": 31090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 31076,
											"end": 31090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31076,
											"end": 31105,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31076,
											"end": 31105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31076,
											"end": 31105,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31076,
											"end": 31105,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31076,
											"end": 31105,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31076,
											"end": 31105,
											"name": "tag",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 31076,
											"end": 31105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31076,
											"end": 31109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 31076,
											"end": 31109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31076,
											"end": 31126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31076,
											"end": 31126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31076,
											"end": 31126,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31076,
											"end": 31126,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31076,
											"end": 31126,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31076,
											"end": 31126,
											"name": "tag",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 31076,
											"end": 31126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31076,
											"end": 31130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 31076,
											"end": 31130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31076,
											"end": 31147,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31076,
											"end": 31147,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31076,
											"end": 31147,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31076,
											"end": 31147,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31076,
											"end": 31147,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31076,
											"end": 31147,
											"name": "tag",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 31076,
											"end": 31147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31054,
											"end": 31147,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31054,
											"end": 31147,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31182,
											"end": 31244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 31208,
											"end": 31243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 31234,
											"end": 31242,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 31224,
											"end": 31228,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 31208,
											"end": 31219,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 31208,
											"end": 31223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31229,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31229,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31208,
											"end": 31229,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31229,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31208,
											"end": 31229,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 31208,
											"end": 31229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 31208,
											"end": 31233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31243,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31243,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31208,
											"end": 31243,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31243,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31208,
											"end": 31243,
											"name": "tag",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 31208,
											"end": 31243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31182,
											"end": 31186,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31182,
											"end": 31203,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31182,
											"end": 31203,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31182,
											"end": 31203,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31182,
											"end": 31207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 31182,
											"end": 31207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31182,
											"end": 31244,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31182,
											"end": 31244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31182,
											"end": 31244,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31182,
											"end": 31244,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31182,
											"end": 31244,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31182,
											"end": 31244,
											"name": "tag",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 31182,
											"end": 31244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31158,
											"end": 31162,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31158,
											"end": 31179,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31158,
											"end": 31179,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31158,
											"end": 31244,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31158,
											"end": 31244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31158,
											"end": 31244,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31158,
											"end": 31244,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31278,
											"end": 31290,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31259,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31275,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31255,
											"end": 31275,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31290,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31255,
											"end": 31290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30649,
											"end": 31298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30649,
											"end": 31298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30649,
											"end": 31298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30649,
											"end": 31298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30608,
											"end": 31298,
											"name": "tag",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 30608,
											"end": 31298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30608,
											"end": 31298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30608,
											"end": 31298,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 35635,
											"end": 35991,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 35635,
											"end": 35991,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35694,
											"end": 35715,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35718,
											"end": 35726,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 35727,
											"end": 35731,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35718,
											"end": 35732,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35718,
											"end": 35732,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35718,
											"end": 35732,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35718,
											"end": 35732,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 35718,
											"end": 35732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 35718,
											"end": 35732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35718,
											"end": 35732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 35718,
											"end": 35732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 35718,
											"end": 35732,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35718,
											"end": 35732,
											"name": "tag",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 35718,
											"end": 35732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35718,
											"end": 35732,
											"name": "tag",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 35718,
											"end": 35732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35718,
											"end": 35732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35718,
											"end": 35732,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35718,
											"end": 35732,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35718,
											"end": 35732,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35718,
											"end": 35732,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35718,
											"end": 35732,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35718,
											"end": 35732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35718,
											"end": 35732,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35718,
											"end": 35732,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 35718,
											"end": 35732,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35694,
											"end": 35732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35694,
											"end": 35732,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35743,
											"end": 35764,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35767,
											"end": 35775,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 35767,
											"end": 35781,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35776,
											"end": 35780,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35767,
											"end": 35781,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35767,
											"end": 35781,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35767,
											"end": 35781,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35767,
											"end": 35781,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35767,
											"end": 35781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35767,
											"end": 35781,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35767,
											"end": 35781,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35767,
											"end": 35781,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35767,
											"end": 35781,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35767,
											"end": 35781,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35767,
											"end": 35781,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35767,
											"end": 35793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35782,
											"end": 35792,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 35767,
											"end": 35793,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35767,
											"end": 35793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35767,
											"end": 35793,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35767,
											"end": 35793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35767,
											"end": 35793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35767,
											"end": 35793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35767,
											"end": 35793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35767,
											"end": 35793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35767,
											"end": 35793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35767,
											"end": 35793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35767,
											"end": 35793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35767,
											"end": 35793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35767,
											"end": 35793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35767,
											"end": 35793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35767,
											"end": 35793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35743,
											"end": 35793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35743,
											"end": 35793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35804,
											"end": 35863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 35838,
											"end": 35848,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 35851,
											"end": 35855,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35851,
											"end": 35862,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35851,
											"end": 35862,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35851,
											"end": 35862,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35804,
											"end": 35808,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35804,
											"end": 35816,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35804,
											"end": 35816,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35804,
											"end": 35816,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35804,
											"end": 35816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35804,
											"end": 35816,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35804,
											"end": 35816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35804,
											"end": 35816,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 35804,
											"end": 35816,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 35804,
											"end": 35816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35804,
											"end": 35816,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 35804,
											"end": 35816,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35804,
											"end": 35816,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35804,
											"end": 35829,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35804,
											"end": 35829,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35804,
											"end": 35829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 35804,
											"end": 35829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35804,
											"end": 35863,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35804,
											"end": 35863,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35804,
											"end": 35863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35804,
											"end": 35863,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35804,
											"end": 35863,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35804,
											"end": 35863,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35804,
											"end": 35863,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 35804,
											"end": 35863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35909,
											"end": 35913,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35897,
											"end": 35907,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 35879,
											"end": 35927,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35879,
											"end": 35927,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35879,
											"end": 35927,
											"name": "PUSH",
											"source": 0,
											"value": "BB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595"
										},
										{
											"begin": 35915,
											"end": 35919,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35915,
											"end": 35926,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35915,
											"end": 35926,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35915,
											"end": 35926,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35879,
											"end": 35927,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35879,
											"end": 35927,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35879,
											"end": 35927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 35879,
											"end": 35927,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35879,
											"end": 35927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35879,
											"end": 35927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 35879,
											"end": 35927,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35879,
											"end": 35927,
											"name": "tag",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 35879,
											"end": 35927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35879,
											"end": 35927,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35879,
											"end": 35927,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35879,
											"end": 35927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35879,
											"end": 35927,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35879,
											"end": 35927,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35879,
											"end": 35927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35879,
											"end": 35927,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 35952,
											"end": 35953,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35938,
											"end": 35942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35938,
											"end": 35949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35938,
											"end": 35949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35938,
											"end": 35953,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35938,
											"end": 35953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35938,
											"end": 35953,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 35938,
											"end": 35953,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35982,
											"end": 35983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35964,
											"end": 35968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35964,
											"end": 35979,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35964,
											"end": 35979,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35964,
											"end": 35983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35964,
											"end": 35983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35964,
											"end": 35983,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 35964,
											"end": 35983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35683,
											"end": 35991,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35683,
											"end": 35991,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35635,
											"end": 35991,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35635,
											"end": 35991,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27068,
											"end": 27191,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 27068,
											"end": 27191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 20336,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "tag",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "tag",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27167,
											"end": 27183,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27148,
											"end": 27164,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27148,
											"end": 27183,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27148,
											"end": 27183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27148,
											"end": 27183,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27148,
											"end": 27183,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27068,
											"end": 27191,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27068,
											"end": 27191,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "tag",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30352,
											"end": 30532,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 30352,
											"end": 30532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30397,
											"end": 30411,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30414,
											"end": 30422,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 30414,
											"end": 30429,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30414,
											"end": 30429,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30414,
											"end": 30429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30414,
											"end": 30429,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30397,
											"end": 30429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30397,
											"end": 30429,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30445,
											"end": 30456,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30440,
											"end": 30525,
											"name": "tag",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 30440,
											"end": 30525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30468,
											"end": 30474,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30462,
											"end": 30465,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30462,
											"end": 30474,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30440,
											"end": 30525,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30440,
											"end": 30525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 30440,
											"end": 30525,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30498,
											"end": 30513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 30509,
											"end": 30512,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30498,
											"end": 30508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 30498,
											"end": 30513,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30498,
											"end": 30513,
											"name": "tag",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 30498,
											"end": 30513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30476,
											"end": 30481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30476,
											"end": 30481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 30476,
											"end": 30481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30476,
											"end": 30481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 30476,
											"end": 30481,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30476,
											"end": 30481,
											"name": "tag",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 30476,
											"end": 30481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30476,
											"end": 30481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30476,
											"end": 30481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30440,
											"end": 30525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 30440,
											"end": 30525,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30440,
											"end": 30525,
											"name": "tag",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 30440,
											"end": 30525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30440,
											"end": 30525,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30386,
											"end": 30532,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30352,
											"end": 30532,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28120,
											"end": 28425,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 28120,
											"end": 28425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 20336,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "tag",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "tag",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28219,
											"end": 28230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28215,
											"end": 28276,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28215,
											"end": 28276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 28215,
											"end": 28276,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28247,
											"end": 28264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 28247,
											"end": 28262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 28247,
											"end": 28264,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28247,
											"end": 28264,
											"name": "tag",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 28247,
											"end": 28264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28215,
											"end": 28276,
											"name": "tag",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 28215,
											"end": 28276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28304,
											"end": 28367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 28355,
											"end": 28366,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28304,
											"end": 28350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 28324,
											"end": 28332,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28333,
											"end": 28337,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 28324,
											"end": 28338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28324,
											"end": 28338,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28324,
											"end": 28338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28324,
											"end": 28338,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28324,
											"end": 28338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 28324,
											"end": 28338,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28324,
											"end": 28338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 28324,
											"end": 28338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 28324,
											"end": 28338,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28324,
											"end": 28338,
											"name": "tag",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 28324,
											"end": 28338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28324,
											"end": 28338,
											"name": "tag",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 28324,
											"end": 28338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28324,
											"end": 28338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28324,
											"end": 28338,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28324,
											"end": 28338,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28324,
											"end": 28338,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28324,
											"end": 28338,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28324,
											"end": 28338,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28324,
											"end": 28338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28324,
											"end": 28338,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28324,
											"end": 28338,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28324,
											"end": 28338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28324,
											"end": 28349,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28324,
											"end": 28349,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28324,
											"end": 28349,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28304,
											"end": 28319,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 28304,
											"end": 28319,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28304,
											"end": 28323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 28304,
											"end": 28323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28304,
											"end": 28350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28304,
											"end": 28350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28304,
											"end": 28350,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 28304,
											"end": 28350,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28304,
											"end": 28350,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28304,
											"end": 28350,
											"name": "tag",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 28304,
											"end": 28350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28304,
											"end": 28354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 28304,
											"end": 28354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28304,
											"end": 28367,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28304,
											"end": 28367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28304,
											"end": 28367,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 28304,
											"end": 28367,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28304,
											"end": 28367,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28304,
											"end": 28367,
											"name": "tag",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 28304,
											"end": 28367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28286,
											"end": 28301,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 28286,
											"end": 28367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28286,
											"end": 28367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28286,
											"end": 28367,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28286,
											"end": 28367,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28406,
											"end": 28417,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28378,
											"end": 28386,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28387,
											"end": 28391,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28378,
											"end": 28392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28378,
											"end": 28392,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28378,
											"end": 28392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28378,
											"end": 28392,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28378,
											"end": 28392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 28378,
											"end": 28392,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28378,
											"end": 28392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 28378,
											"end": 28392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 28378,
											"end": 28392,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28378,
											"end": 28392,
											"name": "tag",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 28378,
											"end": 28392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28378,
											"end": 28392,
											"name": "tag",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 28378,
											"end": 28392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28378,
											"end": 28392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28378,
											"end": 28392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28378,
											"end": 28392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28378,
											"end": 28392,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28378,
											"end": 28392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28378,
											"end": 28392,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28378,
											"end": 28392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28378,
											"end": 28392,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28378,
											"end": 28392,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28378,
											"end": 28392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28378,
											"end": 28403,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28378,
											"end": 28403,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28378,
											"end": 28417,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28378,
											"end": 28417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28378,
											"end": 28417,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28378,
											"end": 28417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28120,
											"end": 28425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28120,
											"end": 28425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28120,
											"end": 28425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28120,
											"end": 28425,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 20336,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "tag",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "tag",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20821,
											"end": 20851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 20848,
											"end": 20849,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20821,
											"end": 20839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 20821,
											"end": 20851,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20821,
											"end": 20851,
											"name": "tag",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 20821,
											"end": 20851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24347,
											"end": 24375,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 24347,
											"end": 24375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24375,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 24347,
											"end": 24375,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24347,
											"end": 24375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24375,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24375,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24347,
											"end": 24375,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24375,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24375,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24347,
											"end": 24375,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24375,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24340,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25328,
											"end": 25446,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 25328,
											"end": 25446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25390,
											"end": 25397,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25417,
											"end": 25429,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 25417,
											"end": 25438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25430,
											"end": 25437,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25417,
											"end": 25438,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25417,
											"end": 25438,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25417,
											"end": 25438,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25417,
											"end": 25438,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25417,
											"end": 25438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25417,
											"end": 25438,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25417,
											"end": 25438,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25417,
											"end": 25438,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25417,
											"end": 25438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25417,
											"end": 25438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25417,
											"end": 25438,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25417,
											"end": 25438,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25417,
											"end": 25438,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25417,
											"end": 25438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25417,
											"end": 25438,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25417,
											"end": 25438,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25410,
											"end": 25438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25410,
											"end": 25438,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25328,
											"end": 25446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25328,
											"end": 25446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25328,
											"end": 25446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25328,
											"end": 25446,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20151,
											"end": 20158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20171,
											"end": 20184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20171,
											"end": 20184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29293,
											"end": 29437,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 29293,
											"end": 29437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29365,
											"end": 29372,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29393,
											"end": 29429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 29412,
											"end": 29428,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29412,
											"end": 29428,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29393,
											"end": 29407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 29401,
											"end": 29406,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29393,
											"end": 29396,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29393,
											"end": 29400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 29393,
											"end": 29400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29393,
											"end": 29407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29393,
											"end": 29407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29393,
											"end": 29407,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29393,
											"end": 29407,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29393,
											"end": 29407,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29393,
											"end": 29407,
											"name": "tag",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 29393,
											"end": 29407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29393,
											"end": 29411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 29393,
											"end": 29411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29393,
											"end": 29429,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29393,
											"end": 29429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29393,
											"end": 29429,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29393,
											"end": 29429,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29393,
											"end": 29429,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29393,
											"end": 29429,
											"name": "tag",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 29393,
											"end": 29429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29386,
											"end": 29429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29386,
											"end": 29429,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29293,
											"end": 29437,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29293,
											"end": 29437,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29293,
											"end": 29437,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29293,
											"end": 29437,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29293,
											"end": 29437,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25668,
											"end": 25784,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 25668,
											"end": 25784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 20336,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "tag",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "tag",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25770,
											"end": 25776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25746,
											"end": 25754,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25755,
											"end": 25760,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25746,
											"end": 25761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25746,
											"end": 25761,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25746,
											"end": 25761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25746,
											"end": 25761,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 25746,
											"end": 25761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 25746,
											"end": 25761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25746,
											"end": 25761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 25746,
											"end": 25761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 25746,
											"end": 25761,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25746,
											"end": 25761,
											"name": "tag",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 25746,
											"end": 25761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25746,
											"end": 25761,
											"name": "tag",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 25746,
											"end": 25761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25746,
											"end": 25761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25746,
											"end": 25761,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25746,
											"end": 25761,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25746,
											"end": 25761,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25746,
											"end": 25761,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25746,
											"end": 25761,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25746,
											"end": 25761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25746,
											"end": 25761,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25746,
											"end": 25761,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25746,
											"end": 25761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25746,
											"end": 25767,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25746,
											"end": 25767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25746,
											"end": 25776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25746,
											"end": 25776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25746,
											"end": 25776,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25746,
											"end": 25776,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25668,
											"end": 25784,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25668,
											"end": 25784,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25668,
											"end": 25784,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 33861,
											"end": 34757,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 33861,
											"end": 34757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33965,
											"end": 33980,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 33965,
											"end": 33980,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33965,
											"end": 33980,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33965,
											"end": 33980,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33965,
											"end": 33980,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33965,
											"end": 33980,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 33965,
											"end": 33980,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 33965,
											"end": 33980,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33965,
											"end": 33980,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 33965,
											"end": 33980,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33965,
											"end": 33980,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33951,
											"end": 33980,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33951,
											"end": 33980,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33951,
											"end": 33961,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33951,
											"end": 33980,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33951,
											"end": 33980,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33951,
											"end": 33980,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33951,
											"end": 33989,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33951,
											"end": 33989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 33951,
											"end": 33989,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33951,
											"end": 33989,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33988,
											"end": 33989,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33984,
											"end": 33985,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33984,
											"end": 33989,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 33951,
											"end": 33989,
											"name": "tag",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 33951,
											"end": 33989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 34014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 33943,
											"end": 34014,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 34014,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33943,
											"end": 34014,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 34014,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 33943,
											"end": 34014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 34014,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 34014,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33943,
											"end": 34014,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 34014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 33943,
											"end": 34014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 34014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 33943,
											"end": 34014,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33943,
											"end": 34014,
											"name": "tag",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 33943,
											"end": 34014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 34014,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33943,
											"end": 34014,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 34014,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 34014,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 34014,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 34014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 34014,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 34014,
											"name": "tag",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 33943,
											"end": 34014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34025,
											"end": 34046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34049,
											"end": 34057,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 34058,
											"end": 34059,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34049,
											"end": 34060,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34049,
											"end": 34060,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34049,
											"end": 34060,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34049,
											"end": 34060,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34049,
											"end": 34060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 34049,
											"end": 34060,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34049,
											"end": 34060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 34049,
											"end": 34060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 34049,
											"end": 34060,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34049,
											"end": 34060,
											"name": "tag",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 34049,
											"end": 34060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34049,
											"end": 34060,
											"name": "tag",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 34049,
											"end": 34060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34049,
											"end": 34060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34049,
											"end": 34060,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34049,
											"end": 34060,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34049,
											"end": 34060,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34049,
											"end": 34060,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34049,
											"end": 34060,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34049,
											"end": 34060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34049,
											"end": 34060,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34049,
											"end": 34060,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 34049,
											"end": 34060,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34025,
											"end": 34060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34025,
											"end": 34060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34071,
											"end": 34092,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34095,
											"end": 34103,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 34095,
											"end": 34106,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34104,
											"end": 34105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34095,
											"end": 34106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34095,
											"end": 34106,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34095,
											"end": 34106,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34095,
											"end": 34106,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34095,
											"end": 34106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34095,
											"end": 34106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34095,
											"end": 34106,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34095,
											"end": 34106,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34095,
											"end": 34106,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34095,
											"end": 34106,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34095,
											"end": 34106,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34095,
											"end": 34125,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34115,
											"end": 34123,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34095,
											"end": 34125,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34095,
											"end": 34125,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34095,
											"end": 34125,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34095,
											"end": 34125,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34095,
											"end": 34125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34095,
											"end": 34125,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34095,
											"end": 34125,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34095,
											"end": 34125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34095,
											"end": 34125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34095,
											"end": 34125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34095,
											"end": 34125,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34095,
											"end": 34125,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34095,
											"end": 34125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34095,
											"end": 34125,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34095,
											"end": 34125,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34071,
											"end": 34125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34071,
											"end": 34125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34146,
											"end": 34159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 34157,
											"end": 34158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34146,
											"end": 34156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 34146,
											"end": 34159,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34146,
											"end": 34159,
											"name": "tag",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 34146,
											"end": 34159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34188,
											"end": 34189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34174,
											"end": 34178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34174,
											"end": 34185,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34174,
											"end": 34185,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34174,
											"end": 34185,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34174,
											"end": 34189,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 34170,
											"end": 34448,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34170,
											"end": 34448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 34170,
											"end": 34448,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34206,
											"end": 34221,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34224,
											"end": 34293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 34277,
											"end": 34281,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34277,
											"end": 34292,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34277,
											"end": 34292,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34277,
											"end": 34292,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34224,
											"end": 34272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 34267,
											"end": 34271,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 34224,
											"end": 34262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 34240,
											"end": 34244,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34240,
											"end": 34261,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 34240,
											"end": 34261,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34240,
											"end": 34261,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34224,
											"end": 34228,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34224,
											"end": 34235,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34224,
											"end": 34235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34224,
											"end": 34235,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34224,
											"end": 34239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 34224,
											"end": 34239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34224,
											"end": 34262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34224,
											"end": 34262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34224,
											"end": 34262,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34224,
											"end": 34262,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34224,
											"end": 34262,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34224,
											"end": 34262,
											"name": "tag",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 34224,
											"end": 34262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34224,
											"end": 34266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 34224,
											"end": 34266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34224,
											"end": 34272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34224,
											"end": 34272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34224,
											"end": 34272,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34224,
											"end": 34272,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34224,
											"end": 34272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34224,
											"end": 34272,
											"name": "tag",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 34224,
											"end": 34272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34224,
											"end": 34276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 34224,
											"end": 34276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34224,
											"end": 34293,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34224,
											"end": 34293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34224,
											"end": 34293,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34224,
											"end": 34293,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34224,
											"end": 34293,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34224,
											"end": 34293,
											"name": "tag",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 34224,
											"end": 34293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34206,
											"end": 34293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34206,
											"end": 34293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34321,
											"end": 34322,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34311,
											"end": 34318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34311,
											"end": 34322,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 34308,
											"end": 34437,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34308,
											"end": 34437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 34308,
											"end": 34437,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34377,
											"end": 34421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 34413,
											"end": 34420,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34377,
											"end": 34389,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 34377,
											"end": 34408,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34398,
											"end": 34406,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34377,
											"end": 34408,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34377,
											"end": 34408,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34377,
											"end": 34408,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34377,
											"end": 34408,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34377,
											"end": 34408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34377,
											"end": 34408,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34377,
											"end": 34408,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34377,
											"end": 34408,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34377,
											"end": 34408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34377,
											"end": 34408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34377,
											"end": 34408,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34377,
											"end": 34408,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34377,
											"end": 34408,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34377,
											"end": 34408,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34377,
											"end": 34408,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34377,
											"end": 34408,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34377,
											"end": 34412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 34377,
											"end": 34412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34377,
											"end": 34421,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34377,
											"end": 34421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34377,
											"end": 34421,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34377,
											"end": 34421,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34377,
											"end": 34421,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34377,
											"end": 34421,
											"name": "tag",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 34377,
											"end": 34421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34343,
											"end": 34355,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 34343,
											"end": 34374,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34364,
											"end": 34372,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34343,
											"end": 34374,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34343,
											"end": 34374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34343,
											"end": 34374,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34343,
											"end": 34374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34343,
											"end": 34374,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34343,
											"end": 34374,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34343,
											"end": 34374,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34343,
											"end": 34374,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34343,
											"end": 34374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34343,
											"end": 34374,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34343,
											"end": 34374,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34343,
											"end": 34374,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34343,
											"end": 34374,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34343,
											"end": 34374,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34343,
											"end": 34374,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34343,
											"end": 34421,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34343,
											"end": 34421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34343,
											"end": 34421,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34343,
											"end": 34421,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34308,
											"end": 34437,
											"name": "tag",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 34308,
											"end": 34437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34191,
											"end": 34448,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34170,
											"end": 34448,
											"name": "tag",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 34170,
											"end": 34448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34471,
											"end": 34472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34461,
											"end": 34468,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34461,
											"end": 34472,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 34458,
											"end": 34628,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34458,
											"end": 34628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 34458,
											"end": 34628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34489,
											"end": 34563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 34527,
											"end": 34537,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 34548,
											"end": 34552,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 34555,
											"end": 34562,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34489,
											"end": 34493,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 34489,
											"end": 34501,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34489,
											"end": 34501,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34489,
											"end": 34501,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34489,
											"end": 34501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34489,
											"end": 34501,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34489,
											"end": 34501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34489,
											"end": 34501,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 34489,
											"end": 34501,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 34489,
											"end": 34501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34489,
											"end": 34501,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 34489,
											"end": 34501,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34489,
											"end": 34501,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34489,
											"end": 34518,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34489,
											"end": 34518,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34489,
											"end": 34518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 34489,
											"end": 34518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34489,
											"end": 34563,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 34489,
											"end": 34563,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34489,
											"end": 34563,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34489,
											"end": 34563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34489,
											"end": 34563,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34489,
											"end": 34563,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34489,
											"end": 34563,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34489,
											"end": 34563,
											"name": "tag",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 34489,
											"end": 34563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34592,
											"end": 34616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 34608,
											"end": 34615,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34592,
											"end": 34596,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34592,
											"end": 34603,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34592,
											"end": 34603,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34592,
											"end": 34603,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34592,
											"end": 34607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 34592,
											"end": 34607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34592,
											"end": 34616,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34592,
											"end": 34616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34592,
											"end": 34616,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34592,
											"end": 34616,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34592,
											"end": 34616,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34592,
											"end": 34616,
											"name": "tag",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 34592,
											"end": 34616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34578,
											"end": 34582,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34578,
											"end": 34589,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34578,
											"end": 34589,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34578,
											"end": 34616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34578,
											"end": 34616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34578,
											"end": 34616,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34578,
											"end": 34616,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34458,
											"end": 34628,
											"name": "tag",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 34458,
											"end": 34628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34656,
											"end": 34704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "445"
										},
										{
											"begin": 34699,
											"end": 34703,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 34656,
											"end": 34694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 34672,
											"end": 34676,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34672,
											"end": 34693,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 34672,
											"end": 34693,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34672,
											"end": 34693,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34656,
											"end": 34660,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34656,
											"end": 34667,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34656,
											"end": 34667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34656,
											"end": 34667,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34656,
											"end": 34671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 34656,
											"end": 34671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34656,
											"end": 34694,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34656,
											"end": 34694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34656,
											"end": 34694,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34656,
											"end": 34694,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34656,
											"end": 34694,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34656,
											"end": 34694,
											"name": "tag",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 34656,
											"end": 34694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34656,
											"end": 34698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 34656,
											"end": 34698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34656,
											"end": 34704,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34656,
											"end": 34704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34656,
											"end": 34704,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34656,
											"end": 34704,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34656,
											"end": 34704,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34656,
											"end": 34704,
											"name": "tag",
											"source": 0,
											"value": "445"
										},
										{
											"begin": 34656,
											"end": 34704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34638,
											"end": 34642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34638,
											"end": 34653,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34638,
											"end": 34653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34638,
											"end": 34704,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34638,
											"end": 34704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34638,
											"end": 34704,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34638,
											"end": 34704,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34738,
											"end": 34739,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34728,
											"end": 34736,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34720,
											"end": 34749,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34720,
											"end": 34749,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34720,
											"end": 34749,
											"name": "PUSH",
											"source": 0,
											"value": "90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
										},
										{
											"begin": 34741,
											"end": 34748,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34720,
											"end": 34749,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34720,
											"end": 34749,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34720,
											"end": 34749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "447"
										},
										{
											"begin": 34720,
											"end": 34749,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34720,
											"end": 34749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34720,
											"end": 34749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 34720,
											"end": 34749,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34720,
											"end": 34749,
											"name": "tag",
											"source": 0,
											"value": "447"
										},
										{
											"begin": 34720,
											"end": 34749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34720,
											"end": 34749,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34720,
											"end": 34749,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34720,
											"end": 34749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34720,
											"end": 34749,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34720,
											"end": 34749,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34720,
											"end": 34749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34720,
											"end": 34749,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 33932,
											"end": 34757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33932,
											"end": 34757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33861,
											"end": 34757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33861,
											"end": 34757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33861,
											"end": 34757,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24384,
											"end": 24431,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 31368,
											"end": 32164,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 31368,
											"end": 32164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31453,
											"end": 31454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31445,
											"end": 31449,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31445,
											"end": 31454,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31445,
											"end": 31454,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31436,
											"end": 31483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "449"
										},
										{
											"begin": 31436,
											"end": 31483,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31436,
											"end": 31483,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31436,
											"end": 31483,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31436,
											"end": 31483,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31436,
											"end": 31483,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31436,
											"end": 31483,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31436,
											"end": 31483,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31436,
											"end": 31483,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31436,
											"end": 31483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 31436,
											"end": 31483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31436,
											"end": 31483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 31436,
											"end": 31483,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31436,
											"end": 31483,
											"name": "tag",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 31436,
											"end": 31483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31436,
											"end": 31483,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31436,
											"end": 31483,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31436,
											"end": 31483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31436,
											"end": 31483,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31436,
											"end": 31483,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31436,
											"end": 31483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31436,
											"end": 31483,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31436,
											"end": 31483,
											"name": "tag",
											"source": 0,
											"value": "449"
										},
										{
											"begin": 31436,
											"end": 31483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31496,
											"end": 31517,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31520,
											"end": 31528,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 31529,
											"end": 31533,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31520,
											"end": 31534,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31520,
											"end": 31534,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31520,
											"end": 31534,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31520,
											"end": 31534,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31520,
											"end": 31534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "452"
										},
										{
											"begin": 31520,
											"end": 31534,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31520,
											"end": 31534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "453"
										},
										{
											"begin": 31520,
											"end": 31534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 31520,
											"end": 31534,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31520,
											"end": 31534,
											"name": "tag",
											"source": 0,
											"value": "453"
										},
										{
											"begin": 31520,
											"end": 31534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31520,
											"end": 31534,
											"name": "tag",
											"source": 0,
											"value": "452"
										},
										{
											"begin": 31520,
											"end": 31534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31520,
											"end": 31534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31520,
											"end": 31534,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31520,
											"end": 31534,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31520,
											"end": 31534,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31520,
											"end": 31534,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31520,
											"end": 31534,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31520,
											"end": 31534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31520,
											"end": 31534,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31520,
											"end": 31534,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 31520,
											"end": 31534,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31496,
											"end": 31534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31496,
											"end": 31534,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31545,
											"end": 31566,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31569,
											"end": 31577,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 31569,
											"end": 31583,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31578,
											"end": 31582,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31569,
											"end": 31583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31569,
											"end": 31583,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31569,
											"end": 31583,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31569,
											"end": 31583,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31569,
											"end": 31583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31569,
											"end": 31583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31569,
											"end": 31583,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31569,
											"end": 31583,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31569,
											"end": 31583,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31569,
											"end": 31583,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31569,
											"end": 31583,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31569,
											"end": 31595,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31584,
											"end": 31594,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31569,
											"end": 31595,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31569,
											"end": 31595,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31569,
											"end": 31595,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31569,
											"end": 31595,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31569,
											"end": 31595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31569,
											"end": 31595,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31569,
											"end": 31595,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31569,
											"end": 31595,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31569,
											"end": 31595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31569,
											"end": 31595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31569,
											"end": 31595,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31569,
											"end": 31595,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31569,
											"end": 31595,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31569,
											"end": 31595,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31569,
											"end": 31595,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31545,
											"end": 31595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31545,
											"end": 31595,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31606,
											"end": 31622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "455"
										},
										{
											"begin": 31617,
											"end": 31621,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31606,
											"end": 31616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 31606,
											"end": 31622,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31606,
											"end": 31622,
											"name": "tag",
											"source": 0,
											"value": "455"
										},
										{
											"begin": 31606,
											"end": 31622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31651,
											"end": 31652,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31637,
											"end": 31641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31637,
											"end": 31648,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31637,
											"end": 31648,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31637,
											"end": 31648,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31637,
											"end": 31652,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31633,
											"end": 31896,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31633,
											"end": 31896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 31633,
											"end": 31896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31669,
											"end": 31684,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31687,
											"end": 31756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "457"
										},
										{
											"begin": 31740,
											"end": 31744,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31740,
											"end": 31755,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31740,
											"end": 31755,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31740,
											"end": 31755,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31687,
											"end": 31735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 31730,
											"end": 31734,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 31687,
											"end": 31725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 31703,
											"end": 31707,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31703,
											"end": 31724,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31703,
											"end": 31724,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31703,
											"end": 31724,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31687,
											"end": 31691,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31687,
											"end": 31698,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31687,
											"end": 31698,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31687,
											"end": 31698,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31687,
											"end": 31702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 31687,
											"end": 31702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31687,
											"end": 31725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31687,
											"end": 31725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31687,
											"end": 31725,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31687,
											"end": 31725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31687,
											"end": 31725,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31687,
											"end": 31725,
											"name": "tag",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 31687,
											"end": 31725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31687,
											"end": 31729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 31687,
											"end": 31729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31687,
											"end": 31735,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31687,
											"end": 31735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31687,
											"end": 31735,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31687,
											"end": 31735,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31687,
											"end": 31735,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31687,
											"end": 31735,
											"name": "tag",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 31687,
											"end": 31735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31687,
											"end": 31739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 31687,
											"end": 31739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31687,
											"end": 31756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31687,
											"end": 31756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31687,
											"end": 31756,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31687,
											"end": 31756,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31687,
											"end": 31756,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31687,
											"end": 31756,
											"name": "tag",
											"source": 0,
											"value": "457"
										},
										{
											"begin": 31687,
											"end": 31756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31669,
											"end": 31756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31669,
											"end": 31756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31784,
											"end": 31785,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31774,
											"end": 31781,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31785,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31771,
											"end": 31885,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31771,
											"end": 31885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 31771,
											"end": 31885,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31832,
											"end": 31869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 31861,
											"end": 31868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31832,
											"end": 31844,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 31832,
											"end": 31856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31845,
											"end": 31855,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31832,
											"end": 31856,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31832,
											"end": 31856,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31832,
											"end": 31856,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31832,
											"end": 31856,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31832,
											"end": 31856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31832,
											"end": 31856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31832,
											"end": 31856,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31832,
											"end": 31856,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31832,
											"end": 31856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31832,
											"end": 31856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31832,
											"end": 31856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31832,
											"end": 31856,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31832,
											"end": 31856,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31832,
											"end": 31856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31832,
											"end": 31856,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31832,
											"end": 31856,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31832,
											"end": 31860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 31832,
											"end": 31860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31832,
											"end": 31869,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31832,
											"end": 31869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31832,
											"end": 31869,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31832,
											"end": 31869,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31832,
											"end": 31869,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31832,
											"end": 31869,
											"name": "tag",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 31832,
											"end": 31869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31805,
											"end": 31817,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 31805,
											"end": 31829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31818,
											"end": 31828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31805,
											"end": 31829,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31805,
											"end": 31829,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31805,
											"end": 31829,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31805,
											"end": 31829,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31805,
											"end": 31829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31805,
											"end": 31829,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31805,
											"end": 31829,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31805,
											"end": 31829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31805,
											"end": 31829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31805,
											"end": 31829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31805,
											"end": 31829,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31805,
											"end": 31829,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31805,
											"end": 31829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31805,
											"end": 31829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31805,
											"end": 31829,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31805,
											"end": 31869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31805,
											"end": 31869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31805,
											"end": 31869,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31805,
											"end": 31869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31771,
											"end": 31885,
											"name": "tag",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 31771,
											"end": 31885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31654,
											"end": 31896,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31633,
											"end": 31896,
											"name": "tag",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 31633,
											"end": 31896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31906,
											"end": 31980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "462"
										},
										{
											"begin": 31944,
											"end": 31954,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31965,
											"end": 31969,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 31972,
											"end": 31979,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31906,
											"end": 31910,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31906,
											"end": 31918,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31906,
											"end": 31918,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31906,
											"end": 31918,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31906,
											"end": 31918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31906,
											"end": 31918,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31906,
											"end": 31918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31906,
											"end": 31918,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 31906,
											"end": 31918,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 31906,
											"end": 31918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31906,
											"end": 31918,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 31906,
											"end": 31918,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31906,
											"end": 31918,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31906,
											"end": 31935,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31906,
											"end": 31935,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31906,
											"end": 31935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 31906,
											"end": 31935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31906,
											"end": 31980,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 31906,
											"end": 31980,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31906,
											"end": 31980,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31906,
											"end": 31980,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31906,
											"end": 31980,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31906,
											"end": 31980,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31906,
											"end": 31980,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31906,
											"end": 31980,
											"name": "tag",
											"source": 0,
											"value": "462"
										},
										{
											"begin": 31906,
											"end": 31980,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32005,
											"end": 32029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "463"
										},
										{
											"begin": 32021,
											"end": 32028,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32005,
											"end": 32009,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32005,
											"end": 32016,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32005,
											"end": 32016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32005,
											"end": 32016,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32005,
											"end": 32020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 32005,
											"end": 32020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32005,
											"end": 32029,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32005,
											"end": 32029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32005,
											"end": 32029,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32005,
											"end": 32029,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32005,
											"end": 32029,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32005,
											"end": 32029,
											"name": "tag",
											"source": 0,
											"value": "463"
										},
										{
											"begin": 32005,
											"end": 32029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 31995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32002,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31991,
											"end": 32002,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32029,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32058,
											"end": 32106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "464"
										},
										{
											"begin": 32101,
											"end": 32105,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 32058,
											"end": 32096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 32074,
											"end": 32078,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32095,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 32074,
											"end": 32095,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32095,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32058,
											"end": 32062,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32058,
											"end": 32069,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32058,
											"end": 32069,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32058,
											"end": 32069,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32058,
											"end": 32073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 32058,
											"end": 32073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32058,
											"end": 32096,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32058,
											"end": 32096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32058,
											"end": 32096,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32058,
											"end": 32096,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32058,
											"end": 32096,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32058,
											"end": 32096,
											"name": "tag",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 32058,
											"end": 32096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32058,
											"end": 32100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 32058,
											"end": 32100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32058,
											"end": 32106,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32058,
											"end": 32106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32058,
											"end": 32106,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32058,
											"end": 32106,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32058,
											"end": 32106,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32058,
											"end": 32106,
											"name": "tag",
											"source": 0,
											"value": "464"
										},
										{
											"begin": 32058,
											"end": 32106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32055,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32040,
											"end": 32055,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32106,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32106,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32142,
											"end": 32146,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32140,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32122,
											"end": 32156,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32122,
											"end": 32156,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32122,
											"end": 32156,
											"name": "PUSH",
											"source": 0,
											"value": "90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
										},
										{
											"begin": 32148,
											"end": 32155,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32122,
											"end": 32156,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32122,
											"end": 32156,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32122,
											"end": 32156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 32122,
											"end": 32156,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32122,
											"end": 32156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32122,
											"end": 32156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 32122,
											"end": 32156,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32122,
											"end": 32156,
											"name": "tag",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 32122,
											"end": 32156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32122,
											"end": 32156,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32122,
											"end": 32156,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32122,
											"end": 32156,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32122,
											"end": 32156,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32122,
											"end": 32156,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32122,
											"end": 32156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32122,
											"end": 32156,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 31423,
											"end": 32164,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31423,
											"end": 32164,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31368,
											"end": 32164,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31368,
											"end": 32164,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31368,
											"end": 32164,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "468"
										},
										{
											"begin": 20336,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "tag",
											"source": 0,
											"value": "468"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "469"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "tag",
											"source": 0,
											"value": "469"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "471"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "471"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21123,
											"end": 21124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21103,
											"end": 21125,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21103,
											"end": 21125,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21103,
											"end": 21111,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21103,
											"end": 21125,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21103,
											"end": 21125,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21103,
											"end": 21125,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21103,
											"end": 21125,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "473"
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "tag",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "tag",
											"source": 0,
											"value": "473"
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21179,
											"end": 21207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "476"
										},
										{
											"begin": 21198,
											"end": 21206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21179,
											"end": 21197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 21179,
											"end": 21207,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21179,
											"end": 21207,
											"name": "tag",
											"source": 0,
											"value": "476"
										},
										{
											"begin": 21179,
											"end": 21207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29502,
											"end": 30269,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 29502,
											"end": 30269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29576,
											"end": 29583,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29595,
											"end": 29616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29619,
											"end": 29627,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 29628,
											"end": 29632,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29619,
											"end": 29633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29619,
											"end": 29633,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29619,
											"end": 29633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29619,
											"end": 29633,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29619,
											"end": 29633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "478"
										},
										{
											"begin": 29619,
											"end": 29633,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29619,
											"end": 29633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "479"
										},
										{
											"begin": 29619,
											"end": 29633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 29619,
											"end": 29633,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29619,
											"end": 29633,
											"name": "tag",
											"source": 0,
											"value": "479"
										},
										{
											"begin": 29619,
											"end": 29633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29619,
											"end": 29633,
											"name": "tag",
											"source": 0,
											"value": "478"
										},
										{
											"begin": 29619,
											"end": 29633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29619,
											"end": 29633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29619,
											"end": 29633,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29619,
											"end": 29633,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29619,
											"end": 29633,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29619,
											"end": 29633,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29619,
											"end": 29633,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29619,
											"end": 29633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29619,
											"end": 29633,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29619,
											"end": 29633,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29619,
											"end": 29633,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29595,
											"end": 29633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29595,
											"end": 29633,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29644,
											"end": 29665,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29668,
											"end": 29676,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 29668,
											"end": 29682,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29677,
											"end": 29681,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29668,
											"end": 29682,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29668,
											"end": 29682,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29668,
											"end": 29682,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29668,
											"end": 29682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29668,
											"end": 29682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29668,
											"end": 29682,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29668,
											"end": 29682,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29668,
											"end": 29682,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29668,
											"end": 29682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29668,
											"end": 29682,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29668,
											"end": 29682,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29668,
											"end": 29689,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29683,
											"end": 29688,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29668,
											"end": 29689,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29668,
											"end": 29689,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29668,
											"end": 29689,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29668,
											"end": 29689,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29668,
											"end": 29689,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29668,
											"end": 29689,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29668,
											"end": 29689,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29668,
											"end": 29689,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29668,
											"end": 29689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29668,
											"end": 29689,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29668,
											"end": 29689,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29668,
											"end": 29689,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29668,
											"end": 29689,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29668,
											"end": 29689,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29668,
											"end": 29689,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29644,
											"end": 29689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29644,
											"end": 29689,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29700,
											"end": 29724,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29727,
											"end": 29731,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29727,
											"end": 29748,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 29727,
											"end": 29748,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29727,
											"end": 29748,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29700,
											"end": 29748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29700,
											"end": 29748,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29759,
											"end": 29775,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29778,
											"end": 29782,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29778,
											"end": 29790,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29778,
											"end": 29790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29790,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29790,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29778,
											"end": 29790,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29790,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29790,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29778,
											"end": 29790,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29800,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29778,
											"end": 29800,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29800,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 29809,
											"end": 29813,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "481"
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "tag",
											"source": 0,
											"value": "481"
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "482"
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "tag",
											"source": 0,
											"value": "482"
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "484"
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "tag",
											"source": 0,
											"value": "484"
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "485"
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "tag",
											"source": 0,
											"value": "485"
										},
										{
											"begin": 29778,
											"end": 29815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29759,
											"end": 29815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29759,
											"end": 29815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29845,
											"end": 29849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29845,
											"end": 29865,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29845,
											"end": 29865,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29845,
											"end": 29865,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29830,
											"end": 29842,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 29830,
											"end": 29865,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29830,
											"end": 29882,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29830,
											"end": 29882,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29830,
											"end": 29882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "486"
										},
										{
											"begin": 29830,
											"end": 29882,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29830,
											"end": 29882,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29881,
											"end": 29882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29869,
											"end": 29877,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29869,
											"end": 29882,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29869,
											"end": 29882,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29830,
											"end": 29882,
											"name": "tag",
											"source": 0,
											"value": "486"
										},
										{
											"begin": 29830,
											"end": 29882,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29826,
											"end": 30180,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29826,
											"end": 30180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "487"
										},
										{
											"begin": 29826,
											"end": 30180,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29899,
											"end": 29917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29920,
											"end": 29969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 29934,
											"end": 29938,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29934,
											"end": 29954,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29934,
											"end": 29954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29934,
											"end": 29954,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29956,
											"end": 29968,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 29920,
											"end": 29933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 29920,
											"end": 29969,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29920,
											"end": 29969,
											"name": "tag",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 29920,
											"end": 29969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29899,
											"end": 29969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29899,
											"end": 29969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29984,
											"end": 30003,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30006,
											"end": 30077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "489"
										},
										{
											"begin": 30061,
											"end": 30076,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 30061,
											"end": 30076,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30006,
											"end": 30056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "490"
										},
										{
											"begin": 30040,
											"end": 30044,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 30040,
											"end": 30055,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30040,
											"end": 30055,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30040,
											"end": 30055,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30006,
											"end": 30035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "491"
										},
										{
											"begin": 30021,
											"end": 30034,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 30021,
											"end": 30034,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30006,
											"end": 30016,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 30006,
											"end": 30020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 30006,
											"end": 30020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30006,
											"end": 30035,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30006,
											"end": 30035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30006,
											"end": 30035,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30006,
											"end": 30035,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30006,
											"end": 30035,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30006,
											"end": 30035,
											"name": "tag",
											"source": 0,
											"value": "491"
										},
										{
											"begin": 30006,
											"end": 30035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30006,
											"end": 30039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 30006,
											"end": 30039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30006,
											"end": 30056,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30006,
											"end": 30056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30006,
											"end": 30056,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30006,
											"end": 30056,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30006,
											"end": 30056,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30006,
											"end": 30056,
											"name": "tag",
											"source": 0,
											"value": "490"
										},
										{
											"begin": 30006,
											"end": 30056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30006,
											"end": 30060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 30006,
											"end": 30060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30006,
											"end": 30077,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30006,
											"end": 30077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30006,
											"end": 30077,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30006,
											"end": 30077,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30006,
											"end": 30077,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30006,
											"end": 30077,
											"name": "tag",
											"source": 0,
											"value": "489"
										},
										{
											"begin": 30006,
											"end": 30077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29984,
											"end": 30077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29984,
											"end": 30077,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30111,
											"end": 30168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "492"
										},
										{
											"begin": 30132,
											"end": 30167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "493"
										},
										{
											"begin": 30158,
											"end": 30166,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30132,
											"end": 30153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "494"
										},
										{
											"begin": 30148,
											"end": 30152,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 30132,
											"end": 30143,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30132,
											"end": 30147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 30132,
											"end": 30147,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30132,
											"end": 30153,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30132,
											"end": 30153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30132,
											"end": 30153,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30132,
											"end": 30153,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30132,
											"end": 30153,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30132,
											"end": 30153,
											"name": "tag",
											"source": 0,
											"value": "494"
										},
										{
											"begin": 30132,
											"end": 30153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30132,
											"end": 30157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 30132,
											"end": 30157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30132,
											"end": 30167,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30132,
											"end": 30167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30132,
											"end": 30167,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30132,
											"end": 30167,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30132,
											"end": 30167,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30132,
											"end": 30167,
											"name": "tag",
											"source": 0,
											"value": "493"
										},
										{
											"begin": 30132,
											"end": 30167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30111,
											"end": 30127,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30111,
											"end": 30131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 30111,
											"end": 30131,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30111,
											"end": 30168,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30111,
											"end": 30168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30111,
											"end": 30168,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30111,
											"end": 30168,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30111,
											"end": 30168,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30111,
											"end": 30168,
											"name": "tag",
											"source": 0,
											"value": "492"
										},
										{
											"begin": 30111,
											"end": 30168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30092,
											"end": 30168,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 30092,
											"end": 30168,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29826,
											"end": 30180,
											"name": "tag",
											"source": 0,
											"value": "487"
										},
										{
											"begin": 29826,
											"end": 30180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "495"
										},
										{
											"begin": 30245,
											"end": 30249,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30245,
											"end": 30260,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30245,
											"end": 30260,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30245,
											"end": 30260,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 30235,
											"end": 30239,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 30197,
											"end": 30230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "497"
										},
										{
											"begin": 30213,
											"end": 30229,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30201,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30208,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30197,
											"end": 30208,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30208,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 30197,
											"end": 30212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30230,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30230,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30197,
											"end": 30230,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30230,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30197,
											"end": 30230,
											"name": "tag",
											"source": 0,
											"value": "497"
										},
										{
											"begin": 30197,
											"end": 30230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 30197,
											"end": 30234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30240,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30240,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30197,
											"end": 30240,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30240,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30197,
											"end": 30240,
											"name": "tag",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 30197,
											"end": 30240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 30197,
											"end": 30244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30261,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30261,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30197,
											"end": 30261,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30261,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30197,
											"end": 30261,
											"name": "tag",
											"source": 0,
											"value": "495"
										},
										{
											"begin": 30197,
											"end": 30261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30190,
											"end": 30261,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 30190,
											"end": 30261,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30190,
											"end": 30261,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30190,
											"end": 30261,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30190,
											"end": 30261,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30190,
											"end": 30261,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29502,
											"end": 30269,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29502,
											"end": 30269,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29502,
											"end": 30269,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29502,
											"end": 30269,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29502,
											"end": 30269,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19479,
											"end": 19577,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 19479,
											"end": 19577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19532,
											"end": 19539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19559,
											"end": 19569,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19552,
											"end": 19569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19552,
											"end": 19569,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19479,
											"end": 19577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19479,
											"end": 19577,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1757,
											"end": 2228,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1757,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1815,
											"end": 1822,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2060,
											"end": 2061,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2060,
											"end": 2066,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2103,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "500"
										},
										{
											"begin": 2056,
											"end": 2103,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2091,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2083,
											"end": 2091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2091,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "499"
										},
										{
											"begin": 2083,
											"end": 2091,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2103,
											"name": "tag",
											"source": 0,
											"value": "500"
										},
										{
											"begin": 2056,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2131,
											"end": 2132,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2127,
											"end": 2128,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2127,
											"end": 2132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "501"
										},
										{
											"begin": 2127,
											"end": 2132,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2127,
											"end": 2132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2127,
											"end": 2132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "502"
										},
										{
											"begin": 2127,
											"end": 2132,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2127,
											"end": 2132,
											"name": "tag",
											"source": 0,
											"value": "501"
										},
										{
											"begin": 2127,
											"end": 2132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2132,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2161,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2155,
											"end": 2156,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2152,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "503"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "504"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "tag",
											"source": 0,
											"value": "503"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2161,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "505"
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "506"
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "tag",
											"source": 0,
											"value": "506"
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "tag",
											"source": 0,
											"value": "505"
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2219,
											"end": 2220,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2220,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2228,
											"name": "tag",
											"source": 0,
											"value": "499"
										},
										{
											"begin": 1757,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2228,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2228,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2228,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2696,
											"end": 2828,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 2696,
											"end": 2828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2754,
											"end": 2761,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "509"
										},
										{
											"begin": 2785,
											"end": 2786,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2788,
											"end": 2789,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "510"
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "tag",
											"source": 0,
											"value": "509"
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2828,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2828,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2828,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 841,
											"end": 977,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 841,
											"end": 977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 899,
											"end": 906,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "512"
										},
										{
											"begin": 930,
											"end": 931,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 933,
											"end": 934,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 926,
											"end": 969,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 926,
											"end": 969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 926,
											"end": 969,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 926,
											"end": 969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 926,
											"end": 969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 926,
											"end": 969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 926,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "513"
										},
										{
											"begin": 926,
											"end": 969,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 926,
											"end": 969,
											"name": "tag",
											"source": 0,
											"value": "512"
										},
										{
											"begin": 926,
											"end": 969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 919,
											"end": 969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 919,
											"end": 969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 841,
											"end": 977,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 841,
											"end": 977,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 841,
											"end": 977,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 841,
											"end": 977,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 841,
											"end": 977,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 385,
											"end": 566,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 385,
											"end": 566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 443,
											"end": 450,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 463,
											"end": 472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 479,
											"end": 480,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 475,
											"end": 476,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 475,
											"end": 480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "515"
										},
										{
											"begin": 475,
											"end": 480,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 475,
											"end": 480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 475,
											"end": 480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "516"
										},
										{
											"begin": 475,
											"end": 480,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 475,
											"end": 480,
											"name": "tag",
											"source": 0,
											"value": "515"
										},
										{
											"begin": 475,
											"end": 480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 463,
											"end": 480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 463,
											"end": 480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 504,
											"end": 505,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 499,
											"end": 500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 499,
											"end": 505,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 499,
											"end": 505,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "517"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "518"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "519"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "tag",
											"source": 0,
											"value": "518"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "tag",
											"source": 0,
											"value": "517"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 557,
											"end": 558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 550,
											"end": 558,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 550,
											"end": 558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 550,
											"end": 558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 385,
											"end": 566,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 385,
											"end": 566,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 385,
											"end": 566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 385,
											"end": 566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 385,
											"end": 566,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16150,
											"end": 16361,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 16150,
											"end": 16361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16267,
											"end": 16353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "521"
										},
										{
											"begin": 16287,
											"end": 16292,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16317,
											"end": 16340,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 16317,
											"end": 16340,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 16317,
											"end": 16340,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 16342,
											"end": 16344,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16346,
											"end": 16351,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "522"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "523"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "tag",
											"source": 0,
											"value": "522"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "524"
										},
										{
											"begin": 16267,
											"end": 16353,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16267,
											"end": 16353,
											"name": "tag",
											"source": 0,
											"value": "521"
										},
										{
											"begin": 16267,
											"end": 16353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16150,
											"end": 16361,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16150,
											"end": 16361,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16150,
											"end": 16361,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16150,
											"end": 16361,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16369,
											"end": 16617,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 16369,
											"end": 16617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16513,
											"end": 16609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "526"
										},
										{
											"begin": 16533,
											"end": 16538,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16563,
											"end": 16590,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 16563,
											"end": 16590,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 16563,
											"end": 16590,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 16592,
											"end": 16596,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16598,
											"end": 16600,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16602,
											"end": 16607,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "527"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "528"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "tag",
											"source": 0,
											"value": "527"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16513,
											"end": 16532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "524"
										},
										{
											"begin": 16513,
											"end": 16609,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16513,
											"end": 16609,
											"name": "tag",
											"source": 0,
											"value": "526"
										},
										{
											"begin": 16513,
											"end": 16609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16369,
											"end": 16617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16369,
											"end": 16617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16369,
											"end": 16617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16369,
											"end": 16617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16369,
											"end": 16617,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16886,
											"end": 17502,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 16886,
											"end": 17502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17259,
											"end": 17260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17250,
											"end": 17255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17250,
											"end": 17260,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17249,
											"end": 17311,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17249,
											"end": 17311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "530"
										},
										{
											"begin": 17249,
											"end": 17311,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17249,
											"end": 17311,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17310,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17266,
											"end": 17271,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17281,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17266,
											"end": 17281,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17281,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 17290,
											"end": 17294,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 17297,
											"end": 17304,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "531"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "532"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "tag",
											"source": 0,
											"value": "531"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "533"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "tag",
											"source": 0,
											"value": "533"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "535"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "tag",
											"source": 0,
											"value": "535"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "536"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "tag",
											"source": 0,
											"value": "536"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17310,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17249,
											"end": 17311,
											"name": "tag",
											"source": 0,
											"value": "530"
										},
										{
											"begin": 17249,
											"end": 17311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "537"
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "538"
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "539"
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "tag",
											"source": 0,
											"value": "538"
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "tag",
											"source": 0,
											"value": "537"
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17404,
											"end": 17494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 17424,
											"end": 17429,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17454,
											"end": 17476,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 17454,
											"end": 17476,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 17454,
											"end": 17476,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 17478,
											"end": 17485,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17487,
											"end": 17492,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "541"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "523"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "tag",
											"source": 0,
											"value": "541"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17404,
											"end": 17423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "524"
										},
										{
											"begin": 17404,
											"end": 17494,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17404,
											"end": 17494,
											"name": "tag",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 17404,
											"end": 17494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16886,
											"end": 17502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16886,
											"end": 17502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16886,
											"end": 17502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16886,
											"end": 17502,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21375,
											"end": 21566,
											"name": "tag",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 21375,
											"end": 21566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21449,
											"end": 21465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21449,
											"end": 21474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21449,
											"end": 21474,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21494,
											"end": 21502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21491,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21485,
											"end": 21491,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21549,
											"end": 21557,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21539,
											"end": 21547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 21438,
											"end": 21566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21375,
											"end": 21566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21375,
											"end": 21566,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3358,
											"end": 3703,
											"name": "tag",
											"source": 0,
											"value": "510"
										},
										{
											"begin": 3358,
											"end": 3703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3444,
											"end": 3451,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3543,
											"end": 3544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3539,
											"end": 3540,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3539,
											"end": 3544,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3546,
											"end": 3558,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "544"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "545"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "546"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "tag",
											"source": 0,
											"value": "545"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "tag",
											"source": 0,
											"value": "544"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3586,
											"end": 3587,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3583,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "547"
										},
										{
											"begin": 3582,
											"end": 3587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "504"
										},
										{
											"begin": 3582,
											"end": 3587,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3582,
											"end": 3587,
											"name": "tag",
											"source": 0,
											"value": "547"
										},
										{
											"begin": 3582,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3694,
											"end": 3695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3695,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3703,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3703,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3703,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1314,
											"end": 1506,
											"name": "tag",
											"source": 0,
											"value": "513"
										},
										{
											"begin": 1314,
											"end": 1506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1433,
											"end": 1434,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1428,
											"end": 1429,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1428,
											"end": 1434,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1428,
											"end": 1434,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1436,
											"end": 1448,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "549"
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "550"
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "546"
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "tag",
											"source": 0,
											"value": "550"
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "tag",
											"source": 0,
											"value": "549"
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 1469,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1476,
											"end": 1477,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1472,
											"end": 1473,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1472,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "551"
										},
										{
											"begin": 1472,
											"end": 1477,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1472,
											"end": 1477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1472,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "552"
										},
										{
											"begin": 1472,
											"end": 1477,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1472,
											"end": 1477,
											"name": "tag",
											"source": 0,
											"value": "551"
										},
										{
											"begin": 1472,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 1477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 1477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1497,
											"end": 1498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1498,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1498,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1498,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 1506,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 1506,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 1506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 1506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 1506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 1506,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18723,
											"end": 19439,
											"name": "tag",
											"source": 0,
											"value": "524"
										},
										{
											"begin": 18723,
											"end": 19439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19147,
											"end": 19170,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "554"
										},
										{
											"begin": 19201,
											"end": 19205,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "PUSH",
											"source": 0,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19181,
											"end": 19186,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19200,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19173,
											"end": 19200,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "555"
										},
										{
											"begin": 19173,
											"end": 19200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "tag",
											"source": 0,
											"value": "554"
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19147,
											"end": 19242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19147,
											"end": 19242,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19277,
											"end": 19278,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19257,
											"end": 19267,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19257,
											"end": 19274,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19257,
											"end": 19278,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 19253,
											"end": 19432,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19253,
											"end": 19432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "556"
										},
										{
											"begin": 19253,
											"end": 19432,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19354,
											"end": 19364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "557"
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "558"
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "tag",
											"source": 0,
											"value": "557"
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "559"
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "560"
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "561"
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "tag",
											"source": 0,
											"value": "560"
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "tag",
											"source": 0,
											"value": "559"
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19253,
											"end": 19432,
											"name": "tag",
											"source": 0,
											"value": "556"
										},
										{
											"begin": 19253,
											"end": 19432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18793,
											"end": 19439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18723,
											"end": 19439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18723,
											"end": 19439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18723,
											"end": 19439,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11566,
											"end": 11795,
											"name": "tag",
											"source": 0,
											"value": "555"
										},
										{
											"begin": 11566,
											"end": 11795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11715,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11735,
											"end": 11787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "563"
										},
										{
											"begin": 11757,
											"end": 11763,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11765,
											"end": 11769,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11771,
											"end": 11772,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11774,
											"end": 11786,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11735,
											"end": 11756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "564"
										},
										{
											"begin": 11735,
											"end": 11787,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11735,
											"end": 11787,
											"name": "tag",
											"source": 0,
											"value": "563"
										},
										{
											"begin": 11735,
											"end": 11787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11728,
											"end": 11787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11728,
											"end": 11787,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11795,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11795,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11795,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11795,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11795,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11795,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12686,
											"end": 13196,
											"name": "tag",
											"source": 0,
											"value": "564"
										},
										{
											"begin": 12686,
											"end": 13196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12856,
											"end": 12868,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12914,
											"end": 12919,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 12910,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 12919,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 12919,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "566"
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "567"
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "568"
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "tag",
											"source": 0,
											"value": "567"
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "tag",
											"source": 0,
											"value": "566"
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12981,
											"end": 12999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "569"
										},
										{
											"begin": 12992,
											"end": 12998,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12981,
											"end": 12991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "570"
										},
										{
											"begin": 12981,
											"end": 12999,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12981,
											"end": 12999,
											"name": "tag",
											"source": 0,
											"value": "569"
										},
										{
											"begin": 12981,
											"end": 12999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "571"
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "572"
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "573"
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "tag",
											"source": 0,
											"value": "572"
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "tag",
											"source": 0,
											"value": "571"
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13059,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13061,
											"end": 13084,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13094,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13099,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13088,
											"end": 13099,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13107,
											"end": 13112,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13118,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "574"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "575"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "tag",
											"source": 0,
											"value": "574"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "578"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "577"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "tag",
											"source": 0,
											"value": "578"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "tag",
											"source": 0,
											"value": "577"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13046,
											"end": 13119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13046,
											"end": 13119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13046,
											"end": 13119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13046,
											"end": 13119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13137,
											"end": 13188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "579"
										},
										{
											"begin": 13154,
											"end": 13161,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13163,
											"end": 13173,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13187,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13137,
											"end": 13153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "580"
										},
										{
											"begin": 13137,
											"end": 13188,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13137,
											"end": 13188,
											"name": "tag",
											"source": 0,
											"value": "579"
										},
										{
											"begin": 13137,
											"end": 13188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13130,
											"end": 13188,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13130,
											"end": 13188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13130,
											"end": 13188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13130,
											"end": 13188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 13196,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 13196,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 13196,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 13196,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 13196,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 13196,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 13196,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8821,
											"end": 9147,
											"name": "tag",
											"source": 0,
											"value": "570"
										},
										{
											"begin": 8821,
											"end": 9147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8881,
											"end": 8885,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9138,
											"end": 9139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9135,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9116,
											"end": 9135,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9135,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9139,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 9139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 9139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8821,
											"end": 9147,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8821,
											"end": 9147,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8821,
											"end": 9147,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8821,
											"end": 9147,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15372,
											"end": 16084,
											"name": "tag",
											"source": 0,
											"value": "580"
										},
										{
											"begin": 15372,
											"end": 16084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15522,
											"end": 15534,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15551,
											"end": 15558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15547,
											"end": 16077,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15547,
											"end": 16077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "583"
										},
										{
											"begin": 15547,
											"end": 16077,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15582,
											"end": 15592,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15575,
											"end": 15592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15575,
											"end": 15592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15575,
											"end": 15592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "582"
										},
										{
											"begin": 15575,
											"end": 15592,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15547,
											"end": 16077,
											"name": "tag",
											"source": 0,
											"value": "583"
										},
										{
											"begin": 15547,
											"end": 16077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15716,
											"end": 15717,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15696,
											"end": 15706,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15696,
											"end": 15713,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15696,
											"end": 15717,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 15692,
											"end": 16066,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15692,
											"end": 16066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "585"
										},
										{
											"begin": 15692,
											"end": 16066,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15894,
											"end": 15904,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15888,
											"end": 15905,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15970,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15942,
											"end": 15952,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15938,
											"end": 15940,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15934,
											"end": 15953,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15927,
											"end": 15971,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15692,
											"end": 16066,
											"name": "tag",
											"source": 0,
											"value": "585"
										},
										{
											"begin": 15692,
											"end": 16066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "587"
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "546"
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "tag",
											"source": 0,
											"value": "587"
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 16084,
											"name": "tag",
											"source": 0,
											"value": "582"
										},
										{
											"begin": 15372,
											"end": 16084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 16084,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 16084,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 16084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 16084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 16084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 16084,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "589"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "591"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "592"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "591"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 285,
											"name": "tag",
											"source": 1,
											"value": "593"
										},
										{
											"begin": 152,
											"end": 285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 195,
											"end": 200,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 239,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 211,
											"end": 240,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 211,
											"end": 240,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 249,
											"end": 279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "595"
										},
										{
											"begin": 273,
											"end": 278,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 249,
											"end": 279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "596"
										},
										{
											"begin": 249,
											"end": 279,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 249,
											"end": 279,
											"name": "tag",
											"source": 1,
											"value": "595"
										},
										{
											"begin": 249,
											"end": 279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 152,
											"end": 285,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 152,
											"end": 285,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 152,
											"end": 285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 285,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 291,
											"end": 428,
											"name": "tag",
											"source": 1,
											"value": "597"
										},
										{
											"begin": 291,
											"end": 428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 345,
											"end": 350,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 370,
											"end": 383,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 361,
											"end": 383,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 361,
											"end": 383,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 392,
											"end": 422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "599"
										},
										{
											"begin": 416,
											"end": 421,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 392,
											"end": 422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "596"
										},
										{
											"begin": 392,
											"end": 422,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 392,
											"end": 422,
											"name": "tag",
											"source": 1,
											"value": "599"
										},
										{
											"begin": 392,
											"end": 422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 291,
											"end": 428,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 291,
											"end": 428,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 291,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 291,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 291,
											"end": 428,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 434,
											"end": 601,
											"name": "tag",
											"source": 1,
											"value": "600"
										},
										{
											"begin": 434,
											"end": 601,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 494,
											"end": 499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 538,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 519,
											"end": 539,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 510,
											"end": 539,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 510,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 548,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 589,
											"end": 594,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 548,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "603"
										},
										{
											"begin": 548,
											"end": 595,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 548,
											"end": 595,
											"name": "tag",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 548,
											"end": 595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 434,
											"end": 601,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 434,
											"end": 601,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 434,
											"end": 601,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 434,
											"end": 601,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 434,
											"end": 601,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 607,
											"end": 778,
											"name": "tag",
											"source": 1,
											"value": "604"
										},
										{
											"begin": 607,
											"end": 778,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 678,
											"end": 683,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 709,
											"end": 715,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 703,
											"end": 716,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 694,
											"end": 716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 694,
											"end": 716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 725,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "606"
										},
										{
											"begin": 766,
											"end": 771,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 725,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "603"
										},
										{
											"begin": 725,
											"end": 772,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 725,
											"end": 772,
											"name": "tag",
											"source": 1,
											"value": "606"
										},
										{
											"begin": 725,
											"end": 772,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 607,
											"end": 778,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 607,
											"end": 778,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 607,
											"end": 778,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 607,
											"end": 778,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 607,
											"end": 778,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 784,
											"end": 953,
											"name": "tag",
											"source": 1,
											"value": "607"
										},
										{
											"begin": 784,
											"end": 953,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 845,
											"end": 850,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 883,
											"end": 889,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 870,
											"end": 890,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 861,
											"end": 890,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 861,
											"end": 890,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 899,
											"end": 947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "609"
										},
										{
											"begin": 941,
											"end": 946,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 899,
											"end": 947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "610"
										},
										{
											"begin": 899,
											"end": 947,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 899,
											"end": 947,
											"name": "tag",
											"source": 1,
											"value": "609"
										},
										{
											"begin": 899,
											"end": 947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 784,
											"end": 953,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 784,
											"end": 953,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 784,
											"end": 953,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 784,
											"end": 953,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 784,
											"end": 953,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 959,
											"end": 1140,
											"name": "tag",
											"source": 1,
											"value": "611"
										},
										{
											"begin": 959,
											"end": 1140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1026,
											"end": 1031,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1064,
											"end": 1070,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1071,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1071,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1071,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "613"
										},
										{
											"begin": 1128,
											"end": 1133,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "614"
										},
										{
											"begin": 1080,
											"end": 1134,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1080,
											"end": 1134,
											"name": "tag",
											"source": 1,
											"value": "613"
										},
										{
											"begin": 1080,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 959,
											"end": 1140,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 959,
											"end": 1140,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 959,
											"end": 1140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 959,
											"end": 1140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 959,
											"end": 1140,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1146,
											"end": 1285,
											"name": "tag",
											"source": 1,
											"value": "615"
										},
										{
											"begin": 1146,
											"end": 1285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1192,
											"end": 1197,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1230,
											"end": 1236,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1217,
											"end": 1237,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1208,
											"end": 1237,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1208,
											"end": 1237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "617"
										},
										{
											"begin": 1273,
											"end": 1278,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "618"
										},
										{
											"begin": 1246,
											"end": 1279,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1246,
											"end": 1279,
											"name": "tag",
											"source": 1,
											"value": "617"
										},
										{
											"begin": 1246,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1285,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1285,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1285,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1291,
											"end": 1434,
											"name": "tag",
											"source": 1,
											"value": "619"
										},
										{
											"begin": 1291,
											"end": 1434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1348,
											"end": 1353,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1379,
											"end": 1385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1386,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1364,
											"end": 1386,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1364,
											"end": 1386,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "621"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "618"
										},
										{
											"begin": 1395,
											"end": 1428,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1395,
											"end": 1428,
											"name": "tag",
											"source": 1,
											"value": "621"
										},
										{
											"begin": 1395,
											"end": 1428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1434,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1434,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1434,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1440,
											"end": 1769,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1440,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1505,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1548,
											"end": 1550,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1536,
											"end": 1545,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1534,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1523,
											"end": 1546,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1519,
											"end": 1551,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1635,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "623"
										},
										{
											"begin": 1516,
											"end": 1635,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1554,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "624"
										},
										{
											"begin": 1554,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "625"
										},
										{
											"begin": 1554,
											"end": 1633,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1554,
											"end": 1633,
											"name": "tag",
											"source": 1,
											"value": "624"
										},
										{
											"begin": 1554,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1635,
											"name": "tag",
											"source": 1,
											"value": "623"
										},
										{
											"begin": 1516,
											"end": 1635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1675,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1699,
											"end": 1752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "626"
										},
										{
											"begin": 1744,
											"end": 1751,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1735,
											"end": 1741,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1733,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1720,
											"end": 1742,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1699,
											"end": 1752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "589"
										},
										{
											"begin": 1699,
											"end": 1752,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1699,
											"end": 1752,
											"name": "tag",
											"source": 1,
											"value": "626"
										},
										{
											"begin": 1699,
											"end": 1752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1769,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1769,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1769,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1769,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1769,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1775,
											"end": 2120,
											"name": "tag",
											"source": 1,
											"value": "558"
										},
										{
											"begin": 1775,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1842,
											"end": 1848,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1891,
											"end": 1893,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1879,
											"end": 1888,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1870,
											"end": 1877,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1889,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1859,
											"end": 1978,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1859,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "628"
										},
										{
											"begin": 1859,
											"end": 1978,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "629"
										},
										{
											"begin": 1897,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "625"
										},
										{
											"begin": 1897,
											"end": 1976,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1897,
											"end": 1976,
											"name": "tag",
											"source": 1,
											"value": "629"
										},
										{
											"begin": 1897,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1859,
											"end": 1978,
											"name": "tag",
											"source": 1,
											"value": "628"
										},
										{
											"begin": 1859,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2018,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "630"
										},
										{
											"begin": 2095,
											"end": 2102,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2086,
											"end": 2092,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2084,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2071,
											"end": 2093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2042,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "597"
										},
										{
											"begin": 2042,
											"end": 2103,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2042,
											"end": 2103,
											"name": "tag",
											"source": 1,
											"value": "630"
										},
										{
											"begin": 2042,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2103,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 2113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1775,
											"end": 2120,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1775,
											"end": 2120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1775,
											"end": 2120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1775,
											"end": 2120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1775,
											"end": 2120,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2126,
											"end": 2505,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 2126,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2210,
											"end": 2216,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2259,
											"end": 2261,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2247,
											"end": 2256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2245,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2262,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2346,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "632"
										},
										{
											"begin": 2227,
											"end": 2346,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "633"
										},
										{
											"begin": 2265,
											"end": 2344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "625"
										},
										{
											"begin": 2265,
											"end": 2344,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2265,
											"end": 2344,
											"name": "tag",
											"source": 1,
											"value": "633"
										},
										{
											"begin": 2265,
											"end": 2344,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2346,
											"name": "tag",
											"source": 1,
											"value": "632"
										},
										{
											"begin": 2227,
											"end": 2346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2385,
											"end": 2386,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2410,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "634"
										},
										{
											"begin": 2480,
											"end": 2487,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2477,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2469,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2456,
											"end": 2478,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "604"
										},
										{
											"begin": 2410,
											"end": 2488,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2410,
											"end": 2488,
											"name": "tag",
											"source": 1,
											"value": "634"
										},
										{
											"begin": 2410,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2488,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2488,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2498,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2126,
											"end": 2505,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2126,
											"end": 2505,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2126,
											"end": 2505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2126,
											"end": 2505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2126,
											"end": 2505,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2511,
											"end": 3015,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2511,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2594,
											"end": 2600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2602,
											"end": 2608,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2653,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2639,
											"end": 2648,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2630,
											"end": 2637,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2649,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2622,
											"end": 2654,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2619,
											"end": 2738,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2619,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "636"
										},
										{
											"begin": 2619,
											"end": 2738,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2657,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "637"
										},
										{
											"begin": 2657,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "625"
										},
										{
											"begin": 2657,
											"end": 2736,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2657,
											"end": 2736,
											"name": "tag",
											"source": 1,
											"value": "637"
										},
										{
											"begin": 2657,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2619,
											"end": 2738,
											"name": "tag",
											"source": 1,
											"value": "636"
										},
										{
											"begin": 2619,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2777,
											"end": 2778,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2802,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "638"
										},
										{
											"begin": 2862,
											"end": 2869,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2853,
											"end": 2859,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2842,
											"end": 2851,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2838,
											"end": 2860,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "607"
										},
										{
											"begin": 2802,
											"end": 2870,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2802,
											"end": 2870,
											"name": "tag",
											"source": 1,
											"value": "638"
										},
										{
											"begin": 2802,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2870,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2748,
											"end": 2880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2919,
											"end": 2921,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "639"
										},
										{
											"begin": 2990,
											"end": 2997,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 2987,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 2979,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2988,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "615"
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "tag",
											"source": 1,
											"value": "639"
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2935,
											"end": 2998,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2935,
											"end": 2998,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2890,
											"end": 3008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2511,
											"end": 3015,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2511,
											"end": 3015,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2511,
											"end": 3015,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2511,
											"end": 3015,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2511,
											"end": 3015,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2511,
											"end": 3015,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3021,
											"end": 3392,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3021,
											"end": 3392,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3150,
											"end": 3152,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3138,
											"end": 3147,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3129,
											"end": 3136,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3125,
											"end": 3148,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3121,
											"end": 3153,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3118,
											"end": 3237,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3118,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "641"
										},
										{
											"begin": 3118,
											"end": 3237,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "642"
										},
										{
											"begin": 3156,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "625"
										},
										{
											"begin": 3156,
											"end": 3235,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3156,
											"end": 3235,
											"name": "tag",
											"source": 1,
											"value": "642"
										},
										{
											"begin": 3156,
											"end": 3235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3118,
											"end": 3237,
											"name": "tag",
											"source": 1,
											"value": "641"
										},
										{
											"begin": 3118,
											"end": 3237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3276,
											"end": 3277,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3301,
											"end": 3375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "643"
										},
										{
											"begin": 3367,
											"end": 3374,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3358,
											"end": 3364,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3347,
											"end": 3356,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3343,
											"end": 3365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3301,
											"end": 3375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "611"
										},
										{
											"begin": 3301,
											"end": 3375,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3301,
											"end": 3375,
											"name": "tag",
											"source": 1,
											"value": "643"
										},
										{
											"begin": 3301,
											"end": 3375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3291,
											"end": 3375,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3291,
											"end": 3375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3247,
											"end": 3385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3392,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3392,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3392,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3392,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3392,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3398,
											"end": 3727,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3398,
											"end": 3727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3457,
											"end": 3463,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3506,
											"end": 3508,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3494,
											"end": 3503,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3485,
											"end": 3492,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3481,
											"end": 3504,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3477,
											"end": 3509,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3474,
											"end": 3593,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3474,
											"end": 3593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "645"
										},
										{
											"begin": 3474,
											"end": 3593,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3512,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "646"
										},
										{
											"begin": 3512,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "625"
										},
										{
											"begin": 3512,
											"end": 3591,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3512,
											"end": 3591,
											"name": "tag",
											"source": 1,
											"value": "646"
										},
										{
											"begin": 3512,
											"end": 3591,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3474,
											"end": 3593,
											"name": "tag",
											"source": 1,
											"value": "645"
										},
										{
											"begin": 3474,
											"end": 3593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3632,
											"end": 3633,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 3702,
											"end": 3709,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3693,
											"end": 3699,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3682,
											"end": 3691,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3700,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "615"
										},
										{
											"begin": 3657,
											"end": 3710,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3657,
											"end": 3710,
											"name": "tag",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 3657,
											"end": 3710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 3710,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 3710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3603,
											"end": 3720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3727,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3727,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3727,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3727,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3727,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3733,
											"end": 4084,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 3733,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3803,
											"end": 3809,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3852,
											"end": 3854,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3840,
											"end": 3849,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3831,
											"end": 3838,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3827,
											"end": 3850,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3823,
											"end": 3855,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3820,
											"end": 3939,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3820,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "649"
										},
										{
											"begin": 3820,
											"end": 3939,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3858,
											"end": 3937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "650"
										},
										{
											"begin": 3858,
											"end": 3937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "625"
										},
										{
											"begin": 3858,
											"end": 3937,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3858,
											"end": 3937,
											"name": "tag",
											"source": 1,
											"value": "650"
										},
										{
											"begin": 3858,
											"end": 3937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3820,
											"end": 3939,
											"name": "tag",
											"source": 1,
											"value": "649"
										},
										{
											"begin": 3820,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4003,
											"end": 4067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "651"
										},
										{
											"begin": 4059,
											"end": 4066,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4050,
											"end": 4056,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4048,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4057,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4003,
											"end": 4067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "619"
										},
										{
											"begin": 4003,
											"end": 4067,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4003,
											"end": 4067,
											"name": "tag",
											"source": 1,
											"value": "651"
										},
										{
											"begin": 4003,
											"end": 4067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3993,
											"end": 4067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3993,
											"end": 4067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3949,
											"end": 4077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 4084,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 4084,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 4084,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 4084,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 4084,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4090,
											"end": 4564,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 4090,
											"end": 4564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4164,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4166,
											"end": 4172,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4217,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4203,
											"end": 4212,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4194,
											"end": 4201,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4190,
											"end": 4213,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4186,
											"end": 4218,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4183,
											"end": 4302,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4183,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "653"
										},
										{
											"begin": 4183,
											"end": 4302,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4221,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "654"
										},
										{
											"begin": 4221,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "625"
										},
										{
											"begin": 4221,
											"end": 4300,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4221,
											"end": 4300,
											"name": "tag",
											"source": 1,
											"value": "654"
										},
										{
											"begin": 4221,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4183,
											"end": 4302,
											"name": "tag",
											"source": 1,
											"value": "653"
										},
										{
											"begin": 4183,
											"end": 4302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4341,
											"end": 4342,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4366,
											"end": 4419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "655"
										},
										{
											"begin": 4411,
											"end": 4418,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4402,
											"end": 4408,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4391,
											"end": 4400,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4387,
											"end": 4409,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4366,
											"end": 4419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "615"
										},
										{
											"begin": 4366,
											"end": 4419,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4366,
											"end": 4419,
											"name": "tag",
											"source": 1,
											"value": "655"
										},
										{
											"begin": 4366,
											"end": 4419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4356,
											"end": 4419,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4356,
											"end": 4419,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4312,
											"end": 4429,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4468,
											"end": 4470,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4494,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "656"
										},
										{
											"begin": 4539,
											"end": 4546,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4530,
											"end": 4536,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4519,
											"end": 4528,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4515,
											"end": 4537,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4494,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "589"
										},
										{
											"begin": 4494,
											"end": 4547,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4494,
											"end": 4547,
											"name": "tag",
											"source": 1,
											"value": "656"
										},
										{
											"begin": 4494,
											"end": 4547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4484,
											"end": 4547,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4484,
											"end": 4547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4439,
											"end": 4557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4090,
											"end": 4564,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4090,
											"end": 4564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4090,
											"end": 4564,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4090,
											"end": 4564,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4090,
											"end": 4564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4090,
											"end": 4564,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4570,
											"end": 5211,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4570,
											"end": 5211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4658,
											"end": 4664,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4666,
											"end": 4672,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4674,
											"end": 4680,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4723,
											"end": 4725,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4702,
											"end": 4709,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4721,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4694,
											"end": 4726,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4691,
											"end": 4810,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4691,
											"end": 4810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "658"
										},
										{
											"begin": 4691,
											"end": 4810,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4729,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "659"
										},
										{
											"begin": 4729,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "625"
										},
										{
											"begin": 4729,
											"end": 4808,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4729,
											"end": 4808,
											"name": "tag",
											"source": 1,
											"value": "659"
										},
										{
											"begin": 4729,
											"end": 4808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4691,
											"end": 4810,
											"name": "tag",
											"source": 1,
											"value": "658"
										},
										{
											"begin": 4691,
											"end": 4810,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4850,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4874,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "660"
										},
										{
											"begin": 4919,
											"end": 4926,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4916,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4899,
											"end": 4908,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4895,
											"end": 4917,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4874,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "615"
										},
										{
											"begin": 4874,
											"end": 4927,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4874,
											"end": 4927,
											"name": "tag",
											"source": 1,
											"value": "660"
										},
										{
											"begin": 4874,
											"end": 4927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4864,
											"end": 4927,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4864,
											"end": 4927,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4820,
											"end": 4937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4976,
											"end": 4978,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5002,
											"end": 5069,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "661"
										},
										{
											"begin": 5061,
											"end": 5068,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5052,
											"end": 5058,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5050,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5037,
											"end": 5059,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5069,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "600"
										},
										{
											"begin": 5002,
											"end": 5069,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5002,
											"end": 5069,
											"name": "tag",
											"source": 1,
											"value": "661"
										},
										{
											"begin": 5002,
											"end": 5069,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4992,
											"end": 5069,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4992,
											"end": 5069,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4947,
											"end": 5079,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5118,
											"end": 5120,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5144,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "662"
										},
										{
											"begin": 5186,
											"end": 5193,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5183,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5166,
											"end": 5175,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5162,
											"end": 5184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "593"
										},
										{
											"begin": 5144,
											"end": 5194,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5144,
											"end": 5194,
											"name": "tag",
											"source": 1,
											"value": "662"
										},
										{
											"begin": 5144,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5134,
											"end": 5194,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5134,
											"end": 5194,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5089,
											"end": 5204,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4570,
											"end": 5211,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4570,
											"end": 5211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4570,
											"end": 5211,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4570,
											"end": 5211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4570,
											"end": 5211,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4570,
											"end": 5211,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5217,
											"end": 5691,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 5217,
											"end": 5691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5285,
											"end": 5291,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5293,
											"end": 5299,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5342,
											"end": 5344,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5330,
											"end": 5339,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5321,
											"end": 5328,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5317,
											"end": 5340,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5313,
											"end": 5345,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5429,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "664"
										},
										{
											"begin": 5310,
											"end": 5429,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5348,
											"end": 5427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "665"
										},
										{
											"begin": 5348,
											"end": 5427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "625"
										},
										{
											"begin": 5348,
											"end": 5427,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5348,
											"end": 5427,
											"name": "tag",
											"source": 1,
											"value": "665"
										},
										{
											"begin": 5348,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5429,
											"name": "tag",
											"source": 1,
											"value": "664"
										},
										{
											"begin": 5310,
											"end": 5429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5468,
											"end": 5469,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5493,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "666"
										},
										{
											"begin": 5538,
											"end": 5545,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5535,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5518,
											"end": 5527,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5514,
											"end": 5536,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5493,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "615"
										},
										{
											"begin": 5493,
											"end": 5546,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5493,
											"end": 5546,
											"name": "tag",
											"source": 1,
											"value": "666"
										},
										{
											"begin": 5493,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5483,
											"end": 5546,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5483,
											"end": 5546,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5439,
											"end": 5556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5595,
											"end": 5597,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5621,
											"end": 5674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "667"
										},
										{
											"begin": 5666,
											"end": 5673,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5657,
											"end": 5663,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5646,
											"end": 5655,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5664,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5621,
											"end": 5674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "615"
										},
										{
											"begin": 5621,
											"end": 5674,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5621,
											"end": 5674,
											"name": "tag",
											"source": 1,
											"value": "667"
										},
										{
											"begin": 5621,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5611,
											"end": 5674,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5611,
											"end": 5674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5217,
											"end": 5691,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5217,
											"end": 5691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5217,
											"end": 5691,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5217,
											"end": 5691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5217,
											"end": 5691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5217,
											"end": 5691,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5697,
											"end": 6310,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 5697,
											"end": 6310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5771,
											"end": 5777,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5779,
											"end": 5785,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5793,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5836,
											"end": 5838,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5824,
											"end": 5833,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5815,
											"end": 5822,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5811,
											"end": 5834,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5807,
											"end": 5839,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5804,
											"end": 5923,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5804,
											"end": 5923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "669"
										},
										{
											"begin": 5804,
											"end": 5923,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5842,
											"end": 5921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "670"
										},
										{
											"begin": 5842,
											"end": 5921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "625"
										},
										{
											"begin": 5842,
											"end": 5921,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5842,
											"end": 5921,
											"name": "tag",
											"source": 1,
											"value": "670"
										},
										{
											"begin": 5842,
											"end": 5921,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5804,
											"end": 5923,
											"name": "tag",
											"source": 1,
											"value": "669"
										},
										{
											"begin": 5804,
											"end": 5923,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5962,
											"end": 5963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5987,
											"end": 6040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "671"
										},
										{
											"begin": 6032,
											"end": 6039,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6023,
											"end": 6029,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6012,
											"end": 6021,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 6030,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5987,
											"end": 6040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "615"
										},
										{
											"begin": 5987,
											"end": 6040,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5987,
											"end": 6040,
											"name": "tag",
											"source": 1,
											"value": "671"
										},
										{
											"begin": 5987,
											"end": 6040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5977,
											"end": 6040,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5977,
											"end": 6040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5933,
											"end": 6050,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6089,
											"end": 6091,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6115,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "672"
										},
										{
											"begin": 6160,
											"end": 6167,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6157,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6140,
											"end": 6149,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6136,
											"end": 6158,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6115,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "615"
										},
										{
											"begin": 6115,
											"end": 6168,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6115,
											"end": 6168,
											"name": "tag",
											"source": 1,
											"value": "672"
										},
										{
											"begin": 6115,
											"end": 6168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6105,
											"end": 6168,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6105,
											"end": 6168,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6060,
											"end": 6178,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6217,
											"end": 6219,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6243,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "673"
										},
										{
											"begin": 6285,
											"end": 6292,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6276,
											"end": 6282,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6274,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6261,
											"end": 6283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6243,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "593"
										},
										{
											"begin": 6243,
											"end": 6293,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6243,
											"end": 6293,
											"name": "tag",
											"source": 1,
											"value": "673"
										},
										{
											"begin": 6243,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6293,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6188,
											"end": 6303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 6310,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 6310,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 6310,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 6310,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 6310,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 6310,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6316,
											"end": 6434,
											"name": "tag",
											"source": 1,
											"value": "674"
										},
										{
											"begin": 6316,
											"end": 6434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6403,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "676"
										},
										{
											"begin": 6421,
											"end": 6426,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6403,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "677"
										},
										{
											"begin": 6403,
											"end": 6427,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6403,
											"end": 6427,
											"name": "tag",
											"source": 1,
											"value": "676"
										},
										{
											"begin": 6403,
											"end": 6427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6398,
											"end": 6401,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6391,
											"end": 6428,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6316,
											"end": 6434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6316,
											"end": 6434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6316,
											"end": 6434,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6440,
											"end": 6813,
											"name": "tag",
											"source": 1,
											"value": "678"
										},
										{
											"begin": 6440,
											"end": 6813,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6544,
											"end": 6547,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6572,
											"end": 6610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "680"
										},
										{
											"begin": 6604,
											"end": 6609,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6572,
											"end": 6610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "681"
										},
										{
											"begin": 6572,
											"end": 6610,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6572,
											"end": 6610,
											"name": "tag",
											"source": 1,
											"value": "680"
										},
										{
											"begin": 6572,
											"end": 6610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6626,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "682"
										},
										{
											"begin": 6707,
											"end": 6713,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6702,
											"end": 6705,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6626,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "683"
										},
										{
											"begin": 6626,
											"end": 6714,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6626,
											"end": 6714,
											"name": "tag",
											"source": 1,
											"value": "682"
										},
										{
											"begin": 6626,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6619,
											"end": 6714,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6619,
											"end": 6714,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6723,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "684"
										},
										{
											"begin": 6768,
											"end": 6774,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6763,
											"end": 6766,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6756,
											"end": 6760,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6749,
											"end": 6754,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6745,
											"end": 6761,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6723,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "685"
										},
										{
											"begin": 6723,
											"end": 6775,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6723,
											"end": 6775,
											"name": "tag",
											"source": 1,
											"value": "684"
										},
										{
											"begin": 6723,
											"end": 6775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6800,
											"end": 6806,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6795,
											"end": 6798,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6807,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6807,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6807,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6440,
											"end": 6813,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6440,
											"end": 6813,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6440,
											"end": 6813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6440,
											"end": 6813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6440,
											"end": 6813,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6819,
											"end": 6978,
											"name": "tag",
											"source": 1,
											"value": "686"
										},
										{
											"begin": 6819,
											"end": 6978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "688"
										},
										{
											"begin": 6965,
											"end": 6970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "689"
										},
										{
											"begin": 6920,
											"end": 6971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6920,
											"end": 6971,
											"name": "tag",
											"source": 1,
											"value": "688"
										},
										{
											"begin": 6920,
											"end": 6971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6915,
											"end": 6918,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6908,
											"end": 6972,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6819,
											"end": 6978,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6819,
											"end": 6978,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6819,
											"end": 6978,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6984,
											"end": 7145,
											"name": "tag",
											"source": 1,
											"value": "690"
										},
										{
											"begin": 6984,
											"end": 7145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7086,
											"end": 7138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "692"
										},
										{
											"begin": 7132,
											"end": 7137,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7086,
											"end": 7138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "693"
										},
										{
											"begin": 7086,
											"end": 7138,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7086,
											"end": 7138,
											"name": "tag",
											"source": 1,
											"value": "692"
										},
										{
											"begin": 7086,
											"end": 7138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7081,
											"end": 7084,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7074,
											"end": 7139,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6984,
											"end": 7145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6984,
											"end": 7145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6984,
											"end": 7145,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7151,
											"end": 7324,
											"name": "tag",
											"source": 1,
											"value": "694"
										},
										{
											"begin": 7151,
											"end": 7324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7259,
											"end": 7317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "696"
										},
										{
											"begin": 7311,
											"end": 7316,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7259,
											"end": 7317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "697"
										},
										{
											"begin": 7259,
											"end": 7317,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7259,
											"end": 7317,
											"name": "tag",
											"source": 1,
											"value": "696"
										},
										{
											"begin": 7259,
											"end": 7317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7254,
											"end": 7257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7318,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7324,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7324,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7324,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7330,
											"end": 7694,
											"name": "tag",
											"source": 1,
											"value": "698"
										},
										{
											"begin": 7330,
											"end": 7694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7418,
											"end": 7421,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7446,
											"end": 7485,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "700"
										},
										{
											"begin": 7479,
											"end": 7484,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7446,
											"end": 7485,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "701"
										},
										{
											"begin": 7446,
											"end": 7485,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7446,
											"end": 7485,
											"name": "tag",
											"source": 1,
											"value": "700"
										},
										{
											"begin": 7446,
											"end": 7485,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7501,
											"end": 7572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "702"
										},
										{
											"begin": 7565,
											"end": 7571,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7560,
											"end": 7563,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7501,
											"end": 7572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "703"
										},
										{
											"begin": 7501,
											"end": 7572,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7501,
											"end": 7572,
											"name": "tag",
											"source": 1,
											"value": "702"
										},
										{
											"begin": 7501,
											"end": 7572,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7494,
											"end": 7572,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7494,
											"end": 7572,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "704"
										},
										{
											"begin": 7626,
											"end": 7632,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7621,
											"end": 7624,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7614,
											"end": 7618,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7607,
											"end": 7612,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7603,
											"end": 7619,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "685"
										},
										{
											"begin": 7581,
											"end": 7633,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7581,
											"end": 7633,
											"name": "tag",
											"source": 1,
											"value": "704"
										},
										{
											"begin": 7581,
											"end": 7633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7658,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "705"
										},
										{
											"begin": 7680,
											"end": 7686,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7658,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "706"
										},
										{
											"begin": 7658,
											"end": 7687,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7658,
											"end": 7687,
											"name": "tag",
											"source": 1,
											"value": "705"
										},
										{
											"begin": 7658,
											"end": 7687,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7653,
											"end": 7656,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7649,
											"end": 7688,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7642,
											"end": 7688,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7642,
											"end": 7688,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7422,
											"end": 7694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7694,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7694,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7694,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7700,
											"end": 8066,
											"name": "tag",
											"source": 1,
											"value": "707"
										},
										{
											"begin": 7700,
											"end": 8066,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7842,
											"end": 7845,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7863,
											"end": 7930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "709"
										},
										{
											"begin": 7927,
											"end": 7929,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7922,
											"end": 7925,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7863,
											"end": 7930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "703"
										},
										{
											"begin": 7863,
											"end": 7930,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7863,
											"end": 7930,
											"name": "tag",
											"source": 1,
											"value": "709"
										},
										{
											"begin": 7863,
											"end": 7930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7856,
											"end": 7930,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7856,
											"end": 7930,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7939,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "710"
										},
										{
											"begin": 8028,
											"end": 8031,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7939,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "711"
										},
										{
											"begin": 7939,
											"end": 8032,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7939,
											"end": 8032,
											"name": "tag",
											"source": 1,
											"value": "710"
										},
										{
											"begin": 7939,
											"end": 8032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8057,
											"end": 8059,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8052,
											"end": 8055,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8048,
											"end": 8060,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8041,
											"end": 8060,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8041,
											"end": 8060,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7700,
											"end": 8066,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7700,
											"end": 8066,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7700,
											"end": 8066,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7700,
											"end": 8066,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8072,
											"end": 8438,
											"name": "tag",
											"source": 1,
											"value": "712"
										},
										{
											"begin": 8072,
											"end": 8438,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8214,
											"end": 8217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8235,
											"end": 8302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "714"
										},
										{
											"begin": 8299,
											"end": 8301,
											"name": "PUSH",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 8294,
											"end": 8297,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8235,
											"end": 8302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "703"
										},
										{
											"begin": 8235,
											"end": 8302,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8235,
											"end": 8302,
											"name": "tag",
											"source": 1,
											"value": "714"
										},
										{
											"begin": 8235,
											"end": 8302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8228,
											"end": 8302,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8228,
											"end": 8302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8311,
											"end": 8404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "715"
										},
										{
											"begin": 8400,
											"end": 8403,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8311,
											"end": 8404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "716"
										},
										{
											"begin": 8311,
											"end": 8404,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8311,
											"end": 8404,
											"name": "tag",
											"source": 1,
											"value": "715"
										},
										{
											"begin": 8311,
											"end": 8404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8429,
											"end": 8431,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8424,
											"end": 8427,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8420,
											"end": 8432,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8413,
											"end": 8432,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8413,
											"end": 8432,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8072,
											"end": 8438,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8072,
											"end": 8438,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8072,
											"end": 8438,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8072,
											"end": 8438,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8444,
											"end": 8810,
											"name": "tag",
											"source": 1,
											"value": "717"
										},
										{
											"begin": 8444,
											"end": 8810,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8586,
											"end": 8589,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8607,
											"end": 8674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "719"
										},
										{
											"begin": 8671,
											"end": 8673,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 8666,
											"end": 8669,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8607,
											"end": 8674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "703"
										},
										{
											"begin": 8607,
											"end": 8674,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8607,
											"end": 8674,
											"name": "tag",
											"source": 1,
											"value": "719"
										},
										{
											"begin": 8607,
											"end": 8674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8600,
											"end": 8674,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8600,
											"end": 8674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "720"
										},
										{
											"begin": 8772,
											"end": 8775,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "721"
										},
										{
											"begin": 8683,
											"end": 8776,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8683,
											"end": 8776,
											"name": "tag",
											"source": 1,
											"value": "720"
										},
										{
											"begin": 8683,
											"end": 8776,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8801,
											"end": 8803,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8796,
											"end": 8799,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8792,
											"end": 8804,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8785,
											"end": 8804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8785,
											"end": 8804,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8444,
											"end": 8810,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8444,
											"end": 8810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8444,
											"end": 8810,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8444,
											"end": 8810,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8816,
											"end": 9182,
											"name": "tag",
											"source": 1,
											"value": "722"
										},
										{
											"begin": 8816,
											"end": 9182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8958,
											"end": 8961,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8979,
											"end": 9046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "724"
										},
										{
											"begin": 9043,
											"end": 9045,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 9038,
											"end": 9041,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8979,
											"end": 9046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "703"
										},
										{
											"begin": 8979,
											"end": 9046,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8979,
											"end": 9046,
											"name": "tag",
											"source": 1,
											"value": "724"
										},
										{
											"begin": 8979,
											"end": 9046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8972,
											"end": 9046,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8972,
											"end": 9046,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9055,
											"end": 9148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "725"
										},
										{
											"begin": 9144,
											"end": 9147,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9055,
											"end": 9148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "726"
										},
										{
											"begin": 9055,
											"end": 9148,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9055,
											"end": 9148,
											"name": "tag",
											"source": 1,
											"value": "725"
										},
										{
											"begin": 9055,
											"end": 9148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9173,
											"end": 9175,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9168,
											"end": 9171,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9164,
											"end": 9176,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9157,
											"end": 9176,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9157,
											"end": 9176,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8816,
											"end": 9182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8816,
											"end": 9182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8816,
											"end": 9182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8816,
											"end": 9182,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9188,
											"end": 9554,
											"name": "tag",
											"source": 1,
											"value": "727"
										},
										{
											"begin": 9188,
											"end": 9554,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9330,
											"end": 9333,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9351,
											"end": 9418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "729"
										},
										{
											"begin": 9415,
											"end": 9417,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 9410,
											"end": 9413,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9351,
											"end": 9418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "703"
										},
										{
											"begin": 9351,
											"end": 9418,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9351,
											"end": 9418,
											"name": "tag",
											"source": 1,
											"value": "729"
										},
										{
											"begin": 9351,
											"end": 9418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9344,
											"end": 9418,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9344,
											"end": 9418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9427,
											"end": 9520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "730"
										},
										{
											"begin": 9516,
											"end": 9519,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9427,
											"end": 9520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "731"
										},
										{
											"begin": 9427,
											"end": 9520,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9427,
											"end": 9520,
											"name": "tag",
											"source": 1,
											"value": "730"
										},
										{
											"begin": 9427,
											"end": 9520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9545,
											"end": 9547,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9540,
											"end": 9543,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9536,
											"end": 9548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9529,
											"end": 9548,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9529,
											"end": 9548,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9188,
											"end": 9554,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9188,
											"end": 9554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9188,
											"end": 9554,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9188,
											"end": 9554,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9560,
											"end": 9926,
											"name": "tag",
											"source": 1,
											"value": "732"
										},
										{
											"begin": 9560,
											"end": 9926,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9702,
											"end": 9705,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9723,
											"end": 9790,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "734"
										},
										{
											"begin": 9787,
											"end": 9789,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 9782,
											"end": 9785,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9723,
											"end": 9790,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "703"
										},
										{
											"begin": 9723,
											"end": 9790,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9723,
											"end": 9790,
											"name": "tag",
											"source": 1,
											"value": "734"
										},
										{
											"begin": 9723,
											"end": 9790,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9716,
											"end": 9790,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9716,
											"end": 9790,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9799,
											"end": 9892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "735"
										},
										{
											"begin": 9888,
											"end": 9891,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9799,
											"end": 9892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "736"
										},
										{
											"begin": 9799,
											"end": 9892,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9799,
											"end": 9892,
											"name": "tag",
											"source": 1,
											"value": "735"
										},
										{
											"begin": 9799,
											"end": 9892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9917,
											"end": 9919,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9912,
											"end": 9915,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9908,
											"end": 9920,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9901,
											"end": 9920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9901,
											"end": 9920,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9560,
											"end": 9926,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9560,
											"end": 9926,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9560,
											"end": 9926,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9560,
											"end": 9926,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9932,
											"end": 10298,
											"name": "tag",
											"source": 1,
											"value": "737"
										},
										{
											"begin": 9932,
											"end": 10298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10074,
											"end": 10077,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10095,
											"end": 10162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "739"
										},
										{
											"begin": 10159,
											"end": 10161,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 10154,
											"end": 10157,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10095,
											"end": 10162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "703"
										},
										{
											"begin": 10095,
											"end": 10162,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10095,
											"end": 10162,
											"name": "tag",
											"source": 1,
											"value": "739"
										},
										{
											"begin": 10095,
											"end": 10162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10088,
											"end": 10162,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10088,
											"end": 10162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10171,
											"end": 10264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "740"
										},
										{
											"begin": 10260,
											"end": 10263,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10171,
											"end": 10264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "741"
										},
										{
											"begin": 10171,
											"end": 10264,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10171,
											"end": 10264,
											"name": "tag",
											"source": 1,
											"value": "740"
										},
										{
											"begin": 10171,
											"end": 10264,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10291,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10284,
											"end": 10287,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10280,
											"end": 10292,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10273,
											"end": 10292,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10273,
											"end": 10292,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9932,
											"end": 10298,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9932,
											"end": 10298,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9932,
											"end": 10298,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9932,
											"end": 10298,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10304,
											"end": 10670,
											"name": "tag",
											"source": 1,
											"value": "742"
										},
										{
											"begin": 10304,
											"end": 10670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10446,
											"end": 10449,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10467,
											"end": 10534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "744"
										},
										{
											"begin": 10531,
											"end": 10533,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10526,
											"end": 10529,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10467,
											"end": 10534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "703"
										},
										{
											"begin": 10467,
											"end": 10534,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10467,
											"end": 10534,
											"name": "tag",
											"source": 1,
											"value": "744"
										},
										{
											"begin": 10467,
											"end": 10534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10460,
											"end": 10534,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10460,
											"end": 10534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10543,
											"end": 10636,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "745"
										},
										{
											"begin": 10632,
											"end": 10635,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10543,
											"end": 10636,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "746"
										},
										{
											"begin": 10543,
											"end": 10636,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10543,
											"end": 10636,
											"name": "tag",
											"source": 1,
											"value": "745"
										},
										{
											"begin": 10543,
											"end": 10636,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10661,
											"end": 10663,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10656,
											"end": 10659,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10652,
											"end": 10664,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10645,
											"end": 10664,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10645,
											"end": 10664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10304,
											"end": 10670,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10304,
											"end": 10670,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10304,
											"end": 10670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10304,
											"end": 10670,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10676,
											"end": 11042,
											"name": "tag",
											"source": 1,
											"value": "747"
										},
										{
											"begin": 10676,
											"end": 11042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10818,
											"end": 10821,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10839,
											"end": 10906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "749"
										},
										{
											"begin": 10903,
											"end": 10905,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 10898,
											"end": 10901,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10839,
											"end": 10906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "703"
										},
										{
											"begin": 10839,
											"end": 10906,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10839,
											"end": 10906,
											"name": "tag",
											"source": 1,
											"value": "749"
										},
										{
											"begin": 10839,
											"end": 10906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10832,
											"end": 10906,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10832,
											"end": 10906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10915,
											"end": 11008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "750"
										},
										{
											"begin": 11004,
											"end": 11007,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10915,
											"end": 11008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "751"
										},
										{
											"begin": 10915,
											"end": 11008,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10915,
											"end": 11008,
											"name": "tag",
											"source": 1,
											"value": "750"
										},
										{
											"begin": 10915,
											"end": 11008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11033,
											"end": 11035,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11028,
											"end": 11031,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11024,
											"end": 11036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11017,
											"end": 11036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11017,
											"end": 11036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10676,
											"end": 11042,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10676,
											"end": 11042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10676,
											"end": 11042,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10676,
											"end": 11042,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11048,
											"end": 11414,
											"name": "tag",
											"source": 1,
											"value": "752"
										},
										{
											"begin": 11048,
											"end": 11414,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11190,
											"end": 11193,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11211,
											"end": 11278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "754"
										},
										{
											"begin": 11275,
											"end": 11277,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 11270,
											"end": 11273,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11211,
											"end": 11278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "703"
										},
										{
											"begin": 11211,
											"end": 11278,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11211,
											"end": 11278,
											"name": "tag",
											"source": 1,
											"value": "754"
										},
										{
											"begin": 11211,
											"end": 11278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11204,
											"end": 11278,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11204,
											"end": 11278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11287,
											"end": 11380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "755"
										},
										{
											"begin": 11376,
											"end": 11379,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11287,
											"end": 11380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "756"
										},
										{
											"begin": 11287,
											"end": 11380,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11287,
											"end": 11380,
											"name": "tag",
											"source": 1,
											"value": "755"
										},
										{
											"begin": 11287,
											"end": 11380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11405,
											"end": 11407,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11400,
											"end": 11403,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11396,
											"end": 11408,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11389,
											"end": 11408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11389,
											"end": 11408,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11048,
											"end": 11414,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11048,
											"end": 11414,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11048,
											"end": 11414,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11048,
											"end": 11414,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11420,
											"end": 11786,
											"name": "tag",
											"source": 1,
											"value": "757"
										},
										{
											"begin": 11420,
											"end": 11786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11562,
											"end": 11565,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11583,
											"end": 11650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "759"
										},
										{
											"begin": 11647,
											"end": 11649,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 11642,
											"end": 11645,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11583,
											"end": 11650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "703"
										},
										{
											"begin": 11583,
											"end": 11650,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11583,
											"end": 11650,
											"name": "tag",
											"source": 1,
											"value": "759"
										},
										{
											"begin": 11583,
											"end": 11650,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11576,
											"end": 11650,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11576,
											"end": 11650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11659,
											"end": 11752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "760"
										},
										{
											"begin": 11748,
											"end": 11751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11659,
											"end": 11752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "761"
										},
										{
											"begin": 11659,
											"end": 11752,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11659,
											"end": 11752,
											"name": "tag",
											"source": 1,
											"value": "760"
										},
										{
											"begin": 11659,
											"end": 11752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11777,
											"end": 11779,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11772,
											"end": 11775,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11761,
											"end": 11780,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11761,
											"end": 11780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11420,
											"end": 11786,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11420,
											"end": 11786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11420,
											"end": 11786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11420,
											"end": 11786,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11792,
											"end": 12158,
											"name": "tag",
											"source": 1,
											"value": "762"
										},
										{
											"begin": 11792,
											"end": 12158,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11934,
											"end": 11937,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11955,
											"end": 12022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "764"
										},
										{
											"begin": 12019,
											"end": 12021,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 12014,
											"end": 12017,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11955,
											"end": 12022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "703"
										},
										{
											"begin": 11955,
											"end": 12022,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11955,
											"end": 12022,
											"name": "tag",
											"source": 1,
											"value": "764"
										},
										{
											"begin": 11955,
											"end": 12022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11948,
											"end": 12022,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11948,
											"end": 12022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12031,
											"end": 12124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "765"
										},
										{
											"begin": 12120,
											"end": 12123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12031,
											"end": 12124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "766"
										},
										{
											"begin": 12031,
											"end": 12124,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12031,
											"end": 12124,
											"name": "tag",
											"source": 1,
											"value": "765"
										},
										{
											"begin": 12031,
											"end": 12124,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12149,
											"end": 12151,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12144,
											"end": 12147,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12140,
											"end": 12152,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12133,
											"end": 12152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12133,
											"end": 12152,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11792,
											"end": 12158,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11792,
											"end": 12158,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11792,
											"end": 12158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11792,
											"end": 12158,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12164,
											"end": 12530,
											"name": "tag",
											"source": 1,
											"value": "767"
										},
										{
											"begin": 12164,
											"end": 12530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12306,
											"end": 12309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12327,
											"end": 12394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "769"
										},
										{
											"begin": 12391,
											"end": 12393,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 12386,
											"end": 12389,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12327,
											"end": 12394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "703"
										},
										{
											"begin": 12327,
											"end": 12394,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12327,
											"end": 12394,
											"name": "tag",
											"source": 1,
											"value": "769"
										},
										{
											"begin": 12327,
											"end": 12394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12320,
											"end": 12394,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12320,
											"end": 12394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12403,
											"end": 12496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "770"
										},
										{
											"begin": 12492,
											"end": 12495,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12403,
											"end": 12496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "771"
										},
										{
											"begin": 12403,
											"end": 12496,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12403,
											"end": 12496,
											"name": "tag",
											"source": 1,
											"value": "770"
										},
										{
											"begin": 12403,
											"end": 12496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12521,
											"end": 12523,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12516,
											"end": 12519,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12512,
											"end": 12524,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12505,
											"end": 12524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12505,
											"end": 12524,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12164,
											"end": 12530,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12164,
											"end": 12530,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12164,
											"end": 12530,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12164,
											"end": 12530,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12536,
											"end": 12902,
											"name": "tag",
											"source": 1,
											"value": "772"
										},
										{
											"begin": 12536,
											"end": 12902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12678,
											"end": 12681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12699,
											"end": 12766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "774"
										},
										{
											"begin": 12763,
											"end": 12765,
											"name": "PUSH",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 12758,
											"end": 12761,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12699,
											"end": 12766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "703"
										},
										{
											"begin": 12699,
											"end": 12766,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12699,
											"end": 12766,
											"name": "tag",
											"source": 1,
											"value": "774"
										},
										{
											"begin": 12699,
											"end": 12766,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12692,
											"end": 12766,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12692,
											"end": 12766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12775,
											"end": 12868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "775"
										},
										{
											"begin": 12864,
											"end": 12867,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12775,
											"end": 12868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "776"
										},
										{
											"begin": 12775,
											"end": 12868,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12775,
											"end": 12868,
											"name": "tag",
											"source": 1,
											"value": "775"
										},
										{
											"begin": 12775,
											"end": 12868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12893,
											"end": 12895,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12888,
											"end": 12891,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12884,
											"end": 12896,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12877,
											"end": 12896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12877,
											"end": 12896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 12902,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 12902,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 12902,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 12902,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12908,
											"end": 13274,
											"name": "tag",
											"source": 1,
											"value": "777"
										},
										{
											"begin": 12908,
											"end": 13274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13050,
											"end": 13053,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13071,
											"end": 13138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "779"
										},
										{
											"begin": 13135,
											"end": 13137,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 13130,
											"end": 13133,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13071,
											"end": 13138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "703"
										},
										{
											"begin": 13071,
											"end": 13138,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13071,
											"end": 13138,
											"name": "tag",
											"source": 1,
											"value": "779"
										},
										{
											"begin": 13071,
											"end": 13138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13064,
											"end": 13138,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13064,
											"end": 13138,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13147,
											"end": 13240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "780"
										},
										{
											"begin": 13236,
											"end": 13239,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13147,
											"end": 13240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "781"
										},
										{
											"begin": 13147,
											"end": 13240,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13147,
											"end": 13240,
											"name": "tag",
											"source": 1,
											"value": "780"
										},
										{
											"begin": 13147,
											"end": 13240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13265,
											"end": 13267,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13260,
											"end": 13263,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13256,
											"end": 13268,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13249,
											"end": 13268,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13249,
											"end": 13268,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 13274,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 13274,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 13274,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 13274,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13280,
											"end": 13398,
											"name": "tag",
											"source": 1,
											"value": "782"
										},
										{
											"begin": 13280,
											"end": 13398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13367,
											"end": 13391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "784"
										},
										{
											"begin": 13385,
											"end": 13390,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13367,
											"end": 13391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "785"
										},
										{
											"begin": 13367,
											"end": 13391,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13367,
											"end": 13391,
											"name": "tag",
											"source": 1,
											"value": "784"
										},
										{
											"begin": 13367,
											"end": 13391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13362,
											"end": 13365,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13355,
											"end": 13392,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13280,
											"end": 13398,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13280,
											"end": 13398,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13280,
											"end": 13398,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13404,
											"end": 13675,
											"name": "tag",
											"source": 1,
											"value": "575"
										},
										{
											"begin": 13404,
											"end": 13675,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13534,
											"end": 13537,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13556,
											"end": 13649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "787"
										},
										{
											"begin": 13645,
											"end": 13648,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13636,
											"end": 13642,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "678"
										},
										{
											"begin": 13556,
											"end": 13649,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13556,
											"end": 13649,
											"name": "tag",
											"source": 1,
											"value": "787"
										},
										{
											"begin": 13556,
											"end": 13649,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13549,
											"end": 13649,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13549,
											"end": 13649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13666,
											"end": 13669,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13659,
											"end": 13669,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13659,
											"end": 13669,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13404,
											"end": 13675,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13404,
											"end": 13675,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13404,
											"end": 13675,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13404,
											"end": 13675,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13404,
											"end": 13675,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13681,
											"end": 13903,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 13681,
											"end": 13903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13774,
											"end": 13778,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13812,
											"end": 13814,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13801,
											"end": 13810,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13797,
											"end": 13815,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13789,
											"end": 13815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13789,
											"end": 13815,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13825,
											"end": 13896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "789"
										},
										{
											"begin": 13893,
											"end": 13894,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13882,
											"end": 13891,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13878,
											"end": 13895,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13869,
											"end": 13875,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13825,
											"end": 13896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "674"
										},
										{
											"begin": 13825,
											"end": 13896,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13825,
											"end": 13896,
											"name": "tag",
											"source": 1,
											"value": "789"
										},
										{
											"begin": 13825,
											"end": 13896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13681,
											"end": 13903,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13681,
											"end": 13903,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13681,
											"end": 13903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13681,
											"end": 13903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13681,
											"end": 13903,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13909,
											"end": 14241,
											"name": "tag",
											"source": 1,
											"value": "532"
										},
										{
											"begin": 13909,
											"end": 14241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14030,
											"end": 14034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14068,
											"end": 14070,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14057,
											"end": 14066,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14053,
											"end": 14071,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14071,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14071,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14081,
											"end": 14152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "791"
										},
										{
											"begin": 14149,
											"end": 14150,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14138,
											"end": 14147,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14134,
											"end": 14151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14131,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14081,
											"end": 14152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "674"
										},
										{
											"begin": 14081,
											"end": 14152,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14081,
											"end": 14152,
											"name": "tag",
											"source": 1,
											"value": "791"
										},
										{
											"begin": 14081,
											"end": 14152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14162,
											"end": 14234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "792"
										},
										{
											"begin": 14230,
											"end": 14232,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14219,
											"end": 14228,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14215,
											"end": 14233,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14206,
											"end": 14212,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14162,
											"end": 14234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "674"
										},
										{
											"begin": 14162,
											"end": 14234,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14162,
											"end": 14234,
											"name": "tag",
											"source": 1,
											"value": "792"
										},
										{
											"begin": 14162,
											"end": 14234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13909,
											"end": 14241,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 13909,
											"end": 14241,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13909,
											"end": 14241,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13909,
											"end": 14241,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13909,
											"end": 14241,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13909,
											"end": 14241,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14247,
											"end": 14689,
											"name": "tag",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 14247,
											"end": 14689,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14396,
											"end": 14400,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14434,
											"end": 14436,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14423,
											"end": 14432,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14419,
											"end": 14437,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14411,
											"end": 14437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14411,
											"end": 14437,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14447,
											"end": 14518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "794"
										},
										{
											"begin": 14515,
											"end": 14516,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14504,
											"end": 14513,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14500,
											"end": 14517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14491,
											"end": 14497,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14447,
											"end": 14518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "674"
										},
										{
											"begin": 14447,
											"end": 14518,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14447,
											"end": 14518,
											"name": "tag",
											"source": 1,
											"value": "794"
										},
										{
											"begin": 14447,
											"end": 14518,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14528,
											"end": 14600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "795"
										},
										{
											"begin": 14596,
											"end": 14598,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14585,
											"end": 14594,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14581,
											"end": 14599,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14572,
											"end": 14578,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14528,
											"end": 14600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "674"
										},
										{
											"begin": 14528,
											"end": 14600,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14528,
											"end": 14600,
											"name": "tag",
											"source": 1,
											"value": "795"
										},
										{
											"begin": 14528,
											"end": 14600,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14610,
											"end": 14682,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "796"
										},
										{
											"begin": 14678,
											"end": 14680,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14667,
											"end": 14676,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14663,
											"end": 14681,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14654,
											"end": 14660,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14610,
											"end": 14682,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "782"
										},
										{
											"begin": 14610,
											"end": 14682,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14610,
											"end": 14682,
											"name": "tag",
											"source": 1,
											"value": "796"
										},
										{
											"begin": 14610,
											"end": 14682,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14247,
											"end": 14689,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 14247,
											"end": 14689,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14247,
											"end": 14689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14247,
											"end": 14689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14247,
											"end": 14689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14247,
											"end": 14689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14247,
											"end": 14689,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14695,
											"end": 15027,
											"name": "tag",
											"source": 1,
											"value": "523"
										},
										{
											"begin": 14695,
											"end": 15027,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14816,
											"end": 14820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14854,
											"end": 14856,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14843,
											"end": 14852,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14839,
											"end": 14857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14831,
											"end": 14857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14831,
											"end": 14857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14867,
											"end": 14938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "798"
										},
										{
											"begin": 14935,
											"end": 14936,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14924,
											"end": 14933,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14920,
											"end": 14937,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14911,
											"end": 14917,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14867,
											"end": 14938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "674"
										},
										{
											"begin": 14867,
											"end": 14938,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14867,
											"end": 14938,
											"name": "tag",
											"source": 1,
											"value": "798"
										},
										{
											"begin": 14867,
											"end": 14938,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14948,
											"end": 15020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "799"
										},
										{
											"begin": 15016,
											"end": 15018,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15005,
											"end": 15014,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15001,
											"end": 15019,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14992,
											"end": 14998,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14948,
											"end": 15020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "782"
										},
										{
											"begin": 14948,
											"end": 15020,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14948,
											"end": 15020,
											"name": "tag",
											"source": 1,
											"value": "799"
										},
										{
											"begin": 14948,
											"end": 15020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14695,
											"end": 15027,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14695,
											"end": 15027,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14695,
											"end": 15027,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14695,
											"end": 15027,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14695,
											"end": 15027,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14695,
											"end": 15027,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15033,
											"end": 15283,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 15033,
											"end": 15283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15140,
											"end": 15144,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15178,
											"end": 15180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15167,
											"end": 15176,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15163,
											"end": 15181,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15155,
											"end": 15181,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15155,
											"end": 15181,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15191,
											"end": 15276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "801"
										},
										{
											"begin": 15273,
											"end": 15274,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15262,
											"end": 15271,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15258,
											"end": 15275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15249,
											"end": 15255,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15191,
											"end": 15276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "686"
										},
										{
											"begin": 15191,
											"end": 15276,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15191,
											"end": 15276,
											"name": "tag",
											"source": 1,
											"value": "801"
										},
										{
											"begin": 15191,
											"end": 15276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15033,
											"end": 15283,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15033,
											"end": 15283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15033,
											"end": 15283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15033,
											"end": 15283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15033,
											"end": 15283,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15289,
											"end": 15870,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 15289,
											"end": 15870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15480,
											"end": 15484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15518,
											"end": 15521,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 15507,
											"end": 15516,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15503,
											"end": 15522,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15495,
											"end": 15522,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15495,
											"end": 15522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15532,
											"end": 15617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "803"
										},
										{
											"begin": 15614,
											"end": 15615,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15603,
											"end": 15612,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15599,
											"end": 15616,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15590,
											"end": 15596,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 15532,
											"end": 15617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "686"
										},
										{
											"begin": 15532,
											"end": 15617,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15532,
											"end": 15617,
											"name": "tag",
											"source": 1,
											"value": "803"
										},
										{
											"begin": 15532,
											"end": 15617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15627,
											"end": 15699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "804"
										},
										{
											"begin": 15695,
											"end": 15697,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15684,
											"end": 15693,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15680,
											"end": 15698,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15671,
											"end": 15677,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15627,
											"end": 15699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "782"
										},
										{
											"begin": 15627,
											"end": 15699,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15627,
											"end": 15699,
											"name": "tag",
											"source": 1,
											"value": "804"
										},
										{
											"begin": 15627,
											"end": 15699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15709,
											"end": 15781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "805"
										},
										{
											"begin": 15777,
											"end": 15779,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15766,
											"end": 15775,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15762,
											"end": 15780,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15753,
											"end": 15759,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15709,
											"end": 15781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "782"
										},
										{
											"begin": 15709,
											"end": 15781,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15709,
											"end": 15781,
											"name": "tag",
											"source": 1,
											"value": "805"
										},
										{
											"begin": 15709,
											"end": 15781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15791,
											"end": 15863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "806"
										},
										{
											"begin": 15859,
											"end": 15861,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 15848,
											"end": 15857,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15844,
											"end": 15862,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15835,
											"end": 15841,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15791,
											"end": 15863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "782"
										},
										{
											"begin": 15791,
											"end": 15863,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15791,
											"end": 15863,
											"name": "tag",
											"source": 1,
											"value": "806"
										},
										{
											"begin": 15791,
											"end": 15863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15289,
											"end": 15870,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 15289,
											"end": 15870,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 15289,
											"end": 15870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15289,
											"end": 15870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15289,
											"end": 15870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15289,
											"end": 15870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15289,
											"end": 15870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15289,
											"end": 15870,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15876,
											"end": 16238,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 15876,
											"end": 16238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16012,
											"end": 16016,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16050,
											"end": 16052,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16039,
											"end": 16048,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16035,
											"end": 16053,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16027,
											"end": 16053,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16027,
											"end": 16053,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16063,
											"end": 16149,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "808"
										},
										{
											"begin": 16146,
											"end": 16147,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16135,
											"end": 16144,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16131,
											"end": 16148,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16122,
											"end": 16128,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16063,
											"end": 16149,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "690"
										},
										{
											"begin": 16063,
											"end": 16149,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16063,
											"end": 16149,
											"name": "tag",
											"source": 1,
											"value": "808"
										},
										{
											"begin": 16063,
											"end": 16149,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16159,
											"end": 16231,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "809"
										},
										{
											"begin": 16227,
											"end": 16229,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16216,
											"end": 16225,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16212,
											"end": 16230,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16203,
											"end": 16209,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16159,
											"end": 16231,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "782"
										},
										{
											"begin": 16159,
											"end": 16231,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16159,
											"end": 16231,
											"name": "tag",
											"source": 1,
											"value": "809"
										},
										{
											"begin": 16159,
											"end": 16231,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15876,
											"end": 16238,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 15876,
											"end": 16238,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15876,
											"end": 16238,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15876,
											"end": 16238,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15876,
											"end": 16238,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15876,
											"end": 16238,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16244,
											"end": 16508,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 16244,
											"end": 16508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16358,
											"end": 16362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16396,
											"end": 16398,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16385,
											"end": 16394,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16381,
											"end": 16399,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16373,
											"end": 16399,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16373,
											"end": 16399,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16409,
											"end": 16501,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "811"
										},
										{
											"begin": 16498,
											"end": 16499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16487,
											"end": 16496,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16483,
											"end": 16500,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16474,
											"end": 16480,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16409,
											"end": 16501,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "694"
										},
										{
											"begin": 16409,
											"end": 16501,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16409,
											"end": 16501,
											"name": "tag",
											"source": 1,
											"value": "811"
										},
										{
											"begin": 16409,
											"end": 16501,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16244,
											"end": 16508,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16244,
											"end": 16508,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16244,
											"end": 16508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16244,
											"end": 16508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16244,
											"end": 16508,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16514,
											"end": 16827,
											"name": "tag",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 16514,
											"end": 16827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16627,
											"end": 16631,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16665,
											"end": 16667,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16654,
											"end": 16663,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16650,
											"end": 16668,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16642,
											"end": 16668,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16642,
											"end": 16668,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16714,
											"end": 16723,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16708,
											"end": 16712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16704,
											"end": 16724,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16700,
											"end": 16701,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16689,
											"end": 16698,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16685,
											"end": 16702,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16678,
											"end": 16725,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16742,
											"end": 16820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "813"
										},
										{
											"begin": 16815,
											"end": 16819,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16806,
											"end": 16812,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16742,
											"end": 16820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "698"
										},
										{
											"begin": 16742,
											"end": 16820,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16742,
											"end": 16820,
											"name": "tag",
											"source": 1,
											"value": "813"
										},
										{
											"begin": 16742,
											"end": 16820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16734,
											"end": 16820,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16734,
											"end": 16820,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16514,
											"end": 16827,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16514,
											"end": 16827,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16514,
											"end": 16827,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16514,
											"end": 16827,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16514,
											"end": 16827,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16833,
											"end": 17252,
											"name": "tag",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 16833,
											"end": 17252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16999,
											"end": 17003,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17037,
											"end": 17039,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17026,
											"end": 17035,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17022,
											"end": 17040,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17014,
											"end": 17040,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17014,
											"end": 17040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17086,
											"end": 17095,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17080,
											"end": 17084,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17076,
											"end": 17096,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17073,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17061,
											"end": 17070,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17057,
											"end": 17074,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17050,
											"end": 17097,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17114,
											"end": 17245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "815"
										},
										{
											"begin": 17240,
											"end": 17244,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17114,
											"end": 17245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "707"
										},
										{
											"begin": 17114,
											"end": 17245,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17114,
											"end": 17245,
											"name": "tag",
											"source": 1,
											"value": "815"
										},
										{
											"begin": 17114,
											"end": 17245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17106,
											"end": 17245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17106,
											"end": 17245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16833,
											"end": 17252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16833,
											"end": 17252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16833,
											"end": 17252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16833,
											"end": 17252,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17258,
											"end": 17677,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 17258,
											"end": 17677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17424,
											"end": 17428,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17462,
											"end": 17464,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17451,
											"end": 17460,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17447,
											"end": 17465,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17439,
											"end": 17465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17439,
											"end": 17465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17511,
											"end": 17520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17505,
											"end": 17509,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17501,
											"end": 17521,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17497,
											"end": 17498,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17486,
											"end": 17495,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17482,
											"end": 17499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17475,
											"end": 17522,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17539,
											"end": 17670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "817"
										},
										{
											"begin": 17665,
											"end": 17669,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17539,
											"end": 17670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "712"
										},
										{
											"begin": 17539,
											"end": 17670,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17539,
											"end": 17670,
											"name": "tag",
											"source": 1,
											"value": "817"
										},
										{
											"begin": 17539,
											"end": 17670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17531,
											"end": 17670,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17531,
											"end": 17670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17258,
											"end": 17677,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17258,
											"end": 17677,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17258,
											"end": 17677,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17258,
											"end": 17677,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17683,
											"end": 18102,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 17683,
											"end": 18102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17849,
											"end": 17853,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17887,
											"end": 17889,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17876,
											"end": 17885,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17872,
											"end": 17890,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17864,
											"end": 17890,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17864,
											"end": 17890,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17936,
											"end": 17945,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17930,
											"end": 17934,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17926,
											"end": 17946,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17922,
											"end": 17923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17911,
											"end": 17920,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17907,
											"end": 17924,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17900,
											"end": 17947,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17964,
											"end": 18095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "819"
										},
										{
											"begin": 18090,
											"end": 18094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17964,
											"end": 18095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "717"
										},
										{
											"begin": 17964,
											"end": 18095,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17964,
											"end": 18095,
											"name": "tag",
											"source": 1,
											"value": "819"
										},
										{
											"begin": 17964,
											"end": 18095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17956,
											"end": 18095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17956,
											"end": 18095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17683,
											"end": 18102,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17683,
											"end": 18102,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17683,
											"end": 18102,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17683,
											"end": 18102,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18108,
											"end": 18527,
											"name": "tag",
											"source": 1,
											"value": "519"
										},
										{
											"begin": 18108,
											"end": 18527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18274,
											"end": 18278,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18312,
											"end": 18314,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18301,
											"end": 18310,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18297,
											"end": 18315,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18289,
											"end": 18315,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18289,
											"end": 18315,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18361,
											"end": 18370,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18355,
											"end": 18359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18351,
											"end": 18371,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18347,
											"end": 18348,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18336,
											"end": 18345,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18332,
											"end": 18349,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18325,
											"end": 18372,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18389,
											"end": 18520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "821"
										},
										{
											"begin": 18515,
											"end": 18519,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18389,
											"end": 18520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "722"
										},
										{
											"begin": 18389,
											"end": 18520,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18389,
											"end": 18520,
											"name": "tag",
											"source": 1,
											"value": "821"
										},
										{
											"begin": 18389,
											"end": 18520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18381,
											"end": 18520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18381,
											"end": 18520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18108,
											"end": 18527,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18108,
											"end": 18527,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18108,
											"end": 18527,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18108,
											"end": 18527,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18533,
											"end": 18952,
											"name": "tag",
											"source": 1,
											"value": "568"
										},
										{
											"begin": 18533,
											"end": 18952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18699,
											"end": 18703,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18737,
											"end": 18739,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18726,
											"end": 18735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18722,
											"end": 18740,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18714,
											"end": 18740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18714,
											"end": 18740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18786,
											"end": 18795,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18780,
											"end": 18784,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18776,
											"end": 18796,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18772,
											"end": 18773,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18761,
											"end": 18770,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18757,
											"end": 18774,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18750,
											"end": 18797,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18814,
											"end": 18945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "823"
										},
										{
											"begin": 18940,
											"end": 18944,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18814,
											"end": 18945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "727"
										},
										{
											"begin": 18814,
											"end": 18945,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18814,
											"end": 18945,
											"name": "tag",
											"source": 1,
											"value": "823"
										},
										{
											"begin": 18814,
											"end": 18945,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18806,
											"end": 18945,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18806,
											"end": 18945,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18533,
											"end": 18952,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18533,
											"end": 18952,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18533,
											"end": 18952,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18533,
											"end": 18952,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18958,
											"end": 19377,
											"name": "tag",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 18958,
											"end": 19377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19124,
											"end": 19128,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19162,
											"end": 19164,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19151,
											"end": 19160,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19147,
											"end": 19165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19139,
											"end": 19165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19139,
											"end": 19165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19211,
											"end": 19220,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19205,
											"end": 19209,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19201,
											"end": 19221,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19197,
											"end": 19198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19186,
											"end": 19195,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19182,
											"end": 19199,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19175,
											"end": 19222,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19239,
											"end": 19370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "825"
										},
										{
											"begin": 19365,
											"end": 19369,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19239,
											"end": 19370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "732"
										},
										{
											"begin": 19239,
											"end": 19370,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19239,
											"end": 19370,
											"name": "tag",
											"source": 1,
											"value": "825"
										},
										{
											"begin": 19239,
											"end": 19370,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19231,
											"end": 19370,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19231,
											"end": 19370,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18958,
											"end": 19377,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18958,
											"end": 19377,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18958,
											"end": 19377,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18958,
											"end": 19377,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19383,
											"end": 19802,
											"name": "tag",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 19383,
											"end": 19802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19549,
											"end": 19553,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19587,
											"end": 19589,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19576,
											"end": 19585,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19572,
											"end": 19590,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19564,
											"end": 19590,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19564,
											"end": 19590,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19636,
											"end": 19645,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19630,
											"end": 19634,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19626,
											"end": 19646,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19622,
											"end": 19623,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19611,
											"end": 19620,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19607,
											"end": 19624,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19600,
											"end": 19647,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19664,
											"end": 19795,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "827"
										},
										{
											"begin": 19790,
											"end": 19794,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19664,
											"end": 19795,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "737"
										},
										{
											"begin": 19664,
											"end": 19795,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19664,
											"end": 19795,
											"name": "tag",
											"source": 1,
											"value": "827"
										},
										{
											"begin": 19664,
											"end": 19795,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19656,
											"end": 19795,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19656,
											"end": 19795,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19383,
											"end": 19802,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19383,
											"end": 19802,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19383,
											"end": 19802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19383,
											"end": 19802,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19808,
											"end": 20227,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 19808,
											"end": 20227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19974,
											"end": 19978,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20012,
											"end": 20014,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20001,
											"end": 20010,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19997,
											"end": 20015,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19989,
											"end": 20015,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19989,
											"end": 20015,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20061,
											"end": 20070,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20055,
											"end": 20059,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20051,
											"end": 20071,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20047,
											"end": 20048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20036,
											"end": 20045,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20032,
											"end": 20049,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20025,
											"end": 20072,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20089,
											"end": 20220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "829"
										},
										{
											"begin": 20215,
											"end": 20219,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20089,
											"end": 20220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "742"
										},
										{
											"begin": 20089,
											"end": 20220,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20089,
											"end": 20220,
											"name": "tag",
											"source": 1,
											"value": "829"
										},
										{
											"begin": 20089,
											"end": 20220,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20081,
											"end": 20220,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20081,
											"end": 20220,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19808,
											"end": 20227,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19808,
											"end": 20227,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19808,
											"end": 20227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19808,
											"end": 20227,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20233,
											"end": 20652,
											"name": "tag",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 20233,
											"end": 20652,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20399,
											"end": 20403,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20437,
											"end": 20439,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20426,
											"end": 20435,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20422,
											"end": 20440,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20414,
											"end": 20440,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20414,
											"end": 20440,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20486,
											"end": 20495,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20480,
											"end": 20484,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20476,
											"end": 20496,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20472,
											"end": 20473,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20461,
											"end": 20470,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20457,
											"end": 20474,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20450,
											"end": 20497,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20514,
											"end": 20645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "831"
										},
										{
											"begin": 20640,
											"end": 20644,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20514,
											"end": 20645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "747"
										},
										{
											"begin": 20514,
											"end": 20645,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20514,
											"end": 20645,
											"name": "tag",
											"source": 1,
											"value": "831"
										},
										{
											"begin": 20514,
											"end": 20645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20506,
											"end": 20645,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20506,
											"end": 20645,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20233,
											"end": 20652,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20233,
											"end": 20652,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20233,
											"end": 20652,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20233,
											"end": 20652,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20658,
											"end": 21077,
											"name": "tag",
											"source": 1,
											"value": "573"
										},
										{
											"begin": 20658,
											"end": 21077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20824,
											"end": 20828,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20862,
											"end": 20864,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20851,
											"end": 20860,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20847,
											"end": 20865,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20839,
											"end": 20865,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20839,
											"end": 20865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20911,
											"end": 20920,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20905,
											"end": 20909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20901,
											"end": 20921,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20897,
											"end": 20898,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20886,
											"end": 20895,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20882,
											"end": 20899,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20875,
											"end": 20922,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20939,
											"end": 21070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "833"
										},
										{
											"begin": 21065,
											"end": 21069,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20939,
											"end": 21070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "752"
										},
										{
											"begin": 20939,
											"end": 21070,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20939,
											"end": 21070,
											"name": "tag",
											"source": 1,
											"value": "833"
										},
										{
											"begin": 20939,
											"end": 21070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20931,
											"end": 21070,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20931,
											"end": 21070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20658,
											"end": 21077,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20658,
											"end": 21077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20658,
											"end": 21077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20658,
											"end": 21077,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 21083,
											"end": 21502,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 21083,
											"end": 21502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21249,
											"end": 21253,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21287,
											"end": 21289,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21276,
											"end": 21285,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21272,
											"end": 21290,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21264,
											"end": 21290,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21264,
											"end": 21290,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21336,
											"end": 21345,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21330,
											"end": 21334,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21326,
											"end": 21346,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 21322,
											"end": 21323,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21311,
											"end": 21320,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21307,
											"end": 21324,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21300,
											"end": 21347,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21364,
											"end": 21495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "835"
										},
										{
											"begin": 21490,
											"end": 21494,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21364,
											"end": 21495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "757"
										},
										{
											"begin": 21364,
											"end": 21495,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 21364,
											"end": 21495,
											"name": "tag",
											"source": 1,
											"value": "835"
										},
										{
											"begin": 21364,
											"end": 21495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21356,
											"end": 21495,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21356,
											"end": 21495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21083,
											"end": 21502,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21083,
											"end": 21502,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21083,
											"end": 21502,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21083,
											"end": 21502,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 21508,
											"end": 21927,
											"name": "tag",
											"source": 1,
											"value": "561"
										},
										{
											"begin": 21508,
											"end": 21927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21674,
											"end": 21678,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21712,
											"end": 21714,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21701,
											"end": 21710,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21697,
											"end": 21715,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21689,
											"end": 21715,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21689,
											"end": 21715,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21761,
											"end": 21770,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21755,
											"end": 21759,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21751,
											"end": 21771,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 21747,
											"end": 21748,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21736,
											"end": 21745,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21732,
											"end": 21749,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21725,
											"end": 21772,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21789,
											"end": 21920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "837"
										},
										{
											"begin": 21915,
											"end": 21919,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21789,
											"end": 21920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "762"
										},
										{
											"begin": 21789,
											"end": 21920,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 21789,
											"end": 21920,
											"name": "tag",
											"source": 1,
											"value": "837"
										},
										{
											"begin": 21789,
											"end": 21920,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21781,
											"end": 21920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21781,
											"end": 21920,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21508,
											"end": 21927,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21508,
											"end": 21927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21508,
											"end": 21927,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21508,
											"end": 21927,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 21933,
											"end": 22352,
											"name": "tag",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 21933,
											"end": 22352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22099,
											"end": 22103,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22137,
											"end": 22139,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22126,
											"end": 22135,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22122,
											"end": 22140,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22114,
											"end": 22140,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22114,
											"end": 22140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22186,
											"end": 22195,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22180,
											"end": 22184,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22176,
											"end": 22196,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22172,
											"end": 22173,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22161,
											"end": 22170,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22157,
											"end": 22174,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22150,
											"end": 22197,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22214,
											"end": 22345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "839"
										},
										{
											"begin": 22340,
											"end": 22344,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22214,
											"end": 22345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "767"
										},
										{
											"begin": 22214,
											"end": 22345,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22214,
											"end": 22345,
											"name": "tag",
											"source": 1,
											"value": "839"
										},
										{
											"begin": 22214,
											"end": 22345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22206,
											"end": 22345,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22206,
											"end": 22345,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21933,
											"end": 22352,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21933,
											"end": 22352,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21933,
											"end": 22352,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21933,
											"end": 22352,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 22358,
											"end": 22777,
											"name": "tag",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 22358,
											"end": 22777,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22524,
											"end": 22528,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22562,
											"end": 22564,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22551,
											"end": 22560,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22547,
											"end": 22565,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22539,
											"end": 22565,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22539,
											"end": 22565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22611,
											"end": 22620,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22605,
											"end": 22609,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22601,
											"end": 22621,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22597,
											"end": 22598,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22586,
											"end": 22595,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22582,
											"end": 22599,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22575,
											"end": 22622,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22639,
											"end": 22770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "841"
										},
										{
											"begin": 22765,
											"end": 22769,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22639,
											"end": 22770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "772"
										},
										{
											"begin": 22639,
											"end": 22770,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22639,
											"end": 22770,
											"name": "tag",
											"source": 1,
											"value": "841"
										},
										{
											"begin": 22639,
											"end": 22770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22631,
											"end": 22770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22631,
											"end": 22770,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22358,
											"end": 22777,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22358,
											"end": 22777,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22358,
											"end": 22777,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22358,
											"end": 22777,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 22783,
											"end": 23202,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 22783,
											"end": 23202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22949,
											"end": 22953,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22987,
											"end": 22989,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22976,
											"end": 22985,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22972,
											"end": 22990,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22964,
											"end": 22990,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22964,
											"end": 22990,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23036,
											"end": 23045,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23030,
											"end": 23034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23026,
											"end": 23046,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23022,
											"end": 23023,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23011,
											"end": 23020,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23007,
											"end": 23024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23000,
											"end": 23047,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23064,
											"end": 23195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "843"
										},
										{
											"begin": 23190,
											"end": 23194,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23064,
											"end": 23195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "777"
										},
										{
											"begin": 23064,
											"end": 23195,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23064,
											"end": 23195,
											"name": "tag",
											"source": 1,
											"value": "843"
										},
										{
											"begin": 23064,
											"end": 23195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23056,
											"end": 23195,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23056,
											"end": 23195,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22783,
											"end": 23202,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22783,
											"end": 23202,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22783,
											"end": 23202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22783,
											"end": 23202,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23208,
											"end": 23430,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 23208,
											"end": 23430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23301,
											"end": 23305,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23339,
											"end": 23341,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23328,
											"end": 23337,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23324,
											"end": 23342,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23316,
											"end": 23342,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23316,
											"end": 23342,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23352,
											"end": 23423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "845"
										},
										{
											"begin": 23420,
											"end": 23421,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23409,
											"end": 23418,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23405,
											"end": 23422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23396,
											"end": 23402,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 23352,
											"end": 23423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "782"
										},
										{
											"begin": 23352,
											"end": 23423,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23352,
											"end": 23423,
											"name": "tag",
											"source": 1,
											"value": "845"
										},
										{
											"begin": 23352,
											"end": 23423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23208,
											"end": 23430,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 23208,
											"end": 23430,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23208,
											"end": 23430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23208,
											"end": 23430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23208,
											"end": 23430,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23436,
											"end": 23768,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 23436,
											"end": 23768,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23557,
											"end": 23561,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23595,
											"end": 23597,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23584,
											"end": 23593,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23580,
											"end": 23598,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23572,
											"end": 23598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23572,
											"end": 23598,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23608,
											"end": 23679,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "847"
										},
										{
											"begin": 23676,
											"end": 23677,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23665,
											"end": 23674,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23661,
											"end": 23678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23652,
											"end": 23658,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 23608,
											"end": 23679,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "782"
										},
										{
											"begin": 23608,
											"end": 23679,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23608,
											"end": 23679,
											"name": "tag",
											"source": 1,
											"value": "847"
										},
										{
											"begin": 23608,
											"end": 23679,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23689,
											"end": 23761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "848"
										},
										{
											"begin": 23757,
											"end": 23759,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23746,
											"end": 23755,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23742,
											"end": 23760,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23733,
											"end": 23739,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 23689,
											"end": 23761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "782"
										},
										{
											"begin": 23689,
											"end": 23761,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23689,
											"end": 23761,
											"name": "tag",
											"source": 1,
											"value": "848"
										},
										{
											"begin": 23689,
											"end": 23761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23436,
											"end": 23768,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 23436,
											"end": 23768,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 23436,
											"end": 23768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23436,
											"end": 23768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23436,
											"end": 23768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23436,
											"end": 23768,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23855,
											"end": 23953,
											"name": "tag",
											"source": 1,
											"value": "681"
										},
										{
											"begin": 23855,
											"end": 23953,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23906,
											"end": 23912,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23940,
											"end": 23945,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23934,
											"end": 23946,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 23924,
											"end": 23946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23924,
											"end": 23946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23855,
											"end": 23953,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23855,
											"end": 23953,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23855,
											"end": 23953,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23855,
											"end": 23953,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23959,
											"end": 24058,
											"name": "tag",
											"source": 1,
											"value": "701"
										},
										{
											"begin": 23959,
											"end": 24058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24011,
											"end": 24017,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24045,
											"end": 24050,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24039,
											"end": 24051,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 24029,
											"end": 24051,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24029,
											"end": 24051,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23959,
											"end": 24058,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23959,
											"end": 24058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23959,
											"end": 24058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23959,
											"end": 24058,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 24064,
											"end": 24211,
											"name": "tag",
											"source": 1,
											"value": "683"
										},
										{
											"begin": 24064,
											"end": 24211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24165,
											"end": 24176,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24202,
											"end": 24205,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24187,
											"end": 24205,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24187,
											"end": 24205,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24211,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24211,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24211,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 24217,
											"end": 24386,
											"name": "tag",
											"source": 1,
											"value": "703"
										},
										{
											"begin": 24217,
											"end": 24386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24301,
											"end": 24312,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24335,
											"end": 24341,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24330,
											"end": 24333,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24323,
											"end": 24342,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24375,
											"end": 24379,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24370,
											"end": 24373,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24366,
											"end": 24380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24351,
											"end": 24380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24351,
											"end": 24380,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24217,
											"end": 24386,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24217,
											"end": 24386,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24217,
											"end": 24386,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24217,
											"end": 24386,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24217,
											"end": 24386,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 24392,
											"end": 24697,
											"name": "tag",
											"source": 1,
											"value": "516"
										},
										{
											"begin": 24392,
											"end": 24697,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24432,
											"end": 24435,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24451,
											"end": 24471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "856"
										},
										{
											"begin": 24469,
											"end": 24470,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24451,
											"end": 24471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "785"
										},
										{
											"begin": 24451,
											"end": 24471,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24451,
											"end": 24471,
											"name": "tag",
											"source": 1,
											"value": "856"
										},
										{
											"begin": 24451,
											"end": 24471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24446,
											"end": 24471,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24446,
											"end": 24471,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24485,
											"end": 24505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "857"
										},
										{
											"begin": 24503,
											"end": 24504,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24485,
											"end": 24505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "785"
										},
										{
											"begin": 24485,
											"end": 24505,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24485,
											"end": 24505,
											"name": "tag",
											"source": 1,
											"value": "857"
										},
										{
											"begin": 24485,
											"end": 24505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24480,
											"end": 24505,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24480,
											"end": 24505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24639,
											"end": 24640,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24571,
											"end": 24637,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24567,
											"end": 24641,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 24564,
											"end": 24565,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24561,
											"end": 24642,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 24558,
											"end": 24665,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 24558,
											"end": 24665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "858"
										},
										{
											"begin": 24558,
											"end": 24665,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24645,
											"end": 24663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "859"
										},
										{
											"begin": 24645,
											"end": 24663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "860"
										},
										{
											"begin": 24645,
											"end": 24663,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24645,
											"end": 24663,
											"name": "tag",
											"source": 1,
											"value": "859"
										},
										{
											"begin": 24645,
											"end": 24663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24558,
											"end": 24665,
											"name": "tag",
											"source": 1,
											"value": "858"
										},
										{
											"begin": 24558,
											"end": 24665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24689,
											"end": 24690,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24686,
											"end": 24687,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24682,
											"end": 24691,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24675,
											"end": 24691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24675,
											"end": 24691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24392,
											"end": 24697,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24392,
											"end": 24697,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24392,
											"end": 24697,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24392,
											"end": 24697,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24392,
											"end": 24697,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 24703,
											"end": 24888,
											"name": "tag",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 24703,
											"end": 24888,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24743,
											"end": 24744,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24760,
											"end": 24780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "862"
										},
										{
											"begin": 24778,
											"end": 24779,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24760,
											"end": 24780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "785"
										},
										{
											"begin": 24760,
											"end": 24780,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24760,
											"end": 24780,
											"name": "tag",
											"source": 1,
											"value": "862"
										},
										{
											"begin": 24760,
											"end": 24780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24755,
											"end": 24780,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24755,
											"end": 24780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24794,
											"end": 24814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "863"
										},
										{
											"begin": 24812,
											"end": 24813,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24794,
											"end": 24814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "785"
										},
										{
											"begin": 24794,
											"end": 24814,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24794,
											"end": 24814,
											"name": "tag",
											"source": 1,
											"value": "863"
										},
										{
											"begin": 24794,
											"end": 24814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24789,
											"end": 24814,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24789,
											"end": 24814,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24833,
											"end": 24834,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24823,
											"end": 24858,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "864"
										},
										{
											"begin": 24823,
											"end": 24858,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24838,
											"end": 24856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "865"
										},
										{
											"begin": 24838,
											"end": 24856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "866"
										},
										{
											"begin": 24838,
											"end": 24856,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24838,
											"end": 24856,
											"name": "tag",
											"source": 1,
											"value": "865"
										},
										{
											"begin": 24838,
											"end": 24856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24823,
											"end": 24858,
											"name": "tag",
											"source": 1,
											"value": "864"
										},
										{
											"begin": 24823,
											"end": 24858,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24880,
											"end": 24881,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24877,
											"end": 24878,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24873,
											"end": 24882,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 24868,
											"end": 24882,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24868,
											"end": 24882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24703,
											"end": 24888,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24703,
											"end": 24888,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24703,
											"end": 24888,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24703,
											"end": 24888,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24703,
											"end": 24888,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 24894,
											"end": 25242,
											"name": "tag",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 24894,
											"end": 25242,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24934,
											"end": 24941,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24957,
											"end": 24977,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "868"
										},
										{
											"begin": 24975,
											"end": 24976,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24957,
											"end": 24977,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "785"
										},
										{
											"begin": 24957,
											"end": 24977,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24957,
											"end": 24977,
											"name": "tag",
											"source": 1,
											"value": "868"
										},
										{
											"begin": 24957,
											"end": 24977,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24952,
											"end": 24977,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24952,
											"end": 24977,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24991,
											"end": 25011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "869"
										},
										{
											"begin": 25009,
											"end": 25010,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24991,
											"end": 25011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "785"
										},
										{
											"begin": 24991,
											"end": 25011,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24991,
											"end": 25011,
											"name": "tag",
											"source": 1,
											"value": "869"
										},
										{
											"begin": 24991,
											"end": 25011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24986,
											"end": 25011,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24986,
											"end": 25011,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25179,
											"end": 25180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25111,
											"end": 25177,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25107,
											"end": 25181,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 25104,
											"end": 25105,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 25101,
											"end": 25182,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 25096,
											"end": 25097,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25089,
											"end": 25098,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 25082,
											"end": 25099,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 25078,
											"end": 25183,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25075,
											"end": 25206,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 25075,
											"end": 25206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "870"
										},
										{
											"begin": 25075,
											"end": 25206,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 25186,
											"end": 25204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "871"
										},
										{
											"begin": 25186,
											"end": 25204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "860"
										},
										{
											"begin": 25186,
											"end": 25204,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 25186,
											"end": 25204,
											"name": "tag",
											"source": 1,
											"value": "871"
										},
										{
											"begin": 25186,
											"end": 25204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25075,
											"end": 25206,
											"name": "tag",
											"source": 1,
											"value": "870"
										},
										{
											"begin": 25075,
											"end": 25206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25234,
											"end": 25235,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25231,
											"end": 25232,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25227,
											"end": 25236,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 25216,
											"end": 25236,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25216,
											"end": 25236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24894,
											"end": 25242,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24894,
											"end": 25242,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24894,
											"end": 25242,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24894,
											"end": 25242,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24894,
											"end": 25242,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 25248,
											"end": 25439,
											"name": "tag",
											"source": 1,
											"value": "552"
										},
										{
											"begin": 25248,
											"end": 25439,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25288,
											"end": 25292,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25308,
											"end": 25328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "873"
										},
										{
											"begin": 25326,
											"end": 25327,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25308,
											"end": 25328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "785"
										},
										{
											"begin": 25308,
											"end": 25328,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 25308,
											"end": 25328,
											"name": "tag",
											"source": 1,
											"value": "873"
										},
										{
											"begin": 25308,
											"end": 25328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25303,
											"end": 25328,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25303,
											"end": 25328,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25342,
											"end": 25362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "874"
										},
										{
											"begin": 25360,
											"end": 25361,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 25342,
											"end": 25362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "785"
										},
										{
											"begin": 25342,
											"end": 25362,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 25342,
											"end": 25362,
											"name": "tag",
											"source": 1,
											"value": "874"
										},
										{
											"begin": 25342,
											"end": 25362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25337,
											"end": 25362,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 25337,
											"end": 25362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25381,
											"end": 25382,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25378,
											"end": 25379,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25375,
											"end": 25383,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 25372,
											"end": 25406,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 25372,
											"end": 25406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "875"
										},
										{
											"begin": 25372,
											"end": 25406,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 25386,
											"end": 25404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "876"
										},
										{
											"begin": 25386,
											"end": 25404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "860"
										},
										{
											"begin": 25386,
											"end": 25404,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 25386,
											"end": 25404,
											"name": "tag",
											"source": 1,
											"value": "876"
										},
										{
											"begin": 25386,
											"end": 25404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25372,
											"end": 25406,
											"name": "tag",
											"source": 1,
											"value": "875"
										},
										{
											"begin": 25372,
											"end": 25406,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25431,
											"end": 25432,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25428,
											"end": 25429,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25424,
											"end": 25433,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 25416,
											"end": 25433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25416,
											"end": 25433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25248,
											"end": 25439,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 25248,
											"end": 25439,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25248,
											"end": 25439,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25248,
											"end": 25439,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25248,
											"end": 25439,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 25445,
											"end": 25541,
											"name": "tag",
											"source": 1,
											"value": "677"
										},
										{
											"begin": 25445,
											"end": 25541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25482,
											"end": 25489,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25511,
											"end": 25535,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "878"
										},
										{
											"begin": 25529,
											"end": 25534,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25511,
											"end": 25535,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "879"
										},
										{
											"begin": 25511,
											"end": 25535,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 25511,
											"end": 25535,
											"name": "tag",
											"source": 1,
											"value": "878"
										},
										{
											"begin": 25511,
											"end": 25535,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25500,
											"end": 25535,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25500,
											"end": 25535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25445,
											"end": 25541,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25445,
											"end": 25541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25445,
											"end": 25541,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25445,
											"end": 25541,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 25547,
											"end": 25637,
											"name": "tag",
											"source": 1,
											"value": "880"
										},
										{
											"begin": 25547,
											"end": 25637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25581,
											"end": 25588,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25624,
											"end": 25629,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25617,
											"end": 25630,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 25610,
											"end": 25631,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 25599,
											"end": 25631,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25599,
											"end": 25631,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25547,
											"end": 25637,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25547,
											"end": 25637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25547,
											"end": 25637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25547,
											"end": 25637,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 25643,
											"end": 25753,
											"name": "tag",
											"source": 1,
											"value": "882"
										},
										{
											"begin": 25643,
											"end": 25753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25694,
											"end": 25701,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25723,
											"end": 25747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "884"
										},
										{
											"begin": 25741,
											"end": 25746,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25723,
											"end": 25747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "677"
										},
										{
											"begin": 25723,
											"end": 25747,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 25723,
											"end": 25747,
											"name": "tag",
											"source": 1,
											"value": "884"
										},
										{
											"begin": 25723,
											"end": 25747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25712,
											"end": 25747,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25712,
											"end": 25747,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25643,
											"end": 25753,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25643,
											"end": 25753,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25643,
											"end": 25753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25643,
											"end": 25753,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 25759,
											"end": 25870,
											"name": "tag",
											"source": 1,
											"value": "885"
										},
										{
											"begin": 25759,
											"end": 25870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25811,
											"end": 25818,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25840,
											"end": 25864,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "887"
										},
										{
											"begin": 25858,
											"end": 25863,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25840,
											"end": 25864,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "677"
										},
										{
											"begin": 25840,
											"end": 25864,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 25840,
											"end": 25864,
											"name": "tag",
											"source": 1,
											"value": "887"
										},
										{
											"begin": 25840,
											"end": 25864,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25829,
											"end": 25864,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25829,
											"end": 25864,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25759,
											"end": 25870,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25759,
											"end": 25870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25759,
											"end": 25870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25759,
											"end": 25870,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 25876,
											"end": 25993,
											"name": "tag",
											"source": 1,
											"value": "888"
										},
										{
											"begin": 25876,
											"end": 25993,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25934,
											"end": 25941,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25963,
											"end": 25987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "890"
										},
										{
											"begin": 25981,
											"end": 25986,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25963,
											"end": 25987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "677"
										},
										{
											"begin": 25963,
											"end": 25987,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 25963,
											"end": 25987,
											"name": "tag",
											"source": 1,
											"value": "890"
										},
										{
											"begin": 25963,
											"end": 25987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25952,
											"end": 25987,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25952,
											"end": 25987,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25876,
											"end": 25993,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25876,
											"end": 25993,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25876,
											"end": 25993,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25876,
											"end": 25993,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 25999,
											"end": 26125,
											"name": "tag",
											"source": 1,
											"value": "879"
										},
										{
											"begin": 25999,
											"end": 26125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26036,
											"end": 26043,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26076,
											"end": 26118,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26069,
											"end": 26074,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26065,
											"end": 26119,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 26054,
											"end": 26119,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26054,
											"end": 26119,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25999,
											"end": 26125,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25999,
											"end": 26125,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25999,
											"end": 26125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25999,
											"end": 26125,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 26131,
											"end": 26208,
											"name": "tag",
											"source": 1,
											"value": "785"
										},
										{
											"begin": 26131,
											"end": 26208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26168,
											"end": 26175,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26197,
											"end": 26202,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26186,
											"end": 26202,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26186,
											"end": 26202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26131,
											"end": 26208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26131,
											"end": 26208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26131,
											"end": 26208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26131,
											"end": 26208,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 26214,
											"end": 26354,
											"name": "tag",
											"source": 1,
											"value": "689"
										},
										{
											"begin": 26214,
											"end": 26354,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26278,
											"end": 26287,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26311,
											"end": 26348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "894"
										},
										{
											"begin": 26342,
											"end": 26347,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26311,
											"end": 26348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "895"
										},
										{
											"begin": 26311,
											"end": 26348,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 26311,
											"end": 26348,
											"name": "tag",
											"source": 1,
											"value": "894"
										},
										{
											"begin": 26311,
											"end": 26348,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26298,
											"end": 26348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26298,
											"end": 26348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26214,
											"end": 26354,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26214,
											"end": 26354,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26214,
											"end": 26354,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26214,
											"end": 26354,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 26360,
											"end": 26501,
											"name": "tag",
											"source": 1,
											"value": "693"
										},
										{
											"begin": 26360,
											"end": 26501,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26425,
											"end": 26434,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26458,
											"end": 26495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "897"
										},
										{
											"begin": 26489,
											"end": 26494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26458,
											"end": 26495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "895"
										},
										{
											"begin": 26458,
											"end": 26495,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 26458,
											"end": 26495,
											"name": "tag",
											"source": 1,
											"value": "897"
										},
										{
											"begin": 26458,
											"end": 26495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26445,
											"end": 26495,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26445,
											"end": 26495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26360,
											"end": 26501,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26360,
											"end": 26501,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26360,
											"end": 26501,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26360,
											"end": 26501,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 26507,
											"end": 26654,
											"name": "tag",
											"source": 1,
											"value": "697"
										},
										{
											"begin": 26507,
											"end": 26654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26578,
											"end": 26587,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26611,
											"end": 26648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "899"
										},
										{
											"begin": 26642,
											"end": 26647,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26611,
											"end": 26648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "895"
										},
										{
											"begin": 26611,
											"end": 26648,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 26611,
											"end": 26648,
											"name": "tag",
											"source": 1,
											"value": "899"
										},
										{
											"begin": 26611,
											"end": 26648,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26598,
											"end": 26648,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26598,
											"end": 26648,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26507,
											"end": 26654,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26507,
											"end": 26654,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26507,
											"end": 26654,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26507,
											"end": 26654,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 26660,
											"end": 26786,
											"name": "tag",
											"source": 1,
											"value": "895"
										},
										{
											"begin": 26660,
											"end": 26786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26710,
											"end": 26719,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26743,
											"end": 26780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "901"
										},
										{
											"begin": 26774,
											"end": 26779,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26743,
											"end": 26780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "902"
										},
										{
											"begin": 26743,
											"end": 26780,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 26743,
											"end": 26780,
											"name": "tag",
											"source": 1,
											"value": "901"
										},
										{
											"begin": 26743,
											"end": 26780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26730,
											"end": 26780,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26730,
											"end": 26780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26660,
											"end": 26786,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26660,
											"end": 26786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26660,
											"end": 26786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26660,
											"end": 26786,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 26792,
											"end": 26905,
											"name": "tag",
											"source": 1,
											"value": "902"
										},
										{
											"begin": 26792,
											"end": 26905,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26842,
											"end": 26851,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26875,
											"end": 26899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "904"
										},
										{
											"begin": 26893,
											"end": 26898,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26875,
											"end": 26899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "879"
										},
										{
											"begin": 26875,
											"end": 26899,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 26875,
											"end": 26899,
											"name": "tag",
											"source": 1,
											"value": "904"
										},
										{
											"begin": 26875,
											"end": 26899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26862,
											"end": 26899,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26862,
											"end": 26899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26792,
											"end": 26905,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26792,
											"end": 26905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26792,
											"end": 26905,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26792,
											"end": 26905,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 26911,
											"end": 27218,
											"name": "tag",
											"source": 1,
											"value": "685"
										},
										{
											"begin": 26911,
											"end": 27218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26979,
											"end": 26980,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26989,
											"end": 27102,
											"name": "tag",
											"source": 1,
											"value": "906"
										},
										{
											"begin": 26989,
											"end": 27102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27003,
											"end": 27009,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 27000,
											"end": 27001,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26997,
											"end": 27010,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 26989,
											"end": 27102,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 26989,
											"end": 27102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "908"
										},
										{
											"begin": 26989,
											"end": 27102,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 27088,
											"end": 27089,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27083,
											"end": 27086,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27079,
											"end": 27090,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27073,
											"end": 27091,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27069,
											"end": 27070,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27064,
											"end": 27067,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 27060,
											"end": 27071,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27053,
											"end": 27092,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27025,
											"end": 27027,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27022,
											"end": 27023,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27018,
											"end": 27028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27013,
											"end": 27028,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27013,
											"end": 27028,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26989,
											"end": 27102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "906"
										},
										{
											"begin": 26989,
											"end": 27102,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26989,
											"end": 27102,
											"name": "tag",
											"source": 1,
											"value": "908"
										},
										{
											"begin": 26989,
											"end": 27102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27120,
											"end": 27126,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 27117,
											"end": 27118,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27114,
											"end": 27127,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 27111,
											"end": 27212,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 27111,
											"end": 27212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "909"
										},
										{
											"begin": 27111,
											"end": 27212,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 27200,
											"end": 27201,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27191,
											"end": 27197,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 27186,
											"end": 27189,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 27182,
											"end": 27198,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27175,
											"end": 27202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27111,
											"end": 27212,
											"name": "tag",
											"source": 1,
											"value": "909"
										},
										{
											"begin": 27111,
											"end": 27212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26960,
											"end": 27218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26911,
											"end": 27218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26911,
											"end": 27218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26911,
											"end": 27218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26911,
											"end": 27218,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 27224,
											"end": 27457,
											"name": "tag",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 27224,
											"end": 27457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27263,
											"end": 27266,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27286,
											"end": 27310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "911"
										},
										{
											"begin": 27304,
											"end": 27309,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27286,
											"end": 27310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "785"
										},
										{
											"begin": 27286,
											"end": 27310,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 27286,
											"end": 27310,
											"name": "tag",
											"source": 1,
											"value": "911"
										},
										{
											"begin": 27286,
											"end": 27310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27277,
											"end": 27310,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27277,
											"end": 27310,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27332,
											"end": 27398,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27325,
											"end": 27330,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27322,
											"end": 27399,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 27319,
											"end": 27422,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 27319,
											"end": 27422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "912"
										},
										{
											"begin": 27319,
											"end": 27422,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 27402,
											"end": 27420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "913"
										},
										{
											"begin": 27402,
											"end": 27420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "860"
										},
										{
											"begin": 27402,
											"end": 27420,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 27402,
											"end": 27420,
											"name": "tag",
											"source": 1,
											"value": "913"
										},
										{
											"begin": 27402,
											"end": 27420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27319,
											"end": 27422,
											"name": "tag",
											"source": 1,
											"value": "912"
										},
										{
											"begin": 27319,
											"end": 27422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27449,
											"end": 27450,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 27442,
											"end": 27447,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27438,
											"end": 27451,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27431,
											"end": 27451,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27431,
											"end": 27451,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27224,
											"end": 27457,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27224,
											"end": 27457,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27224,
											"end": 27457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27224,
											"end": 27457,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 27463,
											"end": 27643,
											"name": "tag",
											"source": 1,
											"value": "860"
										},
										{
											"begin": 27463,
											"end": 27643,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27511,
											"end": 27588,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27508,
											"end": 27509,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27501,
											"end": 27589,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27608,
											"end": 27612,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 27605,
											"end": 27606,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 27598,
											"end": 27613,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27632,
											"end": 27636,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 27629,
											"end": 27630,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27622,
											"end": 27637,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 27649,
											"end": 27829,
											"name": "tag",
											"source": 1,
											"value": "866"
										},
										{
											"begin": 27649,
											"end": 27829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27697,
											"end": 27774,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27694,
											"end": 27695,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27687,
											"end": 27775,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27794,
											"end": 27798,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 27791,
											"end": 27792,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 27784,
											"end": 27799,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27818,
											"end": 27822,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 27815,
											"end": 27816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27808,
											"end": 27823,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 27835,
											"end": 28015,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 27835,
											"end": 28015,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27883,
											"end": 27960,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27880,
											"end": 27881,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27873,
											"end": 27961,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27980,
											"end": 27984,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 27977,
											"end": 27978,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 27970,
											"end": 27985,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28004,
											"end": 28008,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 28001,
											"end": 28002,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27994,
											"end": 28009,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 28144,
											"end": 28261,
											"name": "tag",
											"source": 1,
											"value": "625"
										},
										{
											"begin": 28144,
											"end": 28261,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28253,
											"end": 28254,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28250,
											"end": 28251,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28243,
											"end": 28255,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 28267,
											"end": 28369,
											"name": "tag",
											"source": 1,
											"value": "706"
										},
										{
											"begin": 28267,
											"end": 28369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28308,
											"end": 28314,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28359,
											"end": 28361,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 28355,
											"end": 28362,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 28350,
											"end": 28352,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 28343,
											"end": 28348,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 28339,
											"end": 28353,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28335,
											"end": 28363,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28325,
											"end": 28363,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28325,
											"end": 28363,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28267,
											"end": 28369,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28267,
											"end": 28369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28267,
											"end": 28369,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28267,
											"end": 28369,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 28375,
											"end": 28600,
											"name": "tag",
											"source": 1,
											"value": "711"
										},
										{
											"begin": 28375,
											"end": 28600,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28515,
											"end": 28549,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 28511,
											"end": 28512,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28503,
											"end": 28509,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28499,
											"end": 28513,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28492,
											"end": 28550,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28584,
											"end": 28592,
											"name": "PUSH",
											"source": 1,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28579,
											"end": 28581,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28571,
											"end": 28577,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28567,
											"end": 28582,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28560,
											"end": 28593,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28375,
											"end": 28600,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28375,
											"end": 28600,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 28606,
											"end": 28775,
											"name": "tag",
											"source": 1,
											"value": "716"
										},
										{
											"begin": 28606,
											"end": 28775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28746,
											"end": 28767,
											"name": "PUSH",
											"source": 1,
											"value": "506F776572206973206E6F7420656E6F75676800000000000000000000000000"
										},
										{
											"begin": 28742,
											"end": 28743,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28734,
											"end": 28740,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28730,
											"end": 28744,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28723,
											"end": 28768,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28606,
											"end": 28775,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28606,
											"end": 28775,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 28781,
											"end": 28958,
											"name": "tag",
											"source": 1,
											"value": "721"
										},
										{
											"begin": 28781,
											"end": 28958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28921,
											"end": 28950,
											"name": "PUSH",
											"source": 1,
											"value": "776974686472617720506F77657220627920756E7374616B696E670000000000"
										},
										{
											"begin": 28917,
											"end": 28918,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28909,
											"end": 28915,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28905,
											"end": 28919,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28898,
											"end": 28951,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28781,
											"end": 28958,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28781,
											"end": 28958,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 28964,
											"end": 29141,
											"name": "tag",
											"source": 1,
											"value": "726"
										},
										{
											"begin": 28964,
											"end": 29141,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29104,
											"end": 29133,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 29100,
											"end": 29101,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29092,
											"end": 29098,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29088,
											"end": 29102,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29081,
											"end": 29134,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28964,
											"end": 29141,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28964,
											"end": 29141,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 29147,
											"end": 29372,
											"name": "tag",
											"source": 1,
											"value": "731"
										},
										{
											"begin": 29147,
											"end": 29372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29287,
											"end": 29321,
											"name": "PUSH",
											"source": 1,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 29283,
											"end": 29284,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29275,
											"end": 29281,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29271,
											"end": 29285,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29264,
											"end": 29322,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29356,
											"end": 29364,
											"name": "PUSH",
											"source": 1,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29351,
											"end": 29353,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29343,
											"end": 29349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29339,
											"end": 29354,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29332,
											"end": 29365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29147,
											"end": 29372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29147,
											"end": 29372,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 29378,
											"end": 29552,
											"name": "tag",
											"source": 1,
											"value": "736"
										},
										{
											"begin": 29378,
											"end": 29552,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29518,
											"end": 29544,
											"name": "PUSH",
											"source": 1,
											"value": "6465706F73697420506F776572206279207374616B696E670000000000000000"
										},
										{
											"begin": 29514,
											"end": 29515,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29506,
											"end": 29512,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29502,
											"end": 29516,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29495,
											"end": 29545,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29378,
											"end": 29552,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29378,
											"end": 29552,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 29558,
											"end": 29778,
											"name": "tag",
											"source": 1,
											"value": "741"
										},
										{
											"begin": 29558,
											"end": 29778,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29698,
											"end": 29732,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F"
										},
										{
											"begin": 29694,
											"end": 29695,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29686,
											"end": 29692,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29682,
											"end": 29696,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29675,
											"end": 29733,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29767,
											"end": 29770,
											"name": "PUSH",
											"source": 1,
											"value": "7700000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29762,
											"end": 29764,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29754,
											"end": 29760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29750,
											"end": 29765,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29743,
											"end": 29771,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29558,
											"end": 29778,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29558,
											"end": 29778,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 29784,
											"end": 29966,
											"name": "tag",
											"source": 1,
											"value": "746"
										},
										{
											"begin": 29784,
											"end": 29966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29924,
											"end": 29958,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 29920,
											"end": 29921,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29912,
											"end": 29918,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29908,
											"end": 29922,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29901,
											"end": 29959,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29784,
											"end": 29966,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29784,
											"end": 29966,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 29972,
											"end": 30142,
											"name": "tag",
											"source": 1,
											"value": "751"
										},
										{
											"begin": 29972,
											"end": 30142,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30112,
											"end": 30134,
											"name": "PUSH",
											"source": 1,
											"value": "43616C6C6572206973206E6F742066616D696C79000000000000000000000000"
										},
										{
											"begin": 30108,
											"end": 30109,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30100,
											"end": 30106,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30096,
											"end": 30110,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30089,
											"end": 30135,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29972,
											"end": 30142,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29972,
											"end": 30142,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 30148,
											"end": 30327,
											"name": "tag",
											"source": 1,
											"value": "756"
										},
										{
											"begin": 30148,
											"end": 30327,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30288,
											"end": 30319,
											"name": "PUSH",
											"source": 1,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 30284,
											"end": 30285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30276,
											"end": 30282,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30272,
											"end": 30286,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30265,
											"end": 30320,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30148,
											"end": 30327,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30148,
											"end": 30327,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 30333,
											"end": 30501,
											"name": "tag",
											"source": 1,
											"value": "761"
										},
										{
											"begin": 30333,
											"end": 30501,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30473,
											"end": 30493,
											"name": "PUSH",
											"source": 1,
											"value": "77697468647261773A206E6F7420676F6F640000000000000000000000000000"
										},
										{
											"begin": 30469,
											"end": 30470,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30461,
											"end": 30467,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30457,
											"end": 30471,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30450,
											"end": 30494,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30333,
											"end": 30501,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30333,
											"end": 30501,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 30507,
											"end": 30736,
											"name": "tag",
											"source": 1,
											"value": "766"
										},
										{
											"begin": 30507,
											"end": 30736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30647,
											"end": 30681,
											"name": "PUSH",
											"source": 1,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 30643,
											"end": 30644,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30635,
											"end": 30641,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30631,
											"end": 30645,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30624,
											"end": 30682,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30716,
											"end": 30728,
											"name": "PUSH",
											"source": 1,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 30711,
											"end": 30713,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30703,
											"end": 30709,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30699,
											"end": 30714,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30692,
											"end": 30729,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30507,
											"end": 30736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30507,
											"end": 30736,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 30742,
											"end": 30904,
											"name": "tag",
											"source": 1,
											"value": "771"
										},
										{
											"begin": 30742,
											"end": 30904,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30882,
											"end": 30896,
											"name": "PUSH",
											"source": 1,
											"value": "6D6967726174653A206261640000000000000000000000000000000000000000"
										},
										{
											"begin": 30878,
											"end": 30879,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30870,
											"end": 30876,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30866,
											"end": 30880,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30859,
											"end": 30897,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30742,
											"end": 30904,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30742,
											"end": 30904,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 30910,
											"end": 31151,
											"name": "tag",
											"source": 1,
											"value": "776"
										},
										{
											"begin": 30910,
											"end": 31151,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31050,
											"end": 31084,
											"name": "PUSH",
											"source": 1,
											"value": "5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F"
										},
										{
											"begin": 31046,
											"end": 31047,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31038,
											"end": 31044,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31034,
											"end": 31048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31027,
											"end": 31085,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31119,
											"end": 31143,
											"name": "PUSH",
											"source": 1,
											"value": "20746F206E6F6E2D7A65726F20616C6C6F77616E636500000000000000000000"
										},
										{
											"begin": 31114,
											"end": 31116,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31106,
											"end": 31112,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31102,
											"end": 31117,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31095,
											"end": 31144,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30910,
											"end": 31151,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30910,
											"end": 31151,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 31157,
											"end": 31327,
											"name": "tag",
											"source": 1,
											"value": "781"
										},
										{
											"begin": 31157,
											"end": 31327,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31297,
											"end": 31319,
											"name": "PUSH",
											"source": 1,
											"value": "6D6967726174653A206E6F206D69677261746F72000000000000000000000000"
										},
										{
											"begin": 31293,
											"end": 31294,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31285,
											"end": 31291,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31281,
											"end": 31295,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31274,
											"end": 31320,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31157,
											"end": 31327,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31157,
											"end": 31327,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 31333,
											"end": 31455,
											"name": "tag",
											"source": 1,
											"value": "592"
										},
										{
											"begin": 31333,
											"end": 31455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31406,
											"end": 31430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "937"
										},
										{
											"begin": 31424,
											"end": 31429,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31406,
											"end": 31430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "677"
										},
										{
											"begin": 31406,
											"end": 31430,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 31406,
											"end": 31430,
											"name": "tag",
											"source": 1,
											"value": "937"
										},
										{
											"begin": 31406,
											"end": 31430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31399,
											"end": 31404,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31396,
											"end": 31431,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 31386,
											"end": 31449,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "938"
										},
										{
											"begin": 31386,
											"end": 31449,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 31445,
											"end": 31446,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31442,
											"end": 31443,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31435,
											"end": 31447,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 31386,
											"end": 31449,
											"name": "tag",
											"source": 1,
											"value": "938"
										},
										{
											"begin": 31386,
											"end": 31449,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31333,
											"end": 31455,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31333,
											"end": 31455,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 31461,
											"end": 31577,
											"name": "tag",
											"source": 1,
											"value": "596"
										},
										{
											"begin": 31461,
											"end": 31577,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31531,
											"end": 31552,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "940"
										},
										{
											"begin": 31546,
											"end": 31551,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31531,
											"end": 31552,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "880"
										},
										{
											"begin": 31531,
											"end": 31552,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 31531,
											"end": 31552,
											"name": "tag",
											"source": 1,
											"value": "940"
										},
										{
											"begin": 31531,
											"end": 31552,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31524,
											"end": 31529,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31521,
											"end": 31553,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 31511,
											"end": 31571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "941"
										},
										{
											"begin": 31511,
											"end": 31571,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 31567,
											"end": 31568,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31564,
											"end": 31565,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31557,
											"end": 31569,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 31511,
											"end": 31571,
											"name": "tag",
											"source": 1,
											"value": "941"
										},
										{
											"begin": 31511,
											"end": 31571,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31461,
											"end": 31577,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31461,
											"end": 31577,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 31583,
											"end": 31733,
											"name": "tag",
											"source": 1,
											"value": "603"
										},
										{
											"begin": 31583,
											"end": 31733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31670,
											"end": 31708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "943"
										},
										{
											"begin": 31702,
											"end": 31707,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31670,
											"end": 31708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "882"
										},
										{
											"begin": 31670,
											"end": 31708,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 31670,
											"end": 31708,
											"name": "tag",
											"source": 1,
											"value": "943"
										},
										{
											"begin": 31670,
											"end": 31708,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31663,
											"end": 31668,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31660,
											"end": 31709,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 31650,
											"end": 31727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "944"
										},
										{
											"begin": 31650,
											"end": 31727,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 31723,
											"end": 31724,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31720,
											"end": 31721,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31713,
											"end": 31725,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 31650,
											"end": 31727,
											"name": "tag",
											"source": 1,
											"value": "944"
										},
										{
											"begin": 31650,
											"end": 31727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31583,
											"end": 31733,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31583,
											"end": 31733,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 31739,
											"end": 31891,
											"name": "tag",
											"source": 1,
											"value": "610"
										},
										{
											"begin": 31739,
											"end": 31891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31827,
											"end": 31866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "946"
										},
										{
											"begin": 31860,
											"end": 31865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31827,
											"end": 31866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "885"
										},
										{
											"begin": 31827,
											"end": 31866,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 31827,
											"end": 31866,
											"name": "tag",
											"source": 1,
											"value": "946"
										},
										{
											"begin": 31827,
											"end": 31866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31820,
											"end": 31825,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31817,
											"end": 31867,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 31807,
											"end": 31885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "947"
										},
										{
											"begin": 31807,
											"end": 31885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 31881,
											"end": 31882,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31878,
											"end": 31879,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31871,
											"end": 31883,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 31807,
											"end": 31885,
											"name": "tag",
											"source": 1,
											"value": "947"
										},
										{
											"begin": 31807,
											"end": 31885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31739,
											"end": 31891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31739,
											"end": 31891,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 31897,
											"end": 32061,
											"name": "tag",
											"source": 1,
											"value": "614"
										},
										{
											"begin": 31897,
											"end": 32061,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31991,
											"end": 32036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "949"
										},
										{
											"begin": 32030,
											"end": 32035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31991,
											"end": 32036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "888"
										},
										{
											"begin": 31991,
											"end": 32036,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 31991,
											"end": 32036,
											"name": "tag",
											"source": 1,
											"value": "949"
										},
										{
											"begin": 31991,
											"end": 32036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31984,
											"end": 31989,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31981,
											"end": 32037,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 31971,
											"end": 32055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "950"
										},
										{
											"begin": 31971,
											"end": 32055,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 32051,
											"end": 32052,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32048,
											"end": 32049,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32041,
											"end": 32053,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 31971,
											"end": 32055,
											"name": "tag",
											"source": 1,
											"value": "950"
										},
										{
											"begin": 31971,
											"end": 32055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31897,
											"end": 32061,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31897,
											"end": 32061,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 32067,
											"end": 32189,
											"name": "tag",
											"source": 1,
											"value": "618"
										},
										{
											"begin": 32067,
											"end": 32189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32140,
											"end": 32164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "952"
										},
										{
											"begin": 32158,
											"end": 32163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32140,
											"end": 32164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "785"
										},
										{
											"begin": 32140,
											"end": 32164,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 32140,
											"end": 32164,
											"name": "tag",
											"source": 1,
											"value": "952"
										},
										{
											"begin": 32140,
											"end": 32164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32133,
											"end": 32138,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32130,
											"end": 32165,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 32120,
											"end": 32183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "953"
										},
										{
											"begin": 32120,
											"end": 32183,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 32179,
											"end": 32180,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32176,
											"end": 32177,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32169,
											"end": 32181,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 32120,
											"end": 32183,
											"name": "tag",
											"source": 1,
											"value": "953"
										},
										{
											"begin": 32120,
											"end": 32183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32067,
											"end": 32189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32067,
											"end": 32189,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"BONUS_MULTIPLIER()": "8aa28550",
							"DDT()": "cb3cba55",
							"DDTMasterchef()": "71916982",
							"NFTStakeAddress()": "83e32135",
							"PowerPerBlock()": "5990c569",
							"add(uint256,address,bool)": "1eaaa045",
							"addNFT(address,uint256)": "4ea2813c",
							"claimNFTReward(uint256,uint256)": "1d5fbd87",
							"deposit(uint256,uint256)": "e2bbb158",
							"emergencyWithdraw(uint256)": "5312ea8e",
							"enterStaking(uint256)": "41441d3b",
							"enterStakingCompund(uint256,address)": "cf35fddf",
							"getMultiplier(uint256,uint256)": "8dbb1e3a",
							"getPowerBalance(address)": "8c51793b",
							"leaveStaking(uint256)": "1058d281",
							"massUpdatePools()": "630b5ba1",
							"migrate(uint256)": "454b0608",
							"migrator()": "7cd07e47",
							"nftsInfo(uint256)": "61c1b724",
							"owner()": "8da5cb5b",
							"pendingPower(uint256,address)": "f3239ab5",
							"poolInfo(uint256)": "1526fe27",
							"poolLength()": "081e3eda",
							"powerBalance(address)": "d209db8c",
							"renounceOwnership()": "715018a6",
							"set(uint256,uint256,bool)": "64482f79",
							"setMigrator(address)": "23cf3118",
							"startBlock()": "48cd4cb1",
							"totalAllocPoint()": "17caf6f1",
							"transferOwnership(address)": "f2fde38b",
							"updateMultiplier(uint256)": "5ffe6146",
							"updateNFT(uint256,uint256)": "c11490cc",
							"updateNFTStakeAddress(address)": "0ba33a58",
							"updatePool(uint256)": "51eb05a6",
							"updatePowerPerBlock(uint256)": "3df7aff3",
							"userInfo(uint256,address)": "93f1a40b",
							"withdraw(uint256,uint256)": "441a3e70"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_DDT\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_PowerPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DDT\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DDTMasterchef\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NFTStakeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PowerPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"_NFT\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_power\",\"type\":\"uint256\"}],\"name\":\"addNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"claimNFTReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enterStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"enterStakingCompund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getPowerBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"leaveStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nftsInfo\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"NFT\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"power\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accPowerPerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"powerBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplierNumber\",\"type\":\"uint256\"}],\"name\":\"updateMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_power\",\"type\":\"uint256\"}],\"name\":\"updateNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_NFTStakeAddress\",\"type\":\"address\"}],\"name\":\"updateNFTStakeAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"updatePowerPerBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMasterChef.sol\":\"NFTMasterChef\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTMasterChef.sol\":{\"keccak256\":\"0x545386f4365c1716e6f61d9c8d95bb1e31f01e542bd42d3b7c974cf4bc8faea1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb7d270807e45b4dda79af7d94747f7768c222430b7d650424f809c6f5f332ba\",\"dweb:/ipfs/QmYSwATzj9ipAixnPcGAuRQWSJBfPwyZHBNv8dqb69qKfN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 820,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 967,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "nftsInfo",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_struct(NFTsInfo)963_storage)dyn_storage"
							},
							{
								"astId": 970,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "DDT",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)286"
							},
							{
								"astId": 972,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "PowerPerBlock",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 975,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "BONUS_MULTIPLIER",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 978,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "migrator",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(IMigratorChef)927"
							},
							{
								"astId": 982,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "poolInfo",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_struct(PoolInfo)957_storage)dyn_storage"
							},
							{
								"astId": 989,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "userInfo",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)947_storage))"
							},
							{
								"astId": 992,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "totalAllocPoint",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 994,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "startBlock",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 996,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "NFTStakeAddress",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 998,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "DDTMasterchef",
								"offset": 0,
								"slot": "11",
								"type": "t_address"
							},
							{
								"astId": 1002,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "powerBalance",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(NFTsInfo)963_storage)dyn_storage": {
								"base": "t_struct(NFTsInfo)963_storage",
								"encoding": "dynamic_array",
								"label": "struct NFTMasterChef.NFTsInfo[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(PoolInfo)957_storage)dyn_storage": {
								"base": "t_struct(PoolInfo)957_storage",
								"encoding": "dynamic_array",
								"label": "struct NFTMasterChef.PoolInfo[]",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)286": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IERC721)933": {
								"encoding": "inplace",
								"label": "contract IERC721",
								"numberOfBytes": "20"
							},
							"t_contract(IMigratorChef)927": {
								"encoding": "inplace",
								"label": "contract IMigratorChef",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(UserInfo)947_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct NFTMasterChef.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)947_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)947_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(UserInfo)947_storage)"
							},
							"t_struct(NFTsInfo)963_storage": {
								"encoding": "inplace",
								"label": "struct NFTMasterChef.NFTsInfo",
								"members": [
									{
										"astId": 960,
										"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
										"label": "NFT",
										"offset": 0,
										"slot": "0",
										"type": "t_contract(IERC721)933"
									},
									{
										"astId": 962,
										"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
										"label": "power",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(PoolInfo)957_storage": {
								"encoding": "inplace",
								"label": "struct NFTMasterChef.PoolInfo",
								"members": [
									{
										"astId": 950,
										"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
										"label": "lpToken",
										"offset": 0,
										"slot": "0",
										"type": "t_contract(IERC20)286"
									},
									{
										"astId": 952,
										"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
										"label": "allocPoint",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 954,
										"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
										"label": "lastRewardBlock",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 956,
										"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
										"label": "accPowerPerShare",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(UserInfo)947_storage": {
								"encoding": "inplace",
								"label": "struct NFTMasterChef.UserInfo",
								"members": [
									{
										"astId": 944,
										"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 946,
										"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
										"label": "rewardDebt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMasterChef.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTMasterChef.sol\":{\"keccak256\":\"0x545386f4365c1716e6f61d9c8d95bb1e31f01e542bd42d3b7c974cf4bc8faea1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb7d270807e45b4dda79af7d94747f7768c222430b7d650424f809c6f5f332ba\",\"dweb:/ipfs/QmYSwATzj9ipAixnPcGAuRQWSJBfPwyZHBNv8dqb69qKfN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 820,
								"contract": "contracts/NFTMasterChef.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTMasterChef.sol\":16091:19442  library SafeERC20 {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTMasterChef.sol\":16091:19442  library SafeERC20 {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220002c27c6d06fb95c8e83259d3e29d4dca0f9ed0639fb071139c828612542998864736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220002c27c6d06fb95c8e83259d3e29d4dca0f9ed0639fb071139c828612542998864736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP 0x2C 0x27 0xC6 0xD0 PUSH16 0xB95C8E83259D3E29D4DCA0F9ED0639FB SMOD GT CODECOPY 0xC8 0x28 PUSH2 0x2542 SWAP10 DUP9 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "16091:3351:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220002c27c6d06fb95c8e83259d3e29d4dca0f9ed0639fb071139c828612542998864736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP 0x2C 0x27 0xC6 0xD0 PUSH16 0xB95C8E83259D3E29D4DCA0F9ED0639FB SMOD GT CODECOPY 0xC8 0x28 PUSH2 0x2542 SWAP10 DUP9 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "16091:3351:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220002c27c6d06fb95c8e83259d3e29d4dca0f9ed0639fb071139c828612542998864736f6c63430008070033",
									".code": [
										{
											"begin": 16091,
											"end": 19442,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 16091,
											"end": 19442,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 16091,
											"end": 19442,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16091,
											"end": 19442,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 16091,
											"end": 19442,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16091,
											"end": 19442,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16091,
											"end": 19442,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16091,
											"end": 19442,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16091,
											"end": 19442,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMasterChef.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTMasterChef.sol\":{\"keccak256\":\"0x545386f4365c1716e6f61d9c8d95bb1e31f01e542bd42d3b7c974cf4bc8faea1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb7d270807e45b4dda79af7d94747f7768c222430b7d650424f809c6f5f332ba\",\"dweb:/ipfs/QmYSwATzj9ipAixnPcGAuRQWSJBfPwyZHBNv8dqb69qKfN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTMasterChef.sol\":130:4978  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTMasterChef.sol\":130:4978  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202143e918bf1e6f86ab1b4051b285a65e1f0307a9e0fcbb6a1af15bb0e194577464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202143e918bf1e6f86ab1b4051b285a65e1f0307a9e0fcbb6a1af15bb0e194577464736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 NUMBER 0xE9 XOR 0xBF 0x1E PUSH16 0x86AB1B4051B285A65E1F0307A9E0FCBB PUSH11 0x1AF15BB0E194577464736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "130:4848:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202143e918bf1e6f86ab1b4051b285a65e1f0307a9e0fcbb6a1af15bb0e194577464736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 NUMBER 0xE9 XOR 0xBF 0x1E PUSH16 0x86AB1B4051B285A65E1F0307A9E0FCBB PUSH11 0x1AF15BB0E194577464736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "130:4848:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202143e918bf1e6f86ab1b4051b285a65e1f0307a9e0fcbb6a1af15bb0e194577464736f6c63430008070033",
									".code": [
										{
											"begin": 130,
											"end": 4978,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 130,
											"end": 4978,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 130,
											"end": 4978,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 130,
											"end": 4978,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 130,
											"end": 4978,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 130,
											"end": 4978,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 130,
											"end": 4978,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 130,
											"end": 4978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 130,
											"end": 4978,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMasterChef.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTMasterChef.sol\":{\"keccak256\":\"0x545386f4365c1716e6f61d9c8d95bb1e31f01e542bd42d3b7c974cf4bc8faea1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb7d270807e45b4dda79af7d94747f7768c222430b7d650424f809c6f5f332ba\",\"dweb:/ipfs/QmYSwATzj9ipAixnPcGAuRQWSJBfPwyZHBNv8dqb69qKfN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/NFTMasterChef.sol": {
				"ast": {
					"absolutePath": "contracts/NFTMasterChef.sol",
					"exportedSymbols": {
						"Address": [
							578
						],
						"Context": [
							816
						],
						"IERC20": [
							286
						],
						"IERC721": [
							933
						],
						"IMigratorChef": [
							927
						],
						"NFTMasterChef": [
							2441
						],
						"Ownable": [
							917
						],
						"SafeERC20": [
							797
						],
						"SafeMath": [
							194
						]
					},
					"id": 2442,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194
							],
							"name": "SafeMath",
							"nameLocation": "138:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 26,
										"nodeType": "Block",
										"src": "452:114:0",
										"statements": [
											{
												"assignments": [
													12
												],
												"declarations": [
													{
														"constant": false,
														"id": 12,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "471:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 26,
														"src": "463:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 11,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "463:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 16,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 13,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "475:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 14,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "479:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "475:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "463:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 18,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 12,
																"src": "499:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 19,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4,
																"src": "504:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "499:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "507:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 17,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "491:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "491:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "491:46:0"
											},
											{
												"expression": {
													"id": 24,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 12,
													"src": "557:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 10,
												"id": 25,
												"nodeType": "Return",
												"src": "550:8:0"
											}
										]
									},
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "154:225:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 27,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "394:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "406:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "398:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "398:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "417:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "409:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "397:22:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "443:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "443:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "442:9:0"
									},
									"scope": 194,
									"src": "385:181:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "908:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 38,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "930:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 39,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "933:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "936:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 37,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															44,
															72
														],
														"referencedDeclaration": 72,
														"src": "926:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "926:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 36,
												"id": 42,
												"nodeType": "Return",
												"src": "919:50:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "574:261:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "850:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "862:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "854:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 29,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "854:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "873:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "865:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "865:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "853:22:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "899:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "898:9:0"
									},
									"scope": 194,
									"src": "841:136:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "1409:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 59,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 57,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 49,
																"src": "1428:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 58,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1433:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1428:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 60,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 51,
															"src": "1436:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 56,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1420:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1420:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "1420:29:0"
											},
											{
												"assignments": [
													64
												],
												"declarations": [
													{
														"constant": false,
														"id": 64,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1468:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 71,
														"src": "1460:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 63,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1460:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 68,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 65,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "1472:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 66,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 49,
														"src": "1476:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1472:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1460:17:0"
											},
											{
												"expression": {
													"id": 69,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 64,
													"src": "1497:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 55,
												"id": 70,
												"nodeType": "Return",
												"src": "1490:8:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "985:323:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow.\n _Available since v2.4.0._"
									},
									"id": 72,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1323:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1335:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1327:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1327:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1346:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1338:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1338:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "1363:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1349:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 50,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1349:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1326:50:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1400:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1400:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:9:0"
									},
									"scope": 194,
									"src": "1314:192:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "1824:404:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 82,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 75,
														"src": "2060:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 83,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2065:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2060:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 88,
												"nodeType": "IfStatement",
												"src": "2056:47:0",
												"trueBody": {
													"id": 87,
													"nodeType": "Block",
													"src": "2068:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 85,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2090:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 81,
															"id": 86,
															"nodeType": "Return",
															"src": "2083:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2123:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "2115:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 89,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2115:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 94,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 91,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 75,
														"src": "2127:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 92,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 77,
														"src": "2131:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2127:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2115:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 96,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 90,
																	"src": "2151:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 97,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 75,
																	"src": "2155:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2151:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 99,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "2160:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2151:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2163:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 95,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2143:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2143:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "2143:56:0"
											},
											{
												"expression": {
													"id": 104,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 90,
													"src": "2219:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 81,
												"id": 105,
												"nodeType": "Return",
												"src": "2212:8:0"
											}
										]
									},
									"documentation": {
										"id": 73,
										"nodeType": "StructuredDocumentation",
										"src": "1514:237:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "1766:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1778:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "1770:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1770:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1789:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "1781:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1781:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1769:22:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "1815:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1815:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1814:9:0"
									},
									"scope": 194,
									"src": "1757:471:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "2763:65:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 118,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "2785:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 119,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "2788:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2791:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 117,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															124,
															152
														],
														"referencedDeclaration": 152,
														"src": "2781:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2781:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 116,
												"id": 122,
												"nodeType": "Return",
												"src": "2774:46:0"
											}
										]
									},
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "2236:454:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "2705:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2717:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "2709:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2709:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2728:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "2720:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2720:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2708:22:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "2754:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:9:0"
									},
									"scope": 194,
									"src": "2696:132:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "3453:250:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 137,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "3539:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3543:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3539:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 140,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "3546:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 136,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3531:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3531:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "3531:28:0"
											},
											{
												"assignments": [
													144
												],
												"declarations": [
													{
														"constant": false,
														"id": 144,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "3578:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 151,
														"src": "3570:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 143,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3570:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 148,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 145,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "3582:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 146,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3586:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3582:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3570:17:0"
											},
											{
												"expression": {
													"id": 149,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 144,
													"src": "3694:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 135,
												"id": 150,
												"nodeType": "Return",
												"src": "3687:8:0"
											}
										]
									},
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "2836:516:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero.\n _Available since v2.4.0._"
									},
									"id": 152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3367:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3379:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "3371:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3371:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3390:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "3382:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3382:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3407:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "3393:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 130,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3393:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3370:50:0"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "3444:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3444:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3443:9:0"
									},
									"scope": 194,
									"src": "3358:345:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "4227:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 163,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "4249:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 164,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "4252:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4255:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 162,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															169,
															193
														],
														"referencedDeclaration": 193,
														"src": "4245:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4245:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 161,
												"id": 167,
												"nodeType": "Return",
												"src": "4238:44:0"
											}
										]
									},
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "3711:443:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4169:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4181:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "4173:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4173:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4192:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "4184:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4184:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4172:22:0"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "4218:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4218:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4217:9:0"
									},
									"scope": 194,
									"src": "4160:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "4904:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 182,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 174,
																"src": "4923:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 183,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4928:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4923:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 185,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 176,
															"src": "4931:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 181,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4915:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4915:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "4915:29:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 188,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "4962:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 189,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "4966:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4962:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 180,
												"id": 191,
												"nodeType": "Return",
												"src": "4955:12:0"
											}
										]
									},
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "4298:505:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero.\n _Available since v2.4.0._"
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4818:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4830:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "4822:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4841:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "4833:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4833:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4858:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "4844:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4844:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4821:50:0"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "4895:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4895:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4894:9:0"
									},
									"scope": 194,
									"src": "4809:166:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2442,
							"src": "130:4848:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 286,
							"linearizedBaseContracts": [
								286
							],
							"name": "IERC20",
							"nameLocation": "4992:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 195,
										"nodeType": "StructuredDocumentation",
										"src": "5006:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 200,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "5089:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5100:2:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "5126:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5126:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:9:0"
									},
									"scope": 286,
									"src": "5080:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "5143:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 208,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "5232:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5250:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "5242:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5242:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5241:17:0"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "5282:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5282:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5281:9:0"
									},
									"scope": 286,
									"src": "5223:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "5299:215:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 218,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "5529:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5546:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5538:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5538:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5565:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5557:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5557:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5537:35:0"
									},
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5591:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 215,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5591:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5590:6:0"
									},
									"scope": 286,
									"src": "5520:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "5605:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "5890:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5908:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5900:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5900:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5923:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5915:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5915:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5899:32:0"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5955:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5955:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5954:9:0"
									},
									"scope": 286,
									"src": "5881:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "5972:655:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 238,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "6642:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6658:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "6650:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6650:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6675:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "6667:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6667:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6649:33:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "6701:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6701:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6700:6:0"
									},
									"scope": 286,
									"src": "6633:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "40c10f19",
									"id": 247,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "6724:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6737:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "6729:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6729:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6754:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "6746:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6746:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6728:33:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "6780:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6780:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6779:6:0"
									},
									"scope": 286,
									"src": "6715:71:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "6794:304:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 259,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "7113:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7144:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "7136:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7136:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7169:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "7161:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7161:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7197:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "7189:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7189:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7125:85:0"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "7229:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 256,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7229:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7228:6:0"
									},
									"scope": 286,
									"src": "7104:131:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "7243:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 268,
									"name": "Transfer",
									"nameLocation": "7418:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7443:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "7427:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7427:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7465:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "7449:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7449:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "7469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7469:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7426:57:0"
									},
									"src": "7412:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "7492:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 277,
									"name": "Approval",
									"nameLocation": "7655:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7680:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "7664:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7703:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "7687:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7687:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7720:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "7712:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7712:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7663:63:0"
									},
									"src": "7649:78:0"
								},
								{
									"anonymous": false,
									"id": 285,
									"name": "Mint",
									"nameLocation": "7741:4:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"indexed": true,
												"mutability": "mutable",
												"name": "minter",
												"nameLocation": "7762:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7746:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7746:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7786:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7770:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7770:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7798:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7790:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7790:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7745:60:0"
									},
									"src": "7735:71:0"
								}
							],
							"scope": 2442,
							"src": "4982:2827:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 578,
							"linearizedBaseContracts": [
								578
							],
							"name": "Address",
							"nameLocation": "7821:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "8887:260:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 294,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 289,
																"src": "9116:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "9116:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "9116:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9138:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9116:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 293,
												"id": 299,
												"nodeType": "Return",
												"src": "9109:30:0"
											}
										]
									},
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "7836:979:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "8830:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8849:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "8841:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8841:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8840:17:0"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "8881:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 291,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8881:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8880:6:0"
									},
									"scope": 578,
									"src": "8821:326:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "10153:246:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 312,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "10180:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$578",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$578",
																				"typeString": "library Address"
																			}
																		],
																		"id": 311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10172:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 310,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "10172:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10172:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "10172:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 315,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "10197:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10172:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10205:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 309,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10164:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10164:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "10164:73:0"
											},
											{
												"assignments": [
													321,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 321,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "10256:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 334,
														"src": "10251:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 320,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10251:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 328,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10299:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 322,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 304,
																"src": "10269:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "10269:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 325,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 324,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "10291:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "10269:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10269:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10250:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 330,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "10321:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10330:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 329,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10313:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10313:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "10313:78:0"
											}
										]
									},
									"documentation": {
										"id": 302,
										"nodeType": "StructuredDocumentation",
										"src": "9155:921:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "10091:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "10117:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "10101:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10101:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10136:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "10128:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10128:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10100:43:0"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10153:0:0"
									},
									"scope": 578,
									"src": "10082:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "11250:86:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 346,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "11281:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 347,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "11289:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11295:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 345,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															352,
															372
														],
														"referencedDeclaration": 372,
														"src": "11268:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11268:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 344,
												"id": 350,
												"nodeType": "Return",
												"src": "11261:67:0"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "10407:748:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "11170:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "11191:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "11183:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11183:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11212:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "11199:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 339,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11199:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11182:35:0"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "11236:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 342,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11236:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11235:14:0"
									},
									"scope": 578,
									"src": "11161:175:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "11717:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 365,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "11757:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 366,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "11765:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11771:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 368,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "11774:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 364,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															392,
															442
														],
														"referencedDeclaration": 442,
														"src": "11735:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11735:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 363,
												"id": 370,
												"nodeType": "Return",
												"src": "11728:59:0"
											}
										]
									},
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "11344:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "11575:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "11606:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "11598:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11598:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11636:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "11623:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 356,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11623:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "11665:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "11651:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 358,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11651:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11587:97:0"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "11703:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 361,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11703:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11702:14:0"
									},
									"scope": 578,
									"src": "11566:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 391,
										"nodeType": "Block",
										"src": "12317:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 385,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "12357:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 386,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "12365:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 387,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "12371:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12378:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 384,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															392,
															442
														],
														"referencedDeclaration": 442,
														"src": "12335:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12335:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 383,
												"id": 390,
												"nodeType": "Return",
												"src": "12328:94:0"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "11803:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "12179:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "12219:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "12211:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "12249:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "12236:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 376,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12236:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12272:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "12264:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12264:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12200:84:0"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "12303:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 381,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12303:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12302:14:0"
									},
									"scope": 578,
									"src": "12170:260:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "12870:326:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 409,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "12897:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$578",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$578",
																				"typeString": "library Address"
																			}
																		],
																		"id": 408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12889:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 407,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "12889:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12889:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "12889:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 412,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 399,
																"src": "12914:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12889:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12921:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 406,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12881:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12881:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "12881:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 419,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "12992:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 418,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "12981:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12981:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13001:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 417,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12973:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12973:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 423,
												"nodeType": "ExpressionStatement",
												"src": "12973:60:0"
											},
											{
												"assignments": [
													425,
													427
												],
												"declarations": [
													{
														"constant": false,
														"id": 425,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "13052:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 441,
														"src": "13047:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 424,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "13047:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 427,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "13074:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 441,
														"src": "13061:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 426,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "13061:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 434,
												"initialValue": {
													"arguments": [
														{
															"id": 432,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "13114:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 428,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 395,
																"src": "13088:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "13088:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 430,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 399,
																"src": "13107:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "13088:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13088:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13046:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 436,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "13154:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 437,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "13163:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 438,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "13175:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 435,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "13137:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13137:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 405,
												"id": 440,
												"nodeType": "Return",
												"src": "13130:58:0"
											}
										]
									},
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "12438:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "12695:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "12735:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "12727:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12727:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "12765:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "12752:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 396,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12752:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12788:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "12780:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12780:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "12818:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "12804:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 400,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12804:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12716:121:0"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "12856:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 403,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12856:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12855:14:0"
									},
									"scope": 578,
									"src": "12686:510:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "13481:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 453,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "13518:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "13526:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13532:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 452,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															459,
															494
														],
														"referencedDeclaration": 494,
														"src": "13499:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13499:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 451,
												"id": 457,
												"nodeType": "Return",
												"src": "13492:80:0"
											}
										]
									},
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "13204:171:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "13390:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "13417:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "13409:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13409:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13438:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "13425:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 446,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13425:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13408:35:0"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "13467:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 449,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13467:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13466:14:0"
									},
									"scope": 578,
									"src": "13381:199:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 493,
										"nodeType": "Block",
										"src": "13934:233:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 473,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "13964:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 472,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "13953:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13953:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13973:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 471,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13945:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13945:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 477,
												"nodeType": "ExpressionStatement",
												"src": "13945:67:0"
											},
											{
												"assignments": [
													479,
													481
												],
												"declarations": [
													{
														"constant": false,
														"id": 479,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "14031:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 493,
														"src": "14026:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 478,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "14026:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 481,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "14053:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 493,
														"src": "14040:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 480,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "14040:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 486,
												"initialValue": {
													"arguments": [
														{
															"id": 484,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "14085:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 482,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "14067:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "14067:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14067:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14025:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 488,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "14125:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 489,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "14134:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 490,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "14146:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 487,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "14108:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14108:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 470,
												"id": 492,
												"nodeType": "Return",
												"src": "14101:58:0"
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "13588:178:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "13781:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "13818:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "13810:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13810:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13848:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "13835:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 463,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13835:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "13877:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "13863:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 465,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13863:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13799:97:0"
									},
									"returnParameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "13920:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 468,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13920:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13919:14:0"
									},
									"scope": 578,
									"src": "13772:395:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 510,
										"nodeType": "Block",
										"src": "14451:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 505,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "14490:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 506,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "14498:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14504:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 504,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															511,
															546
														],
														"referencedDeclaration": 546,
														"src": "14469:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14469:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 503,
												"id": 509,
												"nodeType": "Return",
												"src": "14462:84:0"
											}
										]
									},
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "14175:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "14363:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "14392:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "14384:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14384:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14413:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "14400:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 498,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14400:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14383:35:0"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "14437:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 501,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14437:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14436:14:0"
									},
									"scope": 578,
									"src": "14354:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 545,
										"nodeType": "Block",
										"src": "14907:237:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 525,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "14937:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 524,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "14926:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14926:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 527,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14946:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 523,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14918:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14918:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 529,
												"nodeType": "ExpressionStatement",
												"src": "14918:69:0"
											},
											{
												"assignments": [
													531,
													533
												],
												"declarations": [
													{
														"constant": false,
														"id": 531,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "15006:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 545,
														"src": "15001:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 530,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "15001:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 533,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "15028:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 545,
														"src": "15015:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 532,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "15015:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 538,
												"initialValue": {
													"arguments": [
														{
															"id": 536,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "15062:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 534,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "15042:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 535,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "15042:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15042:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15000:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 540,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "15102:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 541,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "15111:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 542,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "15123:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 539,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "15085:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15085:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 522,
												"id": 544,
												"nodeType": "Return",
												"src": "15078:58:0"
											}
										]
									},
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "14562:180:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "14757:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "14796:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "14788:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14788:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14826:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "14813:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 515,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14813:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "14855:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "14841:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 517,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14841:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14777:97:0"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "14893:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 520,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14893:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14892:14:0"
									},
									"scope": 578,
									"src": "14748:396:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "15536:548:0",
										"statements": [
											{
												"condition": {
													"id": 558,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 549,
													"src": "15551:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 574,
													"nodeType": "Block",
													"src": "15610:467:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 562,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 551,
																		"src": "15696:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "15696:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15716:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "15696:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 572,
																"nodeType": "Block",
																"src": "16011:55:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 569,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 553,
																					"src": "16037:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 568,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "16030:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 570,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16030:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 571,
																		"nodeType": "ExpressionStatement",
																		"src": "16030:20:0"
																	}
																]
															},
															"id": 573,
															"nodeType": "IfStatement",
															"src": "15692:374:0",
															"trueBody": {
																"id": 567,
																"nodeType": "Block",
																"src": "15719:286:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "15842:148:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "15865:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "15894:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "15888:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15888:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "15869:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "15938:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "15942:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "15934:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "15934:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "15955:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "15927:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15927:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "15927:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 551,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "15894:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 551,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "15942:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 566,
																		"nodeType": "InlineAssembly",
																		"src": "15833:157:0"
																	}
																]
															}
														}
													]
												},
												"id": 575,
												"nodeType": "IfStatement",
												"src": "15547:530:0",
												"trueBody": {
													"id": 561,
													"nodeType": "Block",
													"src": "15560:44:0",
													"statements": [
														{
															"expression": {
																"id": 559,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 551,
																"src": "15582:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 557,
															"id": 560,
															"nodeType": "Return",
															"src": "15575:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 547,
										"nodeType": "StructuredDocumentation",
										"src": "15152:214:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "15381:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "15413:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "15408:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 548,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15408:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "15444:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "15431:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 550,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15431:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "15479:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "15465:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 552,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "15465:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15397:101:0"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "15522:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 555,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15522:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15521:14:0"
									},
									"scope": 578,
									"src": "15372:712:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2442,
							"src": "7813:8274:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 797,
							"linearizedBaseContracts": [
								797
							],
							"name": "SafeERC20",
							"nameLocation": "16099:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 581,
									"libraryName": {
										"id": 579,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 578,
										"src": "16122:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "16116:26:0",
									"typeName": {
										"id": 580,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "16134:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 603,
										"nodeType": "Block",
										"src": "16256:105:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 592,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "16287:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 595,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 584,
																			"src": "16317:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$286",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 218,
																		"src": "16317:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "16317:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 598,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 586,
																	"src": "16342:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 599,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 588,
																	"src": "16346:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 593,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "16294:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 594,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "16294:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16294:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 591,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "16267:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16267:86:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 602,
												"nodeType": "ExpressionStatement",
												"src": "16267:86:0"
											}
										]
									},
									"id": 604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "16159:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "16189:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "16182:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 583,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 582,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "16182:6:0"
													},
													"referencedDeclaration": 286,
													"src": "16182:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16213:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "16205:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16205:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16234:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "16226:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16226:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16171:75:0"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16256:0:0"
									},
									"scope": 797,
									"src": "16150:211:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "16502:115:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 617,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "16533:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 620,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 607,
																			"src": "16563:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$286",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 259,
																		"src": "16563:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "16563:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 623,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "16592:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 624,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 611,
																	"src": "16598:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 625,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "16602:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 618,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "16540:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 619,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "16540:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16540:68:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 616,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "16513:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16513:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 628,
												"nodeType": "ExpressionStatement",
												"src": "16513:96:0"
											}
										]
									},
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "16378:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "16412:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "16405:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 606,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 605,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "16405:6:0"
													},
													"referencedDeclaration": 286,
													"src": "16405:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16436:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "16428:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16428:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16459:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "16451:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16480:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "16472:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16472:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16394:98:0"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16502:0:0"
									},
									"scope": 797,
									"src": "16369:248:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "16996:506:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 642,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 638,
																			"src": "17250:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 643,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17259:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "17250:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 645,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "17249:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 650,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "17290:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$797",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$797",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 649,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "17282:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 648,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "17282:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 651,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "17282:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 652,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 636,
																					"src": "17297:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 646,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 634,
																					"src": "17266:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$286",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 647,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 228,
																				"src": "17266:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 653,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17266:39:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17309:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "17266:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 656,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "17265:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "17249:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17326:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 641,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17227:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17227:166:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "17227:166:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 662,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "17424:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 665,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 634,
																			"src": "17454:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$286",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 238,
																		"src": "17454:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "17454:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 668,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 636,
																	"src": "17478:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 669,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "17487:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 663,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "17431:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "17431:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17431:62:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 661,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "17404:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17404:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 672,
												"nodeType": "ExpressionStatement",
												"src": "17404:90:0"
											}
										]
									},
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "16625:255:0",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "16895:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "16924:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "16917:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 633,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 632,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "16917:6:0"
													},
													"referencedDeclaration": 286,
													"src": "16917:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "16948:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "16940:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16974:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "16966:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16966:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16906:80:0"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16996:0:0"
									},
									"scope": 797,
									"src": "16886:616:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "17630:197:0",
										"statements": [
											{
												"assignments": [
													685
												],
												"declarations": [
													{
														"constant": false,
														"id": 685,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "17649:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 709,
														"src": "17641:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 684,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17641:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 696,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 690,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "17688:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$797",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$797",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17680:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 688,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "17680:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17680:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 692,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 679,
																"src": "17695:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 686,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 677,
																"src": "17664:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$286",
																	"typeString": "contract IERC20"
																}
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 228,
															"src": "17664:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 693,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17664:39:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 694,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "17706:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17664:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17641:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 698,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "17742:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 701,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 677,
																			"src": "17772:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$286",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 238,
																		"src": "17772:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "17772:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 704,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "17796:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 705,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 685,
																	"src": "17805:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 699,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "17749:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "17749:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17749:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 697,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "17722:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17722:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 708,
												"nodeType": "ExpressionStatement",
												"src": "17722:97:0"
											}
										]
									},
									"id": 710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "17519:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "17558:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "17551:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 676,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 675,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "17551:6:0"
													},
													"referencedDeclaration": 286,
													"src": "17551:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "17582:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "17574:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17574:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17608:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "17600:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17600:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17540:80:0"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17630:0:0"
									},
									"scope": 797,
									"src": "17510:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 757,
										"nodeType": "Block",
										"src": "17955:377:0",
										"statements": [
											{
												"id": 756,
												"nodeType": "UncheckedBlock",
												"src": "17966:359:0",
												"statements": [
													{
														"assignments": [
															721
														],
														"declarations": [
															{
																"constant": false,
																"id": 721,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "17999:12:0",
																"nodeType": "VariableDeclaration",
																"scope": 756,
																"src": "17991:20:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 720,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "17991:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 730,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 726,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "18038:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$797",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$797",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 725,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "18030:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 724,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "18030:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18030:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 728,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 715,
																	"src": "18045:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 722,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 713,
																	"src": "18014:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "18014:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18014:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "17991:62:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 734,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 732,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 721,
																		"src": "18076:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 733,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 717,
																		"src": "18092:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "18076:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18099:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 731,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "18068:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18068:75:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 737,
														"nodeType": "ExpressionStatement",
														"src": "18068:75:0"
													},
													{
														"assignments": [
															739
														],
														"declarations": [
															{
																"constant": false,
																"id": 739,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "18166:12:0",
																"nodeType": "VariableDeclaration",
																"scope": 756,
																"src": "18158:20:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 738,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "18158:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 743,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 740,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 721,
																"src": "18181:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 741,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 717,
																"src": "18196:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18181:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "18158:43:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 745,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 713,
																	"src": "18236:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 748,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 713,
																					"src": "18266:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$286",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 749,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 238,
																				"src": "18266:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 750,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "18266:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 751,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 715,
																			"src": "18290:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 752,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 739,
																			"src": "18299:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 746,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "18243:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "18243:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18243:69:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 744,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "18216:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18216:97:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 755,
														"nodeType": "ExpressionStatement",
														"src": "18216:97:0"
													}
												]
											}
										]
									},
									"id": 758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "17844:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "17883:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "17876:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 712,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 711,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "17876:6:0"
													},
													"referencedDeclaration": 286,
													"src": "17876:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "17907:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "17899:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17899:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17933:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "17925:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17925:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17865:80:0"
									},
									"returnParameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17955:0:0"
									},
									"scope": 797,
									"src": "17835:497:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 795,
										"nodeType": "Block",
										"src": "18793:646:0",
										"statements": [
											{
												"assignments": [
													768
												],
												"declarations": [
													{
														"constant": false,
														"id": 768,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "19160:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 795,
														"src": "19147:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 767,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "19147:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 777,
												"initialValue": {
													"arguments": [
														{
															"id": 774,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 764,
															"src": "19201:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19207:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 771,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "19181:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19173:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 769,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19173:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19173:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 773,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 372,
														"src": "19173:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19173:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19147:95:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 778,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "19257:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "19257:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 780,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19277:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "19257:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 794,
												"nodeType": "IfStatement",
												"src": "19253:179:0",
												"trueBody": {
													"id": 793,
													"nodeType": "Block",
													"src": "19280:152:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 785,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 768,
																				"src": "19354:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 787,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "19367:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 786,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "19367:4:0",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 788,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "19366:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 783,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "19343:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 784,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "19343:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19343:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19375:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 782,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "19335:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19335:85:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 792,
															"nodeType": "ExpressionStatement",
															"src": "19335:85:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 759,
										"nodeType": "StructuredDocumentation",
										"src": "18340:377:0",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "18732:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "18759:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "18752:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 761,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 760,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "18752:6:0"
													},
													"referencedDeclaration": 286,
													"src": "18752:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "18779:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "18766:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 763,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18766:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18751:33:0"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18793:0:0"
									},
									"scope": 797,
									"src": "18723:716:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2442,
							"src": "16091:3351:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 816,
							"linearizedBaseContracts": [
								816
							],
							"name": "Context",
							"nameLocation": "19464:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 805,
										"nodeType": "Block",
										"src": "19541:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 802,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "19559:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "19559:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 801,
												"id": 804,
												"nodeType": "Return",
												"src": "19552:17:0"
											}
										]
									},
									"id": 806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "19488:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19498:2:0"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "19532:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19532:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19531:9:0"
									},
									"scope": 816,
									"src": "19479:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "19652:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 811,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "19670:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "19670:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 810,
												"id": 813,
												"nodeType": "Return",
												"src": "19663:15:0"
											}
										]
									},
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "19594:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19602:2:0"
									},
									"returnParameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "19636:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 808,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19636:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19635:16:0"
									},
									"scope": 816,
									"src": "19585:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2442,
							"src": "19446:243:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 817,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 816,
										"src": "19722:7:0"
									},
									"id": 818,
									"nodeType": "InheritanceSpecifier",
									"src": "19722:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 917,
							"linearizedBaseContracts": [
								917,
								816
							],
							"name": "Ownable",
							"nameLocation": "19711:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 820,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "19753:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 917,
									"src": "19737:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 819,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "19737:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 826,
									"name": "OwnershipTransferred",
									"nameLocation": "19774:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "19811:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "19795:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19795:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "19842:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "19826:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19826:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19794:57:0"
									},
									"src": "19768:84:0"
								},
								{
									"body": {
										"id": 835,
										"nodeType": "Block",
										"src": "19973:51:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 831,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "20003:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20003:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 830,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "19984:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19984:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 834,
												"nodeType": "ExpressionStatement",
												"src": "19984:32:0"
											}
										]
									},
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "19860:93:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 836,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19970:2:0"
									},
									"returnParameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19973:0:0"
									},
									"scope": 917,
									"src": "19959:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 844,
										"nodeType": "Block",
										"src": "20160:32:0",
										"statements": [
											{
												"expression": {
													"id": 842,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 820,
													"src": "20178:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 841,
												"id": 843,
												"nodeType": "Return",
												"src": "20171:13:0"
											}
										]
									},
									"documentation": {
										"id": 837,
										"nodeType": "StructuredDocumentation",
										"src": "20032:67:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "20114:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20119:2:0"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "20151:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20151:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20150:9:0"
									},
									"scope": 917,
									"src": "20105:87:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 858,
										"nodeType": "Block",
										"src": "20306:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 849,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 845,
																	"src": "20325:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20325:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 851,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 806,
																	"src": "20336:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20336:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "20325:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20350:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 848,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20317:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20317:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 856,
												"nodeType": "ExpressionStatement",
												"src": "20317:68:0"
											},
											{
												"id": 857,
												"nodeType": "PlaceholderStatement",
												"src": "20396:1:0"
											}
										]
									},
									"documentation": {
										"id": 846,
										"nodeType": "StructuredDocumentation",
										"src": "20200:79:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 859,
									"name": "onlyOwner",
									"nameLocation": "20294:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20303:2:0"
									},
									"src": "20285:120:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "20810:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 868,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20848:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 867,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20840:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 866,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20840:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20840:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 865,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "20821:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20821:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 871,
												"nodeType": "ExpressionStatement",
												"src": "20821:30:0"
											}
										]
									},
									"documentation": {
										"id": 860,
										"nodeType": "StructuredDocumentation",
										"src": "20413:337:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 873,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 863,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 862,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "20800:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "20800:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "20765:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20782:2:0"
									},
									"returnParameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20810:0:0"
									},
									"scope": 917,
									"src": "20756:103:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 895,
										"nodeType": "Block",
										"src": "21084:131:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 882,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 876,
																"src": "21103:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21123:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21115:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 883,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "21115:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 886,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21115:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "21103:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21127:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 881,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21095:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21095:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 890,
												"nodeType": "ExpressionStatement",
												"src": "21095:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 892,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "21198:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 891,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "21179:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21179:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 894,
												"nodeType": "ExpressionStatement",
												"src": "21179:28:0"
											}
										]
									},
									"documentation": {
										"id": 874,
										"nodeType": "StructuredDocumentation",
										"src": "20867:141:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 896,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 879,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 878,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "21074:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "21074:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "21023:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "21049:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "21041:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21041:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21040:18:0"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21084:0:0"
									},
									"scope": 917,
									"src": "21014:201:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 915,
										"nodeType": "Block",
										"src": "21438:128:0",
										"statements": [
											{
												"assignments": [
													903
												],
												"declarations": [
													{
														"constant": false,
														"id": 903,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "21457:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 915,
														"src": "21449:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 902,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "21449:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 905,
												"initialValue": {
													"id": 904,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 820,
													"src": "21468:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21449:25:0"
											},
											{
												"expression": {
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 906,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "21485:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 907,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 899,
														"src": "21494:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "21485:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 909,
												"nodeType": "ExpressionStatement",
												"src": "21485:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 911,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "21539:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 912,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "21549:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 910,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "21518:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21518:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 914,
												"nodeType": "EmitStatement",
												"src": "21513:45:0"
											}
										]
									},
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "21223:146:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 916,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "21384:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "21411:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "21403:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21402:18:0"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21438:0:0"
									},
									"scope": 917,
									"src": "21375:191:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2442,
							"src": "19693:1876:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 927,
							"linearizedBaseContracts": [
								927
							],
							"name": "IMigratorChef",
							"nameLocation": "21583:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "ce5494bb",
									"id": 926,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "migrate",
									"nameLocation": "21613:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "21628:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "21621:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 919,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 918,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "21621:6:0"
													},
													"referencedDeclaration": 286,
													"src": "21621:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21620:14:0"
									},
									"returnParameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "21653:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 923,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 922,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "21653:6:0"
													},
													"referencedDeclaration": 286,
													"src": "21653:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21652:8:0"
									},
									"scope": 927,
									"src": "21604:57:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2442,
							"src": "21573:91:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "IERC721",
							"nameLocation": "21678:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "17e5883c",
									"id": 932,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createNFT",
									"nameLocation": "21702:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "21720:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "21712:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21712:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21711:12:0"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21732:0:0"
									},
									"scope": 933,
									"src": "21693:40:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2442,
							"src": "21668:68:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 934,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 917,
										"src": "22137:7:0"
									},
									"id": 935,
									"nodeType": "InheritanceSpecifier",
									"src": "22137:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2441,
							"linearizedBaseContracts": [
								2441,
								917,
								816
							],
							"name": "NFTMasterChef",
							"nameLocation": "22120:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 938,
									"libraryName": {
										"id": 936,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "22158:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "22152:27:0",
									"typeName": {
										"id": 937,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "22171:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 942,
									"libraryName": {
										"id": 939,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 797,
										"src": "22191:9:0"
									},
									"nodeType": "UsingForDirective",
									"src": "22185:27:0",
									"typeName": {
										"id": 941,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 940,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 286,
											"src": "22205:6:0"
										},
										"referencedDeclaration": 286,
										"src": "22205:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$286",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "NFTMasterChef.UserInfo",
									"id": 947,
									"members": [
										{
											"constant": false,
											"id": 944,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "22280:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 947,
											"src": "22272:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 943,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "22272:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 946,
											"mutability": "mutable",
											"name": "rewardDebt",
											"nameLocation": "22350:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 947,
											"src": "22342:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 945,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "22342:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nameLocation": "22252:8:0",
									"nodeType": "StructDefinition",
									"scope": 2441,
									"src": "22245:794:0",
									"visibility": "public"
								},
								{
									"canonicalName": "NFTMasterChef.PoolInfo",
									"id": 957,
									"members": [
										{
											"constant": false,
											"id": 950,
											"mutability": "mutable",
											"name": "lpToken",
											"nameLocation": "23106:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 957,
											"src": "23099:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$286",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 949,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 948,
													"name": "IERC20",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 286,
													"src": "23099:6:0"
												},
												"referencedDeclaration": 286,
												"src": "23099:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 952,
											"mutability": "mutable",
											"name": "allocPoint",
											"nameLocation": "23165:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 957,
											"src": "23157:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 951,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "23157:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 954,
											"mutability": "mutable",
											"name": "lastRewardBlock",
											"nameLocation": "23279:15:0",
											"nodeType": "VariableDeclaration",
											"scope": 957,
											"src": "23271:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 953,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "23271:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 956,
											"mutability": "mutable",
											"name": "accPowerPerShare",
											"nameLocation": "23367:16:0",
											"nodeType": "VariableDeclaration",
											"scope": 957,
											"src": "23359:24:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 955,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "23359:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolInfo",
									"nameLocation": "23079:8:0",
									"nodeType": "StructDefinition",
									"scope": 2441,
									"src": "23072:375:0",
									"visibility": "public"
								},
								{
									"canonicalName": "NFTMasterChef.NFTsInfo",
									"id": 963,
									"members": [
										{
											"constant": false,
											"id": 960,
											"mutability": "mutable",
											"name": "NFT",
											"nameLocation": "23490:3:0",
											"nodeType": "VariableDeclaration",
											"scope": 963,
											"src": "23482:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC721_$933",
												"typeString": "contract IERC721"
											},
											"typeName": {
												"id": 959,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 958,
													"name": "IERC721",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 933,
													"src": "23482:7:0"
												},
												"referencedDeclaration": 933,
												"src": "23482:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC721_$933",
													"typeString": "contract IERC721"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 962,
											"mutability": "mutable",
											"name": "power",
											"nameLocation": "23512:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 963,
											"src": "23504:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 961,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "23504:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "NFTsInfo",
									"nameLocation": "23462:8:0",
									"nodeType": "StructDefinition",
									"scope": 2441,
									"src": "23455:70:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "61c1b724",
									"id": 967,
									"mutability": "mutable",
									"name": "nftsInfo",
									"nameLocation": "23551:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 2441,
									"src": "23533:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_NFTsInfo_$963_storage_$dyn_storage",
										"typeString": "struct NFTMasterChef.NFTsInfo[]"
									},
									"typeName": {
										"baseType": {
											"id": 965,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 964,
												"name": "NFTsInfo",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 963,
												"src": "23533:8:0"
											},
											"referencedDeclaration": 963,
											"src": "23533:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_NFTsInfo_$963_storage_ptr",
												"typeString": "struct NFTMasterChef.NFTsInfo"
											}
										},
										"id": 966,
										"nodeType": "ArrayTypeName",
										"src": "23533:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_NFTsInfo_$963_storage_$dyn_storage_ptr",
											"typeString": "struct NFTMasterChef.NFTsInfo[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cb3cba55",
									"id": 970,
									"mutability": "mutable",
									"name": "DDT",
									"nameLocation": "23607:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 2441,
									"src": "23593:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$286",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 969,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 968,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 286,
											"src": "23593:6:0"
										},
										"referencedDeclaration": 286,
										"src": "23593:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$286",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5990c569",
									"id": 972,
									"mutability": "mutable",
									"name": "PowerPerBlock",
									"nameLocation": "23672:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 2441,
									"src": "23657:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 971,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "23657:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8aa28550",
									"id": 975,
									"mutability": "mutable",
									"name": "BONUS_MULTIPLIER",
									"nameLocation": "23755:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 2441,
									"src": "23740:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 973,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "23740:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 974,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "23774:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7cd07e47",
									"id": 978,
									"mutability": "mutable",
									"name": "migrator",
									"nameLocation": "23901:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 2441,
									"src": "23880:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IMigratorChef_$927",
										"typeString": "contract IMigratorChef"
									},
									"typeName": {
										"id": 977,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 976,
											"name": "IMigratorChef",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 927,
											"src": "23880:13:0"
										},
										"referencedDeclaration": 927,
										"src": "23880:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IMigratorChef_$927",
											"typeString": "contract IMigratorChef"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1526fe27",
									"id": 982,
									"mutability": "mutable",
									"name": "poolInfo",
									"nameLocation": "23961:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 2441,
									"src": "23943:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
										"typeString": "struct NFTMasterChef.PoolInfo[]"
									},
									"typeName": {
										"baseType": {
											"id": 980,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 979,
												"name": "PoolInfo",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 957,
												"src": "23943:8:0"
											},
											"referencedDeclaration": 957,
											"src": "23943:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
												"typeString": "struct NFTMasterChef.PoolInfo"
											}
										},
										"id": 981,
										"nodeType": "ArrayTypeName",
										"src": "23943:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage_ptr",
											"typeString": "struct NFTMasterChef.PoolInfo[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "93f1a40b",
									"id": 989,
									"mutability": "mutable",
									"name": "userInfo",
									"nameLocation": "24081:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 2441,
									"src": "24025:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$_$",
										"typeString": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo))"
									},
									"typeName": {
										"id": 988,
										"keyType": {
											"id": 983,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "24033:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "24025:48:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$_$",
											"typeString": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo))"
										},
										"valueType": {
											"id": 987,
											"keyType": {
												"id": 984,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "24052:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "24044:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$",
												"typeString": "mapping(address => struct NFTMasterChef.UserInfo)"
											},
											"valueType": {
												"id": 986,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 985,
													"name": "UserInfo",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 947,
													"src": "24063:8:0"
												},
												"referencedDeclaration": 947,
												"src": "24063:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
													"typeString": "struct NFTMasterChef.UserInfo"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "17caf6f1",
									"id": 992,
									"mutability": "mutable",
									"name": "totalAllocPoint",
									"nameLocation": "24199:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 2441,
									"src": "24184:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 990,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "24184:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 991,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "24217:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "48cd4cb1",
									"id": 994,
									"mutability": "mutable",
									"name": "startBlock",
									"nameLocation": "24291:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 2441,
									"src": "24276:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 993,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "24276:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "83e32135",
									"id": 996,
									"mutability": "mutable",
									"name": "NFTStakeAddress",
									"nameLocation": "24325:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 2441,
									"src": "24310:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 995,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "24310:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "71916982",
									"id": 998,
									"mutability": "mutable",
									"name": "DDTMasterchef",
									"nameLocation": "24362:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 2441,
									"src": "24347:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 997,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "24347:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d209db8c",
									"id": 1002,
									"mutability": "mutable",
									"name": "powerBalance",
									"nameLocation": "24419:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 2441,
									"src": "24384:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1001,
										"keyType": {
											"id": 999,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "24392:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "24384:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1000,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "24403:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1010,
									"name": "Deposit",
									"nameLocation": "24446:7:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "24470:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "24454:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "24492:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "24476:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24476:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "24505:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "24497:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24497:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24453:59:0"
									},
									"src": "24440:73:0"
								},
								{
									"anonymous": false,
									"id": 1018,
									"name": "Withdraw",
									"nameLocation": "24525:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "24550:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "24534:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24534:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "24572:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "24556:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24556:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "24585:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "24577:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24577:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24533:59:0"
									},
									"src": "24519:74:0"
								},
								{
									"anonymous": false,
									"id": 1026,
									"name": "EmergencyWithdraw",
									"nameLocation": "24605:17:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "24649:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "24633:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24633:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "24680:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "24664:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24664:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "24702:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "24694:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24694:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24622:93:0"
									},
									"src": "24599:117:0"
								},
								{
									"body": {
										"id": 1063,
										"nodeType": "Block",
										"src": "24828:358:0",
										"statements": [
											{
												"expression": {
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1036,
														"name": "DDT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 970,
														"src": "24839:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$286",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1037,
														"name": "_DDT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "24845:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$286",
															"typeString": "contract IERC20"
														}
													},
													"src": "24839:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"id": 1039,
												"nodeType": "ExpressionStatement",
												"src": "24839:10:0"
											},
											{
												"expression": {
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1040,
														"name": "PowerPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "24860:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1041,
														"name": "_PowerPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1031,
														"src": "24876:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24860:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "24860:30:0"
											},
											{
												"expression": {
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1044,
														"name": "startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "24901:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1045,
														"name": "_startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "24914:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24901:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1047,
												"nodeType": "ExpressionStatement",
												"src": "24901:24:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1052,
																	"name": "DDT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 970,
																	"src": "25018:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"hexValue": "31303030",
																	"id": 1053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25048:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																},
																{
																	"id": 1054,
																	"name": "startBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 994,
																	"src": "25084:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 1055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25127:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1051,
																"name": "PoolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 957,
																"src": "24985:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_PoolInfo_$957_storage_ptr_$",
																	"typeString": "type(struct NFTMasterChef.PoolInfo storage pointer)"
																}
															},
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [
																"lpToken",
																"allocPoint",
																"lastRewardBlock",
																"accPowerPerShare"
															],
															"nodeType": "FunctionCall",
															"src": "24985:155:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_memory_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PoolInfo_$957_memory_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo memory"
															}
														],
														"expression": {
															"id": 1048,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "24971:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
																"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 1050,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "24971:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage_ptr_$_t_struct$_PoolInfo_$957_storage_$returns$__$bound_to$_t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct NFTMasterChef.PoolInfo storage ref[] storage pointer,struct NFTMasterChef.PoolInfo storage ref)"
														}
													},
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24971:170:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1058,
												"nodeType": "ExpressionStatement",
												"src": "24971:170:0"
											},
											{
												"expression": {
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1059,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "25154:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31303030",
														"id": 1060,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25172:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "25154:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1062,
												"nodeType": "ExpressionStatement",
												"src": "25154:22:0"
											}
										]
									},
									"id": 1064,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "_DDT",
												"nameLocation": "24753:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "24746:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1028,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1027,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "24746:6:0"
													},
													"referencedDeclaration": 286,
													"src": "24746:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "_PowerPerBlock",
												"nameLocation": "24776:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "24768:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24768:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "_startBlock",
												"nameLocation": "24809:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "24801:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24801:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24735:92:0"
									},
									"returnParameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24828:0:0"
									},
									"scope": 2441,
									"src": "24724:462:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1075,
										"nodeType": "Block",
										"src": "25267:53:0",
										"statements": [
											{
												"expression": {
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1071,
														"name": "NFTStakeAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "25278:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1072,
														"name": "_NFTStakeAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "25296:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "25278:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1074,
												"nodeType": "ExpressionStatement",
												"src": "25278:34:0"
											}
										]
									},
									"functionSelector": "0ba33a58",
									"id": 1076,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1069,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1068,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "25258:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25258:9:0"
										}
									],
									"name": "updateNFTStakeAddress",
									"nameLocation": "25203:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "_NFTStakeAddress",
												"nameLocation": "25233:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "25225:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25225:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25224:26:0"
									},
									"returnParameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25267:0:0"
									},
									"scope": 2441,
									"src": "25194:126:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1087,
										"nodeType": "Block",
										"src": "25399:47:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1083,
														"name": "powerBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1002,
														"src": "25417:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1085,
													"indexExpression": {
														"id": 1084,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1078,
														"src": "25430:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "25417:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1082,
												"id": 1086,
												"nodeType": "Return",
												"src": "25410:28:0"
											}
										]
									},
									"functionSelector": "8c51793b",
									"id": 1088,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPowerBalance",
									"nameLocation": "25337:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "25361:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "25353:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25353:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25352:17:0"
									},
									"returnParameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "25390:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25390:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25389:9:0"
									},
									"scope": 2441,
									"src": "25328:118:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1107,
										"nodeType": "Block",
										"src": "25517:143:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1102,
																	"name": "_NFT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1091,
																	"src": "25589:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC721_$933",
																		"typeString": "contract IERC721"
																	}
																},
																{
																	"id": 1103,
																	"name": "_power",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1093,
																	"src": "25619:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC721_$933",
																		"typeString": "contract IERC721"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1101,
																"name": "NFTsInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 963,
																"src": "25556:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_NFTsInfo_$963_storage_ptr_$",
																	"typeString": "type(struct NFTMasterChef.NFTsInfo storage pointer)"
																}
															},
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [
																"NFT",
																"power"
															],
															"nodeType": "FunctionCall",
															"src": "25556:85:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTsInfo_$963_memory_ptr",
																"typeString": "struct NFTMasterChef.NFTsInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_NFTsInfo_$963_memory_ptr",
																"typeString": "struct NFTMasterChef.NFTsInfo memory"
															}
														],
														"expression": {
															"id": 1098,
															"name": "nftsInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "25528:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_NFTsInfo_$963_storage_$dyn_storage",
																"typeString": "struct NFTMasterChef.NFTsInfo storage ref[] storage ref"
															}
														},
														"id": 1100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "25528:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_NFTsInfo_$963_storage_$dyn_storage_ptr_$_t_struct$_NFTsInfo_$963_storage_$returns$__$bound_to$_t_array$_t_struct$_NFTsInfo_$963_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct NFTMasterChef.NFTsInfo storage ref[] storage pointer,struct NFTMasterChef.NFTsInfo storage ref)"
														}
													},
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25528:124:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1106,
												"nodeType": "ExpressionStatement",
												"src": "25528:124:0"
											}
										]
									},
									"functionSelector": "4ea2813c",
									"id": 1108,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1096,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1095,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "25507:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25507:9:0"
										}
									],
									"name": "addNFT",
									"nameLocation": "25463:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "_NFT",
												"nameLocation": "25478:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "25470:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC721_$933",
													"typeString": "contract IERC721"
												},
												"typeName": {
													"id": 1090,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1089,
														"name": "IERC721",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 933,
														"src": "25470:7:0"
													},
													"referencedDeclaration": 933,
													"src": "25470:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$933",
														"typeString": "contract IERC721"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "_power",
												"nameLocation": "25492:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "25484:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25484:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25469:30:0"
									},
									"returnParameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25517:0:0"
									},
									"scope": 2441,
									"src": "25454:206:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1124,
										"nodeType": "Block",
										"src": "25735:49:0",
										"statements": [
											{
												"expression": {
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1117,
																"name": "nftsInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 967,
																"src": "25746:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_NFTsInfo_$963_storage_$dyn_storage",
																	"typeString": "struct NFTMasterChef.NFTsInfo storage ref[] storage ref"
																}
															},
															"id": 1119,
															"indexExpression": {
																"id": 1118,
																"name": "level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1110,
																"src": "25755:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "25746:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTsInfo_$963_storage",
																"typeString": "struct NFTMasterChef.NFTsInfo storage ref"
															}
														},
														"id": 1120,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "power",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 962,
														"src": "25746:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1121,
														"name": "_power",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "25770:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25746:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1123,
												"nodeType": "ExpressionStatement",
												"src": "25746:30:0"
											}
										]
									},
									"functionSelector": "c11490cc",
									"id": 1125,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1115,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1114,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "25725:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25725:9:0"
										}
									],
									"name": "updateNFT",
									"nameLocation": "25677:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "level",
												"nameLocation": "25695:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "25687:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "_power",
												"nameLocation": "25710:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "25702:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25702:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25686:31:0"
									},
									"returnParameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25735:0:0"
									},
									"scope": 2441,
									"src": "25668:116:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1303,
										"nodeType": "Block",
										"src": "25852:1208:0",
										"statements": [
											{
												"assignments": [
													1134
												],
												"declarations": [
													{
														"constant": false,
														"id": 1134,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "25880:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1303,
														"src": "25863:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo"
														},
														"typeName": {
															"id": 1133,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1132,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 957,
																"src": "25863:8:0"
															},
															"referencedDeclaration": 957,
															"src": "25863:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1138,
												"initialValue": {
													"baseExpression": {
														"id": 1135,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "25887:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1137,
													"indexExpression": {
														"id": 1136,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "25896:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "25887:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
														"typeString": "struct NFTMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25863:38:0"
											},
											{
												"assignments": [
													1141
												],
												"declarations": [
													{
														"constant": false,
														"id": 1141,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "25929:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1303,
														"src": "25912:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
															"typeString": "struct NFTMasterChef.UserInfo"
														},
														"typeName": {
															"id": 1140,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1139,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 947,
																"src": "25912:8:0"
															},
															"referencedDeclaration": 947,
															"src": "25912:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1148,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1142,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "25936:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo storage ref))"
															}
														},
														"id": 1144,
														"indexExpression": {
															"id": 1143,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "25945:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "25936:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$",
															"typeString": "mapping(address => struct NFTMasterChef.UserInfo storage ref)"
														}
													},
													"id": 1147,
													"indexExpression": {
														"expression": {
															"id": 1145,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "25951:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "25951:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "25936:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$947_storage",
														"typeString": "struct NFTMasterChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25912:50:0"
											},
											{
												"assignments": [
													1150
												],
												"declarations": [
													{
														"constant": false,
														"id": 1150,
														"mutability": "mutable",
														"name": "accPowerPerShare",
														"nameLocation": "25981:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 1303,
														"src": "25973:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1149,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25973:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1153,
												"initialValue": {
													"expression": {
														"id": 1151,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1134,
														"src": "26000:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
														}
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "accPowerPerShare",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 956,
													"src": "26000:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25973:48:0"
											},
											{
												"assignments": [
													1155
												],
												"declarations": [
													{
														"constant": false,
														"id": 1155,
														"mutability": "mutable",
														"name": "lpSupply",
														"nameLocation": "26040:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1303,
														"src": "26032:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1154,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26032:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1164,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1161,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "26082:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2441",
																		"typeString": "contract NFTMasterChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2441",
																		"typeString": "contract NFTMasterChef"
																	}
																],
																"id": 1160,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "26074:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1159,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "26074:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26074:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 1156,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1134,
																"src": "26051:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																	"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																}
															},
															"id": 1157,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 950,
															"src": "26051:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"id": 1158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 208,
														"src": "26051:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26051:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26032:56:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1169,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1165,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "26103:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "26103:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"id": 1167,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1134,
																"src": "26118:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																	"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																}
															},
															"id": 1168,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastRewardBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 954,
															"src": "26118:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "26103:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1172,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1170,
															"name": "lpSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1155,
															"src": "26142:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26154:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "26142:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "26103:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1211,
												"nodeType": "IfStatement",
												"src": "26099:354:0",
												"trueBody": {
													"id": 1210,
													"nodeType": "Block",
													"src": "26157:296:0",
													"statements": [
														{
															"assignments": [
																1175
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1175,
																	"mutability": "mutable",
																	"name": "multiplier",
																	"nameLocation": "26180:10:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1210,
																	"src": "26172:18:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1174,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "26172:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1182,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1177,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1134,
																			"src": "26207:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																				"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 1178,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lastRewardBlock",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 954,
																		"src": "26207:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1179,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "26229:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1180,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "26229:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1176,
																	"name": "getMultiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1521,
																	"src": "26193:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256)"
																	}
																},
																"id": 1181,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26193:49:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "26172:70:0"
														},
														{
															"assignments": [
																1184
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1184,
																	"mutability": "mutable",
																	"name": "PowerReward",
																	"nameLocation": "26265:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1210,
																	"src": "26257:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1183,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "26257:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1196,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1194,
																		"name": "totalAllocPoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 992,
																		"src": "26334:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1190,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1134,
																					"src": "26313:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																						"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																					}
																				},
																				"id": 1191,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allocPoint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 952,
																				"src": "26313:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1187,
																						"name": "PowerPerBlock",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 972,
																						"src": "26294:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1185,
																						"name": "multiplier",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1175,
																						"src": "26279:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1186,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 107,
																					"src": "26279:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1188,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "26279:29:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1189,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 107,
																			"src": "26279:33:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "26279:50:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 124,
																	"src": "26279:54:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1195,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26279:71:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "26257:93:0"
														},
														{
															"expression": {
																"id": 1208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1197,
																	"name": "accPowerPerShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1150,
																	"src": "26365:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1205,
																					"name": "lpSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1155,
																					"src": "26431:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "31653132",
																							"id": 1202,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "26421:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							},
																							"value": "1e12"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							}
																						],
																						"expression": {
																							"id": 1200,
																							"name": "PowerReward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1184,
																							"src": "26405:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1201,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 107,
																						"src": "26405:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1203,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "26405:21:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1204,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 124,
																				"src": "26405:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1206,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "26405:35:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1198,
																			"name": "accPowerPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1150,
																			"src": "26384:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1199,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 27,
																		"src": "26384:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "26384:57:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "26365:76:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1209,
															"nodeType": "ExpressionStatement",
															"src": "26365:76:0"
														}
													]
												}
											},
											{
												"assignments": [
													1213
												],
												"declarations": [
													{
														"constant": false,
														"id": 1213,
														"mutability": "mutable",
														"name": "pending",
														"nameLocation": "26471:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1303,
														"src": "26463:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1212,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26463:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1226,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1223,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1141,
																"src": "26529:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																	"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																}
															},
															"id": 1224,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 946,
															"src": "26529:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653132",
																	"id": 1220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26519:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	},
																	"value": "1e12"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1217,
																			"name": "accPowerPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1150,
																			"src": "26497:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1214,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1141,
																				"src": "26481:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																					"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																				}
																			},
																			"id": 1215,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 944,
																			"src": "26481:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 107,
																		"src": "26481:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "26481:33:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 124,
																"src": "26481:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26481:43:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1222,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "26481:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26481:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26463:82:0"
											},
											{
												"assignments": [
													1229
												],
												"declarations": [
													{
														"constant": false,
														"id": 1229,
														"mutability": "mutable",
														"name": "nft",
														"nameLocation": "26573:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 1303,
														"src": "26556:20:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFTsInfo_$963_storage_ptr",
															"typeString": "struct NFTMasterChef.NFTsInfo"
														},
														"typeName": {
															"id": 1228,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1227,
																"name": "NFTsInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 963,
																"src": "26556:8:0"
															},
															"referencedDeclaration": 963,
															"src": "26556:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTsInfo_$963_storage_ptr",
																"typeString": "struct NFTMasterChef.NFTsInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1233,
												"initialValue": {
													"baseExpression": {
														"id": 1230,
														"name": "nftsInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "26579:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_NFTsInfo_$963_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.NFTsInfo storage ref[] storage ref"
														}
													},
													"id": 1232,
													"indexExpression": {
														"id": 1231,
														"name": "level",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1127,
														"src": "26588:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "26579:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NFTsInfo_$963_storage",
														"typeString": "struct NFTMasterChef.NFTsInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26556:38:0"
											},
											{
												"assignments": [
													1235
												],
												"declarations": [
													{
														"constant": false,
														"id": 1235,
														"mutability": "mutable",
														"name": "total",
														"nameLocation": "26613:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1303,
														"src": "26605:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1234,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26605:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1243,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1238,
																"name": "powerBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "26633:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1241,
															"indexExpression": {
																"expression": {
																	"id": 1239,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "26646:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "26646:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "26633:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1236,
															"name": "pending",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1213,
															"src": "26621:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 27,
														"src": "26621:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26621:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26605:53:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1244,
														"name": "total",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1235,
														"src": "26672:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 1245,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1229,
															"src": "26680:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTsInfo_$963_storage_ptr",
																"typeString": "struct NFTMasterChef.NFTsInfo storage pointer"
															}
														},
														"id": 1246,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "power",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 962,
														"src": "26680:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26672:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1268,
												"nodeType": "IfStatement",
												"src": "26669:188:0",
												"trueBody": {
													"id": 1267,
													"nodeType": "Block",
													"src": "26690:167:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1248,
																	"name": "_pid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1129,
																	"src": "26708:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26716:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "26708:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1256,
															"nodeType": "IfStatement",
															"src": "26705:63:0",
															"trueBody": {
																"id": 1255,
																"nodeType": "Block",
																"src": "26718:50:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1252,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "26750:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1251,
																				"name": "leaveStaking",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2371,
																				"src": "26737:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 1253,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "26737:15:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1254,
																		"nodeType": "ExpressionStatement",
																		"src": "26737:15:0"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1257,
																	"name": "_pid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1129,
																	"src": "26785:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26793:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "26785:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1266,
															"nodeType": "IfStatement",
															"src": "26782:64:0",
															"trueBody": {
																"id": 1265,
																"nodeType": "Block",
																"src": "26795:51:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1261,
																					"name": "_pid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1129,
																					"src": "26823:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1262,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "26828:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1260,
																				"name": "withdraw",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1985,
																				"src": "26814:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (uint256,uint256)"
																				}
																			},
																			"id": 1263,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "26814:16:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1264,
																		"nodeType": "ExpressionStatement",
																		"src": "26814:16:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1270,
																	"name": "nft",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1229,
																	"src": "26875:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NFTsInfo_$963_storage_ptr",
																		"typeString": "struct NFTMasterChef.NFTsInfo storage pointer"
																	}
																},
																"id": 1271,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "power",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 962,
																"src": "26875:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"baseExpression": {
																	"id": 1272,
																	"name": "powerBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1002,
																	"src": "26887:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1275,
																"indexExpression": {
																	"expression": {
																		"id": 1273,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "26900:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "26900:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "26887:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26875:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f776572206973206e6f7420656e6f756768",
															"id": 1277,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26913:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406",
																"typeString": "literal_string \"Power is not enough\""
															},
															"value": "Power is not enough"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406",
																"typeString": "literal_string \"Power is not enough\""
															}
														],
														"id": 1269,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "26867:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26867:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1279,
												"nodeType": "ExpressionStatement",
												"src": "26867:68:0"
											},
											{
												"expression": {
													"id": 1292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1280,
															"name": "powerBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "26946:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1283,
														"indexExpression": {
															"expression": {
																"id": 1281,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "26959:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "26959:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "26946:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1289,
																	"name": "nft",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1229,
																	"src": "27002:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NFTsInfo_$963_storage_ptr",
																		"typeString": "struct NFTMasterChef.NFTsInfo storage pointer"
																	}
																},
																"id": 1290,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "power",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 962,
																"src": "27002:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1284,
																	"name": "powerBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1002,
																	"src": "26973:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1287,
																"indexExpression": {
																	"expression": {
																		"id": 1285,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "26986:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "26986:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "26973:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 44,
															"src": "26973:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1291,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26973:39:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26946:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1293,
												"nodeType": "ExpressionStatement",
												"src": "26946:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1299,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "27041:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "27041:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 1294,
																"name": "nft",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1229,
																"src": "27023:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFTsInfo_$963_storage_ptr",
																	"typeString": "struct NFTMasterChef.NFTsInfo storage pointer"
																}
															},
															"id": 1297,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "NFT",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 960,
															"src": "27023:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$933",
																"typeString": "contract IERC721"
															}
														},
														"id": 1298,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "createNFT",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 932,
														"src": "27023:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address) external"
														}
													},
													"id": 1301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27023:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1302,
												"nodeType": "ExpressionStatement",
												"src": "27023:29:0"
											}
										]
									},
									"functionSelector": "1d5fbd87",
									"id": 1304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimNFTReward",
									"nameLocation": "25801:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "level",
												"nameLocation": "25824:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "25816:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25816:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "25839:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "25831:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25831:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25815:29:0"
									},
									"returnParameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25852:0:0"
									},
									"scope": 2441,
									"src": "25792:1268:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1315,
										"nodeType": "Block",
										"src": "27137:54:0",
										"statements": [
											{
												"expression": {
													"id": 1313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1311,
														"name": "BONUS_MULTIPLIER",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 975,
														"src": "27148:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1312,
														"name": "multiplierNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1306,
														"src": "27167:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27148:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1314,
												"nodeType": "ExpressionStatement",
												"src": "27148:35:0"
											}
										]
									},
									"functionSelector": "5ffe6146",
									"id": 1316,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1309,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1308,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "27127:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "27127:9:0"
										}
									],
									"name": "updateMultiplier",
									"nameLocation": "27077:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "multiplierNumber",
												"nameLocation": "27102:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "27094:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27094:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27093:26:0"
									},
									"returnParameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27137:0:0"
									},
									"scope": 2441,
									"src": "27068:123:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1324,
										"nodeType": "Block",
										"src": "27253:41:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1321,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "27271:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "27271:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1320,
												"id": 1323,
												"nodeType": "Return",
												"src": "27264:22:0"
											}
										]
									},
									"functionSelector": "081e3eda",
									"id": 1325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "poolLength",
									"nameLocation": "27208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27218:2:0"
									},
									"returnParameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "27244:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27244:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27243:9:0"
									},
									"scope": 2441,
									"src": "27199:95:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1372,
										"nodeType": "Block",
										"src": "27551:472:0",
										"statements": [
											{
												"condition": {
													"id": 1337,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1332,
													"src": "27566:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1342,
												"nodeType": "IfStatement",
												"src": "27562:61:0",
												"trueBody": {
													"id": 1341,
													"nodeType": "Block",
													"src": "27579:44:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1338,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1648,
																	"src": "27594:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27594:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1340,
															"nodeType": "ExpressionStatement",
															"src": "27594:17:0"
														}
													]
												}
											},
											{
												"assignments": [
													1344
												],
												"declarations": [
													{
														"constant": false,
														"id": 1344,
														"mutability": "mutable",
														"name": "lastRewardBlock",
														"nameLocation": "27641:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 1372,
														"src": "27633:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1343,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "27633:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1353,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1345,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "27659:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "27659:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1347,
															"name": "startBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "27674:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "27659:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1351,
														"name": "startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "27702:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "27659:53:0",
													"trueExpression": {
														"expression": {
															"id": 1349,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "27687:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1350,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "27687:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27633:79:0"
											},
											{
												"expression": {
													"id": 1359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1354,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "27723:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1357,
																"name": "_allocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1327,
																"src": "27761:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1355,
																"name": "totalAllocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 992,
																"src": "27741:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 27,
															"src": "27741:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1358,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27741:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27723:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1360,
												"nodeType": "ExpressionStatement",
												"src": "27723:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1365,
																	"name": "_lpToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1330,
																	"src": "27849:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 1366,
																	"name": "_allocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1327,
																	"src": "27888:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1367,
																	"name": "lastRewardBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1344,
																	"src": "27935:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 1368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27987:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1364,
																"name": "PoolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 957,
																"src": "27812:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_PoolInfo_$957_storage_ptr_$",
																	"typeString": "type(struct NFTMasterChef.PoolInfo storage pointer)"
																}
															},
															"id": 1369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [
																"lpToken",
																"allocPoint",
																"lastRewardBlock",
																"accPowerPerShare"
															],
															"nodeType": "FunctionCall",
															"src": "27812:192:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_memory_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PoolInfo_$957_memory_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo memory"
															}
														],
														"expression": {
															"id": 1361,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "27784:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
																"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 1363,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "27784:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage_ptr_$_t_struct$_PoolInfo_$957_storage_$returns$__$bound_to$_t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct NFTMasterChef.PoolInfo storage ref[] storage pointer,struct NFTMasterChef.PoolInfo storage ref)"
														}
													},
													"id": 1370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27784:231:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1371,
												"nodeType": "ExpressionStatement",
												"src": "27784:231:0"
											}
										]
									},
									"functionSelector": "1eaaa045",
									"id": 1373,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1335,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1334,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "27541:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "27541:9:0"
										}
									],
									"name": "add",
									"nameLocation": "27472:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nameLocation": "27485:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "27477:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27477:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "_lpToken",
												"nameLocation": "27505:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "27498:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1329,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1328,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "27498:6:0"
													},
													"referencedDeclaration": 286,
													"src": "27498:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nameLocation": "27520:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "27515:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1331,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "27515:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27475:58:0"
									},
									"returnParameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27551:0:0"
									},
									"scope": 2441,
									"src": "27463:560:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1410,
										"nodeType": "Block",
										"src": "28204:221:0",
										"statements": [
											{
												"condition": {
													"id": 1384,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1379,
													"src": "28219:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1389,
												"nodeType": "IfStatement",
												"src": "28215:61:0",
												"trueBody": {
													"id": 1388,
													"nodeType": "Block",
													"src": "28232:44:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1385,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1648,
																	"src": "28247:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28247:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1387,
															"nodeType": "ExpressionStatement",
															"src": "28247:17:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1390,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "28286:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1399,
																"name": "_allocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1377,
																"src": "28355:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 1393,
																				"name": "poolInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 982,
																				"src": "28324:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
																					"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
																				}
																			},
																			"id": 1395,
																			"indexExpression": {
																				"id": 1394,
																				"name": "_pid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1375,
																				"src": "28333:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "28324:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
																				"typeString": "struct NFTMasterChef.PoolInfo storage ref"
																			}
																		},
																		"id": 1396,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "allocPoint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 952,
																		"src": "28324:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1391,
																		"name": "totalAllocPoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 992,
																		"src": "28304:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "28304:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28304:46:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 27,
															"src": "28304:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1400,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28304:63:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28286:81:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1402,
												"nodeType": "ExpressionStatement",
												"src": "28286:81:0"
											},
											{
												"expression": {
													"id": 1408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1403,
																"name": "poolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 982,
																"src": "28378:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
																	"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
																}
															},
															"id": 1405,
															"indexExpression": {
																"id": 1404,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1375,
																"src": "28387:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "28378:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
																"typeString": "struct NFTMasterChef.PoolInfo storage ref"
															}
														},
														"id": 1406,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "allocPoint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 952,
														"src": "28378:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1407,
														"name": "_allocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1377,
														"src": "28406:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28378:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1409,
												"nodeType": "ExpressionStatement",
												"src": "28378:39:0"
											}
										]
									},
									"functionSelector": "64482f79",
									"id": 1411,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1382,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1381,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "28194:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28194:9:0"
										}
									],
									"name": "set",
									"nameLocation": "28129:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "28142:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "28134:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28134:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nameLocation": "28156:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "28148:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28148:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nameLocation": "28174:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "28169:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1378,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28169:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28132:54:0"
									},
									"returnParameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28204:0:0"
									},
									"scope": 2441,
									"src": "28120:305:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1423,
										"nodeType": "Block",
										"src": "28564:39:0",
										"statements": [
											{
												"expression": {
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1419,
														"name": "migrator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "28575:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMigratorChef_$927",
															"typeString": "contract IMigratorChef"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1420,
														"name": "_migrator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1414,
														"src": "28586:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMigratorChef_$927",
															"typeString": "contract IMigratorChef"
														}
													},
													"src": "28575:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMigratorChef_$927",
														"typeString": "contract IMigratorChef"
													}
												},
												"id": 1422,
												"nodeType": "ExpressionStatement",
												"src": "28575:20:0"
											}
										]
									},
									"functionSelector": "23cf3118",
									"id": 1424,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1417,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1416,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "28554:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28554:9:0"
										}
									],
									"name": "setMigrator",
									"nameLocation": "28510:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "_migrator",
												"nameLocation": "28536:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "28522:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IMigratorChef_$927",
													"typeString": "contract IMigratorChef"
												},
												"typeName": {
													"id": 1413,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1412,
														"name": "IMigratorChef",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 927,
														"src": "28522:13:0"
													},
													"referencedDeclaration": 927,
													"src": "28522:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMigratorChef_$927",
														"typeString": "contract IMigratorChef"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28521:25:0"
									},
									"returnParameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28564:0:0"
									},
									"scope": 2441,
									"src": "28501:102:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1502,
										"nodeType": "Block",
										"src": "28764:453:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1432,
																		"name": "migrator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 978,
																		"src": "28791:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IMigratorChef_$927",
																			"typeString": "contract IMigratorChef"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IMigratorChef_$927",
																			"typeString": "contract IMigratorChef"
																		}
																	],
																	"id": 1431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "28783:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1430,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "28783:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1433,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28783:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1436,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28812:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "28804:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1434,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "28804:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1437,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28804:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "28783:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6d6967726174653a206e6f206d69677261746f72",
															"id": 1439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28816:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445",
																"typeString": "literal_string \"migrate: no migrator\""
															},
															"value": "migrate: no migrator"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445",
																"typeString": "literal_string \"migrate: no migrator\""
															}
														],
														"id": 1429,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "28775:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28775:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1441,
												"nodeType": "ExpressionStatement",
												"src": "28775:64:0"
											},
											{
												"assignments": [
													1444
												],
												"declarations": [
													{
														"constant": false,
														"id": 1444,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "28867:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1502,
														"src": "28850:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo"
														},
														"typeName": {
															"id": 1443,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1442,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 957,
																"src": "28850:8:0"
															},
															"referencedDeclaration": 957,
															"src": "28850:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1448,
												"initialValue": {
													"baseExpression": {
														"id": 1445,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "28874:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1447,
													"indexExpression": {
														"id": 1446,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1426,
														"src": "28883:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "28874:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
														"typeString": "struct NFTMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28850:38:0"
											},
											{
												"assignments": [
													1451
												],
												"declarations": [
													{
														"constant": false,
														"id": 1451,
														"mutability": "mutable",
														"name": "lpToken",
														"nameLocation": "28906:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1502,
														"src": "28899:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$286",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 1450,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1449,
																"name": "IERC20",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 286,
																"src": "28899:6:0"
															},
															"referencedDeclaration": 286,
															"src": "28899:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1454,
												"initialValue": {
													"expression": {
														"id": 1452,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1444,
														"src": "28916:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
														}
													},
													"id": 1453,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "lpToken",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 950,
													"src": "28916:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28899:29:0"
											},
											{
												"assignments": [
													1456
												],
												"declarations": [
													{
														"constant": false,
														"id": 1456,
														"mutability": "mutable",
														"name": "bal",
														"nameLocation": "28947:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 1502,
														"src": "28939:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1455,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "28939:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1464,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1461,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "28979:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2441",
																		"typeString": "contract NFTMasterChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2441",
																		"typeString": "contract NFTMasterChef"
																	}
																],
																"id": 1460,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "28971:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1459,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "28971:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28971:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1457,
															"name": "lpToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1451,
															"src": "28953:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"id": 1458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 208,
														"src": "28953:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28953:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28939:46:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1470,
																	"name": "migrator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 978,
																	"src": "29024:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IMigratorChef_$927",
																		"typeString": "contract IMigratorChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IMigratorChef_$927",
																		"typeString": "contract IMigratorChef"
																	}
																],
																"id": 1469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29016:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1468,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29016:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29016:17:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1472,
															"name": "bal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1456,
															"src": "29035:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1465,
															"name": "lpToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1451,
															"src": "28996:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"id": 1467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 674,
														"src": "28996:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$286_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28996:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1474,
												"nodeType": "ExpressionStatement",
												"src": "28996:43:0"
											},
											{
												"assignments": [
													1477
												],
												"declarations": [
													{
														"constant": false,
														"id": 1477,
														"mutability": "mutable",
														"name": "newLpToken",
														"nameLocation": "29057:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1502,
														"src": "29050:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$286",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 1476,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1475,
																"name": "IERC20",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 286,
																"src": "29050:6:0"
															},
															"referencedDeclaration": 286,
															"src": "29050:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1482,
												"initialValue": {
													"arguments": [
														{
															"id": 1480,
															"name": "lpToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1451,
															"src": "29087:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														],
														"expression": {
															"id": 1478,
															"name": "migrator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 978,
															"src": "29070:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMigratorChef_$927",
																"typeString": "contract IMigratorChef"
															}
														},
														"id": 1479,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "migrate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 926,
														"src": "29070:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$286_$returns$_t_contract$_IERC20_$286_$",
															"typeString": "function (contract IERC20) external returns (contract IERC20)"
														}
													},
													"id": 1481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29070:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29050:45:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1484,
																"name": "bal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1456,
																"src": "29114:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1489,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "29150:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_NFTMasterChef_$2441",
																					"typeString": "contract NFTMasterChef"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_NFTMasterChef_$2441",
																					"typeString": "contract NFTMasterChef"
																				}
																			],
																			"id": 1488,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "29142:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1487,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "29142:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "29142:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1485,
																		"name": "newLpToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1477,
																		"src": "29121:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$286",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 208,
																	"src": "29121:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1491,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29121:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29114:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6d6967726174653a20626164",
															"id": 1493,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29158:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8",
																"typeString": "literal_string \"migrate: bad\""
															},
															"value": "migrate: bad"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8",
																"typeString": "literal_string \"migrate: bad\""
															}
														],
														"id": 1483,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "29106:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29106:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1495,
												"nodeType": "ExpressionStatement",
												"src": "29106:67:0"
											},
											{
												"expression": {
													"id": 1500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1496,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1444,
															"src": "29184:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
															}
														},
														"id": 1498,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lpToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 950,
														"src": "29184:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$286",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1499,
														"name": "newLpToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1477,
														"src": "29199:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$286",
															"typeString": "contract IERC20"
														}
													},
													"src": "29184:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"id": 1501,
												"nodeType": "ExpressionStatement",
												"src": "29184:25:0"
											}
										]
									},
									"functionSelector": "454b0608",
									"id": 1503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "migrate",
									"nameLocation": "28735:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "28751:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "28743:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28743:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28742:14:0"
									},
									"returnParameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28764:0:0"
									},
									"scope": 2441,
									"src": "28726:491:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1520,
										"nodeType": "Block",
										"src": "29374:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1517,
															"name": "BONUS_MULTIPLIER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "29412:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1514,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1505,
																	"src": "29401:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1512,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1507,
																	"src": "29393:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 44,
																"src": "29393:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29393:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1516,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 107,
														"src": "29393:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29393:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1511,
												"id": 1519,
												"nodeType": "Return",
												"src": "29386:43:0"
											}
										]
									},
									"functionSelector": "8dbb1e3a",
									"id": 1521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMultiplier",
									"nameLocation": "29302:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "29324:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "29316:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29316:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "29339:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "29331:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29331:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29315:28:0"
									},
									"returnParameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "29365:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29365:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29364:9:0"
									},
									"scope": 2441,
									"src": "29293:144:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1622,
										"nodeType": "Block",
										"src": "29584:685:0",
										"statements": [
											{
												"assignments": [
													1532
												],
												"declarations": [
													{
														"constant": false,
														"id": 1532,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "29612:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1622,
														"src": "29595:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo"
														},
														"typeName": {
															"id": 1531,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1530,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 957,
																"src": "29595:8:0"
															},
															"referencedDeclaration": 957,
															"src": "29595:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1536,
												"initialValue": {
													"baseExpression": {
														"id": 1533,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "29619:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1535,
													"indexExpression": {
														"id": 1534,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1523,
														"src": "29628:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "29619:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
														"typeString": "struct NFTMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29595:38:0"
											},
											{
												"assignments": [
													1539
												],
												"declarations": [
													{
														"constant": false,
														"id": 1539,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "29661:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1622,
														"src": "29644:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
															"typeString": "struct NFTMasterChef.UserInfo"
														},
														"typeName": {
															"id": 1538,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1537,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 947,
																"src": "29644:8:0"
															},
															"referencedDeclaration": 947,
															"src": "29644:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1545,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1540,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "29668:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo storage ref))"
															}
														},
														"id": 1542,
														"indexExpression": {
															"id": 1541,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1523,
															"src": "29677:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "29668:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$",
															"typeString": "mapping(address => struct NFTMasterChef.UserInfo storage ref)"
														}
													},
													"id": 1544,
													"indexExpression": {
														"id": 1543,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1525,
														"src": "29683:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "29668:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$947_storage",
														"typeString": "struct NFTMasterChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29644:45:0"
											},
											{
												"assignments": [
													1547
												],
												"declarations": [
													{
														"constant": false,
														"id": 1547,
														"mutability": "mutable",
														"name": "accPowerPerShare",
														"nameLocation": "29708:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 1622,
														"src": "29700:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1546,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29700:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1550,
												"initialValue": {
													"expression": {
														"id": 1548,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1532,
														"src": "29727:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
														}
													},
													"id": 1549,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "accPowerPerShare",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 956,
													"src": "29727:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29700:48:0"
											},
											{
												"assignments": [
													1552
												],
												"declarations": [
													{
														"constant": false,
														"id": 1552,
														"mutability": "mutable",
														"name": "lpSupply",
														"nameLocation": "29767:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1622,
														"src": "29759:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1551,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29759:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1561,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1558,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "29809:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2441",
																		"typeString": "contract NFTMasterChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2441",
																		"typeString": "contract NFTMasterChef"
																	}
																],
																"id": 1557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29801:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1556,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29801:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29801:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 1553,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1532,
																"src": "29778:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																	"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																}
															},
															"id": 1554,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 950,
															"src": "29778:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"id": 1555,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 208,
														"src": "29778:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29778:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29759:56:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1566,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1562,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "29830:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "29830:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"id": 1564,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1532,
																"src": "29845:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																	"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																}
															},
															"id": 1565,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastRewardBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 954,
															"src": "29845:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "29830:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1569,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1567,
															"name": "lpSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1552,
															"src": "29869:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1568,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29881:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "29869:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "29830:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1608,
												"nodeType": "IfStatement",
												"src": "29826:354:0",
												"trueBody": {
													"id": 1607,
													"nodeType": "Block",
													"src": "29884:296:0",
													"statements": [
														{
															"assignments": [
																1572
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1572,
																	"mutability": "mutable",
																	"name": "multiplier",
																	"nameLocation": "29907:10:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1607,
																	"src": "29899:18:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1571,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "29899:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1579,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1574,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1532,
																			"src": "29934:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																				"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 1575,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lastRewardBlock",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 954,
																		"src": "29934:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1576,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "29956:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "29956:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1573,
																	"name": "getMultiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1521,
																	"src": "29920:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256)"
																	}
																},
																"id": 1578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29920:49:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "29899:70:0"
														},
														{
															"assignments": [
																1581
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1581,
																	"mutability": "mutable",
																	"name": "PowerReward",
																	"nameLocation": "29992:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1607,
																	"src": "29984:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1580,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "29984:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1593,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1591,
																		"name": "totalAllocPoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 992,
																		"src": "30061:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1587,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1532,
																					"src": "30040:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																						"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																					}
																				},
																				"id": 1588,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allocPoint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 952,
																				"src": "30040:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1584,
																						"name": "PowerPerBlock",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 972,
																						"src": "30021:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1582,
																						"name": "multiplier",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1572,
																						"src": "30006:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1583,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 107,
																					"src": "30006:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1585,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "30006:29:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1586,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 107,
																			"src": "30006:33:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "30006:50:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1590,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 124,
																	"src": "30006:54:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30006:71:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "29984:93:0"
														},
														{
															"expression": {
																"id": 1605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1594,
																	"name": "accPowerPerShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1547,
																	"src": "30092:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1602,
																					"name": "lpSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1552,
																					"src": "30158:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "31653132",
																							"id": 1599,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "30148:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							},
																							"value": "1e12"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							}
																						],
																						"expression": {
																							"id": 1597,
																							"name": "PowerReward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1581,
																							"src": "30132:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1598,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 107,
																						"src": "30132:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1600,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "30132:21:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1601,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 124,
																				"src": "30132:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1603,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "30132:35:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1595,
																			"name": "accPowerPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1547,
																			"src": "30111:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 27,
																		"src": "30111:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "30111:57:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30092:76:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1606,
															"nodeType": "ExpressionStatement",
															"src": "30092:76:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1618,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1539,
																"src": "30245:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																	"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																}
															},
															"id": 1619,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 946,
															"src": "30245:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653132",
																	"id": 1615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30235:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	},
																	"value": "1e12"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1612,
																			"name": "accPowerPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1547,
																			"src": "30213:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1609,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1539,
																				"src": "30197:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																					"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																				}
																			},
																			"id": 1610,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 944,
																			"src": "30197:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1611,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 107,
																		"src": "30197:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "30197:33:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1614,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 124,
																"src": "30197:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30197:43:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1617,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "30197:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30197:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1529,
												"id": 1621,
												"nodeType": "Return",
												"src": "30190:71:0"
											}
										]
									},
									"functionSelector": "f3239ab5",
									"id": 1623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingPower",
									"nameLocation": "29511:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "29532:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "29524:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29524:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "29546:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "29538:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29538:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29523:29:0"
									},
									"returnParameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "29576:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29576:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29575:9:0"
									},
									"scope": 2441,
									"src": "29502:767:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1647,
										"nodeType": "Block",
										"src": "30386:146:0",
										"statements": [
											{
												"assignments": [
													1627
												],
												"declarations": [
													{
														"constant": false,
														"id": 1627,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "30405:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1647,
														"src": "30397:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1626,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30397:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1630,
												"initialValue": {
													"expression": {
														"id": 1628,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "30414:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "30414:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30397:32:0"
											},
											{
												"body": {
													"id": 1645,
													"nodeType": "Block",
													"src": "30483:42:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1642,
																		"name": "pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1632,
																		"src": "30509:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1641,
																	"name": "updatePool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1739,
																	"src": "30498:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30498:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1644,
															"nodeType": "ExpressionStatement",
															"src": "30498:15:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1635,
														"name": "pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1632,
														"src": "30462:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1636,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1627,
														"src": "30468:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30462:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1646,
												"initializationExpression": {
													"assignments": [
														1632
													],
													"declarations": [
														{
															"constant": false,
															"id": 1632,
															"mutability": "mutable",
															"name": "pid",
															"nameLocation": "30453:3:0",
															"nodeType": "VariableDeclaration",
															"scope": 1646,
															"src": "30445:11:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1631,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "30445:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1634,
													"initialValue": {
														"hexValue": "30",
														"id": 1633,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "30459:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "30445:15:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "30476:5:0",
														"subExpression": {
															"id": 1638,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1632,
															"src": "30478:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1640,
													"nodeType": "ExpressionStatement",
													"src": "30476:5:0"
												},
												"nodeType": "ForStatement",
												"src": "30440:85:0"
											}
										]
									},
									"functionSelector": "630b5ba1",
									"id": 1648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "massUpdatePools",
									"nameLocation": "30361:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30376:2:0"
									},
									"returnParameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30386:0:0"
									},
									"scope": 2441,
									"src": "30352:180:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1738,
										"nodeType": "Block",
										"src": "30649:649:0",
										"statements": [
											{
												"assignments": [
													1655
												],
												"declarations": [
													{
														"constant": false,
														"id": 1655,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "30677:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1738,
														"src": "30660:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo"
														},
														"typeName": {
															"id": 1654,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1653,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 957,
																"src": "30660:8:0"
															},
															"referencedDeclaration": 957,
															"src": "30660:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1659,
												"initialValue": {
													"baseExpression": {
														"id": 1656,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "30684:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1658,
													"indexExpression": {
														"id": 1657,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1650,
														"src": "30693:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "30684:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
														"typeString": "struct NFTMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30660:38:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1660,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "30713:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1661,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "30713:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"expression": {
															"id": 1662,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1655,
															"src": "30729:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
															}
														},
														"id": 1663,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "lastRewardBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 954,
														"src": "30729:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30713:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1667,
												"nodeType": "IfStatement",
												"src": "30709:75:0",
												"trueBody": {
													"id": 1666,
													"nodeType": "Block",
													"src": "30751:33:0",
													"statements": [
														{
															"functionReturnParameters": 1652,
															"id": 1665,
															"nodeType": "Return",
															"src": "30766:7:0"
														}
													]
												}
											},
											{
												"assignments": [
													1669
												],
												"declarations": [
													{
														"constant": false,
														"id": 1669,
														"mutability": "mutable",
														"name": "lpSupply",
														"nameLocation": "30802:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1738,
														"src": "30794:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1668,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30794:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1678,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1675,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "30844:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2441",
																		"typeString": "contract NFTMasterChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2441",
																		"typeString": "contract NFTMasterChef"
																	}
																],
																"id": 1674,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30836:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1673,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30836:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30836:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 1670,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1655,
																"src": "30813:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																	"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																}
															},
															"id": 1671,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 950,
															"src": "30813:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"id": 1672,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 208,
														"src": "30813:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30813:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30794:56:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1679,
														"name": "lpSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1669,
														"src": "30865:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1680,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "30877:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "30865:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1691,
												"nodeType": "IfStatement",
												"src": "30861:102:0",
												"trueBody": {
													"id": 1690,
													"nodeType": "Block",
													"src": "30880:83:0",
													"statements": [
														{
															"expression": {
																"id": 1687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1682,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1655,
																		"src": "30895:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																			"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																		}
																	},
																	"id": 1684,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastRewardBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 954,
																	"src": "30895:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1685,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "30918:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "30918:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30895:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1688,
															"nodeType": "ExpressionStatement",
															"src": "30895:35:0"
														},
														{
															"functionReturnParameters": 1652,
															"id": 1689,
															"nodeType": "Return",
															"src": "30945:7:0"
														}
													]
												}
											},
											{
												"assignments": [
													1693
												],
												"declarations": [
													{
														"constant": false,
														"id": 1693,
														"mutability": "mutable",
														"name": "multiplier",
														"nameLocation": "30981:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1738,
														"src": "30973:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1692,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30973:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1700,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1695,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1655,
																"src": "31008:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																	"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																}
															},
															"id": 1696,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastRewardBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 954,
															"src": "31008:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1697,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "31030:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "31030:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1694,
														"name": "getMultiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1521,
														"src": "30994:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256)"
														}
													},
													"id": 1699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30994:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30973:70:0"
											},
											{
												"assignments": [
													1702
												],
												"declarations": [
													{
														"constant": false,
														"id": 1702,
														"mutability": "mutable",
														"name": "PowerReward",
														"nameLocation": "31062:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1738,
														"src": "31054:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1701,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "31054:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1714,
												"initialValue": {
													"arguments": [
														{
															"id": 1712,
															"name": "totalAllocPoint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "31131:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1708,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1655,
																		"src": "31110:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																			"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																		}
																	},
																	"id": 1709,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "allocPoint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 952,
																	"src": "31110:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1705,
																			"name": "PowerPerBlock",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 972,
																			"src": "31091:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1703,
																			"name": "multiplier",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1693,
																			"src": "31076:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1704,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 107,
																		"src": "31076:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "31076:29:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1707,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 107,
																"src": "31076:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31076:50:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1711,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 124,
														"src": "31076:54:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31076:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31054:93:0"
											},
											{
												"expression": {
													"id": 1729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1715,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1655,
															"src": "31158:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
															}
														},
														"id": 1717,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "accPowerPerShare",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 956,
														"src": "31158:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1726,
																		"name": "lpSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1669,
																		"src": "31234:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "31653132",
																				"id": 1723,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "31224:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				},
																				"value": "1e12"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				}
																			],
																			"expression": {
																				"id": 1721,
																				"name": "PowerReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1702,
																				"src": "31208:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1722,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 107,
																			"src": "31208:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "31208:21:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 124,
																	"src": "31208:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1727,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31208:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1718,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1655,
																	"src": "31182:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																		"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																	}
																},
																"id": 1719,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "accPowerPerShare",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 956,
																"src": "31182:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 27,
															"src": "31182:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1728,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31182:62:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31158:86:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1730,
												"nodeType": "ExpressionStatement",
												"src": "31158:86:0"
											},
											{
												"expression": {
													"id": 1736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1731,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1655,
															"src": "31255:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
															}
														},
														"id": 1733,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastRewardBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 954,
														"src": "31255:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1734,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "31278:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1735,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "31278:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31255:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1737,
												"nodeType": "ExpressionStatement",
												"src": "31255:35:0"
											}
										]
									},
									"functionSelector": "51eb05a6",
									"id": 1739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updatePool",
									"nameLocation": "30617:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1650,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "30636:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "30628:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30628:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30627:14:0"
									},
									"returnParameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30649:0:0"
									},
									"scope": 2441,
									"src": "30608:690:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1862,
										"nodeType": "Block",
										"src": "31423:741:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1747,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1741,
																"src": "31445:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1748,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "31453:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "31445:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6465706f73697420506f776572206279207374616b696e67",
															"id": 1750,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31456:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108",
																"typeString": "literal_string \"deposit Power by staking\""
															},
															"value": "deposit Power by staking"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108",
																"typeString": "literal_string \"deposit Power by staking\""
															}
														],
														"id": 1746,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "31436:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31436:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1752,
												"nodeType": "ExpressionStatement",
												"src": "31436:47:0"
											},
											{
												"assignments": [
													1755
												],
												"declarations": [
													{
														"constant": false,
														"id": 1755,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "31513:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1862,
														"src": "31496:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo"
														},
														"typeName": {
															"id": 1754,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1753,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 957,
																"src": "31496:8:0"
															},
															"referencedDeclaration": 957,
															"src": "31496:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1759,
												"initialValue": {
													"baseExpression": {
														"id": 1756,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "31520:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1758,
													"indexExpression": {
														"id": 1757,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1741,
														"src": "31529:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "31520:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
														"typeString": "struct NFTMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31496:38:0"
											},
											{
												"assignments": [
													1762
												],
												"declarations": [
													{
														"constant": false,
														"id": 1762,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "31562:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1862,
														"src": "31545:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
															"typeString": "struct NFTMasterChef.UserInfo"
														},
														"typeName": {
															"id": 1761,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1760,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 947,
																"src": "31545:8:0"
															},
															"referencedDeclaration": 947,
															"src": "31545:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1769,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1763,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "31569:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo storage ref))"
															}
														},
														"id": 1765,
														"indexExpression": {
															"id": 1764,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1741,
															"src": "31578:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "31569:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$",
															"typeString": "mapping(address => struct NFTMasterChef.UserInfo storage ref)"
														}
													},
													"id": 1768,
													"indexExpression": {
														"expression": {
															"id": 1766,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "31584:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1767,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "31584:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "31569:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$947_storage",
														"typeString": "struct NFTMasterChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31545:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1771,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1741,
															"src": "31617:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1770,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1739,
														"src": "31606:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31606:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1773,
												"nodeType": "ExpressionStatement",
												"src": "31606:16:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1774,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1762,
															"src": "31637:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 1775,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 944,
														"src": "31637:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1776,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31651:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "31637:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1813,
												"nodeType": "IfStatement",
												"src": "31633:263:0",
												"trueBody": {
													"id": 1812,
													"nodeType": "Block",
													"src": "31654:242:0",
													"statements": [
														{
															"assignments": [
																1779
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1779,
																	"mutability": "mutable",
																	"name": "pending",
																	"nameLocation": "31677:7:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1812,
																	"src": "31669:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1778,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "31669:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1793,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1790,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1762,
																			"src": "31740:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																				"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																			}
																		},
																		"id": 1791,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardDebt",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 946,
																		"src": "31740:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "31653132",
																				"id": 1787,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "31730:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				},
																				"value": "1e12"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 1783,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1755,
																							"src": "31703:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																								"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																							}
																						},
																						"id": 1784,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "accPowerPerShare",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 956,
																						"src": "31703:21:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"id": 1780,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1762,
																							"src": "31687:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																								"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																							}
																						},
																						"id": 1781,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 944,
																						"src": "31687:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1782,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 107,
																					"src": "31687:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1785,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "31687:38:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1786,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 124,
																			"src": "31687:42:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1788,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "31687:48:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1789,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "31687:52:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1792,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31687:69:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "31669:87:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1796,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1794,
																	"name": "pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1779,
																	"src": "31774:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1795,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31784:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "31774:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1811,
															"nodeType": "IfStatement",
															"src": "31771:114:0",
															"trueBody": {
																"id": 1810,
																"nodeType": "Block",
																"src": "31786:99:0",
																"statements": [
																	{
																		"expression": {
																			"id": 1808,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1797,
																					"name": "powerBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1002,
																					"src": "31805:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 1800,
																				"indexExpression": {
																					"expression": {
																						"id": 1798,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "31818:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1799,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "31818:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "31805:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 1806,
																						"name": "pending",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1779,
																						"src": "31861:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"baseExpression": {
																							"id": 1801,
																							"name": "powerBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1002,
																							"src": "31832:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 1804,
																						"indexExpression": {
																							"expression": {
																								"id": 1802,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "31845:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 1803,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "31845:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "31832:24:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1805,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 27,
																					"src": "31832:28:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1807,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "31832:37:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "31805:64:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1809,
																		"nodeType": "ExpressionStatement",
																		"src": "31805:64:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1821,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "31944:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1822,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "31944:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1820,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31936:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1819,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31936:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31936:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1826,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "31965:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2441",
																		"typeString": "contract NFTMasterChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2441",
																		"typeString": "contract NFTMasterChef"
																	}
																],
																"id": 1825,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31957:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1824,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31957:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31957:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1828,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1743,
															"src": "31972:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1814,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1755,
																"src": "31906:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																	"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																}
															},
															"id": 1817,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 950,
															"src": "31906:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"id": 1818,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 630,
														"src": "31906:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$286_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31906:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1830,
												"nodeType": "ExpressionStatement",
												"src": "31906:74:0"
											},
											{
												"expression": {
													"id": 1839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1831,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1762,
															"src": "31991:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 1833,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 944,
														"src": "31991:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1837,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1743,
																"src": "32021:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1834,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1762,
																	"src": "32005:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																		"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																	}
																},
																"id": 1835,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 944,
																"src": "32005:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 27,
															"src": "32005:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1838,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32005:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31991:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1840,
												"nodeType": "ExpressionStatement",
												"src": "31991:38:0"
											},
											{
												"expression": {
													"id": 1853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1841,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1762,
															"src": "32040:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 1843,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "32040:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653132",
																"id": 1851,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32101:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																},
																"value": "1e12"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1847,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1755,
																			"src": "32074:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																				"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 1848,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accPowerPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 956,
																		"src": "32074:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1844,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1762,
																			"src": "32058:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																				"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																			}
																		},
																		"id": 1845,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 944,
																		"src": "32058:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 107,
																	"src": "32058:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32058:38:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 124,
															"src": "32058:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1852,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32058:48:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32040:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1854,
												"nodeType": "ExpressionStatement",
												"src": "32040:66:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1856,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "32130:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "32130:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1858,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1741,
															"src": "32142:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1859,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1743,
															"src": "32148:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1855,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "32122:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32122:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1861,
												"nodeType": "EmitStatement",
												"src": "32117:39:0"
											}
										]
									},
									"functionSelector": "e2bbb158",
									"id": 1863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "31377:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "31393:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "31385:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31385:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "31407:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "31399:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31399:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31384:31:0"
									},
									"returnParameters": {
										"id": 1745,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31423:0:0"
									},
									"scope": 2441,
									"src": "31368:796:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1984,
										"nodeType": "Block",
										"src": "32272:731:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1871,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1865,
																"src": "32294:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1872,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32302:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "32294:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "776974686472617720506f77657220627920756e7374616b696e67",
															"id": 1874,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32305:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f",
																"typeString": "literal_string \"withdraw Power by unstaking\""
															},
															"value": "withdraw Power by unstaking"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f",
																"typeString": "literal_string \"withdraw Power by unstaking\""
															}
														],
														"id": 1870,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "32285:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32285:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1876,
												"nodeType": "ExpressionStatement",
												"src": "32285:50:0"
											},
											{
												"assignments": [
													1879
												],
												"declarations": [
													{
														"constant": false,
														"id": 1879,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "32365:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1984,
														"src": "32348:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo"
														},
														"typeName": {
															"id": 1878,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1877,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 957,
																"src": "32348:8:0"
															},
															"referencedDeclaration": 957,
															"src": "32348:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1883,
												"initialValue": {
													"baseExpression": {
														"id": 1880,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "32372:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1882,
													"indexExpression": {
														"id": 1881,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1865,
														"src": "32381:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "32372:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
														"typeString": "struct NFTMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32348:38:0"
											},
											{
												"assignments": [
													1886
												],
												"declarations": [
													{
														"constant": false,
														"id": 1886,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "32414:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1984,
														"src": "32397:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
															"typeString": "struct NFTMasterChef.UserInfo"
														},
														"typeName": {
															"id": 1885,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1884,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 947,
																"src": "32397:8:0"
															},
															"referencedDeclaration": 947,
															"src": "32397:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1893,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1887,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "32421:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo storage ref))"
															}
														},
														"id": 1889,
														"indexExpression": {
															"id": 1888,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1865,
															"src": "32430:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "32421:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$",
															"typeString": "mapping(address => struct NFTMasterChef.UserInfo storage ref)"
														}
													},
													"id": 1892,
													"indexExpression": {
														"expression": {
															"id": 1890,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "32436:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1891,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "32436:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "32421:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$947_storage",
														"typeString": "struct NFTMasterChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32397:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1898,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1895,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1886,
																	"src": "32466:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																		"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																	}
																},
																"id": 1896,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 944,
																"src": "32466:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1897,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1867,
																"src": "32481:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32466:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "77697468647261773a206e6f7420676f6f64",
															"id": 1899,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32490:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																"typeString": "literal_string \"withdraw: not good\""
															},
															"value": "withdraw: not good"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																"typeString": "literal_string \"withdraw: not good\""
															}
														],
														"id": 1894,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "32458:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32458:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1901,
												"nodeType": "ExpressionStatement",
												"src": "32458:53:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1903,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1865,
															"src": "32533:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1902,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1739,
														"src": "32522:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32522:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1905,
												"nodeType": "ExpressionStatement",
												"src": "32522:16:0"
											},
											{
												"assignments": [
													1907
												],
												"declarations": [
													{
														"constant": false,
														"id": 1907,
														"mutability": "mutable",
														"name": "pending",
														"nameLocation": "32557:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1984,
														"src": "32549:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1906,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "32549:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1921,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1918,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1886,
																"src": "32620:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																	"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																}
															},
															"id": 1919,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 946,
															"src": "32620:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653132",
																	"id": 1915,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32610:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	},
																	"value": "1e12"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1911,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1879,
																				"src": "32583:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																					"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																				}
																			},
																			"id": 1912,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "accPowerPerShare",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 956,
																			"src": "32583:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1908,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1886,
																				"src": "32567:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																					"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																				}
																			},
																			"id": 1909,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 944,
																			"src": "32567:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1910,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 107,
																		"src": "32567:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "32567:38:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1914,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 124,
																"src": "32567:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32567:48:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1917,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "32567:52:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32567:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32549:87:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1922,
														"name": "pending",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1907,
														"src": "32650:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1923,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "32660:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "32650:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1939,
												"nodeType": "IfStatement",
												"src": "32647:106:0",
												"trueBody": {
													"id": 1938,
													"nodeType": "Block",
													"src": "32662:91:0",
													"statements": [
														{
															"expression": {
																"id": 1936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1925,
																		"name": "powerBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1002,
																		"src": "32677:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1928,
																	"indexExpression": {
																		"expression": {
																			"id": 1926,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "32690:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1927,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "32690:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "32677:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1934,
																			"name": "pending",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1907,
																			"src": "32733:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 1929,
																				"name": "powerBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1002,
																				"src": "32704:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1932,
																			"indexExpression": {
																				"expression": {
																					"id": 1930,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "32717:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1931,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "32717:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "32704:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 27,
																		"src": "32704:28:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "32704:37:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "32677:64:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1937,
															"nodeType": "ExpressionStatement",
															"src": "32677:64:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1940,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1886,
															"src": "32763:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 1942,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 944,
														"src": "32763:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1946,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1867,
																"src": "32793:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1943,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1886,
																	"src": "32777:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																		"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																	}
																},
																"id": 1944,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 944,
																"src": "32777:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1945,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 44,
															"src": "32777:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1947,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32777:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32763:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1949,
												"nodeType": "ExpressionStatement",
												"src": "32763:38:0"
											},
											{
												"expression": {
													"id": 1962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1950,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1886,
															"src": "32812:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 1952,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "32812:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653132",
																"id": 1960,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32873:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																},
																"value": "1e12"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1956,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1879,
																			"src": "32846:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																				"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 1957,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accPowerPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 956,
																		"src": "32846:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1953,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1886,
																			"src": "32830:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																				"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																			}
																		},
																		"id": 1954,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 944,
																		"src": "32830:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1955,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 107,
																	"src": "32830:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1958,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32830:38:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 124,
															"src": "32830:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1961,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32830:48:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32812:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1963,
												"nodeType": "ExpressionStatement",
												"src": "32812:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1971,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "32923:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1972,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "32923:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1970,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32915:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1969,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32915:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32915:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1974,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1867,
															"src": "32936:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1964,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1879,
																"src": "32889:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																	"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																}
															},
															"id": 1967,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 950,
															"src": "32889:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"id": 1968,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 604,
														"src": "32889:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$286_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32889:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1976,
												"nodeType": "ExpressionStatement",
												"src": "32889:55:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1978,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "32969:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1979,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "32969:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1980,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1865,
															"src": "32981:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1981,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1867,
															"src": "32987:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1977,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "32960:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32960:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1983,
												"nodeType": "EmitStatement",
												"src": "32955:40:0"
											}
										]
									},
									"functionSelector": "441a3e70",
									"id": 1985,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "32225:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "32242:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1985,
												"src": "32234:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32234:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "32256:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1985,
												"src": "32248:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32248:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32233:31:0"
									},
									"returnParameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32272:0:0"
									},
									"scope": 2441,
									"src": "32216:787:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2113,
										"nodeType": "Block",
										"src": "33102:751:0",
										"statements": [
											{
												"assignments": [
													1992
												],
												"declarations": [
													{
														"constant": false,
														"id": 1992,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "33130:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2113,
														"src": "33113:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo"
														},
														"typeName": {
															"id": 1991,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1990,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 957,
																"src": "33113:8:0"
															},
															"referencedDeclaration": 957,
															"src": "33113:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1996,
												"initialValue": {
													"baseExpression": {
														"id": 1993,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "33137:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1995,
													"indexExpression": {
														"hexValue": "30",
														"id": 1994,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "33146:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "33137:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
														"typeString": "struct NFTMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33113:35:0"
											},
											{
												"assignments": [
													1999
												],
												"declarations": [
													{
														"constant": false,
														"id": 1999,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "33176:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2113,
														"src": "33159:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
															"typeString": "struct NFTMasterChef.UserInfo"
														},
														"typeName": {
															"id": 1998,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1997,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 947,
																"src": "33159:8:0"
															},
															"referencedDeclaration": 947,
															"src": "33159:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2009,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2000,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "33183:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo storage ref))"
															}
														},
														"id": 2002,
														"indexExpression": {
															"hexValue": "30",
															"id": 2001,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33192:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "33183:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$",
															"typeString": "mapping(address => struct NFTMasterChef.UserInfo storage ref)"
														}
													},
													"id": 2008,
													"indexExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 2005,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "33203:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2006,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "33203:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2004,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33195:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2003,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "33195:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2007,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33195:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "33183:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$947_storage",
														"typeString": "struct NFTMasterChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33159:56:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 2011,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33247:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 2010,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1739,
														"src": "33236:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33236:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2013,
												"nodeType": "ExpressionStatement",
												"src": "33236:13:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2014,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1999,
															"src": "33264:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 2015,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 944,
														"src": "33264:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2016,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "33278:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "33264:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2059,
												"nodeType": "IfStatement",
												"src": "33260:282:0",
												"trueBody": {
													"id": 2058,
													"nodeType": "Block",
													"src": "33281:261:0",
													"statements": [
														{
															"assignments": [
																2019
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2019,
																	"mutability": "mutable",
																	"name": "pending",
																	"nameLocation": "33304:7:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2058,
																	"src": "33296:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2018,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "33296:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2033,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2030,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1999,
																			"src": "33367:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																				"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																			}
																		},
																		"id": 2031,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardDebt",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 946,
																		"src": "33367:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "31653132",
																				"id": 2027,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "33357:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				},
																				"value": "1e12"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 2023,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1992,
																							"src": "33330:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																								"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																							}
																						},
																						"id": 2024,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "accPowerPerShare",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 956,
																						"src": "33330:21:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"id": 2020,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1999,
																							"src": "33314:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																								"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																							}
																						},
																						"id": 2021,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 944,
																						"src": "33314:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2022,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 107,
																					"src": "33314:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2025,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "33314:38:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2026,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 124,
																			"src": "33314:42:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "33314:48:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "33314:52:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2032,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33314:69:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "33296:87:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2036,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2034,
																	"name": "pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2019,
																	"src": "33401:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2035,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33411:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "33401:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2057,
															"nodeType": "IfStatement",
															"src": "33398:133:0",
															"trueBody": {
																"id": 2056,
																"nodeType": "Block",
																"src": "33414:117:0",
																"statements": [
																	{
																		"expression": {
																			"id": 2054,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 2037,
																					"name": "powerBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1002,
																					"src": "33433:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 2043,
																				"indexExpression": {
																					"arguments": [
																						{
																							"expression": {
																								"id": 2040,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "33454:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 2041,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "33454:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2039,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "33446:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 2038,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "33446:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2042,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "33446:19:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "33433:33:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 2052,
																						"name": "pending",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2019,
																						"src": "33507:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"baseExpression": {
																							"id": 2044,
																							"name": "powerBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1002,
																							"src": "33469:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 2050,
																						"indexExpression": {
																							"arguments": [
																								{
																									"expression": {
																										"id": 2047,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "33490:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 2048,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "33490:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								],
																								"id": 2046,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "33482:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 2045,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "33482:7:0",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 2049,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "33482:19:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "33469:33:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2051,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 27,
																					"src": "33469:37:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2053,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "33469:46:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "33433:82:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2055,
																		"nodeType": "ExpressionStatement",
																		"src": "33433:82:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2060,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1987,
														"src": "33555:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2061,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "33565:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "33555:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2091,
												"nodeType": "IfStatement",
												"src": "33552:170:0",
												"trueBody": {
													"id": 2090,
													"nodeType": "Block",
													"src": "33568:154:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 2070,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "33621:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2071,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "33621:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2069,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "33613:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2068,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "33613:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2072,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "33613:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 2075,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "33642:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_NFTMasterChef_$2441",
																					"typeString": "contract NFTMasterChef"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_NFTMasterChef_$2441",
																					"typeString": "contract NFTMasterChef"
																				}
																			],
																			"id": 2074,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "33634:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2073,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "33634:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2076,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "33634:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2077,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1987,
																		"src": "33649:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2063,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1992,
																			"src": "33583:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																				"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 2066,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lpToken",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 950,
																		"src": "33583:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$286",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 630,
																	"src": "33583:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$286_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 2078,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33583:74:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2079,
															"nodeType": "ExpressionStatement",
															"src": "33583:74:0"
														},
														{
															"expression": {
																"id": 2088,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2080,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1999,
																		"src": "33672:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																			"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																		}
																	},
																	"id": 2082,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 944,
																	"src": "33672:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2086,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1987,
																			"src": "33702:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 2083,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1999,
																				"src": "33686:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																					"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																				}
																			},
																			"id": 2084,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 944,
																			"src": "33686:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2085,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 27,
																		"src": "33686:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2087,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "33686:24:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "33672:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2089,
															"nodeType": "ExpressionStatement",
															"src": "33672:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2092,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1999,
															"src": "33732:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 2094,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "33732:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653132",
																"id": 2102,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33793:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																},
																"value": "1e12"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2098,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1992,
																			"src": "33766:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																				"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 2099,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accPowerPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 956,
																		"src": "33766:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2095,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1999,
																			"src": "33750:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																				"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																			}
																		},
																		"id": 2096,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 944,
																		"src": "33750:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 107,
																	"src": "33750:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33750:38:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 124,
															"src": "33750:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33750:48:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33732:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2105,
												"nodeType": "ExpressionStatement",
												"src": "33732:66:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2107,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "33822:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "33822:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 2109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33834:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 2110,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1987,
															"src": "33837:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2106,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "33814:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33814:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2112,
												"nodeType": "EmitStatement",
												"src": "33809:36:0"
											}
										]
									},
									"functionSelector": "41441d3b",
									"id": 2114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "enterStaking",
									"nameLocation": "33065:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "33086:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2114,
												"src": "33078:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33078:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33077:17:0"
									},
									"returnParameters": {
										"id": 1989,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33102:0:0"
									},
									"scope": 2441,
									"src": "33056:797:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2252,
										"nodeType": "Block",
										"src": "33932:825:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2122,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "33951:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "33951:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2124,
																	"name": "NFTStakeAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 996,
																	"src": "33965:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "33951:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 2128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31",
																	"id": 2126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33984:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33988:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "33984:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "33951:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6572206973206e6f742066616d696c79",
															"id": 2130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33991:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bc4ca777991637c8f4f9389bf11e23dc4a8215e948b482bac5c123f20ce84c64",
																"typeString": "literal_string \"Caller is not family\""
															},
															"value": "Caller is not family"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bc4ca777991637c8f4f9389bf11e23dc4a8215e948b482bac5c123f20ce84c64",
																"typeString": "literal_string \"Caller is not family\""
															}
														],
														"id": 2121,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "33943:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33943:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2132,
												"nodeType": "ExpressionStatement",
												"src": "33943:71:0"
											},
											{
												"assignments": [
													2135
												],
												"declarations": [
													{
														"constant": false,
														"id": 2135,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "34042:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2252,
														"src": "34025:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo"
														},
														"typeName": {
															"id": 2134,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2133,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 957,
																"src": "34025:8:0"
															},
															"referencedDeclaration": 957,
															"src": "34025:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2139,
												"initialValue": {
													"baseExpression": {
														"id": 2136,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "34049:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 2138,
													"indexExpression": {
														"hexValue": "30",
														"id": 2137,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "34058:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "34049:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
														"typeString": "struct NFTMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34025:35:0"
											},
											{
												"assignments": [
													2142
												],
												"declarations": [
													{
														"constant": false,
														"id": 2142,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "34088:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2252,
														"src": "34071:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
															"typeString": "struct NFTMasterChef.UserInfo"
														},
														"typeName": {
															"id": 2141,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2140,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 947,
																"src": "34071:8:0"
															},
															"referencedDeclaration": 947,
															"src": "34071:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2151,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2143,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "34095:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo storage ref))"
															}
														},
														"id": 2145,
														"indexExpression": {
															"hexValue": "30",
															"id": 2144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34104:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "34095:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$",
															"typeString": "mapping(address => struct NFTMasterChef.UserInfo storage ref)"
														}
													},
													"id": 2150,
													"indexExpression": {
														"arguments": [
															{
																"id": 2148,
																"name": "_account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2118,
																"src": "34115:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2147,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "34107:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2146,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "34107:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34107:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "34095:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$947_storage",
														"typeString": "struct NFTMasterChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34071:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 2153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34157:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 2152,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1739,
														"src": "34146:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34146:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2155,
												"nodeType": "ExpressionStatement",
												"src": "34146:13:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2156,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2142,
															"src": "34174:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 2157,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 944,
														"src": "34174:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2158,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "34188:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "34174:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2199,
												"nodeType": "IfStatement",
												"src": "34170:278:0",
												"trueBody": {
													"id": 2198,
													"nodeType": "Block",
													"src": "34191:257:0",
													"statements": [
														{
															"assignments": [
																2161
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2161,
																	"mutability": "mutable",
																	"name": "pending",
																	"nameLocation": "34214:7:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2198,
																	"src": "34206:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2160,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "34206:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2175,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2172,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2142,
																			"src": "34277:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																				"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																			}
																		},
																		"id": 2173,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardDebt",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 946,
																		"src": "34277:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "31653132",
																				"id": 2169,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "34267:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				},
																				"value": "1e12"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 2165,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2135,
																							"src": "34240:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																								"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																							}
																						},
																						"id": 2166,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "accPowerPerShare",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 956,
																						"src": "34240:21:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"id": 2162,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2142,
																							"src": "34224:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																								"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																							}
																						},
																						"id": 2163,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 944,
																						"src": "34224:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2164,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 107,
																					"src": "34224:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2167,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "34224:38:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2168,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 124,
																			"src": "34224:42:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "34224:48:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "34224:52:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34224:69:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "34206:87:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2176,
																	"name": "pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2161,
																	"src": "34311:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "34321:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "34311:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2197,
															"nodeType": "IfStatement",
															"src": "34308:129:0",
															"trueBody": {
																"id": 2196,
																"nodeType": "Block",
																"src": "34324:113:0",
																"statements": [
																	{
																		"expression": {
																			"id": 2194,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 2179,
																					"name": "powerBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1002,
																					"src": "34343:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 2184,
																				"indexExpression": {
																					"arguments": [
																						{
																							"id": 2182,
																							"name": "_account",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2118,
																							"src": "34364:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2181,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "34356:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 2180,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "34356:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2183,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "34356:17:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "34343:31:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 2192,
																						"name": "pending",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2161,
																						"src": "34413:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"baseExpression": {
																							"id": 2185,
																							"name": "powerBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1002,
																							"src": "34377:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 2190,
																						"indexExpression": {
																							"arguments": [
																								{
																									"id": 2188,
																									"name": "_account",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2118,
																									"src": "34398:8:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								],
																								"id": 2187,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "34390:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 2186,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "34390:7:0",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 2189,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "34390:17:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "34377:31:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2191,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 27,
																					"src": "34377:35:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2193,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "34377:44:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "34343:78:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2195,
																		"nodeType": "ExpressionStatement",
																		"src": "34343:78:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2200,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2116,
														"src": "34461:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2201,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "34471:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "34461:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2231,
												"nodeType": "IfStatement",
												"src": "34458:170:0",
												"trueBody": {
													"id": 2230,
													"nodeType": "Block",
													"src": "34474:154:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 2210,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "34527:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2211,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "34527:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2209,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "34519:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2208,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "34519:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "34519:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 2215,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "34548:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_NFTMasterChef_$2441",
																					"typeString": "contract NFTMasterChef"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_NFTMasterChef_$2441",
																					"typeString": "contract NFTMasterChef"
																				}
																			],
																			"id": 2214,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "34540:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2213,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "34540:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "34540:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2217,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2116,
																		"src": "34555:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2203,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2135,
																			"src": "34489:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																				"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 2206,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lpToken",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 950,
																		"src": "34489:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$286",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 630,
																	"src": "34489:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$286_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 2218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34489:74:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2219,
															"nodeType": "ExpressionStatement",
															"src": "34489:74:0"
														},
														{
															"expression": {
																"id": 2228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2220,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2142,
																		"src": "34578:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																			"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																		}
																	},
																	"id": 2222,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 944,
																	"src": "34578:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2226,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2116,
																			"src": "34608:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 2223,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2142,
																				"src": "34592:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																					"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																				}
																			},
																			"id": 2224,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 944,
																			"src": "34592:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 27,
																		"src": "34592:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34592:24:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "34578:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2229,
															"nodeType": "ExpressionStatement",
															"src": "34578:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2232,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2142,
															"src": "34638:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 2234,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "34638:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653132",
																"id": 2242,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "34699:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																},
																"value": "1e12"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2238,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2135,
																			"src": "34672:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																				"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 2239,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accPowerPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 956,
																		"src": "34672:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2235,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2142,
																			"src": "34656:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																				"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																			}
																		},
																		"id": 2236,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 944,
																		"src": "34656:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2237,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 107,
																	"src": "34656:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34656:38:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 124,
															"src": "34656:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34656:48:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34638:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2245,
												"nodeType": "ExpressionStatement",
												"src": "34638:66:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2247,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2118,
															"src": "34728:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 2248,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34738:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 2249,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2116,
															"src": "34741:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2246,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "34720:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34720:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2251,
												"nodeType": "EmitStatement",
												"src": "34715:34:0"
											}
										]
									},
									"functionSelector": "cf35fddf",
									"id": 2253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "enterStakingCompund",
									"nameLocation": "33870:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2116,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "33898:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2253,
												"src": "33890:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33890:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "33915:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2253,
												"src": "33907:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33907:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33889:35:0"
									},
									"returnParameters": {
										"id": 2120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33932:0:0"
									},
									"scope": 2441,
									"src": "33861:896:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2370,
										"nodeType": "Block",
										"src": "34855:701:0",
										"statements": [
											{
												"assignments": [
													2260
												],
												"declarations": [
													{
														"constant": false,
														"id": 2260,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "34883:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2370,
														"src": "34866:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo"
														},
														"typeName": {
															"id": 2259,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2258,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 957,
																"src": "34866:8:0"
															},
															"referencedDeclaration": 957,
															"src": "34866:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2264,
												"initialValue": {
													"baseExpression": {
														"id": 2261,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "34890:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 2263,
													"indexExpression": {
														"hexValue": "30",
														"id": 2262,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "34899:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "34890:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
														"typeString": "struct NFTMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34866:35:0"
											},
											{
												"assignments": [
													2267
												],
												"declarations": [
													{
														"constant": false,
														"id": 2267,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "34929:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2370,
														"src": "34912:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
															"typeString": "struct NFTMasterChef.UserInfo"
														},
														"typeName": {
															"id": 2266,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2265,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 947,
																"src": "34912:8:0"
															},
															"referencedDeclaration": 947,
															"src": "34912:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2274,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2268,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "34936:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo storage ref))"
															}
														},
														"id": 2270,
														"indexExpression": {
															"hexValue": "30",
															"id": 2269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34945:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "34936:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$",
															"typeString": "mapping(address => struct NFTMasterChef.UserInfo storage ref)"
														}
													},
													"id": 2273,
													"indexExpression": {
														"expression": {
															"id": 2271,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "34948:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "34948:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "34936:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$947_storage",
														"typeString": "struct NFTMasterChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34912:47:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2276,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2267,
																	"src": "34978:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																		"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																	}
																},
																"id": 2277,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 944,
																"src": "34978:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2278,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2255,
																"src": "34993:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "34978:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "77697468647261773a206e6f7420676f6f64",
															"id": 2280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35002:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																"typeString": "literal_string \"withdraw: not good\""
															},
															"value": "withdraw: not good"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																"typeString": "literal_string \"withdraw: not good\""
															}
														],
														"id": 2275,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "34970:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34970:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2282,
												"nodeType": "ExpressionStatement",
												"src": "34970:53:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 2284,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35045:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 2283,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1739,
														"src": "35034:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35034:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2286,
												"nodeType": "ExpressionStatement",
												"src": "35034:13:0"
											},
											{
												"assignments": [
													2288
												],
												"declarations": [
													{
														"constant": false,
														"id": 2288,
														"mutability": "mutable",
														"name": "pending",
														"nameLocation": "35066:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2370,
														"src": "35058:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2287,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "35058:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2302,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2299,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2267,
																"src": "35129:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																	"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																}
															},
															"id": 2300,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 946,
															"src": "35129:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653132",
																	"id": 2296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "35119:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	},
																	"value": "1e12"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 2292,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2260,
																				"src": "35092:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																					"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																				}
																			},
																			"id": 2293,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "accPowerPerShare",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 956,
																			"src": "35092:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 2289,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2267,
																				"src": "35076:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																					"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																				}
																			},
																			"id": 2290,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 944,
																			"src": "35076:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 107,
																		"src": "35076:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "35076:38:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 124,
																"src": "35076:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35076:48:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2298,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "35076:52:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35076:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35058:87:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2303,
														"name": "pending",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2288,
														"src": "35159:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2304,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "35169:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "35159:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2320,
												"nodeType": "IfStatement",
												"src": "35156:107:0",
												"trueBody": {
													"id": 2319,
													"nodeType": "Block",
													"src": "35172:91:0",
													"statements": [
														{
															"expression": {
																"id": 2317,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2306,
																		"name": "powerBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1002,
																		"src": "35187:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2309,
																	"indexExpression": {
																		"expression": {
																			"id": 2307,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "35200:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "35200:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "35187:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2315,
																			"name": "pending",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2288,
																			"src": "35243:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 2310,
																				"name": "powerBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1002,
																				"src": "35214:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2313,
																			"indexExpression": {
																				"expression": {
																					"id": 2311,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "35227:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2312,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "35227:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "35214:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2314,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 27,
																		"src": "35214:28:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "35214:37:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "35187:64:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2318,
															"nodeType": "ExpressionStatement",
															"src": "35187:64:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2321,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2255,
														"src": "35276:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2322,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "35286:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "35276:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2348,
												"nodeType": "IfStatement",
												"src": "35273:151:0",
												"trueBody": {
													"id": 2347,
													"nodeType": "Block",
													"src": "35289:135:0",
													"statements": [
														{
															"expression": {
																"id": 2332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2324,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2267,
																		"src": "35304:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																			"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																		}
																	},
																	"id": 2326,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 944,
																	"src": "35304:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2330,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2255,
																			"src": "35334:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 2327,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2267,
																				"src": "35318:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																					"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																				}
																			},
																			"id": 2328,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 944,
																			"src": "35318:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 44,
																		"src": "35318:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "35318:24:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "35304:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2333,
															"nodeType": "ExpressionStatement",
															"src": "35304:38:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 2341,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "35391:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2342,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "35391:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2340,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "35383:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2339,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "35383:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "35383:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2344,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2255,
																		"src": "35404:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2334,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2260,
																			"src": "35357:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																				"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 2337,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lpToken",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 950,
																		"src": "35357:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$286",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 604,
																	"src": "35357:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$286_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 2345,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35357:55:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2346,
															"nodeType": "ExpressionStatement",
															"src": "35357:55:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2349,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2267,
															"src": "35434:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 2351,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "35434:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653132",
																"id": 2359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "35495:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																},
																"value": "1e12"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2355,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2260,
																			"src": "35468:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																				"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 2356,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accPowerPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 956,
																		"src": "35468:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2352,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2267,
																			"src": "35452:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																				"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																			}
																		},
																		"id": 2353,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 944,
																		"src": "35452:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 107,
																	"src": "35452:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2357,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35452:38:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 124,
															"src": "35452:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2360,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "35452:48:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "35434:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2362,
												"nodeType": "ExpressionStatement",
												"src": "35434:66:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2364,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "35525:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "35525:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 2366,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35537:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 2367,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2255,
															"src": "35540:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2363,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "35516:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35516:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2369,
												"nodeType": "EmitStatement",
												"src": "35511:37:0"
											}
										]
									},
									"functionSelector": "1058d281",
									"id": 2371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "leaveStaking",
									"nameLocation": "34818:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2255,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "34839:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2371,
												"src": "34831:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34831:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34830:17:0"
									},
									"returnParameters": {
										"id": 2257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34855:0:0"
									},
									"scope": 2441,
									"src": "34809:747:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2427,
										"nodeType": "Block",
										"src": "35683:308:0",
										"statements": [
											{
												"assignments": [
													2378
												],
												"declarations": [
													{
														"constant": false,
														"id": 2378,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "35711:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2427,
														"src": "35694:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo"
														},
														"typeName": {
															"id": 2377,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2376,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 957,
																"src": "35694:8:0"
															},
															"referencedDeclaration": 957,
															"src": "35694:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2382,
												"initialValue": {
													"baseExpression": {
														"id": 2379,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "35718:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 2381,
													"indexExpression": {
														"id": 2380,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2373,
														"src": "35727:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "35718:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
														"typeString": "struct NFTMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35694:38:0"
											},
											{
												"assignments": [
													2385
												],
												"declarations": [
													{
														"constant": false,
														"id": 2385,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "35760:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2427,
														"src": "35743:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
															"typeString": "struct NFTMasterChef.UserInfo"
														},
														"typeName": {
															"id": 2384,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2383,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 947,
																"src": "35743:8:0"
															},
															"referencedDeclaration": 947,
															"src": "35743:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2392,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2386,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "35767:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo storage ref))"
															}
														},
														"id": 2388,
														"indexExpression": {
															"id": 2387,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2373,
															"src": "35776:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "35767:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$",
															"typeString": "mapping(address => struct NFTMasterChef.UserInfo storage ref)"
														}
													},
													"id": 2391,
													"indexExpression": {
														"expression": {
															"id": 2389,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "35782:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "35782:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "35767:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$947_storage",
														"typeString": "struct NFTMasterChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35743:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2400,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "35838:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "35838:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2399,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "35830:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2398,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "35830:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35830:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2403,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2385,
																"src": "35851:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																	"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																}
															},
															"id": 2404,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 944,
															"src": "35851:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 2393,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2378,
																"src": "35804:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																	"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																}
															},
															"id": 2396,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 950,
															"src": "35804:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"id": 2397,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 604,
														"src": "35804:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$286_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35804:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2406,
												"nodeType": "ExpressionStatement",
												"src": "35804:59:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2408,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "35897:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "35897:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2410,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2373,
															"src": "35909:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2411,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2385,
																"src": "35915:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																	"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																}
															},
															"id": 2412,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 944,
															"src": "35915:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2407,
														"name": "EmergencyWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "35879:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35879:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2414,
												"nodeType": "EmitStatement",
												"src": "35874:53:0"
											},
											{
												"expression": {
													"id": 2419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2415,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2385,
															"src": "35938:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 2417,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 944,
														"src": "35938:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2418,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "35952:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "35938:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2420,
												"nodeType": "ExpressionStatement",
												"src": "35938:15:0"
											},
											{
												"expression": {
													"id": 2425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2421,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2385,
															"src": "35964:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 2423,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "35964:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2424,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "35982:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "35964:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2426,
												"nodeType": "ExpressionStatement",
												"src": "35964:19:0"
											}
										]
									},
									"functionSelector": "5312ea8e",
									"id": 2428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "emergencyWithdraw",
									"nameLocation": "35644:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2373,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "35670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2428,
												"src": "35662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35661:14:0"
									},
									"returnParameters": {
										"id": 2375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35683:0:0"
									},
									"scope": 2441,
									"src": "35635:356:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2439,
										"nodeType": "Block",
										"src": "36068:44:0",
										"statements": [
											{
												"expression": {
													"id": 2437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2435,
														"name": "PowerPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "36079:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2436,
														"name": "newAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2430,
														"src": "36095:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "36079:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2438,
												"nodeType": "ExpressionStatement",
												"src": "36079:25:0"
											}
										]
									},
									"functionSelector": "3df7aff3",
									"id": 2440,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2433,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2432,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "36058:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "36058:9:0"
										}
									],
									"name": "updatePowerPerBlock",
									"nameLocation": "36012:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2430,
												"mutability": "mutable",
												"name": "newAmount",
												"nameLocation": "36040:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2440,
												"src": "36032:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36032:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36031:19:0"
									},
									"returnParameters": {
										"id": 2434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36068:0:0"
									},
									"scope": 2441,
									"src": "36003:109:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2442,
							"src": "22111:14004:0",
							"usedErrors": []
						}
					],
					"src": "103:36012:0"
				},
				"id": 0
			}
		}
	}
}
{
	"id": "6725ef839e53dc27286fb696eebb81db",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/NFTStake.sol": {
				"content": "/**\r\n *Submitted for verification at BscScan.com on 2022-02-14\r\n*/\r\n\r\n/**\r\n *Submitted for verification at BscScan.com on 2022-01-13\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     * - Subtraction cannot overflow.\r\n     *\r\n     * _Available since v2.4.0._\r\n     */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     *\r\n     * _Available since v2.4.0._\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        // Solidity only automatically asserts when dividing by 0\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts with custom message when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     *\r\n     * _Available since v2.4.0._\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    function mint(address account, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    event Mint(address indexed minter, address indexed to, uint256 amount);\r\n}\r\n\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nlibrary SafeERC20 {\r\n    using Address for address;\r\n\r\n    function safeTransfer(\r\n        IERC20 token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(\r\n        IERC20 token,\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IERC20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        require(\r\n            (value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        unchecked {\r\n            uint256 oldAllowance = token.allowance(address(this), spender);\r\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\r\n            uint256 newAllowance = oldAllowance - value;\r\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n\r\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\r\n        if (returndata.length > 0) {\r\n            // Return data is optional\r\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\r\n        }\r\n    }\r\n}\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n\r\ninterface IMigratorChef {\r\n    function migrate(IERC20 token) external returns (IERC20);\r\n}\r\n\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}\r\n\r\ninterface IERC721 is IERC165 {\r\n    /**\r\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\r\n     */\r\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\r\n     */\r\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\r\n\r\n    /**\r\n     * @dev Returns the number of tokens in ``owner``'s account.\r\n     */\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\r\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\r\n     * The approval is cleared when the token is transferred.\r\n     *\r\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The caller must own the token or be an approved operator.\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Returns the account approved for `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function getApproved(uint256 tokenId) external view returns (address operator);\r\n\r\n    /**\r\n     * @dev Approve or remove `operator` as an operator for the caller.\r\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The `operator` cannot be the caller.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function setApprovalForAll(address operator, bool _approved) external;\r\n\r\n    /**\r\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\r\n     *\r\n     * See {setApprovalForAll}\r\n     */\r\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external;\r\n}\r\n\r\ninterface IERC721Receiver {\r\n    /**\r\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\r\n     * by `operator` from `from`, this function is called.\r\n     *\r\n     * It must return its Solidity selector to confirm the token transfer.\r\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\r\n     *\r\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\r\n     */\r\n    function onERC721Received(\r\n        address operator,\r\n        address from,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n}\r\n\r\ninterface INFTMasterChef {\r\n    function enterStaking(uint256 _amount, address _account) external;\r\n}\r\n\r\n// MasterChef is the master of DRG. He can make DRG and he is a fair guy.\r\n//\r\n// Note that it's ownable and the owner wields tremendous DRG. The ownership\r\n// will be transferred to a governance smart contract once DRG is sufficiently\r\n// distributed and the community can show to govern itself.\r\n//\r\n// Have fun reading it. Hopefully it's bug-free. God bless.\r\ncontract NFTStake is Ownable, IERC721Receiver {\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n    // Info of each user.\r\n    struct UserInfo {\r\n        uint256[] tokenIds;\r\n        uint256 amount; // How many LP tokens the user has provided.\r\n        uint256 rewardDebt; // Reward debt. See explanation below.\r\n        //\r\n        // We do some fancy math here. Basically, any point in time, the amount of DRGs\r\n        // entitled to a user but is pending to be distributed is:\r\n        //\r\n        //   pending reward = (user.amount * pool.accDRGPerShare) - user.rewardDebt\r\n        //\r\n        // Whenever a user deposits or withdraws LP tokens to a pool. Here's what happens:\r\n        //   1. The pool's `accDRGPerShare` (and `lastRewardBlock`) gets updated.\r\n        //   2. User receives the pending reward sent to his/her address.\r\n        //   3. User's `amount` gets updated.\r\n        //   4. User's `rewardDebt` gets updated.\r\n    }\r\n    // Info of each pool.\r\n    struct PoolInfo {\r\n        IERC721 NFTToken; // Address of LP token contract.\r\n        uint256 allocPoint; // How many allocation points assigned to this pool. DRGs to distribute per block.\r\n        uint256 lastRewardBlock; // Last block number that DRGs distribution occurs.\r\n        uint256 accDRGPerShare; // Accumulated DRGs per share, times 1e12. See below.\r\n    }\r\n\r\n    INFTMasterChef public NFTMasterChef;\r\n\r\n    // The DRG TOKEN!\r\n    IERC20 public DRG;\r\n    // Dev address.\r\n    address public devaddr;\r\n    // DRG tokens created per block.\r\n    uint256 public DRGPerBlock;\r\n    // Bonus muliplier for early DRG makers.\r\n    uint256 public BONUS_MULTIPLIER = 1;\r\n    // The migrator contract. It has a lot of DRG. Can only be set through governance (owner).\r\n    IMigratorChef public migrator;\r\n    // Info of each pool.\r\n    PoolInfo[] public poolInfo;\r\n    // Info of each user that stakes LP tokens.\r\n    mapping(uint256 => mapping(address => UserInfo)) public userInfo;\r\n    // Total allocation poitns. Must be the sum of all allocation points in all pools.\r\n    uint256 public totalAllocPoint = 0;\r\n    // The block number when DRG mining starts.\r\n    uint256 public startBlock;\r\n\r\n    event Deposit(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event Withdraw(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event EmergencyWithdraw(\r\n        address indexed user,\r\n        uint256 indexed pid,\r\n        uint256 amount\r\n    );\r\n\r\n    constructor(\r\n        IERC20 _DRG,\r\n        INFTMasterChef _NFTMasterChef,\r\n        address _devaddr,\r\n        uint256 _DRGPerBlock,\r\n        uint256 _startBlock\r\n    ) {\r\n        DRG = _DRG;\r\n        NFTMasterChef = _NFTMasterChef;\r\n        devaddr = _devaddr;\r\n        DRGPerBlock = _DRGPerBlock;\r\n        startBlock = _startBlock;\r\n    }\r\n\r\n    /**\r\n     * Always returns `IERC721Receiver.onERC721Received.selector`.\r\n     */\r\n    function onERC721Received(address, address, uint256, bytes memory) public virtual override returns (bytes4) {\r\n        return this.onERC721Received.selector;\r\n    }\r\n\r\n    function updateMultiplier(uint256 multiplierNumber) public onlyOwner {\r\n        BONUS_MULTIPLIER = multiplierNumber;\r\n    }\r\n\r\n    function poolLength() external view returns (uint256) {\r\n        return poolInfo.length;\r\n    }\r\n\r\n    // Add a new lp to the pool. Can only be called by the owner.\r\n    // XXX DO NOT add the same LP token more than once. Rewards will be messed up if you do.\r\n    function add( uint256 _allocPoint, IERC721 _NFTToken, bool _withUpdate ) public onlyOwner {\r\n        if (_withUpdate) {\r\n            massUpdatePools();\r\n        }\r\n        uint256 lastRewardBlock = block.number > startBlock ? block.number : startBlock;\r\n        totalAllocPoint = totalAllocPoint.add(_allocPoint);\r\n        poolInfo.push(\r\n            PoolInfo({\r\n                NFTToken: _NFTToken,\r\n                allocPoint: _allocPoint,\r\n                lastRewardBlock: lastRewardBlock,\r\n                accDRGPerShare: 0\r\n            })\r\n        );\r\n    }\r\n\r\n    // Update the given pool's DRG allocation point. Can only be called by the owner.\r\n    function set( uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner {\r\n        if (_withUpdate) {\r\n            massUpdatePools();\r\n        }\r\n        totalAllocPoint = totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint);\r\n        poolInfo[_pid].allocPoint = _allocPoint;\r\n    }\r\n\r\n    // Set the migrator contract. Can only be called by the owner.\r\n    function setMigrator(IMigratorChef _migrator) public onlyOwner {\r\n        migrator = _migrator;\r\n    }\r\n\r\n    // Return reward multiplier over the given _from to _to block.\r\n    function getMultiplier(uint256 _from, uint256 _to) public view returns (uint256) {\r\n         return _to.sub(_from).mul(BONUS_MULTIPLIER);\r\n    }\r\n\r\n    function getUserTokenIds(uint256 _pid, address _user) public view returns (uint256[] memory) {\r\n        UserInfo storage user = userInfo[_pid][_user];\r\n        return user.tokenIds;\r\n    }\r\n\r\n    // View function to see pending DRGs on frontend.\r\n    function pendingDRG(uint256 _pid, address _user) external view returns (uint256){\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][_user];\r\n        uint256 accDRGPerShare = pool.accDRGPerShare;\r\n        uint256 NFTSupply = pool.NFTToken.balanceOf(address(this));\r\n        if (block.number > pool.lastRewardBlock && NFTSupply != 0) {\r\n            uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number);\r\n            uint256 DRGReward = multiplier.mul(DRGPerBlock).mul(pool.allocPoint).div(totalAllocPoint);\r\n            accDRGPerShare = accDRGPerShare.add(DRGReward.mul(1e12).div(NFTSupply));\r\n        }\r\n        return user.amount.mul(accDRGPerShare).div(1e12).sub(user.rewardDebt);\r\n    }\r\n\r\n    // Update reward vairables for all pools. Be careful of gas spending!\r\n    function massUpdatePools() public {\r\n        uint256 length = poolInfo.length;\r\n        for (uint256 pid = 0; pid < length; ++pid) {\r\n            updatePool(pid);\r\n        }\r\n    }\r\n\r\n    // Update reward variables of the given pool to be up-to-date.\r\n    function updatePool(uint256 _pid) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        if (block.number <= pool.lastRewardBlock) {\r\n            return;\r\n        }\r\n        uint256 NFTSupply = pool.NFTToken.balanceOf(address(this));\r\n        if (NFTSupply <= 0) {\r\n            pool.lastRewardBlock = block.number;\r\n            return;\r\n        }\r\n        uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number);\r\n        uint256 DRGReward = multiplier.mul(DRGPerBlock).mul(pool.allocPoint).div(totalAllocPoint);\r\n        DRG.mint(address(this), DRGReward);\r\n        pool.accDRGPerShare = pool.accDRGPerShare.add(DRGReward.mul(1e12).div(NFTSupply));\r\n        pool.lastRewardBlock = block.number;\r\n    }\r\n\r\n    // Deposit NFT tokens to MasterChef for DRG allocation.\r\n    function deposit(uint256 _pid, uint256 _tokenId) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        updatePool(_pid);\r\n        if (user.amount > 0) {\r\n            uint256 pending = user.amount.mul(pool.accDRGPerShare).div(1e12).sub(user.rewardDebt);\r\n            if(pending > 0){\r\n                safeDRGTransfer(msg.sender, pending);\r\n            }\r\n        }\r\n        pool.NFTToken.safeTransferFrom(address(msg.sender), address(this), _tokenId);\r\n        user.amount = user.amount.add(1);\r\n        user.rewardDebt = user.amount.mul(pool.accDRGPerShare).div(1e12);\r\n        user.tokenIds.push(_tokenId);\r\n        emit Deposit(msg.sender, _pid, _tokenId);\r\n    }\r\n\r\n    // Withdraw NFT tokens from MasterChef.\r\n    function withdraw(uint256 _pid, uint256 _tokenId) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        uint256 pending;\r\n        if(_tokenId == 0){\r\n            updatePool(_pid);\r\n            pending = user.amount.mul(pool.accDRGPerShare).div(1e12).sub(user.rewardDebt);\r\n            if(pending > 0){\r\n                safeDRGTransfer(msg.sender, pending);\r\n            }\r\n            user.rewardDebt = user.amount.mul(pool.accDRGPerShare).div(1e12);\r\n        }else {\r\n            uint256 hasTokenId = 0;\r\n            uint256 tokenIdIndex;\r\n            for(uint256 i; i<user.tokenIds.length; i++){\r\n                if(user.tokenIds[i] == _tokenId){\r\n                    hasTokenId = 1;\r\n                    tokenIdIndex = i;\r\n                }\r\n            }\r\n            require(hasTokenId == 1, \"You are not Owner of token id\");\r\n            require(user.amount >= 1, \"withdraw: not good\");\r\n            updatePool(_pid);\r\n            pending = user.amount.mul(pool.accDRGPerShare).div(1e12).sub(user.rewardDebt);\r\n            if(pending > 0){\r\n                safeDRGTransfer(msg.sender, pending);\r\n            }\r\n            user.amount = user.amount.sub(1);\r\n            user.rewardDebt = user.amount.mul(pool.accDRGPerShare).div(1e12);\r\n            delete user.tokenIds[tokenIdIndex];\r\n            pool.NFTToken.safeTransferFrom(address(this), address(msg.sender), _tokenId);\r\n        }\r\n        emit Withdraw(msg.sender, _pid, _tokenId);\r\n    }\r\n\r\n    function compundDRG(uint256 _pid) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        updatePool(_pid);\r\n        uint256 pending = user.amount.mul(pool.accDRGPerShare).div(1e12).sub(user.rewardDebt);\r\n        require(pending > 0, \"Amount is zero\");\r\n        DRG.approve(address(NFTMasterChef), pending);\r\n        NFTMasterChef.enterStaking(pending, msg.sender);\r\n        user.rewardDebt = user.amount.mul(pool.accDRGPerShare).div(1e12);\r\n        emit Withdraw(msg.sender, _pid, pending);\r\n    }\r\n\r\n    // Safe DRG transfer function, just in case if rounding error causes pool to not have enough DRGs.\r\n    function safeDRGTransfer(address _to, uint256 _amount) internal {\r\n        uint256 DRGbal = DRG.balanceOf(address(this));\r\n        if (_amount > DRGbal) {\r\n            DRG.transfer(_to, DRGbal);\r\n        } else {\r\n            DRG.transfer(_to, _amount);\r\n        }\r\n    }\r\n\r\n    function setDevAddress(address _devaddr) public onlyOwner {\r\n        devaddr = _devaddr;\r\n    }\r\n\r\n    function updateDRGPerBlock(uint256 newAmount) public onlyOwner {\r\n        DRGPerBlock = newAmount;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/NFTStake.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTStake.sol\":7883:16157  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTStake.sol\":7883:16157  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220194fbd587550f78cd1a727853fa1c21be730a7998b6dd13e6a673d9089b65b9764736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220194fbd587550f78cd1a727853fa1c21be730a7998b6dd13e6a673d9089b65b9764736f6c634300080f0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT 0x4F 0xBD PC PUSH22 0x50F78CD1A727853FA1C21BE730A7998B6DD13E6A673D SWAP1 DUP10 0xB6 JUMPDEST SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "7883:8274:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220194fbd587550f78cd1a727853fa1c21be730a7998b6dd13e6a673d9089b65b9764736f6c634300080f0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT 0x4F 0xBD PC PUSH22 0x50F78CD1A727853FA1C21BE730A7998B6DD13E6A673D SWAP1 DUP10 0xB6 JUMPDEST SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "7883:8274:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 7883,
									"end": 16157,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220194fbd587550f78cd1a727853fa1c21be730a7998b6dd13e6a673d9089b65b9764736f6c634300080f0033",
									".code": [
										{
											"begin": 7883,
											"end": 16157,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 7883,
											"end": 16157,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7883,
											"end": 16157,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7883,
											"end": 16157,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7883,
											"end": 16157,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7883,
											"end": 16157,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7883,
											"end": 16157,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7883,
											"end": 16157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7883,
											"end": 16157,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/NFTStake.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTStake.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTStake.sol\":{\"keccak256\":\"0x8a5817077c2522aa4ea7969eb27dc700ae72b3908333b046c0e91858fb3659d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a81f9af2a103eaeacd422f5db8359693f2f61fe21342b67f139ade2f7e22f51\",\"dweb:/ipfs/QmdbKV6KbXdaMzcv9PJDqr2VjjmRH9jGSzuQB4q1eyTbu7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTStake.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTStake.sol\":{\"keccak256\":\"0x8a5817077c2522aa4ea7969eb27dc700ae72b3908333b046c0e91858fb3659d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a81f9af2a103eaeacd422f5db8359693f2f61fe21342b67f139ade2f7e22f51\",\"dweb:/ipfs/QmdbKV6KbXdaMzcv9PJDqr2VjjmRH9jGSzuQB4q1eyTbu7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTStake.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTStake.sol\":{\"keccak256\":\"0x8a5817077c2522aa4ea7969eb27dc700ae72b3908333b046c0e91858fb3659d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a81f9af2a103eaeacd422f5db8359693f2f61fe21342b67f139ade2f7e22f51\",\"dweb:/ipfs/QmdbKV6KbXdaMzcv9PJDqr2VjjmRH9jGSzuQB4q1eyTbu7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "minter",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"mint(address,uint256)": "40c10f19",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTStake.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTStake.sol\":{\"keccak256\":\"0x8a5817077c2522aa4ea7969eb27dc700ae72b3908333b046c0e91858fb3659d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a81f9af2a103eaeacd422f5db8359693f2f61fe21342b67f139ade2f7e22f51\",\"dweb:/ipfs/QmdbKV6KbXdaMzcv9PJDqr2VjjmRH9jGSzuQB4q1eyTbu7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTStake.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTStake.sol\":{\"keccak256\":\"0x8a5817077c2522aa4ea7969eb27dc700ae72b3908333b046c0e91858fb3659d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a81f9af2a103eaeacd422f5db8359693f2f61fe21342b67f139ade2f7e22f51\",\"dweb:/ipfs/QmdbKV6KbXdaMzcv9PJDqr2VjjmRH9jGSzuQB4q1eyTbu7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTStake.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTStake.sol\":{\"keccak256\":\"0x8a5817077c2522aa4ea7969eb27dc700ae72b3908333b046c0e91858fb3659d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a81f9af2a103eaeacd422f5db8359693f2f61fe21342b67f139ade2f7e22f51\",\"dweb:/ipfs/QmdbKV6KbXdaMzcv9PJDqr2VjjmRH9jGSzuQB4q1eyTbu7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IMigratorChef": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								}
							],
							"name": "migrate",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"migrate(address)": "ce5494bb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"migrate\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTStake.sol\":\"IMigratorChef\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTStake.sol\":{\"keccak256\":\"0x8a5817077c2522aa4ea7969eb27dc700ae72b3908333b046c0e91858fb3659d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a81f9af2a103eaeacd422f5db8359693f2f61fe21342b67f139ade2f7e22f51\",\"dweb:/ipfs/QmdbKV6KbXdaMzcv9PJDqr2VjjmRH9jGSzuQB4q1eyTbu7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"INFTMasterChef": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "enterStaking",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"enterStaking(uint256,address)": "849df12c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"enterStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTStake.sol\":\"INFTMasterChef\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTStake.sol\":{\"keccak256\":\"0x8a5817077c2522aa4ea7969eb27dc700ae72b3908333b046c0e91858fb3659d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a81f9af2a103eaeacd422f5db8359693f2f61fe21342b67f139ade2f7e22f51\",\"dweb:/ipfs/QmdbKV6KbXdaMzcv9PJDqr2VjjmRH9jGSzuQB4q1eyTbu7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"NFTStake": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_DRG",
									"type": "address"
								},
								{
									"internalType": "contract INFTMasterChef",
									"name": "_NFTMasterChef",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_devaddr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_DRGPerBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_startBlock",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "BONUS_MULTIPLIER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DRG",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DRGPerBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "NFTMasterChef",
							"outputs": [
								{
									"internalType": "contract INFTMasterChef",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "contract IERC721",
									"name": "_NFTToken",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								}
							],
							"name": "add",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "compundDRG",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "devaddr",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_from",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_to",
									"type": "uint256"
								}
							],
							"name": "getMultiplier",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getUserTokenIds",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "massUpdatePools",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "migrator",
							"outputs": [
								{
									"internalType": "contract IMigratorChef",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "pendingDRG",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "poolInfo",
							"outputs": [
								{
									"internalType": "contract IERC721",
									"name": "NFTToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastRewardBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "accDRGPerShare",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								}
							],
							"name": "set",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_devaddr",
									"type": "address"
								}
							],
							"name": "setDevAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IMigratorChef",
									"name": "_migrator",
									"type": "address"
								}
							],
							"name": "setMigrator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAllocPoint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newAmount",
									"type": "uint256"
								}
							],
							"name": "updateDRGPerBlock",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "multiplierNumber",
									"type": "uint256"
								}
							],
							"name": "updateMultiplier",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "updatePool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardDebt",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTStake.sol\":28007:38495  contract NFTStake is Ownable, IERC721Receiver {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/NFTStake.sol\":29672:29673  1 */\n  0x01\n    /* \"contracts/NFTStake.sol\":29638:29673  uint256 public BONUS_MULTIPLIER = 1 */\n  0x05\n  sstore\n    /* \"contracts/NFTStake.sol\":30113:30114  0 */\n  0x00\n    /* \"contracts/NFTStake.sol\":30080:30114  uint256 public totalAllocPoint = 0 */\n  0x09\n  sstore\n    /* \"contracts/NFTStake.sol\":30488:30828  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/NFTStake.sol\":20054:20086  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"contracts/NFTStake.sol\":20073:20085  _msgSender() */\n  tag_8\n    /* \"contracts/NFTStake.sol\":20073:20083  _msgSender */\n  shl(0x20, tag_9)\n    /* \"contracts/NFTStake.sol\":20073:20085  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"contracts/NFTStake.sol\":20054:20072  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"contracts/NFTStake.sol\":20054:20086  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contracts/NFTStake.sol\":30674:30678  _DRG */\n  dup5\n    /* \"contracts/NFTStake.sol\":30668:30671  DRG */\n  0x02\n  0x00\n    /* \"contracts/NFTStake.sol\":30668:30678  DRG = _DRG */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTStake.sol\":30705:30719  _NFTMasterChef */\n  dup4\n    /* \"contracts/NFTStake.sol\":30689:30702  NFTMasterChef */\n  0x01\n  0x00\n    /* \"contracts/NFTStake.sol\":30689:30719  NFTMasterChef = _NFTMasterChef */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTStake.sol\":30740:30748  _devaddr */\n  dup3\n    /* \"contracts/NFTStake.sol\":30730:30737  devaddr */\n  0x03\n  0x00\n    /* \"contracts/NFTStake.sol\":30730:30748  devaddr = _devaddr */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTStake.sol\":30773:30785  _DRGPerBlock */\n  dup2\n    /* \"contracts/NFTStake.sol\":30759:30770  DRGPerBlock */\n  0x04\n    /* \"contracts/NFTStake.sol\":30759:30785  DRGPerBlock = _DRGPerBlock */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTStake.sol\":30809:30820  _startBlock */\n  dup1\n    /* \"contracts/NFTStake.sol\":30796:30806  startBlock */\n  0x0a\n    /* \"contracts/NFTStake.sol\":30796:30820  startBlock = _startBlock */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTStake.sol\":30488:30828  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/NFTStake.sol\":28007:38495  contract NFTStake is Ownable, IERC721Receiver {... */\n  jump(tag_12)\n    /* \"contracts/NFTStake.sol\":19549:19647  function _msgSender() internal view virtual returns (address) {... */\ntag_9:\n    /* \"contracts/NFTStake.sol\":19602:19609  address */\n  0x00\n    /* \"contracts/NFTStake.sol\":19629:19639  msg.sender */\n  caller\n    /* \"contracts/NFTStake.sol\":19622:19639  return msg.sender */\n  swap1\n  pop\n    /* \"contracts/NFTStake.sol\":19549:19647  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/NFTStake.sol\":21445:21636  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"contracts/NFTStake.sol\":21519:21535  address oldOwner */\n  0x00\n    /* \"contracts/NFTStake.sol\":21538:21544  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/NFTStake.sol\":21519:21544  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"contracts/NFTStake.sol\":21564:21572  newOwner */\n  dup2\n    /* \"contracts/NFTStake.sol\":21555:21561  _owner */\n  0x00\n  dup1\n    /* \"contracts/NFTStake.sol\":21555:21572  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTStake.sol\":21619:21627  newOwner */\n  dup2\n    /* \"contracts/NFTStake.sol\":21588:21628  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/NFTStake.sol\":21609:21617  oldOwner */\n  dup2\n    /* \"contracts/NFTStake.sol\":21588:21628  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/NFTStake.sol\":21508:21636  {... */\n  pop\n    /* \"contracts/NFTStake.sol\":21445:21636  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_37\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:678   */\ntag_20:\n    /* \"#utility.yul\":619:626   */\n  0x00\n    /* \"#utility.yul\":648:672   */\n  tag_39\n    /* \"#utility.yul\":666:671   */\n  dup3\n    /* \"#utility.yul\":648:672   */\n  tag_19\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":637:672   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:678   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":684:834   */\ntag_21:\n    /* \"#utility.yul\":771:809   */\n  tag_41\n    /* \"#utility.yul\":803:808   */\n  dup2\n    /* \"#utility.yul\":771:809   */\n  tag_20\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":764:769   */\n  dup2\n    /* \"#utility.yul\":761:810   */\n  eq\n    /* \"#utility.yul\":751:828   */\n  tag_42\n  jumpi\n    /* \"#utility.yul\":824:825   */\n  0x00\n    /* \"#utility.yul\":821:822   */\n  dup1\n    /* \"#utility.yul\":814:826   */\n  revert\n    /* \"#utility.yul\":751:828   */\ntag_42:\n    /* \"#utility.yul\":684:834   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":840:1011   */\ntag_22:\n    /* \"#utility.yul\":911:916   */\n  0x00\n    /* \"#utility.yul\":942:948   */\n  dup2\n    /* \"#utility.yul\":936:949   */\n  mload\n    /* \"#utility.yul\":927:949   */\n  swap1\n  pop\n    /* \"#utility.yul\":958:1005   */\n  tag_44\n    /* \"#utility.yul\":999:1004   */\n  dup2\n    /* \"#utility.yul\":958:1005   */\n  tag_21\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":840:1011   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1017:1136   */\ntag_23:\n    /* \"#utility.yul\":1077:1084   */\n  0x00\n    /* \"#utility.yul\":1106:1130   */\n  tag_46\n    /* \"#utility.yul\":1124:1129   */\n  dup3\n    /* \"#utility.yul\":1106:1130   */\n  tag_19\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1095:1130   */\n  swap1\n  pop\n    /* \"#utility.yul\":1017:1136   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1142:1310   */\ntag_24:\n    /* \"#utility.yul\":1238:1285   */\n  tag_48\n    /* \"#utility.yul\":1279:1284   */\n  dup2\n    /* \"#utility.yul\":1238:1285   */\n  tag_23\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1231:1236   */\n  dup2\n    /* \"#utility.yul\":1228:1286   */\n  eq\n    /* \"#utility.yul\":1218:1304   */\n  tag_49\n  jumpi\n    /* \"#utility.yul\":1300:1301   */\n  0x00\n    /* \"#utility.yul\":1297:1298   */\n  dup1\n    /* \"#utility.yul\":1290:1302   */\n  revert\n    /* \"#utility.yul\":1218:1304   */\ntag_49:\n    /* \"#utility.yul\":1142:1310   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1316:1505   */\ntag_25:\n    /* \"#utility.yul\":1396:1401   */\n  0x00\n    /* \"#utility.yul\":1427:1433   */\n  dup2\n    /* \"#utility.yul\":1421:1434   */\n  mload\n    /* \"#utility.yul\":1412:1434   */\n  swap1\n  pop\n    /* \"#utility.yul\":1443:1499   */\n  tag_51\n    /* \"#utility.yul\":1493:1498   */\n  dup2\n    /* \"#utility.yul\":1443:1499   */\n  tag_24\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1316:1505   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1511:1633   */\ntag_26:\n    /* \"#utility.yul\":1584:1608   */\n  tag_53\n    /* \"#utility.yul\":1602:1607   */\n  dup2\n    /* \"#utility.yul\":1584:1608   */\n  tag_19\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1577:1582   */\n  dup2\n    /* \"#utility.yul\":1574:1609   */\n  eq\n    /* \"#utility.yul\":1564:1627   */\n  tag_54\n  jumpi\n    /* \"#utility.yul\":1623:1624   */\n  0x00\n    /* \"#utility.yul\":1620:1621   */\n  dup1\n    /* \"#utility.yul\":1613:1625   */\n  revert\n    /* \"#utility.yul\":1564:1627   */\ntag_54:\n    /* \"#utility.yul\":1511:1633   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1639:1782   */\ntag_27:\n    /* \"#utility.yul\":1696:1701   */\n  0x00\n    /* \"#utility.yul\":1727:1733   */\n  dup2\n    /* \"#utility.yul\":1721:1734   */\n  mload\n    /* \"#utility.yul\":1712:1734   */\n  swap1\n  pop\n    /* \"#utility.yul\":1743:1776   */\n  tag_56\n    /* \"#utility.yul\":1770:1775   */\n  dup2\n    /* \"#utility.yul\":1743:1776   */\n  tag_26\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1639:1782   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1788:1865   */\ntag_28:\n    /* \"#utility.yul\":1825:1832   */\n  0x00\n    /* \"#utility.yul\":1854:1859   */\n  dup2\n    /* \"#utility.yul\":1843:1859   */\n  swap1\n  pop\n    /* \"#utility.yul\":1788:1865   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1871:1993   */\ntag_29:\n    /* \"#utility.yul\":1944:1968   */\n  tag_59\n    /* \"#utility.yul\":1962:1967   */\n  dup2\n    /* \"#utility.yul\":1944:1968   */\n  tag_28\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1937:1942   */\n  dup2\n    /* \"#utility.yul\":1934:1969   */\n  eq\n    /* \"#utility.yul\":1924:1987   */\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1983:1984   */\n  0x00\n    /* \"#utility.yul\":1980:1981   */\n  dup1\n    /* \"#utility.yul\":1973:1985   */\n  revert\n    /* \"#utility.yul\":1924:1987   */\ntag_60:\n    /* \"#utility.yul\":1871:1993   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1999:2142   */\ntag_30:\n    /* \"#utility.yul\":2056:2061   */\n  0x00\n    /* \"#utility.yul\":2087:2093   */\n  dup2\n    /* \"#utility.yul\":2081:2094   */\n  mload\n    /* \"#utility.yul\":2072:2094   */\n  swap1\n  pop\n    /* \"#utility.yul\":2103:2136   */\n  tag_62\n    /* \"#utility.yul\":2130:2135   */\n  dup2\n    /* \"#utility.yul\":2103:2136   */\n  tag_29\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1999:2142   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2148:3199   */\ntag_3:\n    /* \"#utility.yul\":2291:2297   */\n  0x00\n    /* \"#utility.yul\":2299:2305   */\n  dup1\n    /* \"#utility.yul\":2307:2313   */\n  0x00\n    /* \"#utility.yul\":2315:2321   */\n  dup1\n    /* \"#utility.yul\":2323:2329   */\n  0x00\n    /* \"#utility.yul\":2372:2375   */\n  0xa0\n    /* \"#utility.yul\":2360:2369   */\n  dup7\n    /* \"#utility.yul\":2351:2358   */\n  dup9\n    /* \"#utility.yul\":2347:2370   */\n  sub\n    /* \"#utility.yul\":2343:2376   */\n  slt\n    /* \"#utility.yul\":2340:2460   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":2379:2458   */\n  tag_65\n  tag_16\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2340:2460   */\ntag_64:\n    /* \"#utility.yul\":2499:2500   */\n  0x00\n    /* \"#utility.yul\":2524:2602   */\n  tag_66\n    /* \"#utility.yul\":2594:2601   */\n  dup9\n    /* \"#utility.yul\":2585:2591   */\n  dup3\n    /* \"#utility.yul\":2574:2583   */\n  dup10\n    /* \"#utility.yul\":2570:2592   */\n  add\n    /* \"#utility.yul\":2524:2602   */\n  tag_22\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2514:2602   */\n  swap6\n  pop\n    /* \"#utility.yul\":2470:2612   */\n  pop\n    /* \"#utility.yul\":2651:2653   */\n  0x20\n    /* \"#utility.yul\":2677:2764   */\n  tag_67\n    /* \"#utility.yul\":2756:2763   */\n  dup9\n    /* \"#utility.yul\":2747:2753   */\n  dup3\n    /* \"#utility.yul\":2736:2745   */\n  dup10\n    /* \"#utility.yul\":2732:2754   */\n  add\n    /* \"#utility.yul\":2677:2764   */\n  tag_25\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2667:2764   */\n  swap5\n  pop\n    /* \"#utility.yul\":2622:2774   */\n  pop\n    /* \"#utility.yul\":2813:2815   */\n  0x40\n    /* \"#utility.yul\":2839:2903   */\n  tag_68\n    /* \"#utility.yul\":2895:2902   */\n  dup9\n    /* \"#utility.yul\":2886:2892   */\n  dup3\n    /* \"#utility.yul\":2875:2884   */\n  dup10\n    /* \"#utility.yul\":2871:2893   */\n  add\n    /* \"#utility.yul\":2839:2903   */\n  tag_27\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2829:2903   */\n  swap4\n  pop\n    /* \"#utility.yul\":2784:2913   */\n  pop\n    /* \"#utility.yul\":2952:2954   */\n  0x60\n    /* \"#utility.yul\":2978:3042   */\n  tag_69\n    /* \"#utility.yul\":3034:3041   */\n  dup9\n    /* \"#utility.yul\":3025:3031   */\n  dup3\n    /* \"#utility.yul\":3014:3023   */\n  dup10\n    /* \"#utility.yul\":3010:3032   */\n  add\n    /* \"#utility.yul\":2978:3042   */\n  tag_30\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2968:3042   */\n  swap3\n  pop\n    /* \"#utility.yul\":2923:3052   */\n  pop\n    /* \"#utility.yul\":3091:3094   */\n  0x80\n    /* \"#utility.yul\":3118:3182   */\n  tag_70\n    /* \"#utility.yul\":3174:3181   */\n  dup9\n    /* \"#utility.yul\":3165:3171   */\n  dup3\n    /* \"#utility.yul\":3154:3163   */\n  dup10\n    /* \"#utility.yul\":3150:3172   */\n  add\n    /* \"#utility.yul\":3118:3182   */\n  tag_30\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":3108:3182   */\n  swap2\n  pop\n    /* \"#utility.yul\":3062:3192   */\n  pop\n    /* \"#utility.yul\":2148:3199   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  swap1\n  swap4\n  pop\n  jump\t// out\n    /* \"contracts/NFTStake.sol\":28007:38495  contract NFTStake is Ownable, IERC721Receiver {... */\ntag_12:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTStake.sol\":28007:38495  contract NFTStake is Ownable, IERC721Receiver {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x64482f79\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xa1eef821\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xd5545992\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xd5545992\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xe2bbb158\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xe4d09896\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_31\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0xa1eef821\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xbe70fba3\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xd0d41fe1\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xd49e77cd\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x8aa28550\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x8aa28550\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x8dbb1e3a\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x93f1a40b\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x64482f79\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x7cd07e47\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0x23cf3118\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x4f17dbaf\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x4f17dbaf\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x51eb05a6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x5ffe6146\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x630b5ba1\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x23cf3118\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x441a3e70\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x48cd4cb1\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0x150b7a02\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x150b7a02\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x1526fe27\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x17caf6f1\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x1eaaa045\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x081e3eda\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0fe7ea17\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x141aa0ba\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/NFTStake.sol\":31225:31320  function poolLength() external view returns (uint256) {... */\n    tag_3:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStake.sol\":38387:38492  function updateDRGPerBlock(uint256 newAmount) public onlyOwner {... */\n    tag_4:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      stop\n        /* \"contracts/NFTStake.sol\":29447:29464  IERC20 public DRG */\n    tag_5:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStake.sol\":30922:31086  function onERC721Received(address, address, uint256, bytes memory) public virtual override returns (bytes4) {... */\n    tag_6:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStake.sol\":29839:29865  PoolInfo[] public poolInfo */\n    tag_7:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_60\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStake.sol\":30080:30114  uint256 public totalAllocPoint = 0 */\n    tag_8:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStake.sol\":31489:32051  function add( uint256 _allocPoint, IERC721 _NFTToken, bool _withUpdate ) public onlyOwner {... */\n    tag_9:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      stop\n        /* \"contracts/NFTStake.sol\":32527:32629  function setMigrator(IMigratorChef _migrator) public onlyOwner {... */\n    tag_10:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n    tag_69:\n      stop\n        /* \"contracts/NFTStake.sol\":35790:37315  function withdraw(uint256 _pid, uint256 _tokenId) public {... */\n    tag_11:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n    tag_73:\n      stop\n        /* \"contracts/NFTStake.sol\":30170:30195  uint256 public startBlock */\n    tag_12:\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStake.sol\":33108:33861  function pendingDRG(uint256 _pid, address _user) external view returns (uint256){... */\n    tag_13:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStake.sol\":34200:34929  function updatePool(uint256 _pid) public {... */\n    tag_14:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n    tag_85:\n      stop\n        /* \"contracts/NFTStake.sol\":31094:31217  function updateMultiplier(uint256 multiplierNumber) public onlyOwner {... */\n    tag_15:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n    tag_88:\n      stop\n        /* \"contracts/NFTStake.sol\":33944:34124  function massUpdatePools() public {... */\n    tag_16:\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n      stop\n        /* \"contracts/NFTStake.sol\":32146:32451  function set( uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner {... */\n    tag_17:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      tag_96\n      jump\t// in\n    tag_93:\n      stop\n        /* \"contracts/NFTStake.sol\":20826:20929  function renounceOwnership() public virtual onlyOwner {... */\n    tag_18:\n      tag_97\n      tag_98\n      jump\t// in\n    tag_97:\n      stop\n        /* \"contracts/NFTStake.sol\":29776:29805  IMigratorChef public migrator */\n    tag_19:\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStake.sol\":29638:29673  uint256 public BONUS_MULTIPLIER = 1 */\n    tag_20:\n      tag_103\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      tag_105\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStake.sol\":20175:20262  function owner() public view virtual returns (address) {... */\n    tag_21:\n      tag_106\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStake.sol\":32705:32849  function getMultiplier(uint256 _from, uint256 _to) public view returns (uint256) {... */\n    tag_22:\n      tag_110\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_111:\n      tag_112\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      tag_113\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStake.sol\":29921:29985  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n    tag_23:\n      tag_114\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_115\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_115:\n      tag_116\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      tag_117\n      swap3\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStake.sol\":29559:29585  uint256 public DRGPerBlock */\n    tag_24:\n      tag_119\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      tag_121\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStake.sol\":37323:37893  function compundDRG(uint256 _pid) public {... */\n    tag_25:\n      tag_122\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_123\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_123:\n      tag_124\n      jump\t// in\n    tag_122:\n      stop\n        /* \"contracts/NFTStake.sol\":38284:38379  function setDevAddress(address _devaddr) public onlyOwner {... */\n    tag_26:\n      tag_125\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_126\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      tag_128\n      jump\t// in\n    tag_125:\n      stop\n        /* \"contracts/NFTStake.sol\":29492:29514  address public devaddr */\n    tag_27:\n      tag_129\n      tag_130\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      tag_131\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStake.sol\":32857:33045  function getUserTokenIds(uint256 _pid, address _user) public view returns (uint256[] memory) {... */\n    tag_28:\n      tag_132\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_133\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_133:\n      tag_134\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      tag_135\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStake.sol\":34998:35737  function deposit(uint256 _pid, uint256 _tokenId) public {... */\n    tag_29:\n      tag_137\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_138\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_138:\n      tag_139\n      jump\t// in\n    tag_137:\n      stop\n        /* \"contracts/NFTStake.sol\":29380:29415  INFTMasterChef public NFTMasterChef */\n    tag_30:\n      tag_140\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      tag_142\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStake.sol\":21084:21285  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_31:\n      tag_144\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_145\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_145:\n      tag_146\n      jump\t// in\n    tag_144:\n      stop\n        /* \"contracts/NFTStake.sol\":31225:31320  function poolLength() external view returns (uint256) {... */\n    tag_40:\n        /* \"contracts/NFTStake.sol\":31270:31277  uint256 */\n      0x00\n        /* \"contracts/NFTStake.sol\":31297:31305  poolInfo */\n      0x07\n        /* \"contracts/NFTStake.sol\":31297:31312  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":31290:31312  return poolInfo.length */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":31225:31320  function poolLength() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":38387:38492  function updateDRGPerBlock(uint256 newAmount) public onlyOwner {... */\n    tag_46:\n        /* \"contracts/NFTStake.sol\":20406:20418  _msgSender() */\n      tag_149\n        /* \"contracts/NFTStake.sol\":20406:20416  _msgSender */\n      tag_150\n        /* \"contracts/NFTStake.sol\":20406:20418  _msgSender() */\n      jump\t// in\n    tag_149:\n        /* \"contracts/NFTStake.sol\":20395:20418  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":20395:20402  owner() */\n      tag_151\n        /* \"contracts/NFTStake.sol\":20395:20400  owner */\n      tag_107\n        /* \"contracts/NFTStake.sol\":20395:20402  owner() */\n      jump\t// in\n    tag_151:\n        /* \"contracts/NFTStake.sol\":20395:20418  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTStake.sol\":20387:20455  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"contracts/NFTStake.sol\":38475:38484  newAmount */\n      dup1\n        /* \"contracts/NFTStake.sol\":38461:38472  DRGPerBlock */\n      0x04\n        /* \"contracts/NFTStake.sol\":38461:38484  DRGPerBlock = newAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":38387:38492  function updateDRGPerBlock(uint256 newAmount) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":29447:29464  IERC20 public DRG */\n    tag_48:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":30922:31086  function onERC721Received(address, address, uint256, bytes memory) public virtual override returns (bytes4) {... */\n    tag_54:\n        /* \"contracts/NFTStake.sol\":31022:31028  bytes4 */\n      0x00\n        /* \"contracts/NFTStake.sol\":31048:31078  this.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"contracts/NFTStake.sol\":31041:31078  return this.onERC721Received.selector */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":30922:31086  function onERC721Received(address, address, uint256, bytes memory) public virtual override returns (bytes4) {... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":29839:29865  PoolInfo[] public poolInfo */\n    tag_59:\n      0x07\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_157\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_157:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":30080:30114  uint256 public totalAllocPoint = 0 */\n    tag_63:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":31489:32051  function add( uint256 _allocPoint, IERC721 _NFTToken, bool _withUpdate ) public onlyOwner {... */\n    tag_68:\n        /* \"contracts/NFTStake.sol\":20406:20418  _msgSender() */\n      tag_160\n        /* \"contracts/NFTStake.sol\":20406:20416  _msgSender */\n      tag_150\n        /* \"contracts/NFTStake.sol\":20406:20418  _msgSender() */\n      jump\t// in\n    tag_160:\n        /* \"contracts/NFTStake.sol\":20395:20418  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":20395:20402  owner() */\n      tag_161\n        /* \"contracts/NFTStake.sol\":20395:20400  owner */\n      tag_107\n        /* \"contracts/NFTStake.sol\":20395:20402  owner() */\n      jump\t// in\n    tag_161:\n        /* \"contracts/NFTStake.sol\":20395:20418  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTStake.sol\":20387:20455  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap1\n      tag_154\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_162:\n        /* \"contracts/NFTStake.sol\":31594:31605  _withUpdate */\n      dup1\n        /* \"contracts/NFTStake.sol\":31590:31651  if (_withUpdate) {... */\n      iszero\n      tag_165\n      jumpi\n        /* \"contracts/NFTStake.sol\":31622:31639  massUpdatePools() */\n      tag_166\n        /* \"contracts/NFTStake.sol\":31622:31637  massUpdatePools */\n      tag_92\n        /* \"contracts/NFTStake.sol\":31622:31639  massUpdatePools() */\n      jump\t// in\n    tag_166:\n        /* \"contracts/NFTStake.sol\":31590:31651  if (_withUpdate) {... */\n    tag_165:\n        /* \"contracts/NFTStake.sol\":31661:31684  uint256 lastRewardBlock */\n      0x00\n        /* \"contracts/NFTStake.sol\":31702:31712  startBlock */\n      sload(0x0a)\n        /* \"contracts/NFTStake.sol\":31687:31699  block.number */\n      number\n        /* \"contracts/NFTStake.sol\":31687:31712  block.number > startBlock */\n      gt\n        /* \"contracts/NFTStake.sol\":31687:31740  block.number > startBlock ? block.number : startBlock */\n      tag_167\n      jumpi\n        /* \"contracts/NFTStake.sol\":31730:31740  startBlock */\n      sload(0x0a)\n        /* \"contracts/NFTStake.sol\":31687:31740  block.number > startBlock ? block.number : startBlock */\n      jump(tag_168)\n    tag_167:\n        /* \"contracts/NFTStake.sol\":31715:31727  block.number */\n      number\n        /* \"contracts/NFTStake.sol\":31687:31740  block.number > startBlock ? block.number : startBlock */\n    tag_168:\n        /* \"contracts/NFTStake.sol\":31661:31740  uint256 lastRewardBlock = block.number > startBlock ? block.number : startBlock */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":31769:31801  totalAllocPoint.add(_allocPoint) */\n      tag_169\n        /* \"contracts/NFTStake.sol\":31789:31800  _allocPoint */\n      dup5\n        /* \"contracts/NFTStake.sol\":31769:31784  totalAllocPoint */\n      sload(0x09)\n        /* \"contracts/NFTStake.sol\":31769:31788  totalAllocPoint.add */\n      tag_170\n      swap1\n        /* \"contracts/NFTStake.sol\":31769:31801  totalAllocPoint.add(_allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_169:\n        /* \"contracts/NFTStake.sol\":31751:31766  totalAllocPoint */\n      0x09\n        /* \"contracts/NFTStake.sol\":31751:31801  totalAllocPoint = totalAllocPoint.add(_allocPoint) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":31812:31820  poolInfo */\n      0x07\n        /* \"contracts/NFTStake.sol\":31840:32032  PoolInfo({... */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/NFTStake.sol\":31878:31887  _NFTToken */\n      dup6\n        /* \"contracts/NFTStake.sol\":31840:32032  PoolInfo({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NFTStake.sol\":31918:31929  _allocPoint */\n      dup7\n        /* \"contracts/NFTStake.sol\":31840:32032  PoolInfo({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NFTStake.sol\":31965:31980  lastRewardBlock */\n      dup4\n        /* \"contracts/NFTStake.sol\":31840:32032  PoolInfo({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NFTStake.sol\":32015:32016  0 */\n      0x00\n        /* \"contracts/NFTStake.sol\":31840:32032  PoolInfo({... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/NFTStake.sol\":31812:32043  poolInfo.push(... */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":31579:32051  {... */\n      pop\n        /* \"contracts/NFTStake.sol\":31489:32051  function add( uint256 _allocPoint, IERC721 _NFTToken, bool _withUpdate ) public onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":32527:32629  function setMigrator(IMigratorChef _migrator) public onlyOwner {... */\n    tag_72:\n        /* \"contracts/NFTStake.sol\":20406:20418  _msgSender() */\n      tag_173\n        /* \"contracts/NFTStake.sol\":20406:20416  _msgSender */\n      tag_150\n        /* \"contracts/NFTStake.sol\":20406:20418  _msgSender() */\n      jump\t// in\n    tag_173:\n        /* \"contracts/NFTStake.sol\":20395:20418  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":20395:20402  owner() */\n      tag_174\n        /* \"contracts/NFTStake.sol\":20395:20400  owner */\n      tag_107\n        /* \"contracts/NFTStake.sol\":20395:20402  owner() */\n      jump\t// in\n    tag_174:\n        /* \"contracts/NFTStake.sol\":20395:20418  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTStake.sol\":20387:20455  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap1\n      tag_154\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_175:\n        /* \"contracts/NFTStake.sol\":32612:32621  _migrator */\n      dup1\n        /* \"contracts/NFTStake.sol\":32601:32609  migrator */\n      0x06\n      0x00\n        /* \"contracts/NFTStake.sol\":32601:32621  migrator = _migrator */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":32527:32629  function setMigrator(IMigratorChef _migrator) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":35790:37315  function withdraw(uint256 _pid, uint256 _tokenId) public {... */\n    tag_76:\n        /* \"contracts/NFTStake.sol\":35858:35879  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTStake.sol\":35882:35890  poolInfo */\n      0x07\n        /* \"contracts/NFTStake.sol\":35891:35895  _pid */\n      dup4\n        /* \"contracts/NFTStake.sol\":35882:35896  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_179\n      jumpi\n      tag_180\n      tag_181\n      jump\t// in\n    tag_180:\n    tag_179:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTStake.sol\":35858:35896  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":35907:35928  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTStake.sol\":35931:35939  userInfo */\n      0x08\n        /* \"contracts/NFTStake.sol\":35931:35945  userInfo[_pid] */\n      0x00\n        /* \"contracts/NFTStake.sol\":35940:35944  _pid */\n      dup6\n        /* \"contracts/NFTStake.sol\":35931:35945  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTStake.sol\":35931:35957  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"contracts/NFTStake.sol\":35946:35956  msg.sender */\n      caller\n        /* \"contracts/NFTStake.sol\":35931:35957  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTStake.sol\":35907:35957  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":35968:35983  uint256 pending */\n      0x00\n        /* \"contracts/NFTStake.sol\":36009:36010  0 */\n      dup1\n        /* \"contracts/NFTStake.sol\":35997:36005  _tokenId */\n      dup5\n        /* \"contracts/NFTStake.sol\":35997:36010  _tokenId == 0 */\n      sub\n        /* \"contracts/NFTStake.sol\":35994:37256  if(_tokenId == 0){... */\n      tag_183\n      jumpi\n        /* \"contracts/NFTStake.sol\":36026:36042  updatePool(_pid) */\n      tag_184\n        /* \"contracts/NFTStake.sol\":36037:36041  _pid */\n      dup6\n        /* \"contracts/NFTStake.sol\":36026:36036  updatePool */\n      tag_87\n        /* \"contracts/NFTStake.sol\":36026:36042  updatePool(_pid) */\n      jump\t// in\n    tag_184:\n        /* \"contracts/NFTStake.sol\":36067:36134  user.amount.mul(pool.accDRGPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_185\n        /* \"contracts/NFTStake.sol\":36118:36122  user */\n      dup3\n        /* \"contracts/NFTStake.sol\":36118:36133  user.rewardDebt */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":36067:36113  user.amount.mul(pool.accDRGPerShare).div(1e12) */\n      tag_186\n        /* \"contracts/NFTStake.sol\":36108:36112  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTStake.sol\":36067:36103  user.amount.mul(pool.accDRGPerShare) */\n      tag_187\n        /* \"contracts/NFTStake.sol\":36083:36087  pool */\n      dup8\n        /* \"contracts/NFTStake.sol\":36083:36102  pool.accDRGPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":36067:36071  user */\n      dup8\n        /* \"contracts/NFTStake.sol\":36067:36078  user.amount */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":36067:36082  user.amount.mul */\n      tag_188\n      swap1\n        /* \"contracts/NFTStake.sol\":36067:36103  user.amount.mul(pool.accDRGPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_187:\n        /* \"contracts/NFTStake.sol\":36067:36107  user.amount.mul(pool.accDRGPerShare).div */\n      tag_189\n      swap1\n        /* \"contracts/NFTStake.sol\":36067:36113  user.amount.mul(pool.accDRGPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_186:\n        /* \"contracts/NFTStake.sol\":36067:36117  user.amount.mul(pool.accDRGPerShare).div(1e12).sub */\n      tag_190\n      swap1\n        /* \"contracts/NFTStake.sol\":36067:36134  user.amount.mul(pool.accDRGPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_185:\n        /* \"contracts/NFTStake.sol\":36057:36134  pending = user.amount.mul(pool.accDRGPerShare).div(1e12).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":36162:36163  0 */\n      0x00\n        /* \"contracts/NFTStake.sol\":36152:36159  pending */\n      dup2\n        /* \"contracts/NFTStake.sol\":36152:36163  pending > 0 */\n      gt\n        /* \"contracts/NFTStake.sol\":36149:36235  if(pending > 0){... */\n      iszero\n      tag_191\n      jumpi\n        /* \"contracts/NFTStake.sol\":36183:36219  safeDRGTransfer(msg.sender, pending) */\n      tag_192\n        /* \"contracts/NFTStake.sol\":36199:36209  msg.sender */\n      caller\n        /* \"contracts/NFTStake.sol\":36211:36218  pending */\n      dup3\n        /* \"contracts/NFTStake.sol\":36183:36198  safeDRGTransfer */\n      tag_193\n        /* \"contracts/NFTStake.sol\":36183:36219  safeDRGTransfer(msg.sender, pending) */\n      jump\t// in\n    tag_192:\n        /* \"contracts/NFTStake.sol\":36149:36235  if(pending > 0){... */\n    tag_191:\n        /* \"contracts/NFTStake.sol\":36267:36313  user.amount.mul(pool.accDRGPerShare).div(1e12) */\n      tag_194\n        /* \"contracts/NFTStake.sol\":36308:36312  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTStake.sol\":36267:36303  user.amount.mul(pool.accDRGPerShare) */\n      tag_195\n        /* \"contracts/NFTStake.sol\":36283:36287  pool */\n      dup6\n        /* \"contracts/NFTStake.sol\":36283:36302  pool.accDRGPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":36267:36271  user */\n      dup6\n        /* \"contracts/NFTStake.sol\":36267:36278  user.amount */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":36267:36282  user.amount.mul */\n      tag_188\n      swap1\n        /* \"contracts/NFTStake.sol\":36267:36303  user.amount.mul(pool.accDRGPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_195:\n        /* \"contracts/NFTStake.sol\":36267:36307  user.amount.mul(pool.accDRGPerShare).div */\n      tag_189\n      swap1\n        /* \"contracts/NFTStake.sol\":36267:36313  user.amount.mul(pool.accDRGPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_194:\n        /* \"contracts/NFTStake.sol\":36249:36253  user */\n      dup3\n        /* \"contracts/NFTStake.sol\":36249:36264  user.rewardDebt */\n      0x02\n      add\n        /* \"contracts/NFTStake.sol\":36249:36313  user.rewardDebt = user.amount.mul(pool.accDRGPerShare).div(1e12) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":35994:37256  if(_tokenId == 0){... */\n      jump(tag_196)\n    tag_183:\n        /* \"contracts/NFTStake.sol\":36345:36363  uint256 hasTokenId */\n      0x00\n        /* \"contracts/NFTStake.sol\":36382:36402  uint256 tokenIdIndex */\n      dup1\n        /* \"contracts/NFTStake.sol\":36421:36430  uint256 i */\n      dup1\n        /* \"contracts/NFTStake.sol\":36417:36622  for(uint256 i; i<user.tokenIds.length; i++){... */\n    tag_197:\n        /* \"contracts/NFTStake.sol\":36434:36438  user */\n      dup5\n        /* \"contracts/NFTStake.sol\":36434:36447  user.tokenIds */\n      0x00\n      add\n        /* \"contracts/NFTStake.sol\":36434:36454  user.tokenIds.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":36432:36433  i */\n      dup2\n        /* \"contracts/NFTStake.sol\":36432:36454  i<user.tokenIds.length */\n      lt\n        /* \"contracts/NFTStake.sol\":36417:36622  for(uint256 i; i<user.tokenIds.length; i++){... */\n      iszero\n      tag_198\n      jumpi\n        /* \"contracts/NFTStake.sol\":36502:36510  _tokenId */\n      dup7\n        /* \"contracts/NFTStake.sol\":36482:36486  user */\n      dup6\n        /* \"contracts/NFTStake.sol\":36482:36495  user.tokenIds */\n      0x00\n      add\n        /* \"contracts/NFTStake.sol\":36496:36497  i */\n      dup3\n        /* \"contracts/NFTStake.sol\":36482:36498  user.tokenIds[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_200\n      jumpi\n      tag_201\n      tag_181\n      jump\t// in\n    tag_201:\n    tag_200:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":36482:36510  user.tokenIds[i] == _tokenId */\n      sub\n        /* \"contracts/NFTStake.sol\":36479:36607  if(user.tokenIds[i] == _tokenId){... */\n      tag_203\n      jumpi\n        /* \"contracts/NFTStake.sol\":36547:36548  1 */\n      0x01\n        /* \"contracts/NFTStake.sol\":36534:36548  hasTokenId = 1 */\n      swap3\n      pop\n        /* \"contracts/NFTStake.sol\":36586:36587  i */\n      dup1\n        /* \"contracts/NFTStake.sol\":36571:36587  tokenIdIndex = i */\n      swap2\n      pop\n        /* \"contracts/NFTStake.sol\":36479:36607  if(user.tokenIds[i] == _tokenId){... */\n    tag_203:\n        /* \"contracts/NFTStake.sol\":36456:36459  i++ */\n      dup1\n      dup1\n      tag_204\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":36417:36622  for(uint256 i; i<user.tokenIds.length; i++){... */\n      jump(tag_197)\n    tag_198:\n      pop\n        /* \"contracts/NFTStake.sol\":36658:36659  1 */\n      0x01\n        /* \"contracts/NFTStake.sol\":36644:36654  hasTokenId */\n      dup3\n        /* \"contracts/NFTStake.sol\":36644:36659  hasTokenId == 1 */\n      eq\n        /* \"contracts/NFTStake.sol\":36636:36693  require(hasTokenId == 1, \"You are not Owner of token id\") */\n      tag_206\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_207\n      swap1\n      tag_208\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_206:\n        /* \"contracts/NFTStake.sol\":36731:36732  1 */\n      0x01\n        /* \"contracts/NFTStake.sol\":36716:36720  user */\n      dup5\n        /* \"contracts/NFTStake.sol\":36716:36727  user.amount */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":36716:36732  user.amount >= 1 */\n      lt\n      iszero\n        /* \"contracts/NFTStake.sol\":36708:36755  require(user.amount >= 1, \"withdraw: not good\") */\n      tag_209\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_210\n      swap1\n      tag_211\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_209:\n        /* \"contracts/NFTStake.sol\":36770:36786  updatePool(_pid) */\n      tag_212\n        /* \"contracts/NFTStake.sol\":36781:36785  _pid */\n      dup8\n        /* \"contracts/NFTStake.sol\":36770:36780  updatePool */\n      tag_87\n        /* \"contracts/NFTStake.sol\":36770:36786  updatePool(_pid) */\n      jump\t// in\n    tag_212:\n        /* \"contracts/NFTStake.sol\":36811:36878  user.amount.mul(pool.accDRGPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_213\n        /* \"contracts/NFTStake.sol\":36862:36866  user */\n      dup5\n        /* \"contracts/NFTStake.sol\":36862:36877  user.rewardDebt */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":36811:36857  user.amount.mul(pool.accDRGPerShare).div(1e12) */\n      tag_214\n        /* \"contracts/NFTStake.sol\":36852:36856  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTStake.sol\":36811:36847  user.amount.mul(pool.accDRGPerShare) */\n      tag_215\n        /* \"contracts/NFTStake.sol\":36827:36831  pool */\n      dup10\n        /* \"contracts/NFTStake.sol\":36827:36846  pool.accDRGPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":36811:36815  user */\n      dup10\n        /* \"contracts/NFTStake.sol\":36811:36822  user.amount */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":36811:36826  user.amount.mul */\n      tag_188\n      swap1\n        /* \"contracts/NFTStake.sol\":36811:36847  user.amount.mul(pool.accDRGPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_215:\n        /* \"contracts/NFTStake.sol\":36811:36851  user.amount.mul(pool.accDRGPerShare).div */\n      tag_189\n      swap1\n        /* \"contracts/NFTStake.sol\":36811:36857  user.amount.mul(pool.accDRGPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_214:\n        /* \"contracts/NFTStake.sol\":36811:36861  user.amount.mul(pool.accDRGPerShare).div(1e12).sub */\n      tag_190\n      swap1\n        /* \"contracts/NFTStake.sol\":36811:36878  user.amount.mul(pool.accDRGPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_213:\n        /* \"contracts/NFTStake.sol\":36801:36878  pending = user.amount.mul(pool.accDRGPerShare).div(1e12).sub(user.rewardDebt) */\n      swap3\n      pop\n        /* \"contracts/NFTStake.sol\":36906:36907  0 */\n      0x00\n        /* \"contracts/NFTStake.sol\":36896:36903  pending */\n      dup4\n        /* \"contracts/NFTStake.sol\":36896:36907  pending > 0 */\n      gt\n        /* \"contracts/NFTStake.sol\":36893:36979  if(pending > 0){... */\n      iszero\n      tag_216\n      jumpi\n        /* \"contracts/NFTStake.sol\":36927:36963  safeDRGTransfer(msg.sender, pending) */\n      tag_217\n        /* \"contracts/NFTStake.sol\":36943:36953  msg.sender */\n      caller\n        /* \"contracts/NFTStake.sol\":36955:36962  pending */\n      dup5\n        /* \"contracts/NFTStake.sol\":36927:36942  safeDRGTransfer */\n      tag_193\n        /* \"contracts/NFTStake.sol\":36927:36963  safeDRGTransfer(msg.sender, pending) */\n      jump\t// in\n    tag_217:\n        /* \"contracts/NFTStake.sol\":36893:36979  if(pending > 0){... */\n    tag_216:\n        /* \"contracts/NFTStake.sol\":37007:37025  user.amount.sub(1) */\n      tag_218\n        /* \"contracts/NFTStake.sol\":37023:37024  1 */\n      0x01\n        /* \"contracts/NFTStake.sol\":37007:37011  user */\n      dup6\n        /* \"contracts/NFTStake.sol\":37007:37018  user.amount */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":37007:37022  user.amount.sub */\n      tag_190\n      swap1\n        /* \"contracts/NFTStake.sol\":37007:37025  user.amount.sub(1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_218:\n        /* \"contracts/NFTStake.sol\":36993:36997  user */\n      dup5\n        /* \"contracts/NFTStake.sol\":36993:37004  user.amount */\n      0x01\n      add\n        /* \"contracts/NFTStake.sol\":36993:37025  user.amount = user.amount.sub(1) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":37058:37104  user.amount.mul(pool.accDRGPerShare).div(1e12) */\n      tag_219\n        /* \"contracts/NFTStake.sol\":37099:37103  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTStake.sol\":37058:37094  user.amount.mul(pool.accDRGPerShare) */\n      tag_220\n        /* \"contracts/NFTStake.sol\":37074:37078  pool */\n      dup8\n        /* \"contracts/NFTStake.sol\":37074:37093  pool.accDRGPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":37058:37062  user */\n      dup8\n        /* \"contracts/NFTStake.sol\":37058:37069  user.amount */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":37058:37073  user.amount.mul */\n      tag_188\n      swap1\n        /* \"contracts/NFTStake.sol\":37058:37094  user.amount.mul(pool.accDRGPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_220:\n        /* \"contracts/NFTStake.sol\":37058:37098  user.amount.mul(pool.accDRGPerShare).div */\n      tag_189\n      swap1\n        /* \"contracts/NFTStake.sol\":37058:37104  user.amount.mul(pool.accDRGPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_219:\n        /* \"contracts/NFTStake.sol\":37040:37044  user */\n      dup5\n        /* \"contracts/NFTStake.sol\":37040:37055  user.rewardDebt */\n      0x02\n      add\n        /* \"contracts/NFTStake.sol\":37040:37104  user.rewardDebt = user.amount.mul(pool.accDRGPerShare).div(1e12) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":37126:37130  user */\n      dup4\n        /* \"contracts/NFTStake.sol\":37126:37139  user.tokenIds */\n      0x00\n      add\n        /* \"contracts/NFTStake.sol\":37140:37152  tokenIdIndex */\n      dup2\n        /* \"contracts/NFTStake.sol\":37126:37153  user.tokenIds[tokenIdIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_221\n      jumpi\n      tag_222\n      tag_181\n      jump\t// in\n    tag_222:\n    tag_221:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"contracts/NFTStake.sol\":37119:37153  delete user.tokenIds[tokenIdIndex] */\n      0x00\n      swap1\n      sstore\n        /* \"contracts/NFTStake.sol\":37168:37172  pool */\n      dup5\n        /* \"contracts/NFTStake.sol\":37168:37181  pool.NFTToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":37168:37198  pool.NFTToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42842e0e\n        /* \"contracts/NFTStake.sol\":37207:37211  this */\n      address\n        /* \"contracts/NFTStake.sol\":37222:37232  msg.sender */\n      caller\n        /* \"contracts/NFTStake.sol\":37235:37243  _tokenId */\n      dup10\n        /* \"contracts/NFTStake.sol\":37168:37244  pool.NFTToken.safeTransferFrom(address(this), address(msg.sender), _tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_224\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_225\n      jump\t// in\n    tag_224:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_226\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_226:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_228\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_228:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":36330:37256  {... */\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":35994:37256  if(_tokenId == 0){... */\n    tag_196:\n        /* \"contracts/NFTStake.sol\":37292:37296  _pid */\n      dup5\n        /* \"contracts/NFTStake.sol\":37280:37290  msg.sender */\n      caller\n        /* \"contracts/NFTStake.sol\":37271:37307  Withdraw(msg.sender, _pid, _tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n        /* \"contracts/NFTStake.sol\":37298:37306  _tokenId */\n      dup7\n        /* \"contracts/NFTStake.sol\":37271:37307  Withdraw(msg.sender, _pid, _tokenId) */\n      mload(0x40)\n      tag_229\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_229:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTStake.sol\":35847:37315  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":35790:37315  function withdraw(uint256 _pid, uint256 _tokenId) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":30170:30195  uint256 public startBlock */\n    tag_78:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":33108:33861  function pendingDRG(uint256 _pid, address _user) external view returns (uint256){... */\n    tag_83:\n        /* \"contracts/NFTStake.sol\":33180:33187  uint256 */\n      0x00\n        /* \"contracts/NFTStake.sol\":33199:33220  PoolInfo storage pool */\n      dup1\n        /* \"contracts/NFTStake.sol\":33223:33231  poolInfo */\n      0x07\n        /* \"contracts/NFTStake.sol\":33232:33236  _pid */\n      dup5\n        /* \"contracts/NFTStake.sol\":33223:33237  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_231\n      jumpi\n      tag_232\n      tag_181\n      jump\t// in\n    tag_232:\n    tag_231:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTStake.sol\":33199:33237  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":33248:33269  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTStake.sol\":33272:33280  userInfo */\n      0x08\n        /* \"contracts/NFTStake.sol\":33272:33286  userInfo[_pid] */\n      0x00\n        /* \"contracts/NFTStake.sol\":33281:33285  _pid */\n      dup7\n        /* \"contracts/NFTStake.sol\":33272:33286  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTStake.sol\":33272:33293  userInfo[_pid][_user] */\n      0x00\n        /* \"contracts/NFTStake.sol\":33287:33292  _user */\n      dup6\n        /* \"contracts/NFTStake.sol\":33272:33293  userInfo[_pid][_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTStake.sol\":33248:33293  UserInfo storage user = userInfo[_pid][_user] */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":33304:33326  uint256 accDRGPerShare */\n      0x00\n        /* \"contracts/NFTStake.sol\":33329:33333  pool */\n      dup3\n        /* \"contracts/NFTStake.sol\":33329:33348  pool.accDRGPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":33304:33348  uint256 accDRGPerShare = pool.accDRGPerShare */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":33359:33376  uint256 NFTSupply */\n      0x00\n        /* \"contracts/NFTStake.sol\":33379:33383  pool */\n      dup4\n        /* \"contracts/NFTStake.sol\":33379:33392  pool.NFTToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":33379:33402  pool.NFTToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/NFTStake.sol\":33411:33415  this */\n      address\n        /* \"contracts/NFTStake.sol\":33379:33417  pool.NFTToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_234\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_234:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_236\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_236:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_237\n      swap2\n      swap1\n      tag_238\n      jump\t// in\n    tag_237:\n        /* \"contracts/NFTStake.sol\":33359:33417  uint256 NFTSupply = pool.NFTToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":33447:33451  pool */\n      dup4\n        /* \"contracts/NFTStake.sol\":33447:33467  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":33432:33444  block.number */\n      number\n        /* \"contracts/NFTStake.sol\":33432:33467  block.number > pool.lastRewardBlock */\n      gt\n        /* \"contracts/NFTStake.sol\":33432:33485  block.number > pool.lastRewardBlock && NFTSupply != 0 */\n      dup1\n      iszero\n      tag_239\n      jumpi\n      pop\n        /* \"contracts/NFTStake.sol\":33484:33485  0 */\n      0x00\n        /* \"contracts/NFTStake.sol\":33471:33480  NFTSupply */\n      dup2\n        /* \"contracts/NFTStake.sol\":33471:33485  NFTSupply != 0 */\n      eq\n      iszero\n        /* \"contracts/NFTStake.sol\":33432:33485  block.number > pool.lastRewardBlock && NFTSupply != 0 */\n    tag_239:\n        /* \"contracts/NFTStake.sol\":33428:33774  if (block.number > pool.lastRewardBlock && NFTSupply != 0) {... */\n      iszero\n      tag_240\n      jumpi\n        /* \"contracts/NFTStake.sol\":33502:33520  uint256 multiplier */\n      0x00\n        /* \"contracts/NFTStake.sol\":33523:33572  getMultiplier(pool.lastRewardBlock, block.number) */\n      tag_241\n        /* \"contracts/NFTStake.sol\":33537:33541  pool */\n      dup6\n        /* \"contracts/NFTStake.sol\":33537:33557  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":33559:33571  block.number */\n      number\n        /* \"contracts/NFTStake.sol\":33523:33536  getMultiplier */\n      tag_112\n        /* \"contracts/NFTStake.sol\":33523:33572  getMultiplier(pool.lastRewardBlock, block.number) */\n      jump\t// in\n    tag_241:\n        /* \"contracts/NFTStake.sol\":33502:33572  uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number) */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":33587:33604  uint256 DRGReward */\n      0x00\n        /* \"contracts/NFTStake.sol\":33607:33676  multiplier.mul(DRGPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      tag_242\n        /* \"contracts/NFTStake.sol\":33660:33675  totalAllocPoint */\n      sload(0x09)\n        /* \"contracts/NFTStake.sol\":33607:33655  multiplier.mul(DRGPerBlock).mul(pool.allocPoint) */\n      tag_243\n        /* \"contracts/NFTStake.sol\":33639:33643  pool */\n      dup9\n        /* \"contracts/NFTStake.sol\":33639:33654  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":33607:33634  multiplier.mul(DRGPerBlock) */\n      tag_244\n        /* \"contracts/NFTStake.sol\":33622:33633  DRGPerBlock */\n      sload(0x04)\n        /* \"contracts/NFTStake.sol\":33607:33617  multiplier */\n      dup8\n        /* \"contracts/NFTStake.sol\":33607:33621  multiplier.mul */\n      tag_188\n      swap1\n        /* \"contracts/NFTStake.sol\":33607:33634  multiplier.mul(DRGPerBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_244:\n        /* \"contracts/NFTStake.sol\":33607:33638  multiplier.mul(DRGPerBlock).mul */\n      tag_188\n      swap1\n        /* \"contracts/NFTStake.sol\":33607:33655  multiplier.mul(DRGPerBlock).mul(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_243:\n        /* \"contracts/NFTStake.sol\":33607:33659  multiplier.mul(DRGPerBlock).mul(pool.allocPoint).div */\n      tag_189\n      swap1\n        /* \"contracts/NFTStake.sol\":33607:33676  multiplier.mul(DRGPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_242:\n        /* \"contracts/NFTStake.sol\":33587:33676  uint256 DRGReward = multiplier.mul(DRGPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":33708:33762  accDRGPerShare.add(DRGReward.mul(1e12).div(NFTSupply)) */\n      tag_245\n        /* \"contracts/NFTStake.sol\":33727:33761  DRGReward.mul(1e12).div(NFTSupply) */\n      tag_246\n        /* \"contracts/NFTStake.sol\":33751:33760  NFTSupply */\n      dup5\n        /* \"contracts/NFTStake.sol\":33727:33746  DRGReward.mul(1e12) */\n      tag_247\n        /* \"contracts/NFTStake.sol\":33741:33745  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTStake.sol\":33727:33736  DRGReward */\n      dup6\n        /* \"contracts/NFTStake.sol\":33727:33740  DRGReward.mul */\n      tag_188\n      swap1\n        /* \"contracts/NFTStake.sol\":33727:33746  DRGReward.mul(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_247:\n        /* \"contracts/NFTStake.sol\":33727:33750  DRGReward.mul(1e12).div */\n      tag_189\n      swap1\n        /* \"contracts/NFTStake.sol\":33727:33761  DRGReward.mul(1e12).div(NFTSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_246:\n        /* \"contracts/NFTStake.sol\":33708:33722  accDRGPerShare */\n      dup6\n        /* \"contracts/NFTStake.sol\":33708:33726  accDRGPerShare.add */\n      tag_170\n      swap1\n        /* \"contracts/NFTStake.sol\":33708:33762  accDRGPerShare.add(DRGReward.mul(1e12).div(NFTSupply)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_245:\n        /* \"contracts/NFTStake.sol\":33691:33762  accDRGPerShare = accDRGPerShare.add(DRGReward.mul(1e12).div(NFTSupply)) */\n      swap4\n      pop\n        /* \"contracts/NFTStake.sol\":33487:33774  {... */\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":33428:33774  if (block.number > pool.lastRewardBlock && NFTSupply != 0) {... */\n    tag_240:\n        /* \"contracts/NFTStake.sol\":33791:33853  user.amount.mul(accDRGPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_248\n        /* \"contracts/NFTStake.sol\":33837:33841  user */\n      dup4\n        /* \"contracts/NFTStake.sol\":33837:33852  user.rewardDebt */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":33791:33832  user.amount.mul(accDRGPerShare).div(1e12) */\n      tag_249\n        /* \"contracts/NFTStake.sol\":33827:33831  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTStake.sol\":33791:33822  user.amount.mul(accDRGPerShare) */\n      tag_250\n        /* \"contracts/NFTStake.sol\":33807:33821  accDRGPerShare */\n      dup7\n        /* \"contracts/NFTStake.sol\":33791:33795  user */\n      dup9\n        /* \"contracts/NFTStake.sol\":33791:33802  user.amount */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":33791:33806  user.amount.mul */\n      tag_188\n      swap1\n        /* \"contracts/NFTStake.sol\":33791:33822  user.amount.mul(accDRGPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_250:\n        /* \"contracts/NFTStake.sol\":33791:33826  user.amount.mul(accDRGPerShare).div */\n      tag_189\n      swap1\n        /* \"contracts/NFTStake.sol\":33791:33832  user.amount.mul(accDRGPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_249:\n        /* \"contracts/NFTStake.sol\":33791:33836  user.amount.mul(accDRGPerShare).div(1e12).sub */\n      tag_190\n      swap1\n        /* \"contracts/NFTStake.sol\":33791:33853  user.amount.mul(accDRGPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_248:\n        /* \"contracts/NFTStake.sol\":33784:33853  return user.amount.mul(accDRGPerShare).div(1e12).sub(user.rewardDebt) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":33108:33861  function pendingDRG(uint256 _pid, address _user) external view returns (uint256){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":34200:34929  function updatePool(uint256 _pid) public {... */\n    tag_87:\n        /* \"contracts/NFTStake.sol\":34252:34273  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTStake.sol\":34276:34284  poolInfo */\n      0x07\n        /* \"contracts/NFTStake.sol\":34285:34289  _pid */\n      dup3\n        /* \"contracts/NFTStake.sol\":34276:34290  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_252\n      jumpi\n      tag_253\n      tag_181\n      jump\t// in\n    tag_253:\n    tag_252:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTStake.sol\":34252:34290  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":34321:34325  pool */\n      dup1\n        /* \"contracts/NFTStake.sol\":34321:34341  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":34305:34317  block.number */\n      number\n        /* \"contracts/NFTStake.sol\":34305:34341  block.number <= pool.lastRewardBlock */\n      gt\n        /* \"contracts/NFTStake.sol\":34301:34376  if (block.number <= pool.lastRewardBlock) {... */\n      tag_255\n      jumpi\n        /* \"contracts/NFTStake.sol\":34358:34365  return; */\n      pop\n      jump(tag_251)\n        /* \"contracts/NFTStake.sol\":34301:34376  if (block.number <= pool.lastRewardBlock) {... */\n    tag_255:\n        /* \"contracts/NFTStake.sol\":34386:34403  uint256 NFTSupply */\n      0x00\n        /* \"contracts/NFTStake.sol\":34406:34410  pool */\n      dup2\n        /* \"contracts/NFTStake.sol\":34406:34419  pool.NFTToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":34406:34429  pool.NFTToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/NFTStake.sol\":34438:34442  this */\n      address\n        /* \"contracts/NFTStake.sol\":34406:34444  pool.NFTToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_256\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_256:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_258\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_258:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_259\n      swap2\n      swap1\n      tag_238\n      jump\t// in\n    tag_259:\n        /* \"contracts/NFTStake.sol\":34386:34444  uint256 NFTSupply = pool.NFTToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":34472:34473  0 */\n      0x00\n        /* \"contracts/NFTStake.sol\":34459:34468  NFTSupply */\n      dup2\n        /* \"contracts/NFTStake.sol\":34459:34473  NFTSupply <= 0 */\n      gt\n        /* \"contracts/NFTStake.sol\":34455:34558  if (NFTSupply <= 0) {... */\n      tag_260\n      jumpi\n        /* \"contracts/NFTStake.sol\":34513:34525  block.number */\n      number\n        /* \"contracts/NFTStake.sol\":34490:34494  pool */\n      dup3\n        /* \"contracts/NFTStake.sol\":34490:34510  pool.lastRewardBlock */\n      0x02\n      add\n        /* \"contracts/NFTStake.sol\":34490:34525  pool.lastRewardBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":34540:34547  return; */\n      pop\n      pop\n      jump(tag_251)\n        /* \"contracts/NFTStake.sol\":34455:34558  if (NFTSupply <= 0) {... */\n    tag_260:\n        /* \"contracts/NFTStake.sol\":34568:34586  uint256 multiplier */\n      0x00\n        /* \"contracts/NFTStake.sol\":34589:34638  getMultiplier(pool.lastRewardBlock, block.number) */\n      tag_261\n        /* \"contracts/NFTStake.sol\":34603:34607  pool */\n      dup4\n        /* \"contracts/NFTStake.sol\":34603:34623  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":34625:34637  block.number */\n      number\n        /* \"contracts/NFTStake.sol\":34589:34602  getMultiplier */\n      tag_112\n        /* \"contracts/NFTStake.sol\":34589:34638  getMultiplier(pool.lastRewardBlock, block.number) */\n      jump\t// in\n    tag_261:\n        /* \"contracts/NFTStake.sol\":34568:34638  uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number) */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":34649:34666  uint256 DRGReward */\n      0x00\n        /* \"contracts/NFTStake.sol\":34669:34738  multiplier.mul(DRGPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      tag_262\n        /* \"contracts/NFTStake.sol\":34722:34737  totalAllocPoint */\n      sload(0x09)\n        /* \"contracts/NFTStake.sol\":34669:34717  multiplier.mul(DRGPerBlock).mul(pool.allocPoint) */\n      tag_263\n        /* \"contracts/NFTStake.sol\":34701:34705  pool */\n      dup7\n        /* \"contracts/NFTStake.sol\":34701:34716  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":34669:34696  multiplier.mul(DRGPerBlock) */\n      tag_264\n        /* \"contracts/NFTStake.sol\":34684:34695  DRGPerBlock */\n      sload(0x04)\n        /* \"contracts/NFTStake.sol\":34669:34679  multiplier */\n      dup8\n        /* \"contracts/NFTStake.sol\":34669:34683  multiplier.mul */\n      tag_188\n      swap1\n        /* \"contracts/NFTStake.sol\":34669:34696  multiplier.mul(DRGPerBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_264:\n        /* \"contracts/NFTStake.sol\":34669:34700  multiplier.mul(DRGPerBlock).mul */\n      tag_188\n      swap1\n        /* \"contracts/NFTStake.sol\":34669:34717  multiplier.mul(DRGPerBlock).mul(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_263:\n        /* \"contracts/NFTStake.sol\":34669:34721  multiplier.mul(DRGPerBlock).mul(pool.allocPoint).div */\n      tag_189\n      swap1\n        /* \"contracts/NFTStake.sol\":34669:34738  multiplier.mul(DRGPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_262:\n        /* \"contracts/NFTStake.sol\":34649:34738  uint256 DRGReward = multiplier.mul(DRGPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":34749:34752  DRG */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":34749:34757  DRG.mint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x40c10f19\n        /* \"contracts/NFTStake.sol\":34766:34770  this */\n      address\n        /* \"contracts/NFTStake.sol\":34773:34782  DRGReward */\n      dup4\n        /* \"contracts/NFTStake.sol\":34749:34783  DRG.mint(address(this), DRGReward) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_265\n      swap3\n      swap2\n      swap1\n      tag_266\n      jump\t// in\n    tag_265:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_268\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_268:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_269\n      swap2\n      swap1\n      tag_270\n      jump\t// in\n    tag_269:\n      pop\n        /* \"contracts/NFTStake.sol\":34816:34875  pool.accDRGPerShare.add(DRGReward.mul(1e12).div(NFTSupply)) */\n      tag_271\n        /* \"contracts/NFTStake.sol\":34840:34874  DRGReward.mul(1e12).div(NFTSupply) */\n      tag_272\n        /* \"contracts/NFTStake.sol\":34864:34873  NFTSupply */\n      dup5\n        /* \"contracts/NFTStake.sol\":34840:34859  DRGReward.mul(1e12) */\n      tag_273\n        /* \"contracts/NFTStake.sol\":34854:34858  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTStake.sol\":34840:34849  DRGReward */\n      dup6\n        /* \"contracts/NFTStake.sol\":34840:34853  DRGReward.mul */\n      tag_188\n      swap1\n        /* \"contracts/NFTStake.sol\":34840:34859  DRGReward.mul(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_273:\n        /* \"contracts/NFTStake.sol\":34840:34863  DRGReward.mul(1e12).div */\n      tag_189\n      swap1\n        /* \"contracts/NFTStake.sol\":34840:34874  DRGReward.mul(1e12).div(NFTSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_272:\n        /* \"contracts/NFTStake.sol\":34816:34820  pool */\n      dup6\n        /* \"contracts/NFTStake.sol\":34816:34835  pool.accDRGPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":34816:34839  pool.accDRGPerShare.add */\n      tag_170\n      swap1\n        /* \"contracts/NFTStake.sol\":34816:34875  pool.accDRGPerShare.add(DRGReward.mul(1e12).div(NFTSupply)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_271:\n        /* \"contracts/NFTStake.sol\":34794:34798  pool */\n      dup5\n        /* \"contracts/NFTStake.sol\":34794:34813  pool.accDRGPerShare */\n      0x03\n      add\n        /* \"contracts/NFTStake.sol\":34794:34875  pool.accDRGPerShare = pool.accDRGPerShare.add(DRGReward.mul(1e12).div(NFTSupply)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":34909:34921  block.number */\n      number\n        /* \"contracts/NFTStake.sol\":34886:34890  pool */\n      dup5\n        /* \"contracts/NFTStake.sol\":34886:34906  pool.lastRewardBlock */\n      0x02\n      add\n        /* \"contracts/NFTStake.sol\":34886:34921  pool.lastRewardBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":34241:34929  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":34200:34929  function updatePool(uint256 _pid) public {... */\n    tag_251:\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":31094:31217  function updateMultiplier(uint256 multiplierNumber) public onlyOwner {... */\n    tag_90:\n        /* \"contracts/NFTStake.sol\":20406:20418  _msgSender() */\n      tag_275\n        /* \"contracts/NFTStake.sol\":20406:20416  _msgSender */\n      tag_150\n        /* \"contracts/NFTStake.sol\":20406:20418  _msgSender() */\n      jump\t// in\n    tag_275:\n        /* \"contracts/NFTStake.sol\":20395:20418  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":20395:20402  owner() */\n      tag_276\n        /* \"contracts/NFTStake.sol\":20395:20400  owner */\n      tag_107\n        /* \"contracts/NFTStake.sol\":20395:20402  owner() */\n      jump\t// in\n    tag_276:\n        /* \"contracts/NFTStake.sol\":20395:20418  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTStake.sol\":20387:20455  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_277\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap1\n      tag_154\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_277:\n        /* \"contracts/NFTStake.sol\":31193:31209  multiplierNumber */\n      dup1\n        /* \"contracts/NFTStake.sol\":31174:31190  BONUS_MULTIPLIER */\n      0x05\n        /* \"contracts/NFTStake.sol\":31174:31209  BONUS_MULTIPLIER = multiplierNumber */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":31094:31217  function updateMultiplier(uint256 multiplierNumber) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":33944:34124  function massUpdatePools() public {... */\n    tag_92:\n        /* \"contracts/NFTStake.sol\":33989:34003  uint256 length */\n      0x00\n        /* \"contracts/NFTStake.sol\":34006:34014  poolInfo */\n      0x07\n        /* \"contracts/NFTStake.sol\":34006:34021  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":33989:34021  uint256 length = poolInfo.length */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":34037:34048  uint256 pid */\n      0x00\n        /* \"contracts/NFTStake.sol\":34032:34117  for (uint256 pid = 0; pid < length; ++pid) {... */\n    tag_281:\n        /* \"contracts/NFTStake.sol\":34060:34066  length */\n      dup2\n        /* \"contracts/NFTStake.sol\":34054:34057  pid */\n      dup2\n        /* \"contracts/NFTStake.sol\":34054:34066  pid < length */\n      lt\n        /* \"contracts/NFTStake.sol\":34032:34117  for (uint256 pid = 0; pid < length; ++pid) {... */\n      iszero\n      tag_282\n      jumpi\n        /* \"contracts/NFTStake.sol\":34090:34105  updatePool(pid) */\n      tag_284\n        /* \"contracts/NFTStake.sol\":34101:34104  pid */\n      dup2\n        /* \"contracts/NFTStake.sol\":34090:34100  updatePool */\n      tag_87\n        /* \"contracts/NFTStake.sol\":34090:34105  updatePool(pid) */\n      jump\t// in\n    tag_284:\n        /* \"contracts/NFTStake.sol\":34068:34073  ++pid */\n      dup1\n      tag_285\n      swap1\n      tag_205\n      jump\t// in\n    tag_285:\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":34032:34117  for (uint256 pid = 0; pid < length; ++pid) {... */\n      jump(tag_281)\n    tag_282:\n      pop\n        /* \"contracts/NFTStake.sol\":33978:34124  {... */\n      pop\n        /* \"contracts/NFTStake.sol\":33944:34124  function massUpdatePools() public {... */\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":32146:32451  function set( uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner {... */\n    tag_96:\n        /* \"contracts/NFTStake.sol\":20406:20418  _msgSender() */\n      tag_287\n        /* \"contracts/NFTStake.sol\":20406:20416  _msgSender */\n      tag_150\n        /* \"contracts/NFTStake.sol\":20406:20418  _msgSender() */\n      jump\t// in\n    tag_287:\n        /* \"contracts/NFTStake.sol\":20395:20418  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":20395:20402  owner() */\n      tag_288\n        /* \"contracts/NFTStake.sol\":20395:20400  owner */\n      tag_107\n        /* \"contracts/NFTStake.sol\":20395:20402  owner() */\n      jump\t// in\n    tag_288:\n        /* \"contracts/NFTStake.sol\":20395:20418  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTStake.sol\":20387:20455  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_289\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_290\n      swap1\n      tag_154\n      jump\t// in\n    tag_290:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_289:\n        /* \"contracts/NFTStake.sol\":32245:32256  _withUpdate */\n      dup1\n        /* \"contracts/NFTStake.sol\":32241:32302  if (_withUpdate) {... */\n      iszero\n      tag_292\n      jumpi\n        /* \"contracts/NFTStake.sol\":32273:32290  massUpdatePools() */\n      tag_293\n        /* \"contracts/NFTStake.sol\":32273:32288  massUpdatePools */\n      tag_92\n        /* \"contracts/NFTStake.sol\":32273:32290  massUpdatePools() */\n      jump\t// in\n    tag_293:\n        /* \"contracts/NFTStake.sol\":32241:32302  if (_withUpdate) {... */\n    tag_292:\n        /* \"contracts/NFTStake.sol\":32330:32393  totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) */\n      tag_294\n        /* \"contracts/NFTStake.sol\":32381:32392  _allocPoint */\n      dup3\n        /* \"contracts/NFTStake.sol\":32330:32376  totalAllocPoint.sub(poolInfo[_pid].allocPoint) */\n      tag_295\n        /* \"contracts/NFTStake.sol\":32350:32358  poolInfo */\n      0x07\n        /* \"contracts/NFTStake.sol\":32359:32363  _pid */\n      dup7\n        /* \"contracts/NFTStake.sol\":32350:32364  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_296\n      jumpi\n      tag_297\n      tag_181\n      jump\t// in\n    tag_297:\n    tag_296:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTStake.sol\":32350:32375  poolInfo[_pid].allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":32330:32345  totalAllocPoint */\n      sload(0x09)\n        /* \"contracts/NFTStake.sol\":32330:32349  totalAllocPoint.sub */\n      tag_190\n      swap1\n        /* \"contracts/NFTStake.sol\":32330:32376  totalAllocPoint.sub(poolInfo[_pid].allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_295:\n        /* \"contracts/NFTStake.sol\":32330:32380  totalAllocPoint.sub(poolInfo[_pid].allocPoint).add */\n      tag_170\n      swap1\n        /* \"contracts/NFTStake.sol\":32330:32393  totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_294:\n        /* \"contracts/NFTStake.sol\":32312:32327  totalAllocPoint */\n      0x09\n        /* \"contracts/NFTStake.sol\":32312:32393  totalAllocPoint = totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":32432:32443  _allocPoint */\n      dup2\n        /* \"contracts/NFTStake.sol\":32404:32412  poolInfo */\n      0x07\n        /* \"contracts/NFTStake.sol\":32413:32417  _pid */\n      dup5\n        /* \"contracts/NFTStake.sol\":32404:32418  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_299\n      jumpi\n      tag_300\n      tag_181\n      jump\t// in\n    tag_300:\n    tag_299:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTStake.sol\":32404:32429  poolInfo[_pid].allocPoint */\n      0x01\n      add\n        /* \"contracts/NFTStake.sol\":32404:32443  poolInfo[_pid].allocPoint = _allocPoint */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":32146:32451  function set( uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":20826:20929  function renounceOwnership() public virtual onlyOwner {... */\n    tag_98:\n        /* \"contracts/NFTStake.sol\":20406:20418  _msgSender() */\n      tag_303\n        /* \"contracts/NFTStake.sol\":20406:20416  _msgSender */\n      tag_150\n        /* \"contracts/NFTStake.sol\":20406:20418  _msgSender() */\n      jump\t// in\n    tag_303:\n        /* \"contracts/NFTStake.sol\":20395:20418  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":20395:20402  owner() */\n      tag_304\n        /* \"contracts/NFTStake.sol\":20395:20400  owner */\n      tag_107\n        /* \"contracts/NFTStake.sol\":20395:20402  owner() */\n      jump\t// in\n    tag_304:\n        /* \"contracts/NFTStake.sol\":20395:20418  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTStake.sol\":20387:20455  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_305\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_306\n      swap1\n      tag_154\n      jump\t// in\n    tag_306:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_305:\n        /* \"contracts/NFTStake.sol\":20891:20921  _transferOwnership(address(0)) */\n      tag_308\n        /* \"contracts/NFTStake.sol\":20918:20919  0 */\n      0x00\n        /* \"contracts/NFTStake.sol\":20891:20909  _transferOwnership */\n      tag_309\n        /* \"contracts/NFTStake.sol\":20891:20921  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_308:\n        /* \"contracts/NFTStake.sol\":20826:20929  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":29776:29805  IMigratorChef public migrator */\n    tag_100:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":29638:29673  uint256 public BONUS_MULTIPLIER = 1 */\n    tag_104:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":20175:20262  function owner() public view virtual returns (address) {... */\n    tag_107:\n        /* \"contracts/NFTStake.sol\":20221:20228  address */\n      0x00\n        /* \"contracts/NFTStake.sol\":20248:20254  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":20241:20254  return _owner */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":20175:20262  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":32705:32849  function getMultiplier(uint256 _from, uint256 _to) public view returns (uint256) {... */\n    tag_112:\n        /* \"contracts/NFTStake.sol\":32777:32784  uint256 */\n      0x00\n        /* \"contracts/NFTStake.sol\":32805:32841  _to.sub(_from).mul(BONUS_MULTIPLIER) */\n      tag_312\n        /* \"contracts/NFTStake.sol\":32824:32840  BONUS_MULTIPLIER */\n      sload(0x05)\n        /* \"contracts/NFTStake.sol\":32805:32819  _to.sub(_from) */\n      tag_313\n        /* \"contracts/NFTStake.sol\":32813:32818  _from */\n      dup6\n        /* \"contracts/NFTStake.sol\":32805:32808  _to */\n      dup6\n        /* \"contracts/NFTStake.sol\":32805:32812  _to.sub */\n      tag_190\n      swap1\n        /* \"contracts/NFTStake.sol\":32805:32819  _to.sub(_from) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_313:\n        /* \"contracts/NFTStake.sol\":32805:32823  _to.sub(_from).mul */\n      tag_188\n      swap1\n        /* \"contracts/NFTStake.sol\":32805:32841  _to.sub(_from).mul(BONUS_MULTIPLIER) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_312:\n        /* \"contracts/NFTStake.sol\":32798:32841  return _to.sub(_from).mul(BONUS_MULTIPLIER) */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":32705:32849  function getMultiplier(uint256 _from, uint256 _to) public view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":29921:29985  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n    tag_116:\n      mstore(0x20, 0x08)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":29559:29585  uint256 public DRGPerBlock */\n    tag_120:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":37323:37893  function compundDRG(uint256 _pid) public {... */\n    tag_124:\n        /* \"contracts/NFTStake.sol\":37375:37396  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTStake.sol\":37399:37407  poolInfo */\n      0x07\n        /* \"contracts/NFTStake.sol\":37408:37412  _pid */\n      dup3\n        /* \"contracts/NFTStake.sol\":37399:37413  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_315\n      jumpi\n      tag_316\n      tag_181\n      jump\t// in\n    tag_316:\n    tag_315:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTStake.sol\":37375:37413  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":37424:37445  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTStake.sol\":37448:37456  userInfo */\n      0x08\n        /* \"contracts/NFTStake.sol\":37448:37462  userInfo[_pid] */\n      0x00\n        /* \"contracts/NFTStake.sol\":37457:37461  _pid */\n      dup5\n        /* \"contracts/NFTStake.sol\":37448:37462  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTStake.sol\":37448:37474  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"contracts/NFTStake.sol\":37463:37473  msg.sender */\n      caller\n        /* \"contracts/NFTStake.sol\":37448:37474  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTStake.sol\":37424:37474  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":37485:37501  updatePool(_pid) */\n      tag_318\n        /* \"contracts/NFTStake.sol\":37496:37500  _pid */\n      dup4\n        /* \"contracts/NFTStake.sol\":37485:37495  updatePool */\n      tag_87\n        /* \"contracts/NFTStake.sol\":37485:37501  updatePool(_pid) */\n      jump\t// in\n    tag_318:\n        /* \"contracts/NFTStake.sol\":37512:37527  uint256 pending */\n      0x00\n        /* \"contracts/NFTStake.sol\":37530:37597  user.amount.mul(pool.accDRGPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_319\n        /* \"contracts/NFTStake.sol\":37581:37585  user */\n      dup3\n        /* \"contracts/NFTStake.sol\":37581:37596  user.rewardDebt */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":37530:37576  user.amount.mul(pool.accDRGPerShare).div(1e12) */\n      tag_320\n        /* \"contracts/NFTStake.sol\":37571:37575  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTStake.sol\":37530:37566  user.amount.mul(pool.accDRGPerShare) */\n      tag_321\n        /* \"contracts/NFTStake.sol\":37546:37550  pool */\n      dup8\n        /* \"contracts/NFTStake.sol\":37546:37565  pool.accDRGPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":37530:37534  user */\n      dup8\n        /* \"contracts/NFTStake.sol\":37530:37541  user.amount */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":37530:37545  user.amount.mul */\n      tag_188\n      swap1\n        /* \"contracts/NFTStake.sol\":37530:37566  user.amount.mul(pool.accDRGPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_321:\n        /* \"contracts/NFTStake.sol\":37530:37570  user.amount.mul(pool.accDRGPerShare).div */\n      tag_189\n      swap1\n        /* \"contracts/NFTStake.sol\":37530:37576  user.amount.mul(pool.accDRGPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_320:\n        /* \"contracts/NFTStake.sol\":37530:37580  user.amount.mul(pool.accDRGPerShare).div(1e12).sub */\n      tag_190\n      swap1\n        /* \"contracts/NFTStake.sol\":37530:37597  user.amount.mul(pool.accDRGPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_319:\n        /* \"contracts/NFTStake.sol\":37512:37597  uint256 pending = user.amount.mul(pool.accDRGPerShare).div(1e12).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":37626:37627  0 */\n      0x00\n        /* \"contracts/NFTStake.sol\":37616:37623  pending */\n      dup2\n        /* \"contracts/NFTStake.sol\":37616:37627  pending > 0 */\n      gt\n        /* \"contracts/NFTStake.sol\":37608:37646  require(pending > 0, \"Amount is zero\") */\n      tag_322\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_323\n      swap1\n      tag_324\n      jump\t// in\n    tag_323:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_322:\n        /* \"contracts/NFTStake.sol\":37657:37660  DRG */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":37657:37668  DRG.approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"contracts/NFTStake.sol\":37677:37690  NFTMasterChef */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":37693:37700  pending */\n      dup4\n        /* \"contracts/NFTStake.sol\":37657:37701  DRG.approve(address(NFTMasterChef), pending) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_325\n      swap3\n      swap2\n      swap1\n      tag_266\n      jump\t// in\n    tag_325:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_327\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_327:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_328\n      swap2\n      swap1\n      tag_270\n      jump\t// in\n    tag_328:\n      pop\n        /* \"contracts/NFTStake.sol\":37712:37725  NFTMasterChef */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":37712:37738  NFTMasterChef.enterStaking */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x849df12c\n        /* \"contracts/NFTStake.sol\":37739:37746  pending */\n      dup3\n        /* \"contracts/NFTStake.sol\":37748:37758  msg.sender */\n      caller\n        /* \"contracts/NFTStake.sol\":37712:37759  NFTMasterChef.enterStaking(pending, msg.sender) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_329\n      swap3\n      swap2\n      swap1\n      tag_330\n      jump\t// in\n    tag_329:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_331\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_331:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_333\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_333:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":37788:37834  user.amount.mul(pool.accDRGPerShare).div(1e12) */\n      tag_334\n        /* \"contracts/NFTStake.sol\":37829:37833  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTStake.sol\":37788:37824  user.amount.mul(pool.accDRGPerShare) */\n      tag_335\n        /* \"contracts/NFTStake.sol\":37804:37808  pool */\n      dup6\n        /* \"contracts/NFTStake.sol\":37804:37823  pool.accDRGPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":37788:37792  user */\n      dup6\n        /* \"contracts/NFTStake.sol\":37788:37799  user.amount */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":37788:37803  user.amount.mul */\n      tag_188\n      swap1\n        /* \"contracts/NFTStake.sol\":37788:37824  user.amount.mul(pool.accDRGPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_335:\n        /* \"contracts/NFTStake.sol\":37788:37828  user.amount.mul(pool.accDRGPerShare).div */\n      tag_189\n      swap1\n        /* \"contracts/NFTStake.sol\":37788:37834  user.amount.mul(pool.accDRGPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_334:\n        /* \"contracts/NFTStake.sol\":37770:37774  user */\n      dup3\n        /* \"contracts/NFTStake.sol\":37770:37785  user.rewardDebt */\n      0x02\n      add\n        /* \"contracts/NFTStake.sol\":37770:37834  user.rewardDebt = user.amount.mul(pool.accDRGPerShare).div(1e12) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":37871:37875  _pid */\n      dup4\n        /* \"contracts/NFTStake.sol\":37859:37869  msg.sender */\n      caller\n        /* \"contracts/NFTStake.sol\":37850:37885  Withdraw(msg.sender, _pid, pending) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n        /* \"contracts/NFTStake.sol\":37877:37884  pending */\n      dup4\n        /* \"contracts/NFTStake.sol\":37850:37885  Withdraw(msg.sender, _pid, pending) */\n      mload(0x40)\n      tag_336\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_336:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTStake.sol\":37364:37893  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":37323:37893  function compundDRG(uint256 _pid) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":38284:38379  function setDevAddress(address _devaddr) public onlyOwner {... */\n    tag_128:\n        /* \"contracts/NFTStake.sol\":20406:20418  _msgSender() */\n      tag_338\n        /* \"contracts/NFTStake.sol\":20406:20416  _msgSender */\n      tag_150\n        /* \"contracts/NFTStake.sol\":20406:20418  _msgSender() */\n      jump\t// in\n    tag_338:\n        /* \"contracts/NFTStake.sol\":20395:20418  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":20395:20402  owner() */\n      tag_339\n        /* \"contracts/NFTStake.sol\":20395:20400  owner */\n      tag_107\n        /* \"contracts/NFTStake.sol\":20395:20402  owner() */\n      jump\t// in\n    tag_339:\n        /* \"contracts/NFTStake.sol\":20395:20418  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTStake.sol\":20387:20455  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_340\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_341\n      swap1\n      tag_154\n      jump\t// in\n    tag_341:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_340:\n        /* \"contracts/NFTStake.sol\":38363:38371  _devaddr */\n      dup1\n        /* \"contracts/NFTStake.sol\":38353:38360  devaddr */\n      0x03\n      0x00\n        /* \"contracts/NFTStake.sol\":38353:38371  devaddr = _devaddr */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":38284:38379  function setDevAddress(address _devaddr) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":29492:29514  address public devaddr */\n    tag_130:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":32857:33045  function getUserTokenIds(uint256 _pid, address _user) public view returns (uint256[] memory) {... */\n    tag_134:\n        /* \"contracts/NFTStake.sol\":32932:32948  uint256[] memory */\n      0x60\n        /* \"contracts/NFTStake.sol\":32961:32982  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTStake.sol\":32985:32993  userInfo */\n      0x08\n        /* \"contracts/NFTStake.sol\":32985:32999  userInfo[_pid] */\n      0x00\n        /* \"contracts/NFTStake.sol\":32994:32998  _pid */\n      dup6\n        /* \"contracts/NFTStake.sol\":32985:32999  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTStake.sol\":32985:33006  userInfo[_pid][_user] */\n      0x00\n        /* \"contracts/NFTStake.sol\":33000:33005  _user */\n      dup5\n        /* \"contracts/NFTStake.sol\":32985:33006  userInfo[_pid][_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTStake.sol\":32961:33006  UserInfo storage user = userInfo[_pid][_user] */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":33024:33028  user */\n      dup1\n        /* \"contracts/NFTStake.sol\":33024:33037  user.tokenIds */\n      0x00\n      add\n        /* \"contracts/NFTStake.sol\":33017:33037  return user.tokenIds */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_344\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_345:\n      dup2\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_345\n      jumpi\n    tag_344:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":32857:33045  function getUserTokenIds(uint256 _pid, address _user) public view returns (uint256[] memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":34998:35737  function deposit(uint256 _pid, uint256 _tokenId) public {... */\n    tag_139:\n        /* \"contracts/NFTStake.sol\":35065:35086  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTStake.sol\":35089:35097  poolInfo */\n      0x07\n        /* \"contracts/NFTStake.sol\":35098:35102  _pid */\n      dup4\n        /* \"contracts/NFTStake.sol\":35089:35103  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_347\n      jumpi\n      tag_348\n      tag_181\n      jump\t// in\n    tag_348:\n    tag_347:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTStake.sol\":35065:35103  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":35114:35135  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTStake.sol\":35138:35146  userInfo */\n      0x08\n        /* \"contracts/NFTStake.sol\":35138:35152  userInfo[_pid] */\n      0x00\n        /* \"contracts/NFTStake.sol\":35147:35151  _pid */\n      dup6\n        /* \"contracts/NFTStake.sol\":35138:35152  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTStake.sol\":35138:35164  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"contracts/NFTStake.sol\":35153:35163  msg.sender */\n      caller\n        /* \"contracts/NFTStake.sol\":35138:35164  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTStake.sol\":35114:35164  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":35175:35191  updatePool(_pid) */\n      tag_350\n        /* \"contracts/NFTStake.sol\":35186:35190  _pid */\n      dup5\n        /* \"contracts/NFTStake.sol\":35175:35185  updatePool */\n      tag_87\n        /* \"contracts/NFTStake.sol\":35175:35191  updatePool(_pid) */\n      jump\t// in\n    tag_350:\n        /* \"contracts/NFTStake.sol\":35220:35221  0 */\n      0x00\n        /* \"contracts/NFTStake.sol\":35206:35210  user */\n      dup2\n        /* \"contracts/NFTStake.sol\":35206:35217  user.amount */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":35206:35221  user.amount > 0 */\n      gt\n        /* \"contracts/NFTStake.sol\":35202:35435  if (user.amount > 0) {... */\n      iszero\n      tag_351\n      jumpi\n        /* \"contracts/NFTStake.sol\":35238:35253  uint256 pending */\n      0x00\n        /* \"contracts/NFTStake.sol\":35256:35323  user.amount.mul(pool.accDRGPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_352\n        /* \"contracts/NFTStake.sol\":35307:35311  user */\n      dup3\n        /* \"contracts/NFTStake.sol\":35307:35322  user.rewardDebt */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":35256:35302  user.amount.mul(pool.accDRGPerShare).div(1e12) */\n      tag_353\n        /* \"contracts/NFTStake.sol\":35297:35301  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTStake.sol\":35256:35292  user.amount.mul(pool.accDRGPerShare) */\n      tag_354\n        /* \"contracts/NFTStake.sol\":35272:35276  pool */\n      dup8\n        /* \"contracts/NFTStake.sol\":35272:35291  pool.accDRGPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":35256:35260  user */\n      dup8\n        /* \"contracts/NFTStake.sol\":35256:35267  user.amount */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":35256:35271  user.amount.mul */\n      tag_188\n      swap1\n        /* \"contracts/NFTStake.sol\":35256:35292  user.amount.mul(pool.accDRGPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_354:\n        /* \"contracts/NFTStake.sol\":35256:35296  user.amount.mul(pool.accDRGPerShare).div */\n      tag_189\n      swap1\n        /* \"contracts/NFTStake.sol\":35256:35302  user.amount.mul(pool.accDRGPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_353:\n        /* \"contracts/NFTStake.sol\":35256:35306  user.amount.mul(pool.accDRGPerShare).div(1e12).sub */\n      tag_190\n      swap1\n        /* \"contracts/NFTStake.sol\":35256:35323  user.amount.mul(pool.accDRGPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_352:\n        /* \"contracts/NFTStake.sol\":35238:35323  uint256 pending = user.amount.mul(pool.accDRGPerShare).div(1e12).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":35351:35352  0 */\n      0x00\n        /* \"contracts/NFTStake.sol\":35341:35348  pending */\n      dup2\n        /* \"contracts/NFTStake.sol\":35341:35352  pending > 0 */\n      gt\n        /* \"contracts/NFTStake.sol\":35338:35424  if(pending > 0){... */\n      iszero\n      tag_355\n      jumpi\n        /* \"contracts/NFTStake.sol\":35372:35408  safeDRGTransfer(msg.sender, pending) */\n      tag_356\n        /* \"contracts/NFTStake.sol\":35388:35398  msg.sender */\n      caller\n        /* \"contracts/NFTStake.sol\":35400:35407  pending */\n      dup3\n        /* \"contracts/NFTStake.sol\":35372:35387  safeDRGTransfer */\n      tag_193\n        /* \"contracts/NFTStake.sol\":35372:35408  safeDRGTransfer(msg.sender, pending) */\n      jump\t// in\n    tag_356:\n        /* \"contracts/NFTStake.sol\":35338:35424  if(pending > 0){... */\n    tag_355:\n        /* \"contracts/NFTStake.sol\":35223:35435  {... */\n      pop\n        /* \"contracts/NFTStake.sol\":35202:35435  if (user.amount > 0) {... */\n    tag_351:\n        /* \"contracts/NFTStake.sol\":35445:35449  pool */\n      dup2\n        /* \"contracts/NFTStake.sol\":35445:35458  pool.NFTToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":35445:35475  pool.NFTToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42842e0e\n        /* \"contracts/NFTStake.sol\":35484:35494  msg.sender */\n      caller\n        /* \"contracts/NFTStake.sol\":35505:35509  this */\n      address\n        /* \"contracts/NFTStake.sol\":35512:35520  _tokenId */\n      dup7\n        /* \"contracts/NFTStake.sol\":35445:35521  pool.NFTToken.safeTransferFrom(address(msg.sender), address(this), _tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_357\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_225\n      jump\t// in\n    tag_357:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_358\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_358:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_360\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_360:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":35546:35564  user.amount.add(1) */\n      tag_361\n        /* \"contracts/NFTStake.sol\":35562:35563  1 */\n      0x01\n        /* \"contracts/NFTStake.sol\":35546:35550  user */\n      dup3\n        /* \"contracts/NFTStake.sol\":35546:35557  user.amount */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":35546:35561  user.amount.add */\n      tag_170\n      swap1\n        /* \"contracts/NFTStake.sol\":35546:35564  user.amount.add(1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_361:\n        /* \"contracts/NFTStake.sol\":35532:35536  user */\n      dup2\n        /* \"contracts/NFTStake.sol\":35532:35543  user.amount */\n      0x01\n      add\n        /* \"contracts/NFTStake.sol\":35532:35564  user.amount = user.amount.add(1) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":35593:35639  user.amount.mul(pool.accDRGPerShare).div(1e12) */\n      tag_362\n        /* \"contracts/NFTStake.sol\":35634:35638  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTStake.sol\":35593:35629  user.amount.mul(pool.accDRGPerShare) */\n      tag_363\n        /* \"contracts/NFTStake.sol\":35609:35613  pool */\n      dup5\n        /* \"contracts/NFTStake.sol\":35609:35628  pool.accDRGPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":35593:35597  user */\n      dup5\n        /* \"contracts/NFTStake.sol\":35593:35604  user.amount */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":35593:35608  user.amount.mul */\n      tag_188\n      swap1\n        /* \"contracts/NFTStake.sol\":35593:35629  user.amount.mul(pool.accDRGPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_363:\n        /* \"contracts/NFTStake.sol\":35593:35633  user.amount.mul(pool.accDRGPerShare).div */\n      tag_189\n      swap1\n        /* \"contracts/NFTStake.sol\":35593:35639  user.amount.mul(pool.accDRGPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_362:\n        /* \"contracts/NFTStake.sol\":35575:35579  user */\n      dup2\n        /* \"contracts/NFTStake.sol\":35575:35590  user.rewardDebt */\n      0x02\n      add\n        /* \"contracts/NFTStake.sol\":35575:35639  user.rewardDebt = user.amount.mul(pool.accDRGPerShare).div(1e12) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":35650:35654  user */\n      dup1\n        /* \"contracts/NFTStake.sol\":35650:35663  user.tokenIds */\n      0x00\n      add\n        /* \"contracts/NFTStake.sol\":35669:35677  _tokenId */\n      dup4\n        /* \"contracts/NFTStake.sol\":35650:35678  user.tokenIds.push(_tokenId) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"contracts/NFTStake.sol\":35714:35718  _pid */\n      dup4\n        /* \"contracts/NFTStake.sol\":35702:35712  msg.sender */\n      caller\n        /* \"contracts/NFTStake.sol\":35694:35729  Deposit(msg.sender, _pid, _tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15\n        /* \"contracts/NFTStake.sol\":35720:35728  _tokenId */\n      dup6\n        /* \"contracts/NFTStake.sol\":35694:35729  Deposit(msg.sender, _pid, _tokenId) */\n      mload(0x40)\n      tag_365\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_365:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTStake.sol\":35054:35737  {... */\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":34998:35737  function deposit(uint256 _pid, uint256 _tokenId) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":29380:29415  INFTMasterChef public NFTMasterChef */\n    tag_141:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":21084:21285  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_146:\n        /* \"contracts/NFTStake.sol\":20406:20418  _msgSender() */\n      tag_367\n        /* \"contracts/NFTStake.sol\":20406:20416  _msgSender */\n      tag_150\n        /* \"contracts/NFTStake.sol\":20406:20418  _msgSender() */\n      jump\t// in\n    tag_367:\n        /* \"contracts/NFTStake.sol\":20395:20418  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":20395:20402  owner() */\n      tag_368\n        /* \"contracts/NFTStake.sol\":20395:20400  owner */\n      tag_107\n        /* \"contracts/NFTStake.sol\":20395:20402  owner() */\n      jump\t// in\n    tag_368:\n        /* \"contracts/NFTStake.sol\":20395:20418  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTStake.sol\":20387:20455  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_369\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_370\n      swap1\n      tag_154\n      jump\t// in\n    tag_370:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_369:\n        /* \"contracts/NFTStake.sol\":21193:21194  0 */\n      0x00\n        /* \"contracts/NFTStake.sol\":21173:21195  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":21173:21181  newOwner */\n      dup2\n        /* \"contracts/NFTStake.sol\":21173:21195  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/NFTStake.sol\":21165:21238  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_372\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_373\n      swap1\n      tag_374\n      jump\t// in\n    tag_373:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_372:\n        /* \"contracts/NFTStake.sol\":21249:21277  _transferOwnership(newOwner) */\n      tag_375\n        /* \"contracts/NFTStake.sol\":21268:21276  newOwner */\n      dup2\n        /* \"contracts/NFTStake.sol\":21249:21267  _transferOwnership */\n      tag_309\n        /* \"contracts/NFTStake.sol\":21249:21277  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_375:\n        /* \"contracts/NFTStake.sol\":21084:21285  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":19549:19647  function _msgSender() internal view virtual returns (address) {... */\n    tag_150:\n        /* \"contracts/NFTStake.sol\":19602:19609  address */\n      0x00\n        /* \"contracts/NFTStake.sol\":19629:19639  msg.sender */\n      caller\n        /* \"contracts/NFTStake.sol\":19622:19639  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":19549:19647  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":455:636  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_170:\n        /* \"contracts/NFTStake.sol\":513:520  uint256 */\n      0x00\n        /* \"contracts/NFTStake.sol\":533:542  uint256 c */\n      dup1\n        /* \"contracts/NFTStake.sol\":549:550  b */\n      dup3\n        /* \"contracts/NFTStake.sol\":545:546  a */\n      dup5\n        /* \"contracts/NFTStake.sol\":545:550  a + b */\n      tag_378\n      swap2\n      swap1\n      tag_379\n      jump\t// in\n    tag_378:\n        /* \"contracts/NFTStake.sol\":533:550  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":574:575  a */\n      dup4\n        /* \"contracts/NFTStake.sol\":569:570  c */\n      dup2\n        /* \"contracts/NFTStake.sol\":569:575  c >= a */\n      lt\n      iszero\n        /* \"contracts/NFTStake.sol\":561:607  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_380\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_381\n      swap1\n      tag_382\n      jump\t// in\n    tag_381:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_380:\n        /* \"contracts/NFTStake.sol\":627:628  c */\n      dup1\n        /* \"contracts/NFTStake.sol\":620:628  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":455:636  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":1827:2298  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_188:\n        /* \"contracts/NFTStake.sol\":1885:1892  uint256 */\n      0x00\n        /* \"contracts/NFTStake.sol\":2135:2136  0 */\n      dup1\n        /* \"contracts/NFTStake.sol\":2130:2131  a */\n      dup4\n        /* \"contracts/NFTStake.sol\":2130:2136  a == 0 */\n      sub\n        /* \"contracts/NFTStake.sol\":2126:2173  if (a == 0) {... */\n      tag_384\n      jumpi\n        /* \"contracts/NFTStake.sol\":2160:2161  0 */\n      0x00\n        /* \"contracts/NFTStake.sol\":2153:2161  return 0 */\n      swap1\n      pop\n      jump(tag_383)\n        /* \"contracts/NFTStake.sol\":2126:2173  if (a == 0) {... */\n    tag_384:\n        /* \"contracts/NFTStake.sol\":2185:2194  uint256 c */\n      0x00\n        /* \"contracts/NFTStake.sol\":2201:2202  b */\n      dup3\n        /* \"contracts/NFTStake.sol\":2197:2198  a */\n      dup5\n        /* \"contracts/NFTStake.sol\":2197:2202  a * b */\n      tag_385\n      swap2\n      swap1\n      tag_386\n      jump\t// in\n    tag_385:\n        /* \"contracts/NFTStake.sol\":2185:2202  uint256 c = a * b */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":2230:2231  b */\n      dup3\n        /* \"contracts/NFTStake.sol\":2225:2226  a */\n      dup5\n        /* \"contracts/NFTStake.sol\":2221:2222  c */\n      dup3\n        /* \"contracts/NFTStake.sol\":2221:2226  c / a */\n      tag_387\n      swap2\n      swap1\n      tag_388\n      jump\t// in\n    tag_387:\n        /* \"contracts/NFTStake.sol\":2221:2231  c / a == b */\n      eq\n        /* \"contracts/NFTStake.sol\":2213:2269  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_389\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_390\n      swap1\n      tag_391\n      jump\t// in\n    tag_390:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_389:\n        /* \"contracts/NFTStake.sol\":2289:2290  c */\n      dup1\n        /* \"contracts/NFTStake.sol\":2282:2290  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":1827:2298  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_383:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":2766:2898  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_189:\n        /* \"contracts/NFTStake.sol\":2824:2831  uint256 */\n      0x00\n        /* \"contracts/NFTStake.sol\":2851:2890  div(a, b, \"SafeMath: division by zero\") */\n      tag_393\n        /* \"contracts/NFTStake.sol\":2855:2856  a */\n      dup4\n        /* \"contracts/NFTStake.sol\":2858:2859  b */\n      dup4\n        /* \"contracts/NFTStake.sol\":2851:2890  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/NFTStake.sol\":2851:2854  div */\n      tag_394\n        /* \"contracts/NFTStake.sol\":2851:2890  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n    tag_393:\n        /* \"contracts/NFTStake.sol\":2844:2890  return div(a, b, \"SafeMath: division by zero\") */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":2766:2898  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":911:1047  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_190:\n        /* \"contracts/NFTStake.sol\":969:976  uint256 */\n      0x00\n        /* \"contracts/NFTStake.sol\":996:1039  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_396\n        /* \"contracts/NFTStake.sol\":1000:1001  a */\n      dup4\n        /* \"contracts/NFTStake.sol\":1003:1004  b */\n      dup4\n        /* \"contracts/NFTStake.sol\":996:1039  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"contracts/NFTStake.sol\":996:999  sub */\n      tag_397\n        /* \"contracts/NFTStake.sol\":996:1039  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    tag_396:\n        /* \"contracts/NFTStake.sol\":989:1039  return sub(a, b, \"SafeMath: subtraction overflow\") */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":911:1047  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":38005:38276  function safeDRGTransfer(address _to, uint256 _amount) internal {... */\n    tag_193:\n        /* \"contracts/NFTStake.sol\":38080:38094  uint256 DRGbal */\n      0x00\n        /* \"contracts/NFTStake.sol\":38097:38100  DRG */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":38097:38110  DRG.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/NFTStake.sol\":38119:38123  this */\n      address\n        /* \"contracts/NFTStake.sol\":38097:38125  DRG.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_399\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_399:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_401\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_401:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_402\n      swap2\n      swap1\n      tag_238\n      jump\t// in\n    tag_402:\n        /* \"contracts/NFTStake.sol\":38080:38125  uint256 DRGbal = DRG.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":38150:38156  DRGbal */\n      dup1\n        /* \"contracts/NFTStake.sol\":38140:38147  _amount */\n      dup3\n        /* \"contracts/NFTStake.sol\":38140:38156  _amount > DRGbal */\n      gt\n        /* \"contracts/NFTStake.sol\":38136:38269  if (_amount > DRGbal) {... */\n      iszero\n      tag_403\n      jumpi\n        /* \"contracts/NFTStake.sol\":38173:38176  DRG */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":38173:38185  DRG.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/NFTStake.sol\":38186:38189  _to */\n      dup5\n        /* \"contracts/NFTStake.sol\":38191:38197  DRGbal */\n      dup4\n        /* \"contracts/NFTStake.sol\":38173:38198  DRG.transfer(_to, DRGbal) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_404\n      swap3\n      swap2\n      swap1\n      tag_266\n      jump\t// in\n    tag_404:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_406\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_406:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_407\n      swap2\n      swap1\n      tag_270\n      jump\t// in\n    tag_407:\n      pop\n        /* \"contracts/NFTStake.sol\":38136:38269  if (_amount > DRGbal) {... */\n      jump(tag_408)\n    tag_403:\n        /* \"contracts/NFTStake.sol\":38231:38234  DRG */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":38231:38243  DRG.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/NFTStake.sol\":38244:38247  _to */\n      dup5\n        /* \"contracts/NFTStake.sol\":38249:38256  _amount */\n      dup5\n        /* \"contracts/NFTStake.sol\":38231:38257  DRG.transfer(_to, _amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_409\n      swap3\n      swap2\n      swap1\n      tag_266\n      jump\t// in\n    tag_409:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_411\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_411:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_412\n      swap2\n      swap1\n      tag_270\n      jump\t// in\n    tag_412:\n      pop\n        /* \"contracts/NFTStake.sol\":38136:38269  if (_amount > DRGbal) {... */\n    tag_408:\n        /* \"contracts/NFTStake.sol\":38069:38276  {... */\n      pop\n        /* \"contracts/NFTStake.sol\":38005:38276  function safeDRGTransfer(address _to, uint256 _amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":21445:21636  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_309:\n        /* \"contracts/NFTStake.sol\":21519:21535  address oldOwner */\n      0x00\n        /* \"contracts/NFTStake.sol\":21538:21544  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":21519:21544  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":21564:21572  newOwner */\n      dup2\n        /* \"contracts/NFTStake.sol\":21555:21561  _owner */\n      0x00\n      dup1\n        /* \"contracts/NFTStake.sol\":21555:21572  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":21619:21627  newOwner */\n      dup2\n        /* \"contracts/NFTStake.sol\":21588:21628  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":21609:21617  oldOwner */\n      dup2\n        /* \"contracts/NFTStake.sol\":21588:21628  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTStake.sol\":21508:21636  {... */\n      pop\n        /* \"contracts/NFTStake.sol\":21445:21636  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":3428:3773  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_394:\n        /* \"contracts/NFTStake.sol\":3514:3521  uint256 */\n      0x00\n        /* \"contracts/NFTStake.sol\":3613:3614  0 */\n      dup1\n        /* \"contracts/NFTStake.sol\":3609:3610  b */\n      dup4\n        /* \"contracts/NFTStake.sol\":3609:3614  b > 0 */\n      gt\n        /* \"contracts/NFTStake.sol\":3616:3628  errorMessage */\n      dup3\n        /* \"contracts/NFTStake.sol\":3601:3629  require(b > 0, errorMessage) */\n      swap1\n      tag_415\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_416\n      swap2\n      swap1\n      tag_417\n      jump\t// in\n    tag_416:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_415:\n      pop\n        /* \"contracts/NFTStake.sol\":3640:3649  uint256 c */\n      0x00\n        /* \"contracts/NFTStake.sol\":3656:3657  b */\n      dup4\n        /* \"contracts/NFTStake.sol\":3652:3653  a */\n      dup6\n        /* \"contracts/NFTStake.sol\":3652:3657  a / b */\n      tag_418\n      swap2\n      swap1\n      tag_388\n      jump\t// in\n    tag_418:\n        /* \"contracts/NFTStake.sol\":3640:3657  uint256 c = a / b */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":3764:3765  c */\n      dup1\n        /* \"contracts/NFTStake.sol\":3757:3765  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":3428:3773  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":1384:1576  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_397:\n        /* \"contracts/NFTStake.sol\":1470:1477  uint256 */\n      0x00\n        /* \"contracts/NFTStake.sol\":1503:1504  a */\n      dup4\n        /* \"contracts/NFTStake.sol\":1498:1499  b */\n      dup4\n        /* \"contracts/NFTStake.sol\":1498:1504  b <= a */\n      gt\n      iszero\n        /* \"contracts/NFTStake.sol\":1506:1518  errorMessage */\n      dup3\n        /* \"contracts/NFTStake.sol\":1490:1519  require(b <= a, errorMessage) */\n      swap1\n      tag_420\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_421\n      swap2\n      swap1\n      tag_417\n      jump\t// in\n    tag_421:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_420:\n      pop\n        /* \"contracts/NFTStake.sol\":1530:1539  uint256 c */\n      0x00\n        /* \"contracts/NFTStake.sol\":1546:1547  b */\n      dup4\n        /* \"contracts/NFTStake.sol\":1542:1543  a */\n      dup6\n        /* \"contracts/NFTStake.sol\":1542:1547  a - b */\n      tag_422\n      swap2\n      swap1\n      tag_423\n      jump\t// in\n    tag_422:\n        /* \"contracts/NFTStake.sol\":1530:1547  uint256 c = a - b */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":1567:1568  c */\n      dup1\n        /* \"contracts/NFTStake.sol\":1560:1568  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":1384:1576  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_424:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_425:\n        /* \"#utility.yul\":177:201   */\n      tag_500\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_424\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_42:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_502\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_425\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:517   */\n    tag_426:\n        /* \"#utility.yul\":475:481   */\n      0x00\n        /* \"#utility.yul\":508:510   */\n      0x40\n        /* \"#utility.yul\":502:511   */\n      mload\n        /* \"#utility.yul\":492:511   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:517   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_427:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":646:763   */\n    tag_428:\n        /* \"#utility.yul\":755:756   */\n      0x00\n        /* \"#utility.yul\":752:753   */\n      dup1\n        /* \"#utility.yul\":745:757   */\n      revert\n        /* \"#utility.yul\":769:891   */\n    tag_429:\n        /* \"#utility.yul\":842:866   */\n      tag_507\n        /* \"#utility.yul\":860:865   */\n      dup2\n        /* \"#utility.yul\":842:866   */\n      tag_424\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":835:840   */\n      dup2\n        /* \"#utility.yul\":832:867   */\n      eq\n        /* \"#utility.yul\":822:885   */\n      tag_508\n      jumpi\n        /* \"#utility.yul\":881:882   */\n      0x00\n        /* \"#utility.yul\":878:879   */\n      dup1\n        /* \"#utility.yul\":871:883   */\n      revert\n        /* \"#utility.yul\":822:885   */\n    tag_508:\n        /* \"#utility.yul\":769:891   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":897:1036   */\n    tag_430:\n        /* \"#utility.yul\":943:948   */\n      0x00\n        /* \"#utility.yul\":981:987   */\n      dup2\n        /* \"#utility.yul\":968:988   */\n      calldataload\n        /* \"#utility.yul\":959:988   */\n      swap1\n      pop\n        /* \"#utility.yul\":997:1030   */\n      tag_510\n        /* \"#utility.yul\":1024:1029   */\n      dup2\n        /* \"#utility.yul\":997:1030   */\n      tag_429\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":897:1036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1042:1371   */\n    tag_45:\n        /* \"#utility.yul\":1101:1107   */\n      0x00\n        /* \"#utility.yul\":1150:1152   */\n      0x20\n        /* \"#utility.yul\":1138:1147   */\n      dup3\n        /* \"#utility.yul\":1129:1136   */\n      dup5\n        /* \"#utility.yul\":1125:1148   */\n      sub\n        /* \"#utility.yul\":1121:1153   */\n      slt\n        /* \"#utility.yul\":1118:1237   */\n      iszero\n      tag_512\n      jumpi\n        /* \"#utility.yul\":1156:1235   */\n      tag_513\n      tag_427\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":1118:1237   */\n    tag_512:\n        /* \"#utility.yul\":1276:1277   */\n      0x00\n        /* \"#utility.yul\":1301:1354   */\n      tag_514\n        /* \"#utility.yul\":1346:1353   */\n      dup5\n        /* \"#utility.yul\":1337:1343   */\n      dup3\n        /* \"#utility.yul\":1326:1335   */\n      dup6\n        /* \"#utility.yul\":1322:1344   */\n      add\n        /* \"#utility.yul\":1301:1354   */\n      tag_430\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":1291:1354   */\n      swap2\n      pop\n        /* \"#utility.yul\":1247:1364   */\n      pop\n        /* \"#utility.yul\":1042:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1503   */\n    tag_431:\n        /* \"#utility.yul\":1414:1421   */\n      0x00\n        /* \"#utility.yul\":1454:1496   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1447:1452   */\n      dup3\n        /* \"#utility.yul\":1443:1497   */\n      and\n        /* \"#utility.yul\":1432:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1569   */\n    tag_432:\n        /* \"#utility.yul\":1537:1540   */\n      0x00\n        /* \"#utility.yul\":1558:1563   */\n      dup2\n        /* \"#utility.yul\":1551:1563   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1569   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1575:1717   */\n    tag_433:\n        /* \"#utility.yul\":1625:1634   */\n      0x00\n        /* \"#utility.yul\":1658:1711   */\n      tag_518\n        /* \"#utility.yul\":1676:1710   */\n      tag_519\n        /* \"#utility.yul\":1685:1709   */\n      tag_520\n        /* \"#utility.yul\":1703:1708   */\n      dup5\n        /* \"#utility.yul\":1685:1709   */\n      tag_431\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":1676:1710   */\n      tag_432\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":1658:1711   */\n      tag_431\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":1645:1711   */\n      swap1\n      pop\n        /* \"#utility.yul\":1575:1717   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1723:1849   */\n    tag_434:\n        /* \"#utility.yul\":1773:1782   */\n      0x00\n        /* \"#utility.yul\":1806:1843   */\n      tag_522\n        /* \"#utility.yul\":1837:1842   */\n      dup3\n        /* \"#utility.yul\":1806:1843   */\n      tag_433\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":1793:1843   */\n      swap1\n      pop\n        /* \"#utility.yul\":1723:1849   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1855:1995   */\n    tag_435:\n        /* \"#utility.yul\":1919:1928   */\n      0x00\n        /* \"#utility.yul\":1952:1989   */\n      tag_524\n        /* \"#utility.yul\":1983:1988   */\n      dup3\n        /* \"#utility.yul\":1952:1989   */\n      tag_434\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":1939:1989   */\n      swap1\n      pop\n        /* \"#utility.yul\":1855:1995   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2001:2160   */\n    tag_436:\n        /* \"#utility.yul\":2102:2153   */\n      tag_526\n        /* \"#utility.yul\":2147:2152   */\n      dup2\n        /* \"#utility.yul\":2102:2153   */\n      tag_435\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":2097:2100   */\n      dup3\n        /* \"#utility.yul\":2090:2154   */\n      mstore\n        /* \"#utility.yul\":2001:2160   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2166:2416   */\n    tag_50:\n        /* \"#utility.yul\":2273:2277   */\n      0x00\n        /* \"#utility.yul\":2311:2313   */\n      0x20\n        /* \"#utility.yul\":2300:2309   */\n      dup3\n        /* \"#utility.yul\":2296:2314   */\n      add\n        /* \"#utility.yul\":2288:2314   */\n      swap1\n      pop\n        /* \"#utility.yul\":2324:2409   */\n      tag_528\n        /* \"#utility.yul\":2406:2407   */\n      0x00\n        /* \"#utility.yul\":2395:2404   */\n      dup4\n        /* \"#utility.yul\":2391:2408   */\n      add\n        /* \"#utility.yul\":2382:2388   */\n      dup5\n        /* \"#utility.yul\":2324:2409   */\n      tag_436\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":2166:2416   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2422:2518   */\n    tag_437:\n        /* \"#utility.yul\":2459:2466   */\n      0x00\n        /* \"#utility.yul\":2488:2512   */\n      tag_530\n        /* \"#utility.yul\":2506:2511   */\n      dup3\n        /* \"#utility.yul\":2488:2512   */\n      tag_431\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":2477:2512   */\n      swap1\n      pop\n        /* \"#utility.yul\":2422:2518   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2524:2646   */\n    tag_438:\n        /* \"#utility.yul\":2597:2621   */\n      tag_532\n        /* \"#utility.yul\":2615:2620   */\n      dup2\n        /* \"#utility.yul\":2597:2621   */\n      tag_437\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":2590:2595   */\n      dup2\n        /* \"#utility.yul\":2587:2622   */\n      eq\n        /* \"#utility.yul\":2577:2640   */\n      tag_533\n      jumpi\n        /* \"#utility.yul\":2636:2637   */\n      0x00\n        /* \"#utility.yul\":2633:2634   */\n      dup1\n        /* \"#utility.yul\":2626:2638   */\n      revert\n        /* \"#utility.yul\":2577:2640   */\n    tag_533:\n        /* \"#utility.yul\":2524:2646   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2652:2791   */\n    tag_439:\n        /* \"#utility.yul\":2698:2703   */\n      0x00\n        /* \"#utility.yul\":2736:2742   */\n      dup2\n        /* \"#utility.yul\":2723:2743   */\n      calldataload\n        /* \"#utility.yul\":2714:2743   */\n      swap1\n      pop\n        /* \"#utility.yul\":2752:2785   */\n      tag_535\n        /* \"#utility.yul\":2779:2784   */\n      dup2\n        /* \"#utility.yul\":2752:2785   */\n      tag_438\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":2652:2791   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2797:2914   */\n    tag_440:\n        /* \"#utility.yul\":2906:2907   */\n      0x00\n        /* \"#utility.yul\":2903:2904   */\n      dup1\n        /* \"#utility.yul\":2896:2908   */\n      revert\n        /* \"#utility.yul\":2920:3037   */\n    tag_441:\n        /* \"#utility.yul\":3029:3030   */\n      0x00\n        /* \"#utility.yul\":3026:3027   */\n      dup1\n        /* \"#utility.yul\":3019:3031   */\n      revert\n        /* \"#utility.yul\":3043:3145   */\n    tag_442:\n        /* \"#utility.yul\":3084:3090   */\n      0x00\n        /* \"#utility.yul\":3135:3137   */\n      0x1f\n        /* \"#utility.yul\":3131:3138   */\n      not\n        /* \"#utility.yul\":3126:3128   */\n      0x1f\n        /* \"#utility.yul\":3119:3124   */\n      dup4\n        /* \"#utility.yul\":3115:3129   */\n      add\n        /* \"#utility.yul\":3111:3139   */\n      and\n        /* \"#utility.yul\":3101:3139   */\n      swap1\n      pop\n        /* \"#utility.yul\":3043:3145   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3151:3331   */\n    tag_443:\n        /* \"#utility.yul\":3199:3276   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3196:3197   */\n      0x00\n        /* \"#utility.yul\":3189:3277   */\n      mstore\n        /* \"#utility.yul\":3296:3300   */\n      0x41\n        /* \"#utility.yul\":3293:3294   */\n      0x04\n        /* \"#utility.yul\":3286:3301   */\n      mstore\n        /* \"#utility.yul\":3320:3324   */\n      0x24\n        /* \"#utility.yul\":3317:3318   */\n      0x00\n        /* \"#utility.yul\":3310:3325   */\n      revert\n        /* \"#utility.yul\":3337:3618   */\n    tag_444:\n        /* \"#utility.yul\":3420:3447   */\n      tag_541\n        /* \"#utility.yul\":3442:3446   */\n      dup3\n        /* \"#utility.yul\":3420:3447   */\n      tag_442\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":3412:3418   */\n      dup2\n        /* \"#utility.yul\":3408:3448   */\n      add\n        /* \"#utility.yul\":3550:3556   */\n      dup2\n        /* \"#utility.yul\":3538:3548   */\n      dup2\n        /* \"#utility.yul\":3535:3557   */\n      lt\n        /* \"#utility.yul\":3514:3532   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3502:3512   */\n      dup3\n        /* \"#utility.yul\":3499:3533   */\n      gt\n        /* \"#utility.yul\":3496:3558   */\n      or\n        /* \"#utility.yul\":3493:3581   */\n      iszero\n      tag_542\n      jumpi\n        /* \"#utility.yul\":3561:3579   */\n      tag_543\n      tag_443\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":3493:3581   */\n    tag_542:\n        /* \"#utility.yul\":3601:3611   */\n      dup1\n        /* \"#utility.yul\":3597:3599   */\n      0x40\n        /* \"#utility.yul\":3590:3612   */\n      mstore\n        /* \"#utility.yul\":3380:3618   */\n      pop\n        /* \"#utility.yul\":3337:3618   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3624:3753   */\n    tag_445:\n        /* \"#utility.yul\":3658:3664   */\n      0x00\n        /* \"#utility.yul\":3685:3705   */\n      tag_545\n      tag_426\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":3675:3705   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3747   */\n      tag_546\n        /* \"#utility.yul\":3742:3746   */\n      dup3\n        /* \"#utility.yul\":3734:3740   */\n      dup3\n        /* \"#utility.yul\":3714:3747   */\n      tag_444\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":3624:3753   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3759:4066   */\n    tag_446:\n        /* \"#utility.yul\":3820:3824   */\n      0x00\n        /* \"#utility.yul\":3910:3928   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3902:3908   */\n      dup3\n        /* \"#utility.yul\":3899:3929   */\n      gt\n        /* \"#utility.yul\":3896:3952   */\n      iszero\n      tag_548\n      jumpi\n        /* \"#utility.yul\":3932:3950   */\n      tag_549\n      tag_443\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":3896:3952   */\n    tag_548:\n        /* \"#utility.yul\":3970:3999   */\n      tag_550\n        /* \"#utility.yul\":3992:3998   */\n      dup3\n        /* \"#utility.yul\":3970:3999   */\n      tag_442\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":3962:3999   */\n      swap1\n      pop\n        /* \"#utility.yul\":4054:4058   */\n      0x20\n        /* \"#utility.yul\":4048:4052   */\n      dup2\n        /* \"#utility.yul\":4044:4059   */\n      add\n        /* \"#utility.yul\":4036:4059   */\n      swap1\n      pop\n        /* \"#utility.yul\":3759:4066   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4072:4226   */\n    tag_447:\n        /* \"#utility.yul\":4156:4162   */\n      dup3\n        /* \"#utility.yul\":4151:4154   */\n      dup2\n        /* \"#utility.yul\":4146:4149   */\n      dup4\n        /* \"#utility.yul\":4133:4163   */\n      calldatacopy\n        /* \"#utility.yul\":4218:4219   */\n      0x00\n        /* \"#utility.yul\":4209:4215   */\n      dup4\n        /* \"#utility.yul\":4204:4207   */\n      dup4\n        /* \"#utility.yul\":4200:4216   */\n      add\n        /* \"#utility.yul\":4193:4220   */\n      mstore\n        /* \"#utility.yul\":4072:4226   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4232:4642   */\n    tag_448:\n        /* \"#utility.yul\":4309:4314   */\n      0x00\n        /* \"#utility.yul\":4334:4399   */\n      tag_553\n        /* \"#utility.yul\":4350:4398   */\n      tag_554\n        /* \"#utility.yul\":4391:4397   */\n      dup5\n        /* \"#utility.yul\":4350:4398   */\n      tag_446\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":4334:4399   */\n      tag_445\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":4325:4399   */\n      swap1\n      pop\n        /* \"#utility.yul\":4422:4428   */\n      dup3\n        /* \"#utility.yul\":4415:4420   */\n      dup2\n        /* \"#utility.yul\":4408:4429   */\n      mstore\n        /* \"#utility.yul\":4460:4464   */\n      0x20\n        /* \"#utility.yul\":4453:4458   */\n      dup2\n        /* \"#utility.yul\":4449:4465   */\n      add\n        /* \"#utility.yul\":4498:4501   */\n      dup5\n        /* \"#utility.yul\":4489:4495   */\n      dup5\n        /* \"#utility.yul\":4484:4487   */\n      dup5\n        /* \"#utility.yul\":4480:4496   */\n      add\n        /* \"#utility.yul\":4477:4502   */\n      gt\n        /* \"#utility.yul\":4474:4586   */\n      iszero\n      tag_555\n      jumpi\n        /* \"#utility.yul\":4505:4584   */\n      tag_556\n      tag_441\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":4474:4586   */\n    tag_555:\n        /* \"#utility.yul\":4595:4636   */\n      tag_557\n        /* \"#utility.yul\":4629:4635   */\n      dup5\n        /* \"#utility.yul\":4624:4627   */\n      dup3\n        /* \"#utility.yul\":4619:4622   */\n      dup6\n        /* \"#utility.yul\":4595:4636   */\n      tag_447\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":4315:4642   */\n      pop\n        /* \"#utility.yul\":4232:4642   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4661:4999   */\n    tag_449:\n        /* \"#utility.yul\":4716:4721   */\n      0x00\n        /* \"#utility.yul\":4765:4768   */\n      dup3\n        /* \"#utility.yul\":4758:4762   */\n      0x1f\n        /* \"#utility.yul\":4750:4756   */\n      dup4\n        /* \"#utility.yul\":4746:4763   */\n      add\n        /* \"#utility.yul\":4742:4769   */\n      slt\n        /* \"#utility.yul\":4732:4854   */\n      tag_559\n      jumpi\n        /* \"#utility.yul\":4773:4852   */\n      tag_560\n      tag_440\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":4732:4854   */\n    tag_559:\n        /* \"#utility.yul\":4890:4896   */\n      dup2\n        /* \"#utility.yul\":4877:4897   */\n      calldataload\n        /* \"#utility.yul\":4915:4993   */\n      tag_561\n        /* \"#utility.yul\":4989:4992   */\n      dup5\n        /* \"#utility.yul\":4981:4987   */\n      dup3\n        /* \"#utility.yul\":4974:4978   */\n      0x20\n        /* \"#utility.yul\":4966:4972   */\n      dup7\n        /* \"#utility.yul\":4962:4979   */\n      add\n        /* \"#utility.yul\":4915:4993   */\n      tag_448\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":4906:4993   */\n      swap2\n      pop\n        /* \"#utility.yul\":4722:4999   */\n      pop\n        /* \"#utility.yul\":4661:4999   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5005:5948   */\n    tag_53:\n        /* \"#utility.yul\":5100:5106   */\n      0x00\n        /* \"#utility.yul\":5108:5114   */\n      dup1\n        /* \"#utility.yul\":5116:5122   */\n      0x00\n        /* \"#utility.yul\":5124:5130   */\n      dup1\n        /* \"#utility.yul\":5173:5176   */\n      0x80\n        /* \"#utility.yul\":5161:5170   */\n      dup6\n        /* \"#utility.yul\":5152:5159   */\n      dup8\n        /* \"#utility.yul\":5148:5171   */\n      sub\n        /* \"#utility.yul\":5144:5177   */\n      slt\n        /* \"#utility.yul\":5141:5261   */\n      iszero\n      tag_563\n      jumpi\n        /* \"#utility.yul\":5180:5259   */\n      tag_564\n      tag_427\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":5141:5261   */\n    tag_563:\n        /* \"#utility.yul\":5300:5301   */\n      0x00\n        /* \"#utility.yul\":5325:5378   */\n      tag_565\n        /* \"#utility.yul\":5370:5377   */\n      dup8\n        /* \"#utility.yul\":5361:5367   */\n      dup3\n        /* \"#utility.yul\":5350:5359   */\n      dup9\n        /* \"#utility.yul\":5346:5368   */\n      add\n        /* \"#utility.yul\":5325:5378   */\n      tag_439\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":5315:5378   */\n      swap5\n      pop\n        /* \"#utility.yul\":5271:5388   */\n      pop\n        /* \"#utility.yul\":5427:5429   */\n      0x20\n        /* \"#utility.yul\":5453:5506   */\n      tag_566\n        /* \"#utility.yul\":5498:5505   */\n      dup8\n        /* \"#utility.yul\":5489:5495   */\n      dup3\n        /* \"#utility.yul\":5478:5487   */\n      dup9\n        /* \"#utility.yul\":5474:5496   */\n      add\n        /* \"#utility.yul\":5453:5506   */\n      tag_439\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":5443:5506   */\n      swap4\n      pop\n        /* \"#utility.yul\":5398:5516   */\n      pop\n        /* \"#utility.yul\":5555:5557   */\n      0x40\n        /* \"#utility.yul\":5581:5634   */\n      tag_567\n        /* \"#utility.yul\":5626:5633   */\n      dup8\n        /* \"#utility.yul\":5617:5623   */\n      dup3\n        /* \"#utility.yul\":5606:5615   */\n      dup9\n        /* \"#utility.yul\":5602:5624   */\n      add\n        /* \"#utility.yul\":5581:5634   */\n      tag_430\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":5571:5634   */\n      swap3\n      pop\n        /* \"#utility.yul\":5526:5644   */\n      pop\n        /* \"#utility.yul\":5711:5713   */\n      0x60\n        /* \"#utility.yul\":5700:5709   */\n      dup6\n        /* \"#utility.yul\":5696:5714   */\n      add\n        /* \"#utility.yul\":5683:5715   */\n      calldataload\n        /* \"#utility.yul\":5742:5760   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5734:5740   */\n      dup2\n        /* \"#utility.yul\":5731:5761   */\n      gt\n        /* \"#utility.yul\":5728:5845   */\n      iszero\n      tag_568\n      jumpi\n        /* \"#utility.yul\":5764:5843   */\n      tag_569\n      tag_428\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":5728:5845   */\n    tag_568:\n        /* \"#utility.yul\":5869:5931   */\n      tag_570\n        /* \"#utility.yul\":5923:5930   */\n      dup8\n        /* \"#utility.yul\":5914:5920   */\n      dup3\n        /* \"#utility.yul\":5903:5912   */\n      dup9\n        /* \"#utility.yul\":5899:5921   */\n      add\n        /* \"#utility.yul\":5869:5931   */\n      tag_449\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":5859:5931   */\n      swap2\n      pop\n        /* \"#utility.yul\":5654:5941   */\n      pop\n        /* \"#utility.yul\":5005:5948   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5954:6103   */\n    tag_450:\n        /* \"#utility.yul\":5990:5997   */\n      0x00\n        /* \"#utility.yul\":6030:6096   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6023:6028   */\n      dup3\n        /* \"#utility.yul\":6019:6097   */\n      and\n        /* \"#utility.yul\":6008:6097   */\n      swap1\n      pop\n        /* \"#utility.yul\":5954:6103   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6109:6224   */\n    tag_451:\n        /* \"#utility.yul\":6194:6217   */\n      tag_573\n        /* \"#utility.yul\":6211:6216   */\n      dup2\n        /* \"#utility.yul\":6194:6217   */\n      tag_450\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":6189:6192   */\n      dup3\n        /* \"#utility.yul\":6182:6218   */\n      mstore\n        /* \"#utility.yul\":6109:6224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6230:6448   */\n    tag_56:\n        /* \"#utility.yul\":6321:6325   */\n      0x00\n        /* \"#utility.yul\":6359:6361   */\n      0x20\n        /* \"#utility.yul\":6348:6357   */\n      dup3\n        /* \"#utility.yul\":6344:6362   */\n      add\n        /* \"#utility.yul\":6336:6362   */\n      swap1\n      pop\n        /* \"#utility.yul\":6372:6441   */\n      tag_575\n        /* \"#utility.yul\":6438:6439   */\n      0x00\n        /* \"#utility.yul\":6427:6436   */\n      dup4\n        /* \"#utility.yul\":6423:6440   */\n      add\n        /* \"#utility.yul\":6414:6420   */\n      dup5\n        /* \"#utility.yul\":6372:6441   */\n      tag_451\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":6230:6448   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6454:6596   */\n    tag_452:\n        /* \"#utility.yul\":6520:6529   */\n      0x00\n        /* \"#utility.yul\":6553:6590   */\n      tag_577\n        /* \"#utility.yul\":6584:6589   */\n      dup3\n        /* \"#utility.yul\":6553:6590   */\n      tag_434\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":6540:6590   */\n      swap1\n      pop\n        /* \"#utility.yul\":6454:6596   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6602:6765   */\n    tag_453:\n        /* \"#utility.yul\":6705:6758   */\n      tag_579\n        /* \"#utility.yul\":6752:6757   */\n      dup2\n        /* \"#utility.yul\":6705:6758   */\n      tag_452\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":6700:6703   */\n      dup3\n        /* \"#utility.yul\":6693:6759   */\n      mstore\n        /* \"#utility.yul\":6602:6765   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6771:7356   */\n    tag_61:\n        /* \"#utility.yul\":6964:6968   */\n      0x00\n        /* \"#utility.yul\":7002:7005   */\n      0x80\n        /* \"#utility.yul\":6991:7000   */\n      dup3\n        /* \"#utility.yul\":6987:7006   */\n      add\n        /* \"#utility.yul\":6979:7006   */\n      swap1\n      pop\n        /* \"#utility.yul\":7016:7103   */\n      tag_581\n        /* \"#utility.yul\":7100:7101   */\n      0x00\n        /* \"#utility.yul\":7089:7098   */\n      dup4\n        /* \"#utility.yul\":7085:7102   */\n      add\n        /* \"#utility.yul\":7076:7082   */\n      dup8\n        /* \"#utility.yul\":7016:7103   */\n      tag_453\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":7113:7185   */\n      tag_582\n        /* \"#utility.yul\":7181:7183   */\n      0x20\n        /* \"#utility.yul\":7170:7179   */\n      dup4\n        /* \"#utility.yul\":7166:7184   */\n      add\n        /* \"#utility.yul\":7157:7163   */\n      dup7\n        /* \"#utility.yul\":7113:7185   */\n      tag_425\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":7195:7267   */\n      tag_583\n        /* \"#utility.yul\":7263:7265   */\n      0x40\n        /* \"#utility.yul\":7252:7261   */\n      dup4\n        /* \"#utility.yul\":7248:7266   */\n      add\n        /* \"#utility.yul\":7239:7245   */\n      dup6\n        /* \"#utility.yul\":7195:7267   */\n      tag_425\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":7277:7349   */\n      tag_584\n        /* \"#utility.yul\":7345:7347   */\n      0x60\n        /* \"#utility.yul\":7334:7343   */\n      dup4\n        /* \"#utility.yul\":7330:7348   */\n      add\n        /* \"#utility.yul\":7321:7327   */\n      dup5\n        /* \"#utility.yul\":7277:7349   */\n      tag_425\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":6771:7356   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7362:7474   */\n    tag_454:\n        /* \"#utility.yul\":7415:7422   */\n      0x00\n        /* \"#utility.yul\":7444:7468   */\n      tag_586\n        /* \"#utility.yul\":7462:7467   */\n      dup3\n        /* \"#utility.yul\":7444:7468   */\n      tag_437\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":7433:7468   */\n      swap1\n      pop\n        /* \"#utility.yul\":7362:7474   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7480:7634   */\n    tag_455:\n        /* \"#utility.yul\":7569:7609   */\n      tag_588\n        /* \"#utility.yul\":7603:7608   */\n      dup2\n        /* \"#utility.yul\":7569:7609   */\n      tag_454\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":7562:7567   */\n      dup2\n        /* \"#utility.yul\":7559:7610   */\n      eq\n        /* \"#utility.yul\":7549:7628   */\n      tag_589\n      jumpi\n        /* \"#utility.yul\":7624:7625   */\n      0x00\n        /* \"#utility.yul\":7621:7622   */\n      dup1\n        /* \"#utility.yul\":7614:7626   */\n      revert\n        /* \"#utility.yul\":7549:7628   */\n    tag_589:\n        /* \"#utility.yul\":7480:7634   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7640:7811   */\n    tag_456:\n        /* \"#utility.yul\":7702:7707   */\n      0x00\n        /* \"#utility.yul\":7740:7746   */\n      dup2\n        /* \"#utility.yul\":7727:7747   */\n      calldataload\n        /* \"#utility.yul\":7718:7747   */\n      swap1\n      pop\n        /* \"#utility.yul\":7756:7805   */\n      tag_591\n        /* \"#utility.yul\":7799:7804   */\n      dup2\n        /* \"#utility.yul\":7756:7805   */\n      tag_455\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":7640:7811   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7817:7907   */\n    tag_457:\n        /* \"#utility.yul\":7851:7858   */\n      0x00\n        /* \"#utility.yul\":7894:7899   */\n      dup2\n        /* \"#utility.yul\":7887:7900   */\n      iszero\n        /* \"#utility.yul\":7880:7901   */\n      iszero\n        /* \"#utility.yul\":7869:7901   */\n      swap1\n      pop\n        /* \"#utility.yul\":7817:7907   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7913:8029   */\n    tag_458:\n        /* \"#utility.yul\":7983:8004   */\n      tag_594\n        /* \"#utility.yul\":7998:8003   */\n      dup2\n        /* \"#utility.yul\":7983:8004   */\n      tag_457\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":7976:7981   */\n      dup2\n        /* \"#utility.yul\":7973:8005   */\n      eq\n        /* \"#utility.yul\":7963:8023   */\n      tag_595\n      jumpi\n        /* \"#utility.yul\":8019:8020   */\n      0x00\n        /* \"#utility.yul\":8016:8017   */\n      dup1\n        /* \"#utility.yul\":8009:8021   */\n      revert\n        /* \"#utility.yul\":7963:8023   */\n    tag_595:\n        /* \"#utility.yul\":7913:8029   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8035:8168   */\n    tag_459:\n        /* \"#utility.yul\":8078:8083   */\n      0x00\n        /* \"#utility.yul\":8116:8122   */\n      dup2\n        /* \"#utility.yul\":8103:8123   */\n      calldataload\n        /* \"#utility.yul\":8094:8123   */\n      swap1\n      pop\n        /* \"#utility.yul\":8132:8162   */\n      tag_597\n        /* \"#utility.yul\":8156:8161   */\n      dup2\n        /* \"#utility.yul\":8132:8162   */\n      tag_458\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":8035:8168   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8174:8819   */\n    tag_67:\n        /* \"#utility.yul\":8264:8270   */\n      0x00\n        /* \"#utility.yul\":8272:8278   */\n      dup1\n        /* \"#utility.yul\":8280:8286   */\n      0x00\n        /* \"#utility.yul\":8329:8331   */\n      0x60\n        /* \"#utility.yul\":8317:8326   */\n      dup5\n        /* \"#utility.yul\":8308:8315   */\n      dup7\n        /* \"#utility.yul\":8304:8327   */\n      sub\n        /* \"#utility.yul\":8300:8332   */\n      slt\n        /* \"#utility.yul\":8297:8416   */\n      iszero\n      tag_599\n      jumpi\n        /* \"#utility.yul\":8335:8414   */\n      tag_600\n      tag_427\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":8297:8416   */\n    tag_599:\n        /* \"#utility.yul\":8455:8456   */\n      0x00\n        /* \"#utility.yul\":8480:8533   */\n      tag_601\n        /* \"#utility.yul\":8525:8532   */\n      dup7\n        /* \"#utility.yul\":8516:8522   */\n      dup3\n        /* \"#utility.yul\":8505:8514   */\n      dup8\n        /* \"#utility.yul\":8501:8523   */\n      add\n        /* \"#utility.yul\":8480:8533   */\n      tag_430\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":8470:8533   */\n      swap4\n      pop\n        /* \"#utility.yul\":8426:8543   */\n      pop\n        /* \"#utility.yul\":8582:8584   */\n      0x20\n        /* \"#utility.yul\":8608:8677   */\n      tag_602\n        /* \"#utility.yul\":8669:8676   */\n      dup7\n        /* \"#utility.yul\":8660:8666   */\n      dup3\n        /* \"#utility.yul\":8649:8658   */\n      dup8\n        /* \"#utility.yul\":8645:8667   */\n      add\n        /* \"#utility.yul\":8608:8677   */\n      tag_456\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":8598:8677   */\n      swap3\n      pop\n        /* \"#utility.yul\":8553:8687   */\n      pop\n        /* \"#utility.yul\":8726:8728   */\n      0x40\n        /* \"#utility.yul\":8752:8802   */\n      tag_603\n        /* \"#utility.yul\":8794:8801   */\n      dup7\n        /* \"#utility.yul\":8785:8791   */\n      dup3\n        /* \"#utility.yul\":8774:8783   */\n      dup8\n        /* \"#utility.yul\":8770:8792   */\n      add\n        /* \"#utility.yul\":8752:8802   */\n      tag_459\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":8742:8802   */\n      swap2\n      pop\n        /* \"#utility.yul\":8697:8812   */\n      pop\n        /* \"#utility.yul\":8174:8819   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":8825:8942   */\n    tag_460:\n        /* \"#utility.yul\":8883:8890   */\n      0x00\n        /* \"#utility.yul\":8912:8936   */\n      tag_605\n        /* \"#utility.yul\":8930:8935   */\n      dup3\n        /* \"#utility.yul\":8912:8936   */\n      tag_437\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":8901:8936   */\n      swap1\n      pop\n        /* \"#utility.yul\":8825:8942   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8948:9112   */\n    tag_461:\n        /* \"#utility.yul\":9042:9087   */\n      tag_607\n        /* \"#utility.yul\":9081:9086   */\n      dup2\n        /* \"#utility.yul\":9042:9087   */\n      tag_460\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":9035:9040   */\n      dup2\n        /* \"#utility.yul\":9032:9088   */\n      eq\n        /* \"#utility.yul\":9022:9106   */\n      tag_608\n      jumpi\n        /* \"#utility.yul\":9102:9103   */\n      0x00\n        /* \"#utility.yul\":9099:9100   */\n      dup1\n        /* \"#utility.yul\":9092:9104   */\n      revert\n        /* \"#utility.yul\":9022:9106   */\n    tag_608:\n        /* \"#utility.yul\":8948:9112   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9118:9299   */\n    tag_462:\n        /* \"#utility.yul\":9185:9190   */\n      0x00\n        /* \"#utility.yul\":9223:9229   */\n      dup2\n        /* \"#utility.yul\":9210:9230   */\n      calldataload\n        /* \"#utility.yul\":9201:9230   */\n      swap1\n      pop\n        /* \"#utility.yul\":9239:9293   */\n      tag_610\n        /* \"#utility.yul\":9287:9292   */\n      dup2\n        /* \"#utility.yul\":9239:9293   */\n      tag_461\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":9118:9299   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9305:9676   */\n    tag_71:\n        /* \"#utility.yul\":9385:9391   */\n      0x00\n        /* \"#utility.yul\":9434:9436   */\n      0x20\n        /* \"#utility.yul\":9422:9431   */\n      dup3\n        /* \"#utility.yul\":9413:9420   */\n      dup5\n        /* \"#utility.yul\":9409:9432   */\n      sub\n        /* \"#utility.yul\":9405:9437   */\n      slt\n        /* \"#utility.yul\":9402:9521   */\n      iszero\n      tag_612\n      jumpi\n        /* \"#utility.yul\":9440:9519   */\n      tag_613\n      tag_427\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":9402:9521   */\n    tag_612:\n        /* \"#utility.yul\":9560:9561   */\n      0x00\n        /* \"#utility.yul\":9585:9659   */\n      tag_614\n        /* \"#utility.yul\":9651:9658   */\n      dup5\n        /* \"#utility.yul\":9642:9648   */\n      dup3\n        /* \"#utility.yul\":9631:9640   */\n      dup6\n        /* \"#utility.yul\":9627:9649   */\n      add\n        /* \"#utility.yul\":9585:9659   */\n      tag_462\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":9575:9659   */\n      swap2\n      pop\n        /* \"#utility.yul\":9531:9669   */\n      pop\n        /* \"#utility.yul\":9305:9676   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9682:10156   */\n    tag_75:\n        /* \"#utility.yul\":9750:9756   */\n      0x00\n        /* \"#utility.yul\":9758:9764   */\n      dup1\n        /* \"#utility.yul\":9807:9809   */\n      0x40\n        /* \"#utility.yul\":9795:9804   */\n      dup4\n        /* \"#utility.yul\":9786:9793   */\n      dup6\n        /* \"#utility.yul\":9782:9805   */\n      sub\n        /* \"#utility.yul\":9778:9810   */\n      slt\n        /* \"#utility.yul\":9775:9894   */\n      iszero\n      tag_616\n      jumpi\n        /* \"#utility.yul\":9813:9892   */\n      tag_617\n      tag_427\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":9775:9894   */\n    tag_616:\n        /* \"#utility.yul\":9933:9934   */\n      0x00\n        /* \"#utility.yul\":9958:10011   */\n      tag_618\n        /* \"#utility.yul\":10003:10010   */\n      dup6\n        /* \"#utility.yul\":9994:10000   */\n      dup3\n        /* \"#utility.yul\":9983:9992   */\n      dup7\n        /* \"#utility.yul\":9979:10001   */\n      add\n        /* \"#utility.yul\":9958:10011   */\n      tag_430\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":9948:10011   */\n      swap3\n      pop\n        /* \"#utility.yul\":9904:10021   */\n      pop\n        /* \"#utility.yul\":10060:10062   */\n      0x20\n        /* \"#utility.yul\":10086:10139   */\n      tag_619\n        /* \"#utility.yul\":10131:10138   */\n      dup6\n        /* \"#utility.yul\":10122:10128   */\n      dup3\n        /* \"#utility.yul\":10111:10120   */\n      dup7\n        /* \"#utility.yul\":10107:10129   */\n      add\n        /* \"#utility.yul\":10086:10139   */\n      tag_430\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":10076:10139   */\n      swap2\n      pop\n        /* \"#utility.yul\":10031:10149   */\n      pop\n        /* \"#utility.yul\":9682:10156   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10162:10636   */\n    tag_82:\n        /* \"#utility.yul\":10230:10236   */\n      0x00\n        /* \"#utility.yul\":10238:10244   */\n      dup1\n        /* \"#utility.yul\":10287:10289   */\n      0x40\n        /* \"#utility.yul\":10275:10284   */\n      dup4\n        /* \"#utility.yul\":10266:10273   */\n      dup6\n        /* \"#utility.yul\":10262:10285   */\n      sub\n        /* \"#utility.yul\":10258:10290   */\n      slt\n        /* \"#utility.yul\":10255:10374   */\n      iszero\n      tag_621\n      jumpi\n        /* \"#utility.yul\":10293:10372   */\n      tag_622\n      tag_427\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":10255:10374   */\n    tag_621:\n        /* \"#utility.yul\":10413:10414   */\n      0x00\n        /* \"#utility.yul\":10438:10491   */\n      tag_623\n        /* \"#utility.yul\":10483:10490   */\n      dup6\n        /* \"#utility.yul\":10474:10480   */\n      dup3\n        /* \"#utility.yul\":10463:10472   */\n      dup7\n        /* \"#utility.yul\":10459:10481   */\n      add\n        /* \"#utility.yul\":10438:10491   */\n      tag_430\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":10428:10491   */\n      swap3\n      pop\n        /* \"#utility.yul\":10384:10501   */\n      pop\n        /* \"#utility.yul\":10540:10542   */\n      0x20\n        /* \"#utility.yul\":10566:10619   */\n      tag_624\n        /* \"#utility.yul\":10611:10618   */\n      dup6\n        /* \"#utility.yul\":10602:10608   */\n      dup3\n        /* \"#utility.yul\":10591:10600   */\n      dup7\n        /* \"#utility.yul\":10587:10609   */\n      add\n        /* \"#utility.yul\":10566:10619   */\n      tag_439\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":10556:10619   */\n      swap2\n      pop\n        /* \"#utility.yul\":10511:10629   */\n      pop\n        /* \"#utility.yul\":10162:10636   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10642:11255   */\n    tag_95:\n        /* \"#utility.yul\":10716:10722   */\n      0x00\n        /* \"#utility.yul\":10724:10730   */\n      dup1\n        /* \"#utility.yul\":10732:10738   */\n      0x00\n        /* \"#utility.yul\":10781:10783   */\n      0x60\n        /* \"#utility.yul\":10769:10778   */\n      dup5\n        /* \"#utility.yul\":10760:10767   */\n      dup7\n        /* \"#utility.yul\":10756:10779   */\n      sub\n        /* \"#utility.yul\":10752:10784   */\n      slt\n        /* \"#utility.yul\":10749:10868   */\n      iszero\n      tag_626\n      jumpi\n        /* \"#utility.yul\":10787:10866   */\n      tag_627\n      tag_427\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":10749:10868   */\n    tag_626:\n        /* \"#utility.yul\":10907:10908   */\n      0x00\n        /* \"#utility.yul\":10932:10985   */\n      tag_628\n        /* \"#utility.yul\":10977:10984   */\n      dup7\n        /* \"#utility.yul\":10968:10974   */\n      dup3\n        /* \"#utility.yul\":10957:10966   */\n      dup8\n        /* \"#utility.yul\":10953:10975   */\n      add\n        /* \"#utility.yul\":10932:10985   */\n      tag_430\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":10922:10985   */\n      swap4\n      pop\n        /* \"#utility.yul\":10878:10995   */\n      pop\n        /* \"#utility.yul\":11034:11036   */\n      0x20\n        /* \"#utility.yul\":11060:11113   */\n      tag_629\n        /* \"#utility.yul\":11105:11112   */\n      dup7\n        /* \"#utility.yul\":11096:11102   */\n      dup3\n        /* \"#utility.yul\":11085:11094   */\n      dup8\n        /* \"#utility.yul\":11081:11103   */\n      add\n        /* \"#utility.yul\":11060:11113   */\n      tag_430\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":11050:11113   */\n      swap3\n      pop\n        /* \"#utility.yul\":11005:11123   */\n      pop\n        /* \"#utility.yul\":11162:11164   */\n      0x40\n        /* \"#utility.yul\":11188:11238   */\n      tag_630\n        /* \"#utility.yul\":11230:11237   */\n      dup7\n        /* \"#utility.yul\":11221:11227   */\n      dup3\n        /* \"#utility.yul\":11210:11219   */\n      dup8\n        /* \"#utility.yul\":11206:11228   */\n      add\n        /* \"#utility.yul\":11188:11238   */\n      tag_459\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":11178:11238   */\n      swap2\n      pop\n        /* \"#utility.yul\":11133:11248   */\n      pop\n        /* \"#utility.yul\":10642:11255   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":11261:11408   */\n    tag_463:\n        /* \"#utility.yul\":11332:11341   */\n      0x00\n        /* \"#utility.yul\":11365:11402   */\n      tag_632\n        /* \"#utility.yul\":11396:11401   */\n      dup3\n        /* \"#utility.yul\":11365:11402   */\n      tag_434\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":11352:11402   */\n      swap1\n      pop\n        /* \"#utility.yul\":11261:11408   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11414:11587   */\n    tag_464:\n        /* \"#utility.yul\":11522:11580   */\n      tag_634\n        /* \"#utility.yul\":11574:11579   */\n      dup2\n        /* \"#utility.yul\":11522:11580   */\n      tag_463\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":11517:11520   */\n      dup3\n        /* \"#utility.yul\":11510:11581   */\n      mstore\n        /* \"#utility.yul\":11414:11587   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11593:11857   */\n    tag_102:\n        /* \"#utility.yul\":11707:11711   */\n      0x00\n        /* \"#utility.yul\":11745:11747   */\n      0x20\n        /* \"#utility.yul\":11734:11743   */\n      dup3\n        /* \"#utility.yul\":11730:11748   */\n      add\n        /* \"#utility.yul\":11722:11748   */\n      swap1\n      pop\n        /* \"#utility.yul\":11758:11850   */\n      tag_636\n        /* \"#utility.yul\":11847:11848   */\n      0x00\n        /* \"#utility.yul\":11836:11845   */\n      dup4\n        /* \"#utility.yul\":11832:11849   */\n      add\n        /* \"#utility.yul\":11823:11829   */\n      dup5\n        /* \"#utility.yul\":11758:11850   */\n      tag_464\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":11593:11857   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11863:11981   */\n    tag_465:\n        /* \"#utility.yul\":11950:11974   */\n      tag_638\n        /* \"#utility.yul\":11968:11973   */\n      dup2\n        /* \"#utility.yul\":11950:11974   */\n      tag_437\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":11945:11948   */\n      dup3\n        /* \"#utility.yul\":11938:11975   */\n      mstore\n        /* \"#utility.yul\":11863:11981   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11987:12209   */\n    tag_109:\n        /* \"#utility.yul\":12080:12084   */\n      0x00\n        /* \"#utility.yul\":12118:12120   */\n      0x20\n        /* \"#utility.yul\":12107:12116   */\n      dup3\n        /* \"#utility.yul\":12103:12121   */\n      add\n        /* \"#utility.yul\":12095:12121   */\n      swap1\n      pop\n        /* \"#utility.yul\":12131:12202   */\n      tag_640\n        /* \"#utility.yul\":12199:12200   */\n      0x00\n        /* \"#utility.yul\":12188:12197   */\n      dup4\n        /* \"#utility.yul\":12184:12201   */\n      add\n        /* \"#utility.yul\":12175:12181   */\n      dup5\n        /* \"#utility.yul\":12131:12202   */\n      tag_465\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":11987:12209   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12215:12547   */\n    tag_118:\n        /* \"#utility.yul\":12336:12340   */\n      0x00\n        /* \"#utility.yul\":12374:12376   */\n      0x40\n        /* \"#utility.yul\":12363:12372   */\n      dup3\n        /* \"#utility.yul\":12359:12377   */\n      add\n        /* \"#utility.yul\":12351:12377   */\n      swap1\n      pop\n        /* \"#utility.yul\":12387:12458   */\n      tag_642\n        /* \"#utility.yul\":12455:12456   */\n      0x00\n        /* \"#utility.yul\":12444:12453   */\n      dup4\n        /* \"#utility.yul\":12440:12457   */\n      add\n        /* \"#utility.yul\":12431:12437   */\n      dup6\n        /* \"#utility.yul\":12387:12458   */\n      tag_425\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":12468:12540   */\n      tag_643\n        /* \"#utility.yul\":12536:12538   */\n      0x20\n        /* \"#utility.yul\":12525:12534   */\n      dup4\n        /* \"#utility.yul\":12521:12539   */\n      add\n        /* \"#utility.yul\":12512:12518   */\n      dup5\n        /* \"#utility.yul\":12468:12540   */\n      tag_425\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":12215:12547   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12553:12882   */\n    tag_127:\n        /* \"#utility.yul\":12612:12618   */\n      0x00\n        /* \"#utility.yul\":12661:12663   */\n      0x20\n        /* \"#utility.yul\":12649:12658   */\n      dup3\n        /* \"#utility.yul\":12640:12647   */\n      dup5\n        /* \"#utility.yul\":12636:12659   */\n      sub\n        /* \"#utility.yul\":12632:12664   */\n      slt\n        /* \"#utility.yul\":12629:12748   */\n      iszero\n      tag_645\n      jumpi\n        /* \"#utility.yul\":12667:12746   */\n      tag_646\n      tag_427\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":12629:12748   */\n    tag_645:\n        /* \"#utility.yul\":12787:12788   */\n      0x00\n        /* \"#utility.yul\":12812:12865   */\n      tag_647\n        /* \"#utility.yul\":12857:12864   */\n      dup5\n        /* \"#utility.yul\":12848:12854   */\n      dup3\n        /* \"#utility.yul\":12837:12846   */\n      dup6\n        /* \"#utility.yul\":12833:12855   */\n      add\n        /* \"#utility.yul\":12812:12865   */\n      tag_439\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":12802:12865   */\n      swap2\n      pop\n        /* \"#utility.yul\":12758:12875   */\n      pop\n        /* \"#utility.yul\":12553:12882   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12888:13002   */\n    tag_466:\n        /* \"#utility.yul\":12955:12961   */\n      0x00\n        /* \"#utility.yul\":12989:12994   */\n      dup2\n        /* \"#utility.yul\":12983:12995   */\n      mload\n        /* \"#utility.yul\":12973:12995   */\n      swap1\n      pop\n        /* \"#utility.yul\":12888:13002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13008:13192   */\n    tag_467:\n        /* \"#utility.yul\":13107:13118   */\n      0x00\n        /* \"#utility.yul\":13141:13147   */\n      dup3\n        /* \"#utility.yul\":13136:13139   */\n      dup3\n        /* \"#utility.yul\":13129:13148   */\n      mstore\n        /* \"#utility.yul\":13181:13185   */\n      0x20\n        /* \"#utility.yul\":13176:13179   */\n      dup3\n        /* \"#utility.yul\":13172:13186   */\n      add\n        /* \"#utility.yul\":13157:13186   */\n      swap1\n      pop\n        /* \"#utility.yul\":13008:13192   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13198:13330   */\n    tag_468:\n        /* \"#utility.yul\":13265:13269   */\n      0x00\n        /* \"#utility.yul\":13288:13291   */\n      dup2\n        /* \"#utility.yul\":13280:13291   */\n      swap1\n      pop\n        /* \"#utility.yul\":13318:13322   */\n      0x20\n        /* \"#utility.yul\":13313:13316   */\n      dup3\n        /* \"#utility.yul\":13309:13323   */\n      add\n        /* \"#utility.yul\":13301:13323   */\n      swap1\n      pop\n        /* \"#utility.yul\":13198:13330   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13336:13444   */\n    tag_469:\n        /* \"#utility.yul\":13413:13437   */\n      tag_652\n        /* \"#utility.yul\":13431:13436   */\n      dup2\n        /* \"#utility.yul\":13413:13437   */\n      tag_424\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":13408:13411   */\n      dup3\n        /* \"#utility.yul\":13401:13438   */\n      mstore\n        /* \"#utility.yul\":13336:13444   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13450:13629   */\n    tag_470:\n        /* \"#utility.yul\":13519:13529   */\n      0x00\n        /* \"#utility.yul\":13540:13586   */\n      tag_654\n        /* \"#utility.yul\":13582:13585   */\n      dup4\n        /* \"#utility.yul\":13574:13580   */\n      dup4\n        /* \"#utility.yul\":13540:13586   */\n      tag_469\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":13618:13622   */\n      0x20\n        /* \"#utility.yul\":13613:13616   */\n      dup4\n        /* \"#utility.yul\":13609:13623   */\n      add\n        /* \"#utility.yul\":13595:13623   */\n      swap1\n      pop\n        /* \"#utility.yul\":13450:13629   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13635:13748   */\n    tag_471:\n        /* \"#utility.yul\":13705:13709   */\n      0x00\n        /* \"#utility.yul\":13737:13741   */\n      0x20\n        /* \"#utility.yul\":13732:13735   */\n      dup3\n        /* \"#utility.yul\":13728:13742   */\n      add\n        /* \"#utility.yul\":13720:13742   */\n      swap1\n      pop\n        /* \"#utility.yul\":13635:13748   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13784:14516   */\n    tag_472:\n        /* \"#utility.yul\":13903:13906   */\n      0x00\n        /* \"#utility.yul\":13932:13986   */\n      tag_657\n        /* \"#utility.yul\":13980:13985   */\n      dup3\n        /* \"#utility.yul\":13932:13986   */\n      tag_466\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":14002:14088   */\n      tag_658\n        /* \"#utility.yul\":14081:14087   */\n      dup2\n        /* \"#utility.yul\":14076:14079   */\n      dup6\n        /* \"#utility.yul\":14002:14088   */\n      tag_467\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":13995:14088   */\n      swap4\n      pop\n        /* \"#utility.yul\":14112:14168   */\n      tag_659\n        /* \"#utility.yul\":14162:14167   */\n      dup4\n        /* \"#utility.yul\":14112:14168   */\n      tag_468\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":14191:14198   */\n      dup1\n        /* \"#utility.yul\":14222:14223   */\n      0x00\n        /* \"#utility.yul\":14207:14491   */\n    tag_660:\n        /* \"#utility.yul\":14232:14238   */\n      dup4\n        /* \"#utility.yul\":14229:14230   */\n      dup2\n        /* \"#utility.yul\":14226:14239   */\n      lt\n        /* \"#utility.yul\":14207:14491   */\n      iszero\n      tag_662\n      jumpi\n        /* \"#utility.yul\":14308:14314   */\n      dup2\n        /* \"#utility.yul\":14302:14315   */\n      mload\n        /* \"#utility.yul\":14335:14398   */\n      tag_663\n        /* \"#utility.yul\":14394:14397   */\n      dup9\n        /* \"#utility.yul\":14379:14392   */\n      dup3\n        /* \"#utility.yul\":14335:14398   */\n      tag_470\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":14328:14398   */\n      swap8\n      pop\n        /* \"#utility.yul\":14421:14481   */\n      tag_664\n        /* \"#utility.yul\":14474:14480   */\n      dup4\n        /* \"#utility.yul\":14421:14481   */\n      tag_471\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":14411:14481   */\n      swap3\n      pop\n        /* \"#utility.yul\":14267:14491   */\n      pop\n        /* \"#utility.yul\":14254:14255   */\n      0x01\n        /* \"#utility.yul\":14251:14252   */\n      dup2\n        /* \"#utility.yul\":14247:14256   */\n      add\n        /* \"#utility.yul\":14242:14256   */\n      swap1\n      pop\n        /* \"#utility.yul\":14207:14491   */\n      jump(tag_660)\n    tag_662:\n        /* \"#utility.yul\":14211:14225   */\n      pop\n        /* \"#utility.yul\":14507:14510   */\n      dup6\n        /* \"#utility.yul\":14500:14510   */\n      swap4\n      pop\n        /* \"#utility.yul\":13908:14516   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":13784:14516   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14522:14895   */\n    tag_136:\n        /* \"#utility.yul\":14665:14669   */\n      0x00\n        /* \"#utility.yul\":14703:14705   */\n      0x20\n        /* \"#utility.yul\":14692:14701   */\n      dup3\n        /* \"#utility.yul\":14688:14706   */\n      add\n        /* \"#utility.yul\":14680:14706   */\n      swap1\n      pop\n        /* \"#utility.yul\":14752:14761   */\n      dup2\n        /* \"#utility.yul\":14746:14750   */\n      dup2\n        /* \"#utility.yul\":14742:14762   */\n      sub\n        /* \"#utility.yul\":14738:14739   */\n      0x00\n        /* \"#utility.yul\":14727:14736   */\n      dup4\n        /* \"#utility.yul\":14723:14740   */\n      add\n        /* \"#utility.yul\":14716:14763   */\n      mstore\n        /* \"#utility.yul\":14780:14888   */\n      tag_666\n        /* \"#utility.yul\":14883:14887   */\n      dup2\n        /* \"#utility.yul\":14874:14880   */\n      dup5\n        /* \"#utility.yul\":14780:14888   */\n      tag_472\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":14772:14888   */\n      swap1\n      pop\n        /* \"#utility.yul\":14522:14895   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14901:15050   */\n    tag_473:\n        /* \"#utility.yul\":14974:14983   */\n      0x00\n        /* \"#utility.yul\":15007:15044   */\n      tag_668\n        /* \"#utility.yul\":15038:15043   */\n      dup3\n        /* \"#utility.yul\":15007:15044   */\n      tag_434\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":14994:15044   */\n      swap1\n      pop\n        /* \"#utility.yul\":14901:15050   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15056:15233   */\n    tag_474:\n        /* \"#utility.yul\":15166:15226   */\n      tag_670\n        /* \"#utility.yul\":15220:15225   */\n      dup2\n        /* \"#utility.yul\":15166:15226   */\n      tag_473\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":15161:15164   */\n      dup3\n        /* \"#utility.yul\":15154:15227   */\n      mstore\n        /* \"#utility.yul\":15056:15233   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15239:15507   */\n    tag_143:\n        /* \"#utility.yul\":15355:15359   */\n      0x00\n        /* \"#utility.yul\":15393:15395   */\n      0x20\n        /* \"#utility.yul\":15382:15391   */\n      dup3\n        /* \"#utility.yul\":15378:15396   */\n      add\n        /* \"#utility.yul\":15370:15396   */\n      swap1\n      pop\n        /* \"#utility.yul\":15406:15500   */\n      tag_672\n        /* \"#utility.yul\":15497:15498   */\n      0x00\n        /* \"#utility.yul\":15486:15495   */\n      dup4\n        /* \"#utility.yul\":15482:15499   */\n      add\n        /* \"#utility.yul\":15473:15479   */\n      dup5\n        /* \"#utility.yul\":15406:15500   */\n      tag_474\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":15239:15507   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15513:15682   */\n    tag_475:\n        /* \"#utility.yul\":15597:15608   */\n      0x00\n        /* \"#utility.yul\":15631:15637   */\n      dup3\n        /* \"#utility.yul\":15626:15629   */\n      dup3\n        /* \"#utility.yul\":15619:15638   */\n      mstore\n        /* \"#utility.yul\":15671:15675   */\n      0x20\n        /* \"#utility.yul\":15666:15669   */\n      dup3\n        /* \"#utility.yul\":15662:15676   */\n      add\n        /* \"#utility.yul\":15647:15676   */\n      swap1\n      pop\n        /* \"#utility.yul\":15513:15682   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15688:15870   */\n    tag_476:\n        /* \"#utility.yul\":15828:15862   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":15824:15825   */\n      0x00\n        /* \"#utility.yul\":15816:15822   */\n      dup3\n        /* \"#utility.yul\":15812:15826   */\n      add\n        /* \"#utility.yul\":15805:15863   */\n      mstore\n        /* \"#utility.yul\":15688:15870   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15876:16242   */\n    tag_477:\n        /* \"#utility.yul\":16018:16021   */\n      0x00\n        /* \"#utility.yul\":16039:16106   */\n      tag_676\n        /* \"#utility.yul\":16103:16105   */\n      0x20\n        /* \"#utility.yul\":16098:16101   */\n      dup4\n        /* \"#utility.yul\":16039:16106   */\n      tag_475\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":16032:16106   */\n      swap2\n      pop\n        /* \"#utility.yul\":16115:16208   */\n      tag_677\n        /* \"#utility.yul\":16204:16207   */\n      dup3\n        /* \"#utility.yul\":16115:16208   */\n      tag_476\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":16233:16235   */\n      0x20\n        /* \"#utility.yul\":16228:16231   */\n      dup3\n        /* \"#utility.yul\":16224:16236   */\n      add\n        /* \"#utility.yul\":16217:16236   */\n      swap1\n      pop\n        /* \"#utility.yul\":15876:16242   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16248:16667   */\n    tag_154:\n        /* \"#utility.yul\":16414:16418   */\n      0x00\n        /* \"#utility.yul\":16452:16454   */\n      0x20\n        /* \"#utility.yul\":16441:16450   */\n      dup3\n        /* \"#utility.yul\":16437:16455   */\n      add\n        /* \"#utility.yul\":16429:16455   */\n      swap1\n      pop\n        /* \"#utility.yul\":16501:16510   */\n      dup2\n        /* \"#utility.yul\":16495:16499   */\n      dup2\n        /* \"#utility.yul\":16491:16511   */\n      sub\n        /* \"#utility.yul\":16487:16488   */\n      0x00\n        /* \"#utility.yul\":16476:16485   */\n      dup4\n        /* \"#utility.yul\":16472:16489   */\n      add\n        /* \"#utility.yul\":16465:16512   */\n      mstore\n        /* \"#utility.yul\":16529:16660   */\n      tag_679\n        /* \"#utility.yul\":16655:16659   */\n      dup2\n        /* \"#utility.yul\":16529:16660   */\n      tag_477\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":16521:16660   */\n      swap1\n      pop\n        /* \"#utility.yul\":16248:16667   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16673:16853   */\n    tag_181:\n        /* \"#utility.yul\":16721:16798   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16718:16719   */\n      0x00\n        /* \"#utility.yul\":16711:16799   */\n      mstore\n        /* \"#utility.yul\":16818:16822   */\n      0x32\n        /* \"#utility.yul\":16815:16816   */\n      0x04\n        /* \"#utility.yul\":16808:16823   */\n      mstore\n        /* \"#utility.yul\":16842:16846   */\n      0x24\n        /* \"#utility.yul\":16839:16840   */\n      0x00\n        /* \"#utility.yul\":16832:16847   */\n      revert\n        /* \"#utility.yul\":16859:17039   */\n    tag_478:\n        /* \"#utility.yul\":16907:16984   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16904:16905   */\n      0x00\n        /* \"#utility.yul\":16897:16985   */\n      mstore\n        /* \"#utility.yul\":17004:17008   */\n      0x11\n        /* \"#utility.yul\":17001:17002   */\n      0x04\n        /* \"#utility.yul\":16994:17009   */\n      mstore\n        /* \"#utility.yul\":17028:17032   */\n      0x24\n        /* \"#utility.yul\":17025:17026   */\n      0x00\n        /* \"#utility.yul\":17018:17033   */\n      revert\n        /* \"#utility.yul\":17045:17278   */\n    tag_205:\n        /* \"#utility.yul\":17084:17087   */\n      0x00\n        /* \"#utility.yul\":17107:17131   */\n      tag_683\n        /* \"#utility.yul\":17125:17130   */\n      dup3\n        /* \"#utility.yul\":17107:17131   */\n      tag_424\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":17098:17131   */\n      swap2\n      pop\n        /* \"#utility.yul\":17153:17219   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":17146:17151   */\n      dup3\n        /* \"#utility.yul\":17143:17220   */\n      sub\n        /* \"#utility.yul\":17140:17243   */\n      tag_684\n      jumpi\n        /* \"#utility.yul\":17223:17241   */\n      tag_685\n      tag_478\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":17140:17243   */\n    tag_684:\n        /* \"#utility.yul\":17270:17271   */\n      0x01\n        /* \"#utility.yul\":17263:17268   */\n      dup3\n        /* \"#utility.yul\":17259:17272   */\n      add\n        /* \"#utility.yul\":17252:17272   */\n      swap1\n      pop\n        /* \"#utility.yul\":17045:17278   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17284:17463   */\n    tag_479:\n        /* \"#utility.yul\":17424:17455   */\n      0x596f7520617265206e6f74204f776e6572206f6620746f6b656e206964000000\n        /* \"#utility.yul\":17420:17421   */\n      0x00\n        /* \"#utility.yul\":17412:17418   */\n      dup3\n        /* \"#utility.yul\":17408:17422   */\n      add\n        /* \"#utility.yul\":17401:17456   */\n      mstore\n        /* \"#utility.yul\":17284:17463   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17469:17835   */\n    tag_480:\n        /* \"#utility.yul\":17611:17614   */\n      0x00\n        /* \"#utility.yul\":17632:17699   */\n      tag_688\n        /* \"#utility.yul\":17696:17698   */\n      0x1d\n        /* \"#utility.yul\":17691:17694   */\n      dup4\n        /* \"#utility.yul\":17632:17699   */\n      tag_475\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":17625:17699   */\n      swap2\n      pop\n        /* \"#utility.yul\":17708:17801   */\n      tag_689\n        /* \"#utility.yul\":17797:17800   */\n      dup3\n        /* \"#utility.yul\":17708:17801   */\n      tag_479\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":17826:17828   */\n      0x20\n        /* \"#utility.yul\":17821:17824   */\n      dup3\n        /* \"#utility.yul\":17817:17829   */\n      add\n        /* \"#utility.yul\":17810:17829   */\n      swap1\n      pop\n        /* \"#utility.yul\":17469:17835   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17841:18260   */\n    tag_208:\n        /* \"#utility.yul\":18007:18011   */\n      0x00\n        /* \"#utility.yul\":18045:18047   */\n      0x20\n        /* \"#utility.yul\":18034:18043   */\n      dup3\n        /* \"#utility.yul\":18030:18048   */\n      add\n        /* \"#utility.yul\":18022:18048   */\n      swap1\n      pop\n        /* \"#utility.yul\":18094:18103   */\n      dup2\n        /* \"#utility.yul\":18088:18092   */\n      dup2\n        /* \"#utility.yul\":18084:18104   */\n      sub\n        /* \"#utility.yul\":18080:18081   */\n      0x00\n        /* \"#utility.yul\":18069:18078   */\n      dup4\n        /* \"#utility.yul\":18065:18082   */\n      add\n        /* \"#utility.yul\":18058:18105   */\n      mstore\n        /* \"#utility.yul\":18122:18253   */\n      tag_691\n        /* \"#utility.yul\":18248:18252   */\n      dup2\n        /* \"#utility.yul\":18122:18253   */\n      tag_480\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":18114:18253   */\n      swap1\n      pop\n        /* \"#utility.yul\":17841:18260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18266:18434   */\n    tag_481:\n        /* \"#utility.yul\":18406:18426   */\n      0x77697468647261773a206e6f7420676f6f640000000000000000000000000000\n        /* \"#utility.yul\":18402:18403   */\n      0x00\n        /* \"#utility.yul\":18394:18400   */\n      dup3\n        /* \"#utility.yul\":18390:18404   */\n      add\n        /* \"#utility.yul\":18383:18427   */\n      mstore\n        /* \"#utility.yul\":18266:18434   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18440:18806   */\n    tag_482:\n        /* \"#utility.yul\":18582:18585   */\n      0x00\n        /* \"#utility.yul\":18603:18670   */\n      tag_694\n        /* \"#utility.yul\":18667:18669   */\n      0x12\n        /* \"#utility.yul\":18662:18665   */\n      dup4\n        /* \"#utility.yul\":18603:18670   */\n      tag_475\n      jump\t// in\n    tag_694:\n        /* \"#utility.yul\":18596:18670   */\n      swap2\n      pop\n        /* \"#utility.yul\":18679:18772   */\n      tag_695\n        /* \"#utility.yul\":18768:18771   */\n      dup3\n        /* \"#utility.yul\":18679:18772   */\n      tag_481\n      jump\t// in\n    tag_695:\n        /* \"#utility.yul\":18797:18799   */\n      0x20\n        /* \"#utility.yul\":18792:18795   */\n      dup3\n        /* \"#utility.yul\":18788:18800   */\n      add\n        /* \"#utility.yul\":18781:18800   */\n      swap1\n      pop\n        /* \"#utility.yul\":18440:18806   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18812:19231   */\n    tag_211:\n        /* \"#utility.yul\":18978:18982   */\n      0x00\n        /* \"#utility.yul\":19016:19018   */\n      0x20\n        /* \"#utility.yul\":19005:19014   */\n      dup3\n        /* \"#utility.yul\":19001:19019   */\n      add\n        /* \"#utility.yul\":18993:19019   */\n      swap1\n      pop\n        /* \"#utility.yul\":19065:19074   */\n      dup2\n        /* \"#utility.yul\":19059:19063   */\n      dup2\n        /* \"#utility.yul\":19055:19075   */\n      sub\n        /* \"#utility.yul\":19051:19052   */\n      0x00\n        /* \"#utility.yul\":19040:19049   */\n      dup4\n        /* \"#utility.yul\":19036:19053   */\n      add\n        /* \"#utility.yul\":19029:19076   */\n      mstore\n        /* \"#utility.yul\":19093:19224   */\n      tag_697\n        /* \"#utility.yul\":19219:19223   */\n      dup2\n        /* \"#utility.yul\":19093:19224   */\n      tag_482\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":19085:19224   */\n      swap1\n      pop\n        /* \"#utility.yul\":18812:19231   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19237:19679   */\n    tag_225:\n        /* \"#utility.yul\":19386:19390   */\n      0x00\n        /* \"#utility.yul\":19424:19426   */\n      0x60\n        /* \"#utility.yul\":19413:19422   */\n      dup3\n        /* \"#utility.yul\":19409:19427   */\n      add\n        /* \"#utility.yul\":19401:19427   */\n      swap1\n      pop\n        /* \"#utility.yul\":19437:19508   */\n      tag_699\n        /* \"#utility.yul\":19505:19506   */\n      0x00\n        /* \"#utility.yul\":19494:19503   */\n      dup4\n        /* \"#utility.yul\":19490:19507   */\n      add\n        /* \"#utility.yul\":19481:19487   */\n      dup7\n        /* \"#utility.yul\":19437:19508   */\n      tag_465\n      jump\t// in\n    tag_699:\n        /* \"#utility.yul\":19518:19590   */\n      tag_700\n        /* \"#utility.yul\":19586:19588   */\n      0x20\n        /* \"#utility.yul\":19575:19584   */\n      dup4\n        /* \"#utility.yul\":19571:19589   */\n      add\n        /* \"#utility.yul\":19562:19568   */\n      dup6\n        /* \"#utility.yul\":19518:19590   */\n      tag_465\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":19600:19672   */\n      tag_701\n        /* \"#utility.yul\":19668:19670   */\n      0x40\n        /* \"#utility.yul\":19657:19666   */\n      dup4\n        /* \"#utility.yul\":19653:19671   */\n      add\n        /* \"#utility.yul\":19644:19650   */\n      dup5\n        /* \"#utility.yul\":19600:19672   */\n      tag_425\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":19237:19679   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19685:19828   */\n    tag_483:\n        /* \"#utility.yul\":19742:19747   */\n      0x00\n        /* \"#utility.yul\":19773:19779   */\n      dup2\n        /* \"#utility.yul\":19767:19780   */\n      mload\n        /* \"#utility.yul\":19758:19780   */\n      swap1\n      pop\n        /* \"#utility.yul\":19789:19822   */\n      tag_703\n        /* \"#utility.yul\":19816:19821   */\n      dup2\n        /* \"#utility.yul\":19789:19822   */\n      tag_429\n      jump\t// in\n    tag_703:\n        /* \"#utility.yul\":19685:19828   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19834:20185   */\n    tag_238:\n        /* \"#utility.yul\":19904:19910   */\n      0x00\n        /* \"#utility.yul\":19953:19955   */\n      0x20\n        /* \"#utility.yul\":19941:19950   */\n      dup3\n        /* \"#utility.yul\":19932:19939   */\n      dup5\n        /* \"#utility.yul\":19928:19951   */\n      sub\n        /* \"#utility.yul\":19924:19956   */\n      slt\n        /* \"#utility.yul\":19921:20040   */\n      iszero\n      tag_705\n      jumpi\n        /* \"#utility.yul\":19959:20038   */\n      tag_706\n      tag_427\n      jump\t// in\n    tag_706:\n        /* \"#utility.yul\":19921:20040   */\n    tag_705:\n        /* \"#utility.yul\":20079:20080   */\n      0x00\n        /* \"#utility.yul\":20104:20168   */\n      tag_707\n        /* \"#utility.yul\":20160:20167   */\n      dup5\n        /* \"#utility.yul\":20151:20157   */\n      dup3\n        /* \"#utility.yul\":20140:20149   */\n      dup6\n        /* \"#utility.yul\":20136:20158   */\n      add\n        /* \"#utility.yul\":20104:20168   */\n      tag_483\n      jump\t// in\n    tag_707:\n        /* \"#utility.yul\":20094:20168   */\n      swap2\n      pop\n        /* \"#utility.yul\":20050:20178   */\n      pop\n        /* \"#utility.yul\":19834:20185   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20191:20523   */\n    tag_266:\n        /* \"#utility.yul\":20312:20316   */\n      0x00\n        /* \"#utility.yul\":20350:20352   */\n      0x40\n        /* \"#utility.yul\":20339:20348   */\n      dup3\n        /* \"#utility.yul\":20335:20353   */\n      add\n        /* \"#utility.yul\":20327:20353   */\n      swap1\n      pop\n        /* \"#utility.yul\":20363:20434   */\n      tag_709\n        /* \"#utility.yul\":20431:20432   */\n      0x00\n        /* \"#utility.yul\":20420:20429   */\n      dup4\n        /* \"#utility.yul\":20416:20433   */\n      add\n        /* \"#utility.yul\":20407:20413   */\n      dup6\n        /* \"#utility.yul\":20363:20434   */\n      tag_465\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":20444:20516   */\n      tag_710\n        /* \"#utility.yul\":20512:20514   */\n      0x20\n        /* \"#utility.yul\":20501:20510   */\n      dup4\n        /* \"#utility.yul\":20497:20515   */\n      add\n        /* \"#utility.yul\":20488:20494   */\n      dup5\n        /* \"#utility.yul\":20444:20516   */\n      tag_425\n      jump\t// in\n    tag_710:\n        /* \"#utility.yul\":20191:20523   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20529:20666   */\n    tag_484:\n        /* \"#utility.yul\":20583:20588   */\n      0x00\n        /* \"#utility.yul\":20614:20620   */\n      dup2\n        /* \"#utility.yul\":20608:20621   */\n      mload\n        /* \"#utility.yul\":20599:20621   */\n      swap1\n      pop\n        /* \"#utility.yul\":20630:20660   */\n      tag_712\n        /* \"#utility.yul\":20654:20659   */\n      dup2\n        /* \"#utility.yul\":20630:20660   */\n      tag_458\n      jump\t// in\n    tag_712:\n        /* \"#utility.yul\":20529:20666   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20672:21017   */\n    tag_270:\n        /* \"#utility.yul\":20739:20745   */\n      0x00\n        /* \"#utility.yul\":20788:20790   */\n      0x20\n        /* \"#utility.yul\":20776:20785   */\n      dup3\n        /* \"#utility.yul\":20767:20774   */\n      dup5\n        /* \"#utility.yul\":20763:20786   */\n      sub\n        /* \"#utility.yul\":20759:20791   */\n      slt\n        /* \"#utility.yul\":20756:20875   */\n      iszero\n      tag_714\n      jumpi\n        /* \"#utility.yul\":20794:20873   */\n      tag_715\n      tag_427\n      jump\t// in\n    tag_715:\n        /* \"#utility.yul\":20756:20875   */\n    tag_714:\n        /* \"#utility.yul\":20914:20915   */\n      0x00\n        /* \"#utility.yul\":20939:21000   */\n      tag_716\n        /* \"#utility.yul\":20992:20999   */\n      dup5\n        /* \"#utility.yul\":20983:20989   */\n      dup3\n        /* \"#utility.yul\":20972:20981   */\n      dup6\n        /* \"#utility.yul\":20968:20990   */\n      add\n        /* \"#utility.yul\":20939:21000   */\n      tag_484\n      jump\t// in\n    tag_716:\n        /* \"#utility.yul\":20929:21000   */\n      swap2\n      pop\n        /* \"#utility.yul\":20885:21010   */\n      pop\n        /* \"#utility.yul\":20672:21017   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21023:21187   */\n    tag_485:\n        /* \"#utility.yul\":21163:21179   */\n      0x416d6f756e74206973207a65726f000000000000000000000000000000000000\n        /* \"#utility.yul\":21159:21160   */\n      0x00\n        /* \"#utility.yul\":21151:21157   */\n      dup3\n        /* \"#utility.yul\":21147:21161   */\n      add\n        /* \"#utility.yul\":21140:21180   */\n      mstore\n        /* \"#utility.yul\":21023:21187   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21193:21559   */\n    tag_486:\n        /* \"#utility.yul\":21335:21338   */\n      0x00\n        /* \"#utility.yul\":21356:21423   */\n      tag_719\n        /* \"#utility.yul\":21420:21422   */\n      0x0e\n        /* \"#utility.yul\":21415:21418   */\n      dup4\n        /* \"#utility.yul\":21356:21423   */\n      tag_475\n      jump\t// in\n    tag_719:\n        /* \"#utility.yul\":21349:21423   */\n      swap2\n      pop\n        /* \"#utility.yul\":21432:21525   */\n      tag_720\n        /* \"#utility.yul\":21521:21524   */\n      dup3\n        /* \"#utility.yul\":21432:21525   */\n      tag_485\n      jump\t// in\n    tag_720:\n        /* \"#utility.yul\":21550:21552   */\n      0x20\n        /* \"#utility.yul\":21545:21548   */\n      dup3\n        /* \"#utility.yul\":21541:21553   */\n      add\n        /* \"#utility.yul\":21534:21553   */\n      swap1\n      pop\n        /* \"#utility.yul\":21193:21559   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21565:21984   */\n    tag_324:\n        /* \"#utility.yul\":21731:21735   */\n      0x00\n        /* \"#utility.yul\":21769:21771   */\n      0x20\n        /* \"#utility.yul\":21758:21767   */\n      dup3\n        /* \"#utility.yul\":21754:21772   */\n      add\n        /* \"#utility.yul\":21746:21772   */\n      swap1\n      pop\n        /* \"#utility.yul\":21818:21827   */\n      dup2\n        /* \"#utility.yul\":21812:21816   */\n      dup2\n        /* \"#utility.yul\":21808:21828   */\n      sub\n        /* \"#utility.yul\":21804:21805   */\n      0x00\n        /* \"#utility.yul\":21793:21802   */\n      dup4\n        /* \"#utility.yul\":21789:21806   */\n      add\n        /* \"#utility.yul\":21782:21829   */\n      mstore\n        /* \"#utility.yul\":21846:21977   */\n      tag_722\n        /* \"#utility.yul\":21972:21976   */\n      dup2\n        /* \"#utility.yul\":21846:21977   */\n      tag_486\n      jump\t// in\n    tag_722:\n        /* \"#utility.yul\":21838:21977   */\n      swap1\n      pop\n        /* \"#utility.yul\":21565:21984   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21990:22322   */\n    tag_330:\n        /* \"#utility.yul\":22111:22115   */\n      0x00\n        /* \"#utility.yul\":22149:22151   */\n      0x40\n        /* \"#utility.yul\":22138:22147   */\n      dup3\n        /* \"#utility.yul\":22134:22152   */\n      add\n        /* \"#utility.yul\":22126:22152   */\n      swap1\n      pop\n        /* \"#utility.yul\":22162:22233   */\n      tag_724\n        /* \"#utility.yul\":22230:22231   */\n      0x00\n        /* \"#utility.yul\":22219:22228   */\n      dup4\n        /* \"#utility.yul\":22215:22232   */\n      add\n        /* \"#utility.yul\":22206:22212   */\n      dup6\n        /* \"#utility.yul\":22162:22233   */\n      tag_425\n      jump\t// in\n    tag_724:\n        /* \"#utility.yul\":22243:22315   */\n      tag_725\n        /* \"#utility.yul\":22311:22313   */\n      0x20\n        /* \"#utility.yul\":22300:22309   */\n      dup4\n        /* \"#utility.yul\":22296:22314   */\n      add\n        /* \"#utility.yul\":22287:22293   */\n      dup5\n        /* \"#utility.yul\":22243:22315   */\n      tag_465\n      jump\t// in\n    tag_725:\n        /* \"#utility.yul\":21990:22322   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22328:22553   */\n    tag_487:\n        /* \"#utility.yul\":22468:22502   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":22464:22465   */\n      0x00\n        /* \"#utility.yul\":22456:22462   */\n      dup3\n        /* \"#utility.yul\":22452:22466   */\n      add\n        /* \"#utility.yul\":22445:22503   */\n      mstore\n        /* \"#utility.yul\":22537:22545   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22532:22534   */\n      0x20\n        /* \"#utility.yul\":22524:22530   */\n      dup3\n        /* \"#utility.yul\":22520:22535   */\n      add\n        /* \"#utility.yul\":22513:22546   */\n      mstore\n        /* \"#utility.yul\":22328:22553   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22559:22925   */\n    tag_488:\n        /* \"#utility.yul\":22701:22704   */\n      0x00\n        /* \"#utility.yul\":22722:22789   */\n      tag_728\n        /* \"#utility.yul\":22786:22788   */\n      0x26\n        /* \"#utility.yul\":22781:22784   */\n      dup4\n        /* \"#utility.yul\":22722:22789   */\n      tag_475\n      jump\t// in\n    tag_728:\n        /* \"#utility.yul\":22715:22789   */\n      swap2\n      pop\n        /* \"#utility.yul\":22798:22891   */\n      tag_729\n        /* \"#utility.yul\":22887:22890   */\n      dup3\n        /* \"#utility.yul\":22798:22891   */\n      tag_487\n      jump\t// in\n    tag_729:\n        /* \"#utility.yul\":22916:22918   */\n      0x40\n        /* \"#utility.yul\":22911:22914   */\n      dup3\n        /* \"#utility.yul\":22907:22919   */\n      add\n        /* \"#utility.yul\":22900:22919   */\n      swap1\n      pop\n        /* \"#utility.yul\":22559:22925   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22931:23350   */\n    tag_374:\n        /* \"#utility.yul\":23097:23101   */\n      0x00\n        /* \"#utility.yul\":23135:23137   */\n      0x20\n        /* \"#utility.yul\":23124:23133   */\n      dup3\n        /* \"#utility.yul\":23120:23138   */\n      add\n        /* \"#utility.yul\":23112:23138   */\n      swap1\n      pop\n        /* \"#utility.yul\":23184:23193   */\n      dup2\n        /* \"#utility.yul\":23178:23182   */\n      dup2\n        /* \"#utility.yul\":23174:23194   */\n      sub\n        /* \"#utility.yul\":23170:23171   */\n      0x00\n        /* \"#utility.yul\":23159:23168   */\n      dup4\n        /* \"#utility.yul\":23155:23172   */\n      add\n        /* \"#utility.yul\":23148:23195   */\n      mstore\n        /* \"#utility.yul\":23212:23343   */\n      tag_731\n        /* \"#utility.yul\":23338:23342   */\n      dup2\n        /* \"#utility.yul\":23212:23343   */\n      tag_488\n      jump\t// in\n    tag_731:\n        /* \"#utility.yul\":23204:23343   */\n      swap1\n      pop\n        /* \"#utility.yul\":22931:23350   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23356:23661   */\n    tag_379:\n        /* \"#utility.yul\":23396:23399   */\n      0x00\n        /* \"#utility.yul\":23415:23435   */\n      tag_733\n        /* \"#utility.yul\":23433:23434   */\n      dup3\n        /* \"#utility.yul\":23415:23435   */\n      tag_424\n      jump\t// in\n    tag_733:\n        /* \"#utility.yul\":23410:23435   */\n      swap2\n      pop\n        /* \"#utility.yul\":23449:23469   */\n      tag_734\n        /* \"#utility.yul\":23467:23468   */\n      dup4\n        /* \"#utility.yul\":23449:23469   */\n      tag_424\n      jump\t// in\n    tag_734:\n        /* \"#utility.yul\":23444:23469   */\n      swap3\n      pop\n        /* \"#utility.yul\":23603:23604   */\n      dup3\n        /* \"#utility.yul\":23535:23601   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":23531:23605   */\n      sub\n        /* \"#utility.yul\":23528:23529   */\n      dup3\n        /* \"#utility.yul\":23525:23606   */\n      gt\n        /* \"#utility.yul\":23522:23629   */\n      iszero\n      tag_735\n      jumpi\n        /* \"#utility.yul\":23609:23627   */\n      tag_736\n      tag_478\n      jump\t// in\n    tag_736:\n        /* \"#utility.yul\":23522:23629   */\n    tag_735:\n        /* \"#utility.yul\":23653:23654   */\n      dup3\n        /* \"#utility.yul\":23650:23651   */\n      dup3\n        /* \"#utility.yul\":23646:23655   */\n      add\n        /* \"#utility.yul\":23639:23655   */\n      swap1\n      pop\n        /* \"#utility.yul\":23356:23661   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23667:23844   */\n    tag_489:\n        /* \"#utility.yul\":23807:23836   */\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n        /* \"#utility.yul\":23803:23804   */\n      0x00\n        /* \"#utility.yul\":23795:23801   */\n      dup3\n        /* \"#utility.yul\":23791:23805   */\n      add\n        /* \"#utility.yul\":23784:23837   */\n      mstore\n        /* \"#utility.yul\":23667:23844   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23850:24216   */\n    tag_490:\n        /* \"#utility.yul\":23992:23995   */\n      0x00\n        /* \"#utility.yul\":24013:24080   */\n      tag_739\n        /* \"#utility.yul\":24077:24079   */\n      0x1b\n        /* \"#utility.yul\":24072:24075   */\n      dup4\n        /* \"#utility.yul\":24013:24080   */\n      tag_475\n      jump\t// in\n    tag_739:\n        /* \"#utility.yul\":24006:24080   */\n      swap2\n      pop\n        /* \"#utility.yul\":24089:24182   */\n      tag_740\n        /* \"#utility.yul\":24178:24181   */\n      dup3\n        /* \"#utility.yul\":24089:24182   */\n      tag_489\n      jump\t// in\n    tag_740:\n        /* \"#utility.yul\":24207:24209   */\n      0x20\n        /* \"#utility.yul\":24202:24205   */\n      dup3\n        /* \"#utility.yul\":24198:24210   */\n      add\n        /* \"#utility.yul\":24191:24210   */\n      swap1\n      pop\n        /* \"#utility.yul\":23850:24216   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24222:24641   */\n    tag_382:\n        /* \"#utility.yul\":24388:24392   */\n      0x00\n        /* \"#utility.yul\":24426:24428   */\n      0x20\n        /* \"#utility.yul\":24415:24424   */\n      dup3\n        /* \"#utility.yul\":24411:24429   */\n      add\n        /* \"#utility.yul\":24403:24429   */\n      swap1\n      pop\n        /* \"#utility.yul\":24475:24484   */\n      dup2\n        /* \"#utility.yul\":24469:24473   */\n      dup2\n        /* \"#utility.yul\":24465:24485   */\n      sub\n        /* \"#utility.yul\":24461:24462   */\n      0x00\n        /* \"#utility.yul\":24450:24459   */\n      dup4\n        /* \"#utility.yul\":24446:24463   */\n      add\n        /* \"#utility.yul\":24439:24486   */\n      mstore\n        /* \"#utility.yul\":24503:24634   */\n      tag_742\n        /* \"#utility.yul\":24629:24633   */\n      dup2\n        /* \"#utility.yul\":24503:24634   */\n      tag_490\n      jump\t// in\n    tag_742:\n        /* \"#utility.yul\":24495:24634   */\n      swap1\n      pop\n        /* \"#utility.yul\":24222:24641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24647:24995   */\n    tag_386:\n        /* \"#utility.yul\":24687:24694   */\n      0x00\n        /* \"#utility.yul\":24710:24730   */\n      tag_744\n        /* \"#utility.yul\":24728:24729   */\n      dup3\n        /* \"#utility.yul\":24710:24730   */\n      tag_424\n      jump\t// in\n    tag_744:\n        /* \"#utility.yul\":24705:24730   */\n      swap2\n      pop\n        /* \"#utility.yul\":24744:24764   */\n      tag_745\n        /* \"#utility.yul\":24762:24763   */\n      dup4\n        /* \"#utility.yul\":24744:24764   */\n      tag_424\n      jump\t// in\n    tag_745:\n        /* \"#utility.yul\":24739:24764   */\n      swap3\n      pop\n        /* \"#utility.yul\":24932:24933   */\n      dup2\n        /* \"#utility.yul\":24864:24930   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":24860:24934   */\n      div\n        /* \"#utility.yul\":24857:24858   */\n      dup4\n        /* \"#utility.yul\":24854:24935   */\n      gt\n        /* \"#utility.yul\":24849:24850   */\n      dup3\n        /* \"#utility.yul\":24842:24851   */\n      iszero\n        /* \"#utility.yul\":24835:24852   */\n      iszero\n        /* \"#utility.yul\":24831:24936   */\n      and\n        /* \"#utility.yul\":24828:24959   */\n      iszero\n      tag_746\n      jumpi\n        /* \"#utility.yul\":24939:24957   */\n      tag_747\n      tag_478\n      jump\t// in\n    tag_747:\n        /* \"#utility.yul\":24828:24959   */\n    tag_746:\n        /* \"#utility.yul\":24987:24988   */\n      dup3\n        /* \"#utility.yul\":24984:24985   */\n      dup3\n        /* \"#utility.yul\":24980:24989   */\n      mul\n        /* \"#utility.yul\":24969:24989   */\n      swap1\n      pop\n        /* \"#utility.yul\":24647:24995   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25001:25181   */\n    tag_491:\n        /* \"#utility.yul\":25049:25126   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":25046:25047   */\n      0x00\n        /* \"#utility.yul\":25039:25127   */\n      mstore\n        /* \"#utility.yul\":25146:25150   */\n      0x12\n        /* \"#utility.yul\":25143:25144   */\n      0x04\n        /* \"#utility.yul\":25136:25151   */\n      mstore\n        /* \"#utility.yul\":25170:25174   */\n      0x24\n        /* \"#utility.yul\":25167:25168   */\n      0x00\n        /* \"#utility.yul\":25160:25175   */\n      revert\n        /* \"#utility.yul\":25187:25372   */\n    tag_388:\n        /* \"#utility.yul\":25227:25228   */\n      0x00\n        /* \"#utility.yul\":25244:25264   */\n      tag_750\n        /* \"#utility.yul\":25262:25263   */\n      dup3\n        /* \"#utility.yul\":25244:25264   */\n      tag_424\n      jump\t// in\n    tag_750:\n        /* \"#utility.yul\":25239:25264   */\n      swap2\n      pop\n        /* \"#utility.yul\":25278:25298   */\n      tag_751\n        /* \"#utility.yul\":25296:25297   */\n      dup4\n        /* \"#utility.yul\":25278:25298   */\n      tag_424\n      jump\t// in\n    tag_751:\n        /* \"#utility.yul\":25273:25298   */\n      swap3\n      pop\n        /* \"#utility.yul\":25317:25318   */\n      dup3\n        /* \"#utility.yul\":25307:25342   */\n      tag_752\n      jumpi\n        /* \"#utility.yul\":25322:25340   */\n      tag_753\n      tag_491\n      jump\t// in\n    tag_753:\n        /* \"#utility.yul\":25307:25342   */\n    tag_752:\n        /* \"#utility.yul\":25364:25365   */\n      dup3\n        /* \"#utility.yul\":25361:25362   */\n      dup3\n        /* \"#utility.yul\":25357:25366   */\n      div\n        /* \"#utility.yul\":25352:25366   */\n      swap1\n      pop\n        /* \"#utility.yul\":25187:25372   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25378:25598   */\n    tag_492:\n        /* \"#utility.yul\":25518:25552   */\n      0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f\n        /* \"#utility.yul\":25514:25515   */\n      0x00\n        /* \"#utility.yul\":25506:25512   */\n      dup3\n        /* \"#utility.yul\":25502:25516   */\n      add\n        /* \"#utility.yul\":25495:25553   */\n      mstore\n        /* \"#utility.yul\":25587:25590   */\n      0x7700000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":25582:25584   */\n      0x20\n        /* \"#utility.yul\":25574:25580   */\n      dup3\n        /* \"#utility.yul\":25570:25585   */\n      add\n        /* \"#utility.yul\":25563:25591   */\n      mstore\n        /* \"#utility.yul\":25378:25598   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25604:25970   */\n    tag_493:\n        /* \"#utility.yul\":25746:25749   */\n      0x00\n        /* \"#utility.yul\":25767:25834   */\n      tag_756\n        /* \"#utility.yul\":25831:25833   */\n      0x21\n        /* \"#utility.yul\":25826:25829   */\n      dup4\n        /* \"#utility.yul\":25767:25834   */\n      tag_475\n      jump\t// in\n    tag_756:\n        /* \"#utility.yul\":25760:25834   */\n      swap2\n      pop\n        /* \"#utility.yul\":25843:25936   */\n      tag_757\n        /* \"#utility.yul\":25932:25935   */\n      dup3\n        /* \"#utility.yul\":25843:25936   */\n      tag_492\n      jump\t// in\n    tag_757:\n        /* \"#utility.yul\":25961:25963   */\n      0x40\n        /* \"#utility.yul\":25956:25959   */\n      dup3\n        /* \"#utility.yul\":25952:25964   */\n      add\n        /* \"#utility.yul\":25945:25964   */\n      swap1\n      pop\n        /* \"#utility.yul\":25604:25970   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25976:26395   */\n    tag_391:\n        /* \"#utility.yul\":26142:26146   */\n      0x00\n        /* \"#utility.yul\":26180:26182   */\n      0x20\n        /* \"#utility.yul\":26169:26178   */\n      dup3\n        /* \"#utility.yul\":26165:26183   */\n      add\n        /* \"#utility.yul\":26157:26183   */\n      swap1\n      pop\n        /* \"#utility.yul\":26229:26238   */\n      dup2\n        /* \"#utility.yul\":26223:26227   */\n      dup2\n        /* \"#utility.yul\":26219:26239   */\n      sub\n        /* \"#utility.yul\":26215:26216   */\n      0x00\n        /* \"#utility.yul\":26204:26213   */\n      dup4\n        /* \"#utility.yul\":26200:26217   */\n      add\n        /* \"#utility.yul\":26193:26240   */\n      mstore\n        /* \"#utility.yul\":26257:26388   */\n      tag_759\n        /* \"#utility.yul\":26383:26387   */\n      dup2\n        /* \"#utility.yul\":26257:26388   */\n      tag_493\n      jump\t// in\n    tag_759:\n        /* \"#utility.yul\":26249:26388   */\n      swap1\n      pop\n        /* \"#utility.yul\":25976:26395   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26401:26500   */\n    tag_494:\n        /* \"#utility.yul\":26453:26459   */\n      0x00\n        /* \"#utility.yul\":26487:26492   */\n      dup2\n        /* \"#utility.yul\":26481:26493   */\n      mload\n        /* \"#utility.yul\":26471:26493   */\n      swap1\n      pop\n        /* \"#utility.yul\":26401:26500   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26506:26813   */\n    tag_495:\n        /* \"#utility.yul\":26574:26575   */\n      0x00\n        /* \"#utility.yul\":26584:26697   */\n    tag_762:\n        /* \"#utility.yul\":26598:26604   */\n      dup4\n        /* \"#utility.yul\":26595:26596   */\n      dup2\n        /* \"#utility.yul\":26592:26605   */\n      lt\n        /* \"#utility.yul\":26584:26697   */\n      iszero\n      tag_764\n      jumpi\n        /* \"#utility.yul\":26683:26684   */\n      dup1\n        /* \"#utility.yul\":26678:26681   */\n      dup3\n        /* \"#utility.yul\":26674:26685   */\n      add\n        /* \"#utility.yul\":26668:26686   */\n      mload\n        /* \"#utility.yul\":26664:26665   */\n      dup2\n        /* \"#utility.yul\":26659:26662   */\n      dup5\n        /* \"#utility.yul\":26655:26666   */\n      add\n        /* \"#utility.yul\":26648:26687   */\n      mstore\n        /* \"#utility.yul\":26620:26622   */\n      0x20\n        /* \"#utility.yul\":26617:26618   */\n      dup2\n        /* \"#utility.yul\":26613:26623   */\n      add\n        /* \"#utility.yul\":26608:26623   */\n      swap1\n      pop\n        /* \"#utility.yul\":26584:26697   */\n      jump(tag_762)\n    tag_764:\n        /* \"#utility.yul\":26715:26721   */\n      dup4\n        /* \"#utility.yul\":26712:26713   */\n      dup2\n        /* \"#utility.yul\":26709:26722   */\n      gt\n        /* \"#utility.yul\":26706:26807   */\n      iszero\n      tag_765\n      jumpi\n        /* \"#utility.yul\":26795:26796   */\n      0x00\n        /* \"#utility.yul\":26786:26792   */\n      dup5\n        /* \"#utility.yul\":26781:26784   */\n      dup5\n        /* \"#utility.yul\":26777:26793   */\n      add\n        /* \"#utility.yul\":26770:26797   */\n      mstore\n        /* \"#utility.yul\":26706:26807   */\n    tag_765:\n        /* \"#utility.yul\":26555:26813   */\n      pop\n        /* \"#utility.yul\":26506:26813   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26819:27183   */\n    tag_496:\n        /* \"#utility.yul\":26907:26910   */\n      0x00\n        /* \"#utility.yul\":26935:26974   */\n      tag_767\n        /* \"#utility.yul\":26968:26973   */\n      dup3\n        /* \"#utility.yul\":26935:26974   */\n      tag_494\n      jump\t// in\n    tag_767:\n        /* \"#utility.yul\":26990:27061   */\n      tag_768\n        /* \"#utility.yul\":27054:27060   */\n      dup2\n        /* \"#utility.yul\":27049:27052   */\n      dup6\n        /* \"#utility.yul\":26990:27061   */\n      tag_475\n      jump\t// in\n    tag_768:\n        /* \"#utility.yul\":26983:27061   */\n      swap4\n      pop\n        /* \"#utility.yul\":27070:27122   */\n      tag_769\n        /* \"#utility.yul\":27115:27121   */\n      dup2\n        /* \"#utility.yul\":27110:27113   */\n      dup6\n        /* \"#utility.yul\":27103:27107   */\n      0x20\n        /* \"#utility.yul\":27096:27101   */\n      dup7\n        /* \"#utility.yul\":27092:27108   */\n      add\n        /* \"#utility.yul\":27070:27122   */\n      tag_495\n      jump\t// in\n    tag_769:\n        /* \"#utility.yul\":27147:27176   */\n      tag_770\n        /* \"#utility.yul\":27169:27175   */\n      dup2\n        /* \"#utility.yul\":27147:27176   */\n      tag_442\n      jump\t// in\n    tag_770:\n        /* \"#utility.yul\":27142:27145   */\n      dup5\n        /* \"#utility.yul\":27138:27177   */\n      add\n        /* \"#utility.yul\":27131:27177   */\n      swap2\n      pop\n        /* \"#utility.yul\":26911:27183   */\n      pop\n        /* \"#utility.yul\":26819:27183   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27189:27502   */\n    tag_417:\n        /* \"#utility.yul\":27302:27306   */\n      0x00\n        /* \"#utility.yul\":27340:27342   */\n      0x20\n        /* \"#utility.yul\":27329:27338   */\n      dup3\n        /* \"#utility.yul\":27325:27343   */\n      add\n        /* \"#utility.yul\":27317:27343   */\n      swap1\n      pop\n        /* \"#utility.yul\":27389:27398   */\n      dup2\n        /* \"#utility.yul\":27383:27387   */\n      dup2\n        /* \"#utility.yul\":27379:27399   */\n      sub\n        /* \"#utility.yul\":27375:27376   */\n      0x00\n        /* \"#utility.yul\":27364:27373   */\n      dup4\n        /* \"#utility.yul\":27360:27377   */\n      add\n        /* \"#utility.yul\":27353:27400   */\n      mstore\n        /* \"#utility.yul\":27417:27495   */\n      tag_772\n        /* \"#utility.yul\":27490:27494   */\n      dup2\n        /* \"#utility.yul\":27481:27487   */\n      dup5\n        /* \"#utility.yul\":27417:27495   */\n      tag_496\n      jump\t// in\n    tag_772:\n        /* \"#utility.yul\":27409:27495   */\n      swap1\n      pop\n        /* \"#utility.yul\":27189:27502   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27508:27699   */\n    tag_423:\n        /* \"#utility.yul\":27548:27552   */\n      0x00\n        /* \"#utility.yul\":27568:27588   */\n      tag_774\n        /* \"#utility.yul\":27586:27587   */\n      dup3\n        /* \"#utility.yul\":27568:27588   */\n      tag_424\n      jump\t// in\n    tag_774:\n        /* \"#utility.yul\":27563:27588   */\n      swap2\n      pop\n        /* \"#utility.yul\":27602:27622   */\n      tag_775\n        /* \"#utility.yul\":27620:27621   */\n      dup4\n        /* \"#utility.yul\":27602:27622   */\n      tag_424\n      jump\t// in\n    tag_775:\n        /* \"#utility.yul\":27597:27622   */\n      swap3\n      pop\n        /* \"#utility.yul\":27641:27642   */\n      dup3\n        /* \"#utility.yul\":27638:27639   */\n      dup3\n        /* \"#utility.yul\":27635:27643   */\n      lt\n        /* \"#utility.yul\":27632:27666   */\n      iszero\n      tag_776\n      jumpi\n        /* \"#utility.yul\":27646:27664   */\n      tag_777\n      tag_478\n      jump\t// in\n    tag_777:\n        /* \"#utility.yul\":27632:27666   */\n    tag_776:\n        /* \"#utility.yul\":27691:27692   */\n      dup3\n        /* \"#utility.yul\":27688:27689   */\n      dup3\n        /* \"#utility.yul\":27684:27693   */\n      sub\n        /* \"#utility.yul\":27676:27693   */\n      swap1\n      pop\n        /* \"#utility.yul\":27508:27699   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200708f83b0298eee6b6fc8543b871e1e34a818d84539510b111f97a41dab7c5a164736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1192": {
									"entryPoint": null,
									"id": 1192,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_836": {
									"entryPoint": null,
									"id": 836,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_806": {
									"entryPoint": 317,
									"id": 806,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_916": {
									"entryPoint": 325,
									"id": 916,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$286_fromMemory": {
									"entryPoint": 624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_INFTMasterChef_$1071_fromMemory": {
									"entryPoint": 693,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$286t_contract$_INFTMasterChef_$1071t_addresst_uint256t_uint256_fromMemory": {
									"entryPoint": 824,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 558,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$286": {
									"entryPoint": 578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_INFTMasterChef_$1071": {
									"entryPoint": 647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 526,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 765,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 521,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 716,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$286": {
									"entryPoint": 598,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_INFTMasterChef_$1071": {
									"entryPoint": 667,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 775,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3202:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "627:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "637:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "666:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "648:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "637:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$286",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "609:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "619:7:1",
														"type": ""
													}
												],
												"src": "568:110:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "741:93:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "812:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "821:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "824:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "814:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "814:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "814:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "764:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "803:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$286",
																					"nodeType": "YulIdentifier",
																					"src": "771:31:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "771:38:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "761:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "761:49:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "754:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "754:57:1"
															},
															"nodeType": "YulIf",
															"src": "751:77:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$286",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "734:5:1",
														"type": ""
													}
												],
												"src": "684:150:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:94:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "927:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "942:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "936:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "936:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "927:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "999:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$286",
																	"nodeType": "YulIdentifier",
																	"src": "958:40:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "958:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "958:47:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$286_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "895:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "903:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "911:5:1",
														"type": ""
													}
												],
												"src": "840:171:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1085:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1095:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1124:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1106:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1106:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1095:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_INFTMasterChef_$1071",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1067:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1077:7:1",
														"type": ""
													}
												],
												"src": "1017:119:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1208:102:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1288:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1297:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1300:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1290:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1290:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1290:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1231:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1279:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_INFTMasterChef_$1071",
																					"nodeType": "YulIdentifier",
																					"src": "1238:40:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1238:47:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1228:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1228:58:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1221:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1221:66:1"
															},
															"nodeType": "YulIf",
															"src": "1218:86:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_INFTMasterChef_$1071",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1201:5:1",
														"type": ""
													}
												],
												"src": "1142:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1402:103:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1412:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1427:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1421:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1421:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1412:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1493:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_INFTMasterChef_$1071",
																	"nodeType": "YulIdentifier",
																	"src": "1443:49:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1443:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1443:56:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_INFTMasterChef_$1071_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1380:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1388:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1396:5:1",
														"type": ""
													}
												],
												"src": "1316:189:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1554:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1611:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1620:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1623:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1613:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1613:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1613:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1577:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1602:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1584:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1584:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1574:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1574:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1567:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1567:43:1"
															},
															"nodeType": "YulIf",
															"src": "1564:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1547:5:1",
														"type": ""
													}
												],
												"src": "1511:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1702:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1712:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1727:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1721:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1721:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1712:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1770:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1743:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1743:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1743:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1680:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1688:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1696:5:1",
														"type": ""
													}
												],
												"src": "1639:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1833:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1843:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1854:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1843:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1815:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1825:7:1",
														"type": ""
													}
												],
												"src": "1788:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1914:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1971:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1980:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1983:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1973:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1973:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1973:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1937:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1962:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1944:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1944:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1934:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1934:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1927:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1927:43:1"
															},
															"nodeType": "YulIf",
															"src": "1924:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1907:5:1",
														"type": ""
													}
												],
												"src": "1871:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2062:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2072:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2087:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2081:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2081:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2072:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2130:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2103:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2103:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2103:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2040:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2048:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2056:5:1",
														"type": ""
													}
												],
												"src": "1999:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2330:869:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2377:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2379:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2379:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2379:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2351:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2360:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2347:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2347:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2372:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2343:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2343:33:1"
															},
															"nodeType": "YulIf",
															"src": "2340:120:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2470:142:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2485:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2499:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2489:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2514:88:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2574:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2585:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2570:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2570:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2594:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$286_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2524:45:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2524:78:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2514:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2622:152:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2637:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2651:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2641:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2667:97:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2736:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2747:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2732:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2732:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2756:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_INFTMasterChef_$1071_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2677:54:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2677:87:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2667:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2784:129:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2799:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2813:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2803:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2829:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2875:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2886:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2871:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2871:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2895:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2839:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2839:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2829:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2923:129:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2938:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2952:2:1",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2942:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2968:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3014:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3025:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3010:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3010:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3034:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2978:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2978:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "2968:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3062:130:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3077:17:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3091:3:1",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3081:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3108:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3154:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3165:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3150:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3150:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3174:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3118:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3118:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "3108:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$286t_contract$_INFTMasterChef_$1071t_addresst_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2268:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2279:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2291:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2299:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2307:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2315:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2323:6:1",
														"type": ""
													}
												],
												"src": "2148:1051:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$286(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$286(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$286(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$286_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$286(value)\n    }\n\n    function cleanup_t_contract$_INFTMasterChef_$1071(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_INFTMasterChef_$1071(value) {\n        if iszero(eq(value, cleanup_t_contract$_INFTMasterChef_$1071(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_INFTMasterChef_$1071_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_INFTMasterChef_$1071(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$286t_contract$_INFTMasterChef_$1071t_addresst_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$286_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_INFTMasterChef_$1071_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x5 SSTORE PUSH1 0x0 PUSH1 0x9 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x33FC CODESIZE SUB DUP1 PUSH3 0x33FC DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x41 SWAP2 SWAP1 PUSH3 0x338 JUMP JUMPDEST PUSH3 0x61 PUSH3 0x55 PUSH3 0x13D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x145 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xA DUP2 SWAP1 SSTORE POP POP POP POP POP POP PUSH3 0x3C0 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x23B DUP3 PUSH3 0x20E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x24F DUP3 PUSH3 0x22E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x261 DUP2 PUSH3 0x242 JUMP JUMPDEST DUP2 EQ PUSH3 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x281 DUP2 PUSH3 0x256 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x294 DUP3 PUSH3 0x22E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2A6 DUP2 PUSH3 0x287 JUMP JUMPDEST DUP2 EQ PUSH3 0x2B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2C6 DUP2 PUSH3 0x29B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x2D7 DUP2 PUSH3 0x22E JUMP JUMPDEST DUP2 EQ PUSH3 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2F7 DUP2 PUSH3 0x2CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x312 DUP2 PUSH3 0x2FD JUMP JUMPDEST DUP2 EQ PUSH3 0x31E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x332 DUP2 PUSH3 0x307 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x357 JUMPI PUSH3 0x356 PUSH3 0x209 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x367 DUP9 DUP3 DUP10 ADD PUSH3 0x270 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH3 0x37A DUP9 DUP3 DUP10 ADD PUSH3 0x2B5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH3 0x38D DUP9 DUP3 DUP10 ADD PUSH3 0x2E6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH3 0x3A0 DUP9 DUP3 DUP10 ADD PUSH3 0x321 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH3 0x3B3 DUP9 DUP3 DUP10 ADD PUSH3 0x321 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x302C DUP1 PUSH3 0x3D0 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x64482F79 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xA1EEF821 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD5545992 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD5545992 EQ PUSH2 0x4E6 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x516 JUMPI DUP1 PUSH4 0xE4D09896 EQ PUSH2 0x532 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x550 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0xA1EEF821 EQ PUSH2 0x472 JUMPI DUP1 PUSH4 0xBE70FBA3 EQ PUSH2 0x490 JUMPI DUP1 PUSH4 0xD0D41FE1 EQ PUSH2 0x4AC JUMPI DUP1 PUSH4 0xD49E77CD EQ PUSH2 0x4C8 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x8AA28550 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8AA28550 EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0x8DBB1E3A EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x441 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x64482F79 EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0x7CD07E47 EQ PUSH2 0x3B7 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x23CF3118 GT PUSH2 0x171 JUMPI DUP1 PUSH4 0x4F17DBAF GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x4F17DBAF EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0x5FFE6146 EQ PUSH2 0x36B JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x387 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x23CF3118 EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x301 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x150B7A02 GT PUSH2 0x1AD JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x1EAAA045 EQ PUSH2 0x2AD JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0xFE7EA17 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x141AA0BA EQ PUSH2 0x20E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x56C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x21AC JUMP JUMPDEST PUSH2 0x579 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x216 PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x223 SWAP2 SWAP1 PUSH2 0x2258 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x246 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x23F7 JUMP JUMPDEST PUSH2 0x625 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x24B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x21AC JUMP JUMPDEST PUSH2 0x639 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x286 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x297 PUSH2 0x699 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x25AC JUMP JUMPDEST PUSH2 0x69F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DE SWAP2 SWAP1 PUSH2 0x263D JUMP JUMPDEST PUSH2 0x82C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x266A JUMP JUMPDEST PUSH2 0x8EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x309 PUSH2 0xCC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x339 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x334 SWAP2 SWAP1 PUSH2 0x26AA JUMP JUMPDEST PUSH2 0xCCE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x369 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x21AC JUMP JUMPDEST PUSH2 0xEF3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x385 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x380 SWAP2 SWAP1 PUSH2 0x21AC JUMP JUMPDEST PUSH2 0x1133 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x38F PUSH2 0x11B9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0x26EA JUMP JUMPDEST PUSH2 0x11EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B5 PUSH2 0x12F8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3BF PUSH2 0x1380 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CC SWAP2 SWAP1 PUSH2 0x275E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DD PUSH2 0x13A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FB PUSH2 0x13AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x408 SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x426 SWAP2 SWAP1 PUSH2 0x266A JUMP JUMPDEST PUSH2 0x13D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x438 SWAP2 SWAP1 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x456 SWAP2 SWAP1 PUSH2 0x26AA JUMP JUMPDEST PUSH2 0x1406 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x469 SWAP3 SWAP2 SWAP1 PUSH2 0x27A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47A PUSH2 0x1437 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x487 SWAP2 SWAP1 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A5 SWAP2 SWAP1 PUSH2 0x21AC JUMP JUMPDEST PUSH2 0x143D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C1 SWAP2 SWAP1 PUSH2 0x27CC JUMP JUMPDEST PUSH2 0x1730 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D0 PUSH2 0x17F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4DD SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x500 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FB SWAP2 SWAP1 PUSH2 0x26AA JUMP JUMPDEST PUSH2 0x1816 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50D SWAP2 SWAP1 PUSH2 0x28B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x530 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x52B SWAP2 SWAP1 PUSH2 0x266A JUMP JUMPDEST PUSH2 0x18C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x53A PUSH2 0x1B27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x547 SWAP2 SWAP1 PUSH2 0x28FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x56A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x565 SWAP2 SWAP1 PUSH2 0x27CC JUMP JUMPDEST PUSH2 0x1B4D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x581 PUSH2 0x1C44 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x59F PUSH2 0x13AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EC SWAP1 PUSH2 0x2972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x649 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x6A7 PUSH2 0x1C44 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6C5 PUSH2 0x13AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x71B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x712 SWAP1 PUSH2 0x2972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x72A JUMPI PUSH2 0x729 PUSH2 0x11B9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0xA SLOAD NUMBER GT PUSH2 0x73D JUMPI PUSH1 0xA SLOAD PUSH2 0x73F JUMP JUMPDEST NUMBER JUMPDEST SWAP1 POP PUSH2 0x756 DUP5 PUSH1 0x9 SLOAD PUSH2 0x1C4C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x834 PUSH2 0x1C44 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x852 PUSH2 0x13AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89F SWAP1 PUSH2 0x2972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x902 JUMPI PUSH2 0x901 PUSH2 0x2992 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP1 DUP5 SUB PUSH2 0xA15 JUMPI PUSH2 0x978 DUP6 PUSH2 0xEF3 JUMP JUMPDEST PUSH2 0x9C0 DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0x9B2 PUSH5 0xE8D4A51000 PUSH2 0x9A4 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x1 ADD SLOAD PUSH2 0x1CAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D24 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D6E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x9D6 JUMPI PUSH2 0x9D5 CALLER DUP3 PUSH2 0x1DB8 JUMP JUMPDEST JUMPDEST PUSH2 0xA08 PUSH5 0xE8D4A51000 PUSH2 0x9FA DUP6 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x1 ADD SLOAD PUSH2 0x1CAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D24 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST DUP5 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xA6B JUMPI DUP7 DUP6 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA40 JUMPI PUSH2 0xA3F PUSH2 0x2992 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SUB PUSH2 0xA58 JUMPI PUSH1 0x1 SWAP3 POP DUP1 SWAP2 POP JUMPDEST DUP1 DUP1 PUSH2 0xA63 SWAP1 PUSH2 0x29F0 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA1A JUMP JUMPDEST POP PUSH1 0x1 DUP3 EQ PUSH2 0xAAF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA6 SWAP1 PUSH2 0x2A84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP5 PUSH1 0x1 ADD SLOAD LT ISZERO PUSH2 0xAF7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAEE SWAP1 PUSH2 0x2AF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB00 DUP8 PUSH2 0xEF3 JUMP JUMPDEST PUSH2 0xB48 DUP5 PUSH1 0x2 ADD SLOAD PUSH2 0xB3A PUSH5 0xE8D4A51000 PUSH2 0xB2C DUP10 PUSH1 0x3 ADD SLOAD DUP10 PUSH1 0x1 ADD SLOAD PUSH2 0x1CAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D24 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D6E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x0 DUP4 GT ISZERO PUSH2 0xB5E JUMPI PUSH2 0xB5D CALLER DUP5 PUSH2 0x1DB8 JUMP JUMPDEST JUMPDEST PUSH2 0xB76 PUSH1 0x1 DUP6 PUSH1 0x1 ADD SLOAD PUSH2 0x1D6E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xBB0 PUSH5 0xE8D4A51000 PUSH2 0xBA2 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x1 ADD SLOAD PUSH2 0x1CAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D24 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x0 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xBCE JUMPI PUSH2 0xBCD PUSH2 0x2992 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE DUP5 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E ADDRESS CALLER DUP10 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B10 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC6B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMPDEST DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP7 PUSH1 0x40 MLOAD PUSH2 0xCB9 SWAP2 SWAP1 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xCE5 JUMPI PUSH2 0xCE4 PUSH2 0x2992 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB1 SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDCE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDF2 SWAP2 SWAP1 PUSH2 0x2B5C JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD NUMBER GT DUP1 ISZERO PUSH2 0xE08 JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0xEA3 JUMPI PUSH1 0x0 PUSH2 0xE1D DUP6 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x13D5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE60 PUSH1 0x9 SLOAD PUSH2 0xE52 DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0xE44 PUSH1 0x4 SLOAD DUP8 PUSH2 0x1CAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D24 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xE9E PUSH2 0xE8F DUP5 PUSH2 0xE81 PUSH5 0xE8D4A51000 DUP6 PUSH2 0x1CAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D24 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x1C4C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH2 0xEE7 DUP4 PUSH1 0x2 ADD SLOAD PUSH2 0xED9 PUSH5 0xE8D4A51000 PUSH2 0xECB DUP7 DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0x1CAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D24 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D6E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF09 JUMPI PUSH2 0xF08 PUSH2 0x2992 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD NUMBER GT PUSH2 0xF2A JUMPI POP PUSH2 0x1130 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF89 SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFA6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFCA SWAP2 SWAP1 PUSH2 0x2B5C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xFE4 JUMPI NUMBER DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x1130 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFF4 DUP4 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x13D5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1037 PUSH1 0x9 SLOAD PUSH2 0x1029 DUP7 PUSH1 0x1 ADD SLOAD PUSH2 0x101B PUSH1 0x4 SLOAD DUP8 PUSH2 0x1CAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D24 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 ADDRESS DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1096 SWAP3 SWAP2 SWAP1 PUSH2 0x2B89 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10D9 SWAP2 SWAP1 PUSH2 0x2BC7 JUMP JUMPDEST POP PUSH2 0x111A PUSH2 0x1107 DUP5 PUSH2 0x10F9 PUSH5 0xE8D4A51000 DUP6 PUSH2 0x1CAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D24 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH1 0x3 ADD SLOAD PUSH2 0x1C4C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP NUMBER DUP5 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH2 0x113B PUSH2 0x1C44 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1159 PUSH2 0x13AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11A6 SWAP1 PUSH2 0x2972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x11E8 JUMPI PUSH2 0x11D7 DUP2 PUSH2 0xEF3 JUMP JUMPDEST DUP1 PUSH2 0x11E1 SWAP1 PUSH2 0x29F0 JUMP JUMPDEST SWAP1 POP PUSH2 0x11C6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x11F4 PUSH2 0x1C44 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1212 PUSH2 0x13AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1268 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x125F SWAP1 PUSH2 0x2972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x1277 JUMPI PUSH2 0x1276 PUSH2 0x11B9 JUMP JUMPDEST JUMPDEST PUSH2 0x12C3 DUP3 PUSH2 0x12B5 PUSH1 0x7 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x1292 JUMPI PUSH2 0x1291 PUSH2 0x2992 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x9 SLOAD PUSH2 0x1D6E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1C4C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x12DE JUMPI PUSH2 0x12DD PUSH2 0x2992 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x1300 PUSH2 0x1C44 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x131E PUSH2 0x13AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1374 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x136B SWAP1 PUSH2 0x2972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x137E PUSH1 0x0 PUSH2 0x1FAD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13FE PUSH1 0x5 SLOAD PUSH2 0x13F0 DUP6 DUP6 PUSH2 0x1D6E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1453 JUMPI PUSH2 0x1452 PUSH2 0x2992 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x14C0 DUP4 PUSH2 0xEF3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x150A DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0x14FC PUSH5 0xE8D4A51000 PUSH2 0x14EE DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x1 ADD SLOAD PUSH2 0x1CAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D24 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D6E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x154F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1546 SWAP1 PUSH2 0x2C40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15CE SWAP3 SWAP2 SWAP1 PUSH2 0x2B89 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1611 SWAP2 SWAP1 PUSH2 0x2BC7 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x849DF12C DUP3 CALLER PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x166F SWAP3 SWAP2 SWAP1 PUSH2 0x2C60 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1689 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x169D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x16D3 PUSH5 0xE8D4A51000 PUSH2 0x16C5 DUP6 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x1 ADD SLOAD PUSH2 0x1CAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D24 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1722 SWAP2 SWAP1 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x1738 PUSH2 0x1C44 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1756 PUSH2 0x13AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17A3 SWAP1 PUSH2 0x2972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x18BA JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x18A6 JUMPI JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x18DE JUMPI PUSH2 0x18DD PUSH2 0x2992 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x194B DUP5 PUSH2 0xEF3 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x19BA JUMPI PUSH1 0x0 PUSH2 0x19A2 DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0x1994 PUSH5 0xE8D4A51000 PUSH2 0x1986 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x1 ADD SLOAD PUSH2 0x1CAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D24 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D6E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x19B8 JUMPI PUSH2 0x19B7 CALLER DUP3 PUSH2 0x1DB8 JUMP JUMPDEST JUMPDEST POP JUMPDEST DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A1B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B10 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A49 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x1A65 PUSH1 0x1 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x1C4C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1A9F PUSH5 0xE8D4A51000 PUSH2 0x1A91 DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x1CAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D24 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 ADD DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1B19 SWAP2 SWAP1 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1B55 PUSH2 0x1C44 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B73 PUSH2 0x13AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1BC9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BC0 SWAP1 PUSH2 0x2972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C38 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C2F SWAP1 PUSH2 0x2CFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C41 DUP2 PUSH2 0x1FAD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0x1C5B SWAP2 SWAP1 PUSH2 0x2D1B JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1CA0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C97 SWAP1 PUSH2 0x2DBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SUB PUSH2 0x1CBC JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1D1E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0x1CCA SWAP2 SWAP1 PUSH2 0x2DDD JUMP JUMPDEST SWAP1 POP DUP3 DUP5 DUP3 PUSH2 0x1CD9 SWAP2 SWAP1 PUSH2 0x2E66 JUMP JUMPDEST EQ PUSH2 0x1D19 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D10 SWAP1 PUSH2 0x2F09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D66 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x2071 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DB0 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x20D4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E15 SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E32 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E56 SWAP2 SWAP1 PUSH2 0x2B5C JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1F06 JUMPI PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EBD SWAP3 SWAP2 SWAP1 PUSH2 0x2B89 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1EDC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F00 SWAP2 SWAP1 PUSH2 0x2BC7 JUMP JUMPDEST POP PUSH2 0x1FA8 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F63 SWAP3 SWAP2 SWAP1 PUSH2 0x2B89 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F82 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FA6 SWAP2 SWAP1 PUSH2 0x2BC7 JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x20B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20AF SWAP2 SWAP1 PUSH2 0x2FA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0x20C7 SWAP2 SWAP1 PUSH2 0x2E66 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x211C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2113 SWAP2 SWAP1 PUSH2 0x2FA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0x212B SWAP2 SWAP1 PUSH2 0x2FC2 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x214B DUP2 PUSH2 0x2138 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2166 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2142 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2189 DUP2 PUSH2 0x2138 JUMP JUMPDEST DUP2 EQ PUSH2 0x2194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21A6 DUP2 PUSH2 0x2180 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21C2 JUMPI PUSH2 0x21C1 PUSH2 0x2176 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21D0 DUP5 DUP3 DUP6 ADD PUSH2 0x2197 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x221E PUSH2 0x2219 PUSH2 0x2214 DUP5 PUSH2 0x21D9 JUMP JUMPDEST PUSH2 0x21F9 JUMP JUMPDEST PUSH2 0x21D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2230 DUP3 PUSH2 0x2203 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2242 DUP3 PUSH2 0x2225 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2252 DUP2 PUSH2 0x2237 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x226D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2249 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x227E DUP3 PUSH2 0x21D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x228E DUP2 PUSH2 0x2273 JUMP JUMPDEST DUP2 EQ PUSH2 0x2299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x22AB DUP2 PUSH2 0x2285 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2304 DUP3 PUSH2 0x22BB JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2323 JUMPI PUSH2 0x2322 PUSH2 0x22CC JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2336 PUSH2 0x216C JUMP JUMPDEST SWAP1 POP PUSH2 0x2342 DUP3 DUP3 PUSH2 0x22FB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2362 JUMPI PUSH2 0x2361 PUSH2 0x22CC JUMP JUMPDEST JUMPDEST PUSH2 0x236B DUP3 PUSH2 0x22BB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x239A PUSH2 0x2395 DUP5 PUSH2 0x2347 JUMP JUMPDEST PUSH2 0x232C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x23B6 JUMPI PUSH2 0x23B5 PUSH2 0x22B6 JUMP JUMPDEST JUMPDEST PUSH2 0x23C1 DUP5 DUP3 DUP6 PUSH2 0x2378 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x23DE JUMPI PUSH2 0x23DD PUSH2 0x22B1 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x23EE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2387 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2411 JUMPI PUSH2 0x2410 PUSH2 0x2176 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x241F DUP8 DUP3 DUP9 ADD PUSH2 0x229C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2430 DUP8 DUP3 DUP9 ADD PUSH2 0x229C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2441 DUP8 DUP3 DUP9 ADD PUSH2 0x2197 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2462 JUMPI PUSH2 0x2461 PUSH2 0x217B JUMP JUMPDEST JUMPDEST PUSH2 0x246E DUP8 DUP3 DUP9 ADD PUSH2 0x23C9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24AF DUP2 PUSH2 0x247A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24CA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x24A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24DB DUP3 PUSH2 0x2225 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24EB DUP2 PUSH2 0x24D0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2506 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x24E2 JUMP JUMPDEST PUSH2 0x2513 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2142 JUMP JUMPDEST PUSH2 0x2520 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2142 JUMP JUMPDEST PUSH2 0x252D PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2142 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2541 DUP3 PUSH2 0x2273 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2551 DUP2 PUSH2 0x2536 JUMP JUMPDEST DUP2 EQ PUSH2 0x255C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x256E DUP2 PUSH2 0x2548 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2589 DUP2 PUSH2 0x2574 JUMP JUMPDEST DUP2 EQ PUSH2 0x2594 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x25A6 DUP2 PUSH2 0x2580 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x25C5 JUMPI PUSH2 0x25C4 PUSH2 0x2176 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x25D3 DUP7 DUP3 DUP8 ADD PUSH2 0x2197 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x25E4 DUP7 DUP3 DUP8 ADD PUSH2 0x255F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x25F5 DUP7 DUP3 DUP8 ADD PUSH2 0x2597 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x260A DUP3 PUSH2 0x2273 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x261A DUP2 PUSH2 0x25FF JUMP JUMPDEST DUP2 EQ PUSH2 0x2625 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2637 DUP2 PUSH2 0x2611 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2653 JUMPI PUSH2 0x2652 PUSH2 0x2176 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2661 DUP5 DUP3 DUP6 ADD PUSH2 0x2628 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2681 JUMPI PUSH2 0x2680 PUSH2 0x2176 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x268F DUP6 DUP3 DUP7 ADD PUSH2 0x2197 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x26A0 DUP6 DUP3 DUP7 ADD PUSH2 0x2197 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26C1 JUMPI PUSH2 0x26C0 PUSH2 0x2176 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x26CF DUP6 DUP3 DUP7 ADD PUSH2 0x2197 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x26E0 DUP6 DUP3 DUP7 ADD PUSH2 0x229C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2703 JUMPI PUSH2 0x2702 PUSH2 0x2176 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2711 DUP7 DUP3 DUP8 ADD PUSH2 0x2197 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2722 DUP7 DUP3 DUP8 ADD PUSH2 0x2197 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2733 DUP7 DUP3 DUP8 ADD PUSH2 0x2597 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2748 DUP3 PUSH2 0x2225 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2758 DUP2 PUSH2 0x273D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2773 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x274F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2782 DUP2 PUSH2 0x2273 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x279D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2779 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x27B8 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2142 JUMP JUMPDEST PUSH2 0x27C5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2142 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27E2 JUMPI PUSH2 0x27E1 PUSH2 0x2176 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27F0 DUP5 DUP3 DUP6 ADD PUSH2 0x229C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x282E DUP2 PUSH2 0x2138 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2840 DUP4 DUP4 PUSH2 0x2825 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2864 DUP3 PUSH2 0x27F9 JUMP JUMPDEST PUSH2 0x286E DUP2 DUP6 PUSH2 0x2804 JUMP JUMPDEST SWAP4 POP PUSH2 0x2879 DUP4 PUSH2 0x2815 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x28AA JUMPI DUP2 MLOAD PUSH2 0x2891 DUP9 DUP3 PUSH2 0x2834 JUMP JUMPDEST SWAP8 POP PUSH2 0x289C DUP4 PUSH2 0x284C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x287D JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28D1 DUP2 DUP5 PUSH2 0x2859 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28E4 DUP3 PUSH2 0x2225 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28F4 DUP2 PUSH2 0x28D9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x290F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x28EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x295C PUSH1 0x20 DUP4 PUSH2 0x2915 JUMP JUMPDEST SWAP2 POP PUSH2 0x2967 DUP3 PUSH2 0x2926 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x298B DUP2 PUSH2 0x294F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x29FB DUP3 PUSH2 0x2138 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2A2D JUMPI PUSH2 0x2A2C PUSH2 0x29C1 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F7520617265206E6F74204F776E6572206F6620746F6B656E206964000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A6E PUSH1 0x1D DUP4 PUSH2 0x2915 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A79 DUP3 PUSH2 0x2A38 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A9D DUP2 PUSH2 0x2A61 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x77697468647261773A206E6F7420676F6F640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2ADA PUSH1 0x12 DUP4 PUSH2 0x2915 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AE5 DUP3 PUSH2 0x2AA4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B09 DUP2 PUSH2 0x2ACD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2B25 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2779 JUMP JUMPDEST PUSH2 0x2B32 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2779 JUMP JUMPDEST PUSH2 0x2B3F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2142 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2B56 DUP2 PUSH2 0x2180 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B72 JUMPI PUSH2 0x2B71 PUSH2 0x2176 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B80 DUP5 DUP3 DUP6 ADD PUSH2 0x2B47 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2B9E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2779 JUMP JUMPDEST PUSH2 0x2BAB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2142 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2BC1 DUP2 PUSH2 0x2580 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BDD JUMPI PUSH2 0x2BDC PUSH2 0x2176 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2BEB DUP5 DUP3 DUP6 ADD PUSH2 0x2BB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206973207A65726F000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C2A PUSH1 0xE DUP4 PUSH2 0x2915 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C35 DUP3 PUSH2 0x2BF4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C59 DUP2 PUSH2 0x2C1D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2C75 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2142 JUMP JUMPDEST PUSH2 0x2C82 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2779 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CE5 PUSH1 0x26 DUP4 PUSH2 0x2915 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CF0 DUP3 PUSH2 0x2C89 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D14 DUP2 PUSH2 0x2CD8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D26 DUP3 PUSH2 0x2138 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D31 DUP4 PUSH2 0x2138 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2D66 JUMPI PUSH2 0x2D65 PUSH2 0x29C1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DA7 PUSH1 0x1B DUP4 PUSH2 0x2915 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DB2 DUP3 PUSH2 0x2D71 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DD6 DUP2 PUSH2 0x2D9A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE8 DUP3 PUSH2 0x2138 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DF3 DUP4 PUSH2 0x2138 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2E2C JUMPI PUSH2 0x2E2B PUSH2 0x29C1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2E71 DUP3 PUSH2 0x2138 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E7C DUP4 PUSH2 0x2138 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2E8C JUMPI PUSH2 0x2E8B PUSH2 0x2E37 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EF3 PUSH1 0x21 DUP4 PUSH2 0x2915 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EFE DUP3 PUSH2 0x2E97 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F22 DUP2 PUSH2 0x2EE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2F52 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2F37 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2F61 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F72 DUP3 PUSH2 0x2F29 JUMP JUMPDEST PUSH2 0x2F7C DUP2 DUP6 PUSH2 0x2915 JUMP JUMPDEST SWAP4 POP PUSH2 0x2F8C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2F34 JUMP JUMPDEST PUSH2 0x2F95 DUP2 PUSH2 0x22BB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2FBA DUP2 DUP5 PUSH2 0x2F67 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FCD DUP3 PUSH2 0x2138 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FD8 DUP4 PUSH2 0x2138 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2FEB JUMPI PUSH2 0x2FEA PUSH2 0x29C1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD ADDMOD 0xF8 EXTCODESIZE MUL SWAP9 0xEE 0xE6 0xB6 0xFC DUP6 NUMBER 0xB8 PUSH18 0xE1E34A818D84539510B111F97A41DAB7C5A1 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "28007:10488:0:-:0;;;29672:1;29638:35;;30113:1;30080:34;;30488:340;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20054:32;20073:12;:10;;;:12;;:::i;:::-;20054:18;;;:32;;:::i;:::-;30674:4;30668:3;;:10;;;;;;;;;;;;;;;;;;30705:14;30689:13;;:30;;;;;;;;;;;;;;;;;;30740:8;30730:7;;:18;;;;;;;;;;;;;;;;;;30773:12;30759:11;:26;;;;30809:11;30796:10;:24;;;;30488:340;;;;;28007:10488;;19549:98;19602:7;19629:10;19622:17;;19549:98;:::o;21445:191::-;21519:16;21538:6;;;;;;;;;;;21519:25;;21564:8;21555:6;;:17;;;;;;;;;;;;;;;;;;21619:8;21588:40;;21609:8;21588:40;;;;;;;;;;;;21508:128;21445:191;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:110::-;619:7;648:24;666:5;648:24;:::i;:::-;637:35;;568:110;;;:::o;684:150::-;771:38;803:5;771:38;:::i;:::-;764:5;761:49;751:77;;824:1;821;814:12;751:77;684:150;:::o;840:171::-;911:5;942:6;936:13;927:22;;958:47;999:5;958:47;:::i;:::-;840:171;;;;:::o;1017:119::-;1077:7;1106:24;1124:5;1106:24;:::i;:::-;1095:35;;1017:119;;;:::o;1142:168::-;1238:47;1279:5;1238:47;:::i;:::-;1231:5;1228:58;1218:86;;1300:1;1297;1290:12;1218:86;1142:168;:::o;1316:189::-;1396:5;1427:6;1421:13;1412:22;;1443:56;1493:5;1443:56;:::i;:::-;1316:189;;;;:::o;1511:122::-;1584:24;1602:5;1584:24;:::i;:::-;1577:5;1574:35;1564:63;;1623:1;1620;1613:12;1564:63;1511:122;:::o;1639:143::-;1696:5;1727:6;1721:13;1712:22;;1743:33;1770:5;1743:33;:::i;:::-;1639:143;;;;:::o;1788:77::-;1825:7;1854:5;1843:16;;1788:77;;;:::o;1871:122::-;1944:24;1962:5;1944:24;:::i;:::-;1937:5;1934:35;1924:63;;1983:1;1980;1973:12;1924:63;1871:122;:::o;1999:143::-;2056:5;2087:6;2081:13;2072:22;;2103:33;2130:5;2103:33;:::i;:::-;1999:143;;;;:::o;2148:1051::-;2291:6;2299;2307;2315;2323;2372:3;2360:9;2351:7;2347:23;2343:33;2340:120;;;2379:79;;:::i;:::-;2340:120;2499:1;2524:78;2594:7;2585:6;2574:9;2570:22;2524:78;:::i;:::-;2514:88;;2470:142;2651:2;2677:87;2756:7;2747:6;2736:9;2732:22;2677:87;:::i;:::-;2667:97;;2622:152;2813:2;2839:64;2895:7;2886:6;2875:9;2871:22;2839:64;:::i;:::-;2829:74;;2784:129;2952:2;2978:64;3034:7;3025:6;3014:9;3010:22;2978:64;:::i;:::-;2968:74;;2923:129;3091:3;3118:64;3174:7;3165:6;3154:9;3150:22;3118:64;:::i;:::-;3108:74;;3062:130;2148:1051;;;;;;;;:::o;28007:10488:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BONUS_MULTIPLIER_1113": {
									"entryPoint": 5030,
									"id": 1113,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DRGPerBlock_1110": {
									"entryPoint": 5175,
									"id": 1110,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DRG_1106": {
									"entryPoint": 1535,
									"id": 1106,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@NFTMasterChef_1103": {
									"entryPoint": 6951,
									"id": 1103,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_806": {
									"entryPoint": 7236,
									"id": 806,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_916": {
									"entryPoint": 8109,
									"id": 916,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_1281": {
									"entryPoint": 1695,
									"id": 1281,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_27": {
									"entryPoint": 7244,
									"id": 27,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@compundDRG_2023": {
									"entryPoint": 5181,
									"id": 2023,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@deposit_1719": {
									"entryPoint": 6344,
									"id": 1719,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@devaddr_1108": {
									"entryPoint": 6128,
									"id": 1108,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@div_124": {
									"entryPoint": 7460,
									"id": 124,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_152": {
									"entryPoint": 8305,
									"id": 152,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getMultiplier_1350": {
									"entryPoint": 5077,
									"id": 1350,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getUserTokenIds_1373": {
									"entryPoint": 6166,
									"id": 1373,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@massUpdatePools_1500": {
									"entryPoint": 4537,
									"id": 1500,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@migrator_1116": {
									"entryPoint": 4992,
									"id": 1116,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_107": {
									"entryPoint": 7338,
									"id": 107,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@onERC721Received_1212": {
									"entryPoint": 1573,
									"id": 1212,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@owner_845": {
									"entryPoint": 5036,
									"id": 845,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pendingDRG_1475": {
									"entryPoint": 3278,
									"id": 1475,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@poolInfo_1120": {
									"entryPoint": 1593,
									"id": 1120,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@poolLength_1233": {
									"entryPoint": 1388,
									"id": 1233,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_873": {
									"entryPoint": 4856,
									"id": 873,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeDRGTransfer_2061": {
									"entryPoint": 7608,
									"id": 2061,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setDevAddress_2073": {
									"entryPoint": 5936,
									"id": 2073,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setMigrator_1332": {
									"entryPoint": 2092,
									"id": 1332,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@set_1319": {
									"entryPoint": 4588,
									"id": 1319,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@startBlock_1132": {
									"entryPoint": 3272,
									"id": 1132,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_44": {
									"entryPoint": 7534,
									"id": 44,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sub_72": {
									"entryPoint": 8404,
									"id": 72,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@totalAllocPoint_1130": {
									"entryPoint": 1689,
									"id": 1130,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_896": {
									"entryPoint": 6989,
									"id": 896,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateDRGPerBlock_2085": {
									"entryPoint": 1401,
									"id": 2085,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateMultiplier_1224": {
									"entryPoint": 4403,
									"id": 1224,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updatePool_1601": {
									"entryPoint": 3827,
									"id": 1601,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userInfo_1127": {
									"entryPoint": 5126,
									"id": 1127,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_1934": {
									"entryPoint": 2284,
									"id": 1934,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 9095,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 8860,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 9623,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 11186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 9161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC721_$1048": {
									"entryPoint": 9567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IMigratorChef_$927": {
									"entryPoint": 9768,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 11079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 10188,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 9207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 11207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IMigratorChef_$927": {
									"entryPoint": 9789,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 11100,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 9898,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_contract$_IERC721_$1048t_bool": {
									"entryPoint": 9644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 9834,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_bool": {
									"entryPoint": 9962,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 10292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 10105,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 10329,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 9382,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack": {
									"entryPoint": 8777,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC721_$1048_to_t_address_fromStack": {
									"entryPoint": 9442,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IMigratorChef_$927_to_t_address_fromStack": {
									"entryPoint": 10063,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_INFTMasterChef_$1071_to_t_address_fromStack": {
									"entryPoint": 10475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12135,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11480,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11674,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6bd482f4508d6ff87f5e2fd70a2544768e808d8d25d190c4a2ac86648d1a36cd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10849,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11293,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12006,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10957,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 10277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 10120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11024,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11145,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 10423,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 9397,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$286__to_t_address__fromStack_reversed": {
									"entryPoint": 8792,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC721_$1048_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9457,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IMigratorChef_$927__to_t_address__fromStack_reversed": {
									"entryPoint": 10078,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_INFTMasterChef_$1071__to_t_address__fromStack_reversed": {
									"entryPoint": 10490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11515,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11709,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6bd482f4508d6ff87f5e2fd70a2544768e808d8d25d190c4a2ac86648d1a36cd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10884,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12041,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10610,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10992,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 11360,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 10147,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 9004,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 8556,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 9031,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 10261,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 10233,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 12073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 10316,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 10244,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 10517,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 11547,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 11878,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 11741,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 12226,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8819,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 9588,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 9338,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC721_$1048": {
									"entryPoint": 9526,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IMigratorChef_$927": {
									"entryPoint": 9727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8665,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8504,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$286_to_t_address": {
									"entryPoint": 8759,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC721_$1048_to_t_address": {
									"entryPoint": 9424,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IMigratorChef_$927_to_t_address": {
									"entryPoint": 10045,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_INFTMasterChef_$1071_to_t_address": {
									"entryPoint": 10457,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 8741,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 8707,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 9080,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory": {
									"entryPoint": 12084,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 8955,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 8697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 10736,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 10689,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 11831,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 10642,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8908,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 8881,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 8886,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 8571,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8566,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8891,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 11401,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a": {
									"entryPoint": 11633,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6bd482f4508d6ff87f5e2fd70a2544768e808d8d25d190c4a2ac86648d1a36cd": {
									"entryPoint": 10808,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c": {
									"entryPoint": 11252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3": {
									"entryPoint": 11927,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 10534,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df": {
									"entryPoint": 10916,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8837,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9600,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC721_$1048": {
									"entryPoint": 9544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IMigratorChef_$927": {
									"entryPoint": 9745,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8576,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:27702:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:1",
														"type": ""
													}
												],
												"src": "90:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:1",
														"type": ""
													}
												],
												"src": "214:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "482:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "492:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "475:6:1",
														"type": ""
													}
												],
												"src": "442:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "612:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "629:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "632:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "622:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "735:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "752:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "755:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "745:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "745:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "812:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "878:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "881:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "871:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "835:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "860:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "842:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "842:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "832:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "832:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "825:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "825:43:1"
															},
															"nodeType": "YulIf",
															"src": "822:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "805:5:1",
														"type": ""
													}
												],
												"src": "769:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "949:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "959:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "981:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "968:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "968:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "959:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "997:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "997:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "997:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "927:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "935:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "943:5:1",
														"type": ""
													}
												],
												"src": "897:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1108:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1154:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1156:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1156:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1156:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1129:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1125:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1125:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1150:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1121:32:1"
															},
															"nodeType": "YulIf",
															"src": "1118:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1247:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1262:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1276:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1266:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1291:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1326:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1337:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1322:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1322:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1346:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1301:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1301:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1291:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1078:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1089:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1101:6:1",
														"type": ""
													}
												],
												"src": "1042:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1422:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1432:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1447:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1454:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1443:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1432:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1404:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1414:7:1",
														"type": ""
													}
												],
												"src": "1377:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1541:28:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1551:12:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1558:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1551:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1527:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1537:3:1",
														"type": ""
													}
												],
												"src": "1509:60:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1635:82:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1645:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1703:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "1685:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1685:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "1676:8:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1676:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1658:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1658:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1645:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1615:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1625:9:1",
														"type": ""
													}
												],
												"src": "1575:142:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1783:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1793:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1837:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1806:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1806:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1793:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1763:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1773:9:1",
														"type": ""
													}
												],
												"src": "1723:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1929:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1939:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1983:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1952:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1952:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1939:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$286_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1909:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1919:9:1",
														"type": ""
													}
												],
												"src": "1855:140:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2080:80:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2097:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2147:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$286_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2102:44:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2102:51:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2090:64:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2090:64:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2068:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2075:3:1",
														"type": ""
													}
												],
												"src": "2001:159:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2278:138:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2288:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2300:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2311:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2296:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2296:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2288:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2382:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2395:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2406:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2391:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2391:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2324:57:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2324:85:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2324:85:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$286__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2250:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2262:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2273:4:1",
														"type": ""
													}
												],
												"src": "2166:250:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2467:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2477:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2506:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2488:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2488:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2477:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2449:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2459:7:1",
														"type": ""
													}
												],
												"src": "2422:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2567:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2624:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2633:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2636:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2626:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2626:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2590:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2615:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2597:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2597:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2587:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2587:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2580:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2580:43:1"
															},
															"nodeType": "YulIf",
															"src": "2577:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2560:5:1",
														"type": ""
													}
												],
												"src": "2524:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2704:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2714:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2736:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2723:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2723:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2714:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2779:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2752:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2752:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2752:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2682:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2690:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2698:5:1",
														"type": ""
													}
												],
												"src": "2652:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2886:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2903:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2906:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2896:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2896:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2896:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "2797:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3009:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3026:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3029:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3019:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3019:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3019:12:1"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "2920:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3091:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3101:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3119:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3126:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3115:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3115:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3135:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3131:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3131:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3111:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3111:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3101:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3074:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3084:6:1",
														"type": ""
													}
												],
												"src": "3043:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3179:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3196:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3199:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3189:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3189:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3189:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3293:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3296:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3286:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3286:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3286:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3320:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3310:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3310:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3151:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3380:238:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3390:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3412:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "3442:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "3420:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3420:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3408:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3408:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "3394:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3559:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3561:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3561:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3561:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3502:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3514:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3499:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3499:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3538:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3550:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3535:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3535:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3496:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3496:62:1"
															},
															"nodeType": "YulIf",
															"src": "3493:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3597:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3601:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3590:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3590:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3590:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3366:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3374:4:1",
														"type": ""
													}
												],
												"src": "3337:281:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3665:88:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3675:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "3685:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3685:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "3675:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3734:6:1"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "3742:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "3714:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3714:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3714:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3649:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3658:6:1",
														"type": ""
													}
												],
												"src": "3624:129:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3825:241:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3930:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3932:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3932:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3932:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3902:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3910:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3899:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3899:30:1"
															},
															"nodeType": "YulIf",
															"src": "3896:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3962:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3992:6:1"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "3970:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3970:29:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3962:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4036:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "4048:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4054:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4044:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4044:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "4036:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3809:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3820:4:1",
														"type": ""
													}
												],
												"src": "3759:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4123:103:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "4146:3:1"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "4151:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4156:6:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "4133:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4133:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4133:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "4204:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4209:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4200:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4200:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4218:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4193:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4193:27:1"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "4105:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "4110:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4115:6:1",
														"type": ""
													}
												],
												"src": "4072:154:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4315:327:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4325:74:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4391:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4350:40:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4350:48:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4334:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4334:65:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4325:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "4415:5:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4422:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4408:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4408:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4408:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4438:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "4453:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4460:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4449:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4449:16:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "4442:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4503:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "4505:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4505:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4505:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "4484:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4489:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4480:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4480:16:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4498:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4477:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4477:25:1"
															},
															"nodeType": "YulIf",
															"src": "4474:112:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "4619:3:1"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "4624:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4629:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4595:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4595:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4595:41:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "4288:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4293:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4301:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4309:5:1",
														"type": ""
													}
												],
												"src": "4232:410:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4722:277:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4771:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "4773:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4773:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4773:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4750:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4758:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4746:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4746:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "4765:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4742:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4742:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4735:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4735:35:1"
															},
															"nodeType": "YulIf",
															"src": "4732:122:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4863:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4890:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4877:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4877:20:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4867:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4906:87:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4966:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4974:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4962:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4962:17:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4981:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4989:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4915:46:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4915:78:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4906:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4700:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4708:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4716:5:1",
														"type": ""
													}
												],
												"src": "4661:338:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5131:817:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5178:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5180:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5180:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5180:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5152:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5161:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5148:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5148:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5173:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5144:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5144:33:1"
															},
															"nodeType": "YulIf",
															"src": "5141:120:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "5271:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5286:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5300:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5290:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5315:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5350:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5361:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5346:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5346:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5370:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5325:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5325:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5315:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5398:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5413:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5427:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5417:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5443:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5478:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5489:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5474:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5474:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5498:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5453:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5453:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5443:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5526:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5541:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5555:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5545:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5571:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5606:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5617:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5602:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5602:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5626:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5581:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5581:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5571:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5654:287:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5669:46:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5700:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5711:2:1",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5696:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5696:18:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5683:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5683:32:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5673:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5762:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "5764:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5764:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5764:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5734:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5742:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5731:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5731:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "5728:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5859:72:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5903:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5914:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5899:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5899:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5923:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5869:29:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5869:62:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "5859:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5077:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5088:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5100:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5108:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5116:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5124:6:1",
														"type": ""
													}
												],
												"src": "5005:943:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5998:105:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6008:89:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6023:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6030:66:1",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6019:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6019:78:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6008:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5980:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5990:7:1",
														"type": ""
													}
												],
												"src": "5954:149:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6172:52:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6189:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6211:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "6194:16:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6194:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6182:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6182:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6182:36:1"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6160:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6167:3:1",
														"type": ""
													}
												],
												"src": "6109:115:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6326:122:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6336:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6348:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6359:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6344:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6344:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6336:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6414:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6427:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6438:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6423:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6423:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6372:41:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6372:69:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6372:69:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6298:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6310:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6321:4:1",
														"type": ""
													}
												],
												"src": "6230:218:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6530:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6540:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6584:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "6553:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6553:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6540:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC721_$1048_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6510:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6520:9:1",
														"type": ""
													}
												],
												"src": "6454:142:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6683:82:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6700:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6752:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC721_$1048_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6705:46:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6705:53:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6693:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6693:66:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6693:66:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC721_$1048_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6671:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6678:3:1",
														"type": ""
													}
												],
												"src": "6602:163:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6969:387:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6979:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6991:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7002:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6987:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6987:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6979:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7076:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7089:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7100:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7085:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7085:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC721_$1048_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7016:59:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7016:87:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7016:87:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7157:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7170:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7181:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7166:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7166:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7113:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7113:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7113:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7239:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7252:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7263:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7248:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7248:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7195:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7195:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7195:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "7321:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7334:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7345:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7330:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7330:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7277:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7277:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7277:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721_$1048_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6917:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6929:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6937:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6945:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6953:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6964:4:1",
														"type": ""
													}
												],
												"src": "6771:585:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7423:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7433:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7462:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "7444:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7444:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7433:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC721_$1048",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7405:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7415:7:1",
														"type": ""
													}
												],
												"src": "7362:112:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7539:95:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7612:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7621:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7624:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7614:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7614:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7614:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7562:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7603:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC721_$1048",
																					"nodeType": "YulIdentifier",
																					"src": "7569:33:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7569:40:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7559:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7559:51:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7552:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7552:59:1"
															},
															"nodeType": "YulIf",
															"src": "7549:79:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC721_$1048",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7532:5:1",
														"type": ""
													}
												],
												"src": "7480:154:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7708:103:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7718:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7740:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7727:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7727:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "7718:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7799:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC721_$1048",
																	"nodeType": "YulIdentifier",
																	"src": "7756:42:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7756:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7756:49:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC721_$1048",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7686:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7694:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7702:5:1",
														"type": ""
													}
												],
												"src": "7640:171:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7859:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7869:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7894:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "7887:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7887:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7880:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7880:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7869:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7841:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7851:7:1",
														"type": ""
													}
												],
												"src": "7817:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7953:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8007:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8016:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8019:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8009:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8009:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8009:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7976:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7998:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "7983:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7983:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7973:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7973:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7966:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7966:40:1"
															},
															"nodeType": "YulIf",
															"src": "7963:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7946:5:1",
														"type": ""
													}
												],
												"src": "7913:116:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8084:84:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8094:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8116:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8103:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8103:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "8094:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8156:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "8132:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8132:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8132:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8062:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8070:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8078:5:1",
														"type": ""
													}
												],
												"src": "8035:133:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8287:532:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8333:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8335:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8335:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8335:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8308:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8317:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8304:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8304:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8329:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8300:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8300:32:1"
															},
															"nodeType": "YulIf",
															"src": "8297:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "8426:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8441:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8455:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8445:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8470:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8505:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8516:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8501:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8501:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8525:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8480:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8480:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8470:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8553:134:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8568:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8582:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8572:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8598:79:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8649:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8660:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8645:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8645:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8669:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC721_$1048",
																			"nodeType": "YulIdentifier",
																			"src": "8608:36:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8608:69:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "8598:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8697:115:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8712:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8726:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8716:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8742:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8774:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8785:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8770:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8770:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8794:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "8752:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8752:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "8742:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_contract$_IERC721_$1048t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8241:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8252:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8264:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8272:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8280:6:1",
														"type": ""
													}
												],
												"src": "8174:645:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8891:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8901:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8930:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "8912:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8912:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8901:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IMigratorChef_$927",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8873:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8883:7:1",
														"type": ""
													}
												],
												"src": "8825:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9012:100:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9090:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9099:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9102:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9092:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9092:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9092:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9035:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9081:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IMigratorChef_$927",
																					"nodeType": "YulIdentifier",
																					"src": "9042:38:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9042:45:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9032:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9032:56:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9025:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9025:64:1"
															},
															"nodeType": "YulIf",
															"src": "9022:84:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IMigratorChef_$927",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9005:5:1",
														"type": ""
													}
												],
												"src": "8948:164:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9191:108:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9201:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9223:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "9210:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9210:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "9201:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9287:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IMigratorChef_$927",
																	"nodeType": "YulIdentifier",
																	"src": "9239:47:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9239:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9239:54:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IMigratorChef_$927",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "9169:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9177:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9185:5:1",
														"type": ""
													}
												],
												"src": "9118:181:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9392:284:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9438:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9440:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9440:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9440:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9413:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9422:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9409:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9409:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9434:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9405:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9405:32:1"
															},
															"nodeType": "YulIf",
															"src": "9402:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "9531:138:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9546:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9560:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9550:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9575:84:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9631:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9642:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9627:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9627:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9651:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IMigratorChef_$927",
																			"nodeType": "YulIdentifier",
																			"src": "9585:41:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9585:74:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9575:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IMigratorChef_$927",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9362:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9373:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9385:6:1",
														"type": ""
													}
												],
												"src": "9305:371:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9765:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9811:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9813:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9813:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9813:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9786:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9795:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9782:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9782:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9807:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9778:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9778:32:1"
															},
															"nodeType": "YulIf",
															"src": "9775:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "9904:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9919:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9933:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9923:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9948:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9983:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9994:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9979:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9979:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10003:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9958:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9958:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9948:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10031:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10046:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10060:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10050:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10076:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10111:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10122:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10107:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10107:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10131:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "10086:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10086:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "10076:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9727:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9738:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9750:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9758:6:1",
														"type": ""
													}
												],
												"src": "9682:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10245:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10291:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10293:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10293:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10293:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10266:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10275:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10262:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10262:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10287:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10258:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10258:32:1"
															},
															"nodeType": "YulIf",
															"src": "10255:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "10384:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10399:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10413:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10403:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10428:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10463:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10474:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10459:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10459:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10483:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "10438:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10438:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10428:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10511:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10526:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10540:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10530:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10556:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10591:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10602:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10587:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10587:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10611:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10566:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10566:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "10556:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10207:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10218:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10230:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10238:6:1",
														"type": ""
													}
												],
												"src": "10162:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10739:516:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10785:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10787:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10787:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10787:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10760:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10769:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10756:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10756:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10781:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10752:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10752:32:1"
															},
															"nodeType": "YulIf",
															"src": "10749:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "10878:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10893:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10907:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10897:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10922:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10957:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10968:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10953:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10953:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10977:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "10932:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10932:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10922:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11005:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11020:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11034:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11024:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11050:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11085:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11096:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11081:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11081:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11105:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "11060:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11060:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "11050:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11133:115:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11148:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11162:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11152:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11178:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11210:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11221:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11206:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11206:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11230:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "11188:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11188:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "11178:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10693:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10704:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10716:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10724:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10732:6:1",
														"type": ""
													}
												],
												"src": "10642:613:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11342:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11352:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11396:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "11365:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11365:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "11352:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IMigratorChef_$927_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11322:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "11332:9:1",
														"type": ""
													}
												],
												"src": "11261:147:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11500:87:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11517:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11574:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IMigratorChef_$927_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "11522:51:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11522:58:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11510:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11510:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11510:71:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_IMigratorChef_$927_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11488:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11495:3:1",
														"type": ""
													}
												],
												"src": "11414:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11712:145:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11722:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11734:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11745:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11730:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11730:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11722:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11823:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11836:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11847:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11832:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11832:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IMigratorChef_$927_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11758:64:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11758:92:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11758:92:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IMigratorChef_$927__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11684:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11696:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11707:4:1",
														"type": ""
													}
												],
												"src": "11593:264:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11928:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11945:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11968:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "11950:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11950:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11938:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11938:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11938:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11916:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11923:3:1",
														"type": ""
													}
												],
												"src": "11863:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12085:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12095:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12107:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12118:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12103:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12103:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12095:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12175:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12188:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12199:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12184:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12184:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12131:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12131:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12131:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12057:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12069:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12080:4:1",
														"type": ""
													}
												],
												"src": "11987:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12341:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12351:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12363:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12374:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12359:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12359:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12351:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12431:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12444:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12455:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12440:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12440:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12387:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12387:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12387:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12512:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12525:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12536:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12521:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12521:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12468:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12468:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12468:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12305:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12317:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12325:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12336:4:1",
														"type": ""
													}
												],
												"src": "12215:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12619:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12665:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "12667:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12667:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12667:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12640:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12649:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12636:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12636:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12661:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "12632:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12632:32:1"
															},
															"nodeType": "YulIf",
															"src": "12629:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "12758:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12773:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12787:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12777:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12802:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12837:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12848:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12833:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12833:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12857:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "12812:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12812:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "12802:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12589:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "12600:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12612:6:1",
														"type": ""
													}
												],
												"src": "12553:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12962:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12973:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12989:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12983:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12983:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12973:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12945:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12955:6:1",
														"type": ""
													}
												],
												"src": "12888:114:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13119:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13136:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13141:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13129:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13129:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13129:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13157:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13176:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13181:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13172:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13172:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "13157:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13091:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13096:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "13107:11:1",
														"type": ""
													}
												],
												"src": "13008:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13270:60:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13280:11:1",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "13288:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "13280:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13301:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "13313:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13318:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13309:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13309:14:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "13301:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "13257:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "13265:4:1",
														"type": ""
													}
												],
												"src": "13198:132:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13391:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13408:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13431:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "13413:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13413:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13401:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13401:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13401:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13379:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13386:3:1",
														"type": ""
													}
												],
												"src": "13336:108:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13530:99:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13574:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13582:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13540:33:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13540:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13540:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13595:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13613:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13618:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13609:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13609:14:1"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "13595:10:1"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13503:6:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13511:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "13519:10:1",
														"type": ""
													}
												],
												"src": "13450:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13710:38:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13720:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "13732:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13737:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13728:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13728:14:1"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "13720:4:1"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "13697:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "13705:4:1",
														"type": ""
													}
												],
												"src": "13635:113:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13908:608:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13918:68:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13980:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "13932:47:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13932:54:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "13922:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13995:93:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14076:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14081:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14002:73:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14002:86:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13995:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14097:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14162:5:1"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "14112:49:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14112:56:1"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "14101:7:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14177:21:1",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "14191:7:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "14181:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14267:224:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "14281:34:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "14308:6:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "14302:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14302:13:1"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "14285:13:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "14328:70:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "14379:13:1"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "14394:3:1"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "14335:43:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14335:63:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "14328:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "14411:70:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "14474:6:1"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "14421:52:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14421:60:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14411:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "14229:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14232:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "14226:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14226:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "14240:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "14242:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "14251:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14254:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "14247:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14247:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "14242:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "14211:14:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "14213:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "14222:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "14217:1:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "14207:284:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14500:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "14507:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14500:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13887:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13894:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13903:3:1",
														"type": ""
													}
												],
												"src": "13784:732:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14670:225:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14680:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14692:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14703:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14688:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14688:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14680:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14727:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14738:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14723:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14723:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14746:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14752:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14742:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14742:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14716:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14716:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14716:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14772:116:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14874:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14883:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14780:93:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14780:108:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14772:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14642:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14654:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14665:4:1",
														"type": ""
													}
												],
												"src": "14522:373:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14984:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14994:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15038:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "15007:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15007:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "14994:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_INFTMasterChef_$1071_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14964:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "14974:9:1",
														"type": ""
													}
												],
												"src": "14901:149:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15144:89:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15161:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15220:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_INFTMasterChef_$1071_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "15166:53:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15166:60:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15154:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15154:73:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15154:73:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_INFTMasterChef_$1071_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15132:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15139:3:1",
														"type": ""
													}
												],
												"src": "15056:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15360:147:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15370:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15382:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15393:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15378:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15378:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15370:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15473:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15486:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15497:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15482:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15482:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_INFTMasterChef_$1071_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15406:66:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15406:94:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15406:94:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_INFTMasterChef_$1071__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15332:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15344:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15355:4:1",
														"type": ""
													}
												],
												"src": "15239:268:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15609:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15626:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15631:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15619:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15619:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15619:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15647:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15666:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15671:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15662:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15662:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "15647:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15581:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15586:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "15597:11:1",
														"type": ""
													}
												],
												"src": "15513:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15794:76:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15816:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15824:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15812:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15812:14:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15828:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15805:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15805:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15805:58:1"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15786:6:1",
														"type": ""
													}
												],
												"src": "15688:182:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16022:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16032:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16098:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16103:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16039:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16039:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16032:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16204:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "16115:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16115:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16115:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16217:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16228:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16233:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16224:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16224:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16217:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16010:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16018:3:1",
														"type": ""
													}
												],
												"src": "15876:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16419:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16429:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16441:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16452:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16437:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16437:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16429:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16476:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16487:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16472:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16472:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16495:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16501:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16491:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16491:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16465:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16465:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16465:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16521:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16655:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16529:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16529:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16521:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16399:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16414:4:1",
														"type": ""
													}
												],
												"src": "16248:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16701:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16718:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16721:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16711:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16711:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16711:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16815:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16818:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16808:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16808:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16808:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16839:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16842:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16832:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16832:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16832:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "16673:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16887:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16904:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16907:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16897:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16897:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16897:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17001:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17004:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16994:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16994:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16994:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17025:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17028:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17018:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17018:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17018:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "16859:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17088:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17098:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17125:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17107:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17107:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "17098:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17221:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "17223:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17223:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17223:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17146:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17153:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "17143:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17143:77:1"
															},
															"nodeType": "YulIf",
															"src": "17140:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17252:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17263:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17270:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17259:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17259:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "17252:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17074:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "17084:3:1",
														"type": ""
													}
												],
												"src": "17045:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17390:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17412:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17420:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17408:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17408:14:1"
																	},
																	{
																		"hexValue": "596f7520617265206e6f74204f776e6572206f6620746f6b656e206964",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17424:31:1",
																		"type": "",
																		"value": "You are not Owner of token id"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17401:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17401:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17401:55:1"
														}
													]
												},
												"name": "store_literal_in_memory_6bd482f4508d6ff87f5e2fd70a2544768e808d8d25d190c4a2ac86648d1a36cd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17382:6:1",
														"type": ""
													}
												],
												"src": "17284:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17615:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17625:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17691:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17696:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17632:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17632:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17625:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17797:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6bd482f4508d6ff87f5e2fd70a2544768e808d8d25d190c4a2ac86648d1a36cd",
																	"nodeType": "YulIdentifier",
																	"src": "17708:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17708:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17708:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17810:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17821:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17826:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17817:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17817:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17810:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6bd482f4508d6ff87f5e2fd70a2544768e808d8d25d190c4a2ac86648d1a36cd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17603:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17611:3:1",
														"type": ""
													}
												],
												"src": "17469:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18012:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18022:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18034:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18045:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18030:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18030:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18022:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18069:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18080:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18065:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18065:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18088:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18094:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18084:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18084:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18058:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18058:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18058:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18114:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18248:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6bd482f4508d6ff87f5e2fd70a2544768e808d8d25d190c4a2ac86648d1a36cd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18122:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18122:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18114:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6bd482f4508d6ff87f5e2fd70a2544768e808d8d25d190c4a2ac86648d1a36cd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17992:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18007:4:1",
														"type": ""
													}
												],
												"src": "17841:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18372:62:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18394:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18402:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18390:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18390:14:1"
																	},
																	{
																		"hexValue": "77697468647261773a206e6f7420676f6f64",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18406:20:1",
																		"type": "",
																		"value": "withdraw: not good"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18383:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18383:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18383:44:1"
														}
													]
												},
												"name": "store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18364:6:1",
														"type": ""
													}
												],
												"src": "18266:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18586:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18596:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18662:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18667:2:1",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18603:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18603:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18596:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18768:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																	"nodeType": "YulIdentifier",
																	"src": "18679:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18679:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18679:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18781:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18792:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18797:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18788:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18788:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18781:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18574:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18582:3:1",
														"type": ""
													}
												],
												"src": "18440:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18983:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18993:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19005:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19016:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19001:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19001:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18993:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19040:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19051:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19036:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19036:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19059:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19065:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19055:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19055:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19029:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19029:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19029:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19085:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19219:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19093:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19093:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19085:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18963:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18978:4:1",
														"type": ""
													}
												],
												"src": "18812:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19391:288:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19401:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19413:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19424:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19409:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19409:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19401:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19481:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19494:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19505:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19490:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19490:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19437:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19437:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19437:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "19562:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19575:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19586:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19571:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19571:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19518:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19518:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19518:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "19644:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19657:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19668:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19653:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19653:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19600:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19600:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19600:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19347:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "19359:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "19367:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19375:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19386:4:1",
														"type": ""
													}
												],
												"src": "19237:442:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19748:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19758:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "19773:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "19767:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19767:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "19758:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19816:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19789:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19789:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19789:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "19726:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19734:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19742:5:1",
														"type": ""
													}
												],
												"src": "19685:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19911:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19957:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "19959:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19959:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19959:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19932:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19941:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19928:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19928:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19953:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "19924:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19924:32:1"
															},
															"nodeType": "YulIf",
															"src": "19921:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "20050:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20065:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20079:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "20069:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20094:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "20140:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "20151:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20136:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20136:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20160:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "20104:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20104:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "20094:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19881:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "19892:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19904:6:1",
														"type": ""
													}
												],
												"src": "19834:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20317:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20327:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20339:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20350:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20335:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20335:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20327:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "20407:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20420:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20431:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20416:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20416:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20363:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20363:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20363:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "20488:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20501:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20512:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20497:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20497:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20444:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20444:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20444:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20281:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "20293:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20301:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20312:4:1",
														"type": ""
													}
												],
												"src": "20191:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20589:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20599:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "20614:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "20608:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20608:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "20599:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20654:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "20630:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20630:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20630:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "20567:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20575:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20583:5:1",
														"type": ""
													}
												],
												"src": "20529:137:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20746:271:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20792:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "20794:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20794:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20794:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20767:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20776:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20763:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20763:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20788:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "20759:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20759:32:1"
															},
															"nodeType": "YulIf",
															"src": "20756:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "20885:125:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20900:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20914:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "20904:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20929:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "20972:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "20983:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20968:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20968:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20992:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "20939:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20939:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "20929:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20716:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "20727:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20739:6:1",
														"type": ""
													}
												],
												"src": "20672:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21129:58:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21151:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21159:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21147:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21147:14:1"
																	},
																	{
																		"hexValue": "416d6f756e74206973207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21163:16:1",
																		"type": "",
																		"value": "Amount is zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21140:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21140:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21140:40:1"
														}
													]
												},
												"name": "store_literal_in_memory_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21121:6:1",
														"type": ""
													}
												],
												"src": "21023:164:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21339:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21349:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21415:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21420:2:1",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21356:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21356:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21349:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21521:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c",
																	"nodeType": "YulIdentifier",
																	"src": "21432:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21432:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21432:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21534:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21545:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21550:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21541:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21541:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21534:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21327:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21335:3:1",
														"type": ""
													}
												],
												"src": "21193:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21736:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21746:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21758:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21769:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21754:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21754:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21746:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21793:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21804:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21789:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21789:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21812:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21818:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21808:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21808:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21782:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21782:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21782:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21838:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21972:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21846:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21846:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21838:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21716:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21731:4:1",
														"type": ""
													}
												],
												"src": "21565:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22116:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22126:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22138:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22149:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22134:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22134:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22126:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "22206:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22219:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22230:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22215:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22215:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22162:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22162:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22162:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "22287:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22300:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22311:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22296:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22296:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22243:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22243:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22243:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22080:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "22092:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22100:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22111:4:1",
														"type": ""
													}
												],
												"src": "21990:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22434:119:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22456:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22464:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22452:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22452:14:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22468:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22445:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22445:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22445:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22524:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22532:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22520:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22520:15:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22537:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22513:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22513:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22513:33:1"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22426:6:1",
														"type": ""
													}
												],
												"src": "22328:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22705:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22715:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22781:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22786:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22722:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22722:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22715:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22887:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "22798:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22798:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22798:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22900:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22911:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22916:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22907:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22907:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22900:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22693:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22701:3:1",
														"type": ""
													}
												],
												"src": "22559:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23102:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23112:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23124:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23135:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23120:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23120:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23112:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23159:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23170:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23155:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23155:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23178:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23184:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23174:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23174:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23148:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23148:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23148:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23204:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23338:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23212:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23212:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23204:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23082:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23097:4:1",
														"type": ""
													}
												],
												"src": "22931:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23400:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23410:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "23433:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "23415:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23415:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "23410:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23444:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "23467:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "23449:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23449:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "23444:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23607:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "23609:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23609:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23609:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "23528:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23535:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "23603:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23531:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23531:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "23525:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23525:81:1"
															},
															"nodeType": "YulIf",
															"src": "23522:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23639:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "23650:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "23653:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23646:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23646:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "23639:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "23387:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "23390:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "23396:3:1",
														"type": ""
													}
												],
												"src": "23356:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23773:71:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23795:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23803:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23791:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23791:14:1"
																	},
																	{
																		"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23807:29:1",
																		"type": "",
																		"value": "SafeMath: addition overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23784:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23784:53:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23784:53:1"
														}
													]
												},
												"name": "store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23765:6:1",
														"type": ""
													}
												],
												"src": "23667:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23996:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24006:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24072:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24077:2:1",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24013:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24013:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24006:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24178:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																	"nodeType": "YulIdentifier",
																	"src": "24089:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24089:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24089:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24191:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24202:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24207:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24198:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24198:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "24191:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23984:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23992:3:1",
														"type": ""
													}
												],
												"src": "23850:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24393:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24403:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24415:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24426:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24411:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24411:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24403:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24450:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24461:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24446:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24446:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24469:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24475:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24465:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24465:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24439:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24439:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24439:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24495:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24629:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24503:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24503:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24495:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24373:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24388:4:1",
														"type": ""
													}
												],
												"src": "24222:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24695:300:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24705:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "24728:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "24710:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24710:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "24705:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "24739:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "24762:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "24744:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24744:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "24739:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24937:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "24939:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24939:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24939:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "24849:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "24842:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24842:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "24835:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24835:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "24857:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "24864:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "24932:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "24860:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24860:74:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "24854:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24854:81:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "24831:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24831:105:1"
															},
															"nodeType": "YulIf",
															"src": "24828:131:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24969:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "24984:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "24987:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "24980:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24980:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "24969:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "24678:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "24681:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "24687:7:1",
														"type": ""
													}
												],
												"src": "24647:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25029:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25046:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25049:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25039:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25039:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25039:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25143:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25146:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25136:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25136:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25136:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25167:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25170:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "25160:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25160:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25160:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "25001:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25229:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25239:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25262:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "25244:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25244:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "25239:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25273:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25296:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "25278:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25278:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "25273:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25320:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "25322:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25322:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25322:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25317:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "25310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25310:9:1"
															},
															"nodeType": "YulIf",
															"src": "25307:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25352:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25361:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25364:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "25357:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25357:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "25352:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "25218:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "25221:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "25227:1:1",
														"type": ""
													}
												],
												"src": "25187:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25484:114:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25506:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25514:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25502:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25502:14:1"
																	},
																	{
																		"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25518:34:1",
																		"type": "",
																		"value": "SafeMath: multiplication overflo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25495:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25495:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25495:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25574:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25582:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25570:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25570:15:1"
																	},
																	{
																		"hexValue": "77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25587:3:1",
																		"type": "",
																		"value": "w"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25563:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25563:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25563:28:1"
														}
													]
												},
												"name": "store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "25476:6:1",
														"type": ""
													}
												],
												"src": "25378:220:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25750:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25760:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25826:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25831:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25767:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25767:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "25760:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25932:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																	"nodeType": "YulIdentifier",
																	"src": "25843:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25843:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25843:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25945:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25956:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25961:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25952:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25952:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "25945:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25738:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "25746:3:1",
														"type": ""
													}
												],
												"src": "25604:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26147:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26157:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "26169:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26180:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26165:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26165:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26157:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26204:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26215:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26200:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26200:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "26223:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26229:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "26219:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26219:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26193:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26193:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26193:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26249:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "26383:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26257:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26257:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26249:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26127:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "26142:4:1",
														"type": ""
													}
												],
												"src": "25976:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26460:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26471:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26487:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "26481:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26481:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "26471:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26443:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "26453:6:1",
														"type": ""
													}
												],
												"src": "26401:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26555:258:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26565:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "26574:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "26569:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26634:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "26659:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "26664:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "26655:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "26655:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "26678:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "26683:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "26674:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "26674:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "26668:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "26668:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "26648:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26648:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26648:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "26595:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26598:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "26592:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26592:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "26606:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "26608:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "26617:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26620:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "26613:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26613:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "26608:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "26588:3:1",
																"statements": []
															},
															"src": "26584:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26731:76:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "26781:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "26786:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "26777:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "26777:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26795:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "26770:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26770:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26770:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "26712:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26715:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "26709:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26709:13:1"
															},
															"nodeType": "YulIf",
															"src": "26706:101:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "26537:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "26542:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "26547:6:1",
														"type": ""
													}
												],
												"src": "26506:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26911:272:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26921:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26968:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "26935:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26935:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "26925:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26983:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27049:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "27054:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26990:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26990:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "26983:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "27096:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27103:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27092:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27092:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27110:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "27115:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "27070:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27070:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27070:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27131:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27142:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "27169:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "27147:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27147:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27138:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27138:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "27131:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26892:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26899:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26907:3:1",
														"type": ""
													}
												],
												"src": "26819:364:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27307:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27317:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27329:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27340:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27325:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27325:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27317:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27364:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27375:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27360:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27360:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "27383:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27389:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27379:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27379:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27353:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27353:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27353:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27409:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "27481:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "27490:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27417:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27417:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27409:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27279:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "27291:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "27302:4:1",
														"type": ""
													}
												],
												"src": "27189:313:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27553:146:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27563:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "27586:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "27568:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27568:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "27563:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "27597:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "27620:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "27602:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27602:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "27597:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "27644:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "27646:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27646:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27646:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "27638:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "27641:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "27635:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27635:8:1"
															},
															"nodeType": "YulIf",
															"src": "27632:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27676:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "27688:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "27691:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "27684:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27684:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "27676:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "27539:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "27542:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "27548:4:1",
														"type": ""
													}
												],
												"src": "27508:191:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$286_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$286_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$286__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_IERC721_$1048_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC721_$1048_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC721_$1048_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC721_$1048_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_contract$_IERC721_$1048_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function cleanup_t_contract$_IERC721_$1048(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC721_$1048(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC721_$1048(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC721_$1048(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC721_$1048(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_contract$_IERC721_$1048t_bool(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IERC721_$1048(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_contract$_IMigratorChef_$927(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IMigratorChef_$927(value) {\n        if iszero(eq(value, cleanup_t_contract$_IMigratorChef_$927(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IMigratorChef_$927(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IMigratorChef_$927(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IMigratorChef_$927(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IMigratorChef_$927(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function convert_t_contract$_IMigratorChef_$927_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IMigratorChef_$927_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IMigratorChef_$927_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IMigratorChef_$927__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IMigratorChef_$927_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function convert_t_contract$_INFTMasterChef_$1071_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_INFTMasterChef_$1071_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_INFTMasterChef_$1071_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_INFTMasterChef_$1071__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_INFTMasterChef_$1071_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_6bd482f4508d6ff87f5e2fd70a2544768e808d8d25d190c4a2ac86648d1a36cd(memPtr) {\n\n        mstore(add(memPtr, 0), \"You are not Owner of token id\")\n\n    }\n\n    function abi_encode_t_stringliteral_6bd482f4508d6ff87f5e2fd70a2544768e808d8d25d190c4a2ac86648d1a36cd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_6bd482f4508d6ff87f5e2fd70a2544768e808d8d25d190c4a2ac86648d1a36cd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6bd482f4508d6ff87f5e2fd70a2544768e808d8d25d190c4a2ac86648d1a36cd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6bd482f4508d6ff87f5e2fd70a2544768e808d8d25d190c4a2ac86648d1a36cd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df(memPtr) {\n\n        mstore(add(memPtr, 0), \"withdraw: not good\")\n\n    }\n\n    function abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount is zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeMath: addition overflow\")\n\n    }\n\n    function abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeMath: multiplication overflo\")\n\n        mstore(add(memPtr, 32), \"w\")\n\n    }\n\n    function abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x64482F79 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xA1EEF821 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD5545992 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD5545992 EQ PUSH2 0x4E6 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x516 JUMPI DUP1 PUSH4 0xE4D09896 EQ PUSH2 0x532 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x550 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0xA1EEF821 EQ PUSH2 0x472 JUMPI DUP1 PUSH4 0xBE70FBA3 EQ PUSH2 0x490 JUMPI DUP1 PUSH4 0xD0D41FE1 EQ PUSH2 0x4AC JUMPI DUP1 PUSH4 0xD49E77CD EQ PUSH2 0x4C8 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x8AA28550 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8AA28550 EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0x8DBB1E3A EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x441 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x64482F79 EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0x7CD07E47 EQ PUSH2 0x3B7 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x23CF3118 GT PUSH2 0x171 JUMPI DUP1 PUSH4 0x4F17DBAF GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x4F17DBAF EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0x5FFE6146 EQ PUSH2 0x36B JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x387 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x23CF3118 EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x301 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x150B7A02 GT PUSH2 0x1AD JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x1EAAA045 EQ PUSH2 0x2AD JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0xFE7EA17 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x141AA0BA EQ PUSH2 0x20E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x56C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x21AC JUMP JUMPDEST PUSH2 0x579 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x216 PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x223 SWAP2 SWAP1 PUSH2 0x2258 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x246 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x23F7 JUMP JUMPDEST PUSH2 0x625 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x24B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x21AC JUMP JUMPDEST PUSH2 0x639 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x286 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x297 PUSH2 0x699 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x25AC JUMP JUMPDEST PUSH2 0x69F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DE SWAP2 SWAP1 PUSH2 0x263D JUMP JUMPDEST PUSH2 0x82C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x266A JUMP JUMPDEST PUSH2 0x8EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x309 PUSH2 0xCC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x339 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x334 SWAP2 SWAP1 PUSH2 0x26AA JUMP JUMPDEST PUSH2 0xCCE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x369 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x21AC JUMP JUMPDEST PUSH2 0xEF3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x385 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x380 SWAP2 SWAP1 PUSH2 0x21AC JUMP JUMPDEST PUSH2 0x1133 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x38F PUSH2 0x11B9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0x26EA JUMP JUMPDEST PUSH2 0x11EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B5 PUSH2 0x12F8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3BF PUSH2 0x1380 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CC SWAP2 SWAP1 PUSH2 0x275E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DD PUSH2 0x13A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FB PUSH2 0x13AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x408 SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x426 SWAP2 SWAP1 PUSH2 0x266A JUMP JUMPDEST PUSH2 0x13D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x438 SWAP2 SWAP1 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x456 SWAP2 SWAP1 PUSH2 0x26AA JUMP JUMPDEST PUSH2 0x1406 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x469 SWAP3 SWAP2 SWAP1 PUSH2 0x27A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47A PUSH2 0x1437 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x487 SWAP2 SWAP1 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A5 SWAP2 SWAP1 PUSH2 0x21AC JUMP JUMPDEST PUSH2 0x143D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C1 SWAP2 SWAP1 PUSH2 0x27CC JUMP JUMPDEST PUSH2 0x1730 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D0 PUSH2 0x17F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4DD SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x500 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FB SWAP2 SWAP1 PUSH2 0x26AA JUMP JUMPDEST PUSH2 0x1816 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50D SWAP2 SWAP1 PUSH2 0x28B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x530 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x52B SWAP2 SWAP1 PUSH2 0x266A JUMP JUMPDEST PUSH2 0x18C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x53A PUSH2 0x1B27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x547 SWAP2 SWAP1 PUSH2 0x28FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x56A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x565 SWAP2 SWAP1 PUSH2 0x27CC JUMP JUMPDEST PUSH2 0x1B4D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x581 PUSH2 0x1C44 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x59F PUSH2 0x13AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EC SWAP1 PUSH2 0x2972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x649 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x6A7 PUSH2 0x1C44 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6C5 PUSH2 0x13AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x71B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x712 SWAP1 PUSH2 0x2972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x72A JUMPI PUSH2 0x729 PUSH2 0x11B9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0xA SLOAD NUMBER GT PUSH2 0x73D JUMPI PUSH1 0xA SLOAD PUSH2 0x73F JUMP JUMPDEST NUMBER JUMPDEST SWAP1 POP PUSH2 0x756 DUP5 PUSH1 0x9 SLOAD PUSH2 0x1C4C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x834 PUSH2 0x1C44 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x852 PUSH2 0x13AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89F SWAP1 PUSH2 0x2972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x902 JUMPI PUSH2 0x901 PUSH2 0x2992 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP1 DUP5 SUB PUSH2 0xA15 JUMPI PUSH2 0x978 DUP6 PUSH2 0xEF3 JUMP JUMPDEST PUSH2 0x9C0 DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0x9B2 PUSH5 0xE8D4A51000 PUSH2 0x9A4 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x1 ADD SLOAD PUSH2 0x1CAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D24 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D6E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x9D6 JUMPI PUSH2 0x9D5 CALLER DUP3 PUSH2 0x1DB8 JUMP JUMPDEST JUMPDEST PUSH2 0xA08 PUSH5 0xE8D4A51000 PUSH2 0x9FA DUP6 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x1 ADD SLOAD PUSH2 0x1CAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D24 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST DUP5 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xA6B JUMPI DUP7 DUP6 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA40 JUMPI PUSH2 0xA3F PUSH2 0x2992 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SUB PUSH2 0xA58 JUMPI PUSH1 0x1 SWAP3 POP DUP1 SWAP2 POP JUMPDEST DUP1 DUP1 PUSH2 0xA63 SWAP1 PUSH2 0x29F0 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA1A JUMP JUMPDEST POP PUSH1 0x1 DUP3 EQ PUSH2 0xAAF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA6 SWAP1 PUSH2 0x2A84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP5 PUSH1 0x1 ADD SLOAD LT ISZERO PUSH2 0xAF7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAEE SWAP1 PUSH2 0x2AF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB00 DUP8 PUSH2 0xEF3 JUMP JUMPDEST PUSH2 0xB48 DUP5 PUSH1 0x2 ADD SLOAD PUSH2 0xB3A PUSH5 0xE8D4A51000 PUSH2 0xB2C DUP10 PUSH1 0x3 ADD SLOAD DUP10 PUSH1 0x1 ADD SLOAD PUSH2 0x1CAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D24 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D6E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x0 DUP4 GT ISZERO PUSH2 0xB5E JUMPI PUSH2 0xB5D CALLER DUP5 PUSH2 0x1DB8 JUMP JUMPDEST JUMPDEST PUSH2 0xB76 PUSH1 0x1 DUP6 PUSH1 0x1 ADD SLOAD PUSH2 0x1D6E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xBB0 PUSH5 0xE8D4A51000 PUSH2 0xBA2 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x1 ADD SLOAD PUSH2 0x1CAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D24 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x0 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xBCE JUMPI PUSH2 0xBCD PUSH2 0x2992 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE DUP5 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E ADDRESS CALLER DUP10 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B10 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC6B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMPDEST DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP7 PUSH1 0x40 MLOAD PUSH2 0xCB9 SWAP2 SWAP1 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xCE5 JUMPI PUSH2 0xCE4 PUSH2 0x2992 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB1 SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDCE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDF2 SWAP2 SWAP1 PUSH2 0x2B5C JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD NUMBER GT DUP1 ISZERO PUSH2 0xE08 JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0xEA3 JUMPI PUSH1 0x0 PUSH2 0xE1D DUP6 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x13D5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE60 PUSH1 0x9 SLOAD PUSH2 0xE52 DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0xE44 PUSH1 0x4 SLOAD DUP8 PUSH2 0x1CAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D24 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xE9E PUSH2 0xE8F DUP5 PUSH2 0xE81 PUSH5 0xE8D4A51000 DUP6 PUSH2 0x1CAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D24 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x1C4C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH2 0xEE7 DUP4 PUSH1 0x2 ADD SLOAD PUSH2 0xED9 PUSH5 0xE8D4A51000 PUSH2 0xECB DUP7 DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0x1CAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D24 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D6E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF09 JUMPI PUSH2 0xF08 PUSH2 0x2992 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD NUMBER GT PUSH2 0xF2A JUMPI POP PUSH2 0x1130 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF89 SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFA6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFCA SWAP2 SWAP1 PUSH2 0x2B5C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xFE4 JUMPI NUMBER DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x1130 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFF4 DUP4 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x13D5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1037 PUSH1 0x9 SLOAD PUSH2 0x1029 DUP7 PUSH1 0x1 ADD SLOAD PUSH2 0x101B PUSH1 0x4 SLOAD DUP8 PUSH2 0x1CAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D24 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 ADDRESS DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1096 SWAP3 SWAP2 SWAP1 PUSH2 0x2B89 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10D9 SWAP2 SWAP1 PUSH2 0x2BC7 JUMP JUMPDEST POP PUSH2 0x111A PUSH2 0x1107 DUP5 PUSH2 0x10F9 PUSH5 0xE8D4A51000 DUP6 PUSH2 0x1CAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D24 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH1 0x3 ADD SLOAD PUSH2 0x1C4C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP NUMBER DUP5 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH2 0x113B PUSH2 0x1C44 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1159 PUSH2 0x13AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11A6 SWAP1 PUSH2 0x2972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x11E8 JUMPI PUSH2 0x11D7 DUP2 PUSH2 0xEF3 JUMP JUMPDEST DUP1 PUSH2 0x11E1 SWAP1 PUSH2 0x29F0 JUMP JUMPDEST SWAP1 POP PUSH2 0x11C6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x11F4 PUSH2 0x1C44 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1212 PUSH2 0x13AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1268 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x125F SWAP1 PUSH2 0x2972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x1277 JUMPI PUSH2 0x1276 PUSH2 0x11B9 JUMP JUMPDEST JUMPDEST PUSH2 0x12C3 DUP3 PUSH2 0x12B5 PUSH1 0x7 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x1292 JUMPI PUSH2 0x1291 PUSH2 0x2992 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x9 SLOAD PUSH2 0x1D6E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1C4C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x12DE JUMPI PUSH2 0x12DD PUSH2 0x2992 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x1300 PUSH2 0x1C44 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x131E PUSH2 0x13AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1374 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x136B SWAP1 PUSH2 0x2972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x137E PUSH1 0x0 PUSH2 0x1FAD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13FE PUSH1 0x5 SLOAD PUSH2 0x13F0 DUP6 DUP6 PUSH2 0x1D6E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1453 JUMPI PUSH2 0x1452 PUSH2 0x2992 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x14C0 DUP4 PUSH2 0xEF3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x150A DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0x14FC PUSH5 0xE8D4A51000 PUSH2 0x14EE DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x1 ADD SLOAD PUSH2 0x1CAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D24 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D6E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x154F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1546 SWAP1 PUSH2 0x2C40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15CE SWAP3 SWAP2 SWAP1 PUSH2 0x2B89 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1611 SWAP2 SWAP1 PUSH2 0x2BC7 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x849DF12C DUP3 CALLER PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x166F SWAP3 SWAP2 SWAP1 PUSH2 0x2C60 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1689 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x169D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x16D3 PUSH5 0xE8D4A51000 PUSH2 0x16C5 DUP6 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x1 ADD SLOAD PUSH2 0x1CAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D24 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1722 SWAP2 SWAP1 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x1738 PUSH2 0x1C44 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1756 PUSH2 0x13AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17A3 SWAP1 PUSH2 0x2972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x18BA JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x18A6 JUMPI JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x18DE JUMPI PUSH2 0x18DD PUSH2 0x2992 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x194B DUP5 PUSH2 0xEF3 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x19BA JUMPI PUSH1 0x0 PUSH2 0x19A2 DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0x1994 PUSH5 0xE8D4A51000 PUSH2 0x1986 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x1 ADD SLOAD PUSH2 0x1CAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D24 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D6E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x19B8 JUMPI PUSH2 0x19B7 CALLER DUP3 PUSH2 0x1DB8 JUMP JUMPDEST JUMPDEST POP JUMPDEST DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A1B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B10 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A49 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x1A65 PUSH1 0x1 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x1C4C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1A9F PUSH5 0xE8D4A51000 PUSH2 0x1A91 DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x1CAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D24 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 ADD DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1B19 SWAP2 SWAP1 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1B55 PUSH2 0x1C44 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B73 PUSH2 0x13AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1BC9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BC0 SWAP1 PUSH2 0x2972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C38 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C2F SWAP1 PUSH2 0x2CFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C41 DUP2 PUSH2 0x1FAD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0x1C5B SWAP2 SWAP1 PUSH2 0x2D1B JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1CA0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C97 SWAP1 PUSH2 0x2DBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SUB PUSH2 0x1CBC JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1D1E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0x1CCA SWAP2 SWAP1 PUSH2 0x2DDD JUMP JUMPDEST SWAP1 POP DUP3 DUP5 DUP3 PUSH2 0x1CD9 SWAP2 SWAP1 PUSH2 0x2E66 JUMP JUMPDEST EQ PUSH2 0x1D19 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D10 SWAP1 PUSH2 0x2F09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D66 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x2071 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DB0 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x20D4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E15 SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E32 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E56 SWAP2 SWAP1 PUSH2 0x2B5C JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1F06 JUMPI PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EBD SWAP3 SWAP2 SWAP1 PUSH2 0x2B89 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1EDC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F00 SWAP2 SWAP1 PUSH2 0x2BC7 JUMP JUMPDEST POP PUSH2 0x1FA8 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F63 SWAP3 SWAP2 SWAP1 PUSH2 0x2B89 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F82 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FA6 SWAP2 SWAP1 PUSH2 0x2BC7 JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x20B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20AF SWAP2 SWAP1 PUSH2 0x2FA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0x20C7 SWAP2 SWAP1 PUSH2 0x2E66 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x211C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2113 SWAP2 SWAP1 PUSH2 0x2FA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0x212B SWAP2 SWAP1 PUSH2 0x2FC2 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x214B DUP2 PUSH2 0x2138 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2166 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2142 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2189 DUP2 PUSH2 0x2138 JUMP JUMPDEST DUP2 EQ PUSH2 0x2194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21A6 DUP2 PUSH2 0x2180 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21C2 JUMPI PUSH2 0x21C1 PUSH2 0x2176 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21D0 DUP5 DUP3 DUP6 ADD PUSH2 0x2197 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x221E PUSH2 0x2219 PUSH2 0x2214 DUP5 PUSH2 0x21D9 JUMP JUMPDEST PUSH2 0x21F9 JUMP JUMPDEST PUSH2 0x21D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2230 DUP3 PUSH2 0x2203 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2242 DUP3 PUSH2 0x2225 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2252 DUP2 PUSH2 0x2237 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x226D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2249 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x227E DUP3 PUSH2 0x21D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x228E DUP2 PUSH2 0x2273 JUMP JUMPDEST DUP2 EQ PUSH2 0x2299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x22AB DUP2 PUSH2 0x2285 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2304 DUP3 PUSH2 0x22BB JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2323 JUMPI PUSH2 0x2322 PUSH2 0x22CC JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2336 PUSH2 0x216C JUMP JUMPDEST SWAP1 POP PUSH2 0x2342 DUP3 DUP3 PUSH2 0x22FB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2362 JUMPI PUSH2 0x2361 PUSH2 0x22CC JUMP JUMPDEST JUMPDEST PUSH2 0x236B DUP3 PUSH2 0x22BB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x239A PUSH2 0x2395 DUP5 PUSH2 0x2347 JUMP JUMPDEST PUSH2 0x232C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x23B6 JUMPI PUSH2 0x23B5 PUSH2 0x22B6 JUMP JUMPDEST JUMPDEST PUSH2 0x23C1 DUP5 DUP3 DUP6 PUSH2 0x2378 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x23DE JUMPI PUSH2 0x23DD PUSH2 0x22B1 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x23EE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2387 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2411 JUMPI PUSH2 0x2410 PUSH2 0x2176 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x241F DUP8 DUP3 DUP9 ADD PUSH2 0x229C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2430 DUP8 DUP3 DUP9 ADD PUSH2 0x229C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2441 DUP8 DUP3 DUP9 ADD PUSH2 0x2197 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2462 JUMPI PUSH2 0x2461 PUSH2 0x217B JUMP JUMPDEST JUMPDEST PUSH2 0x246E DUP8 DUP3 DUP9 ADD PUSH2 0x23C9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24AF DUP2 PUSH2 0x247A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24CA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x24A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24DB DUP3 PUSH2 0x2225 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24EB DUP2 PUSH2 0x24D0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2506 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x24E2 JUMP JUMPDEST PUSH2 0x2513 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2142 JUMP JUMPDEST PUSH2 0x2520 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2142 JUMP JUMPDEST PUSH2 0x252D PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2142 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2541 DUP3 PUSH2 0x2273 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2551 DUP2 PUSH2 0x2536 JUMP JUMPDEST DUP2 EQ PUSH2 0x255C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x256E DUP2 PUSH2 0x2548 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2589 DUP2 PUSH2 0x2574 JUMP JUMPDEST DUP2 EQ PUSH2 0x2594 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x25A6 DUP2 PUSH2 0x2580 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x25C5 JUMPI PUSH2 0x25C4 PUSH2 0x2176 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x25D3 DUP7 DUP3 DUP8 ADD PUSH2 0x2197 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x25E4 DUP7 DUP3 DUP8 ADD PUSH2 0x255F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x25F5 DUP7 DUP3 DUP8 ADD PUSH2 0x2597 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x260A DUP3 PUSH2 0x2273 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x261A DUP2 PUSH2 0x25FF JUMP JUMPDEST DUP2 EQ PUSH2 0x2625 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2637 DUP2 PUSH2 0x2611 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2653 JUMPI PUSH2 0x2652 PUSH2 0x2176 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2661 DUP5 DUP3 DUP6 ADD PUSH2 0x2628 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2681 JUMPI PUSH2 0x2680 PUSH2 0x2176 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x268F DUP6 DUP3 DUP7 ADD PUSH2 0x2197 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x26A0 DUP6 DUP3 DUP7 ADD PUSH2 0x2197 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26C1 JUMPI PUSH2 0x26C0 PUSH2 0x2176 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x26CF DUP6 DUP3 DUP7 ADD PUSH2 0x2197 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x26E0 DUP6 DUP3 DUP7 ADD PUSH2 0x229C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2703 JUMPI PUSH2 0x2702 PUSH2 0x2176 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2711 DUP7 DUP3 DUP8 ADD PUSH2 0x2197 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2722 DUP7 DUP3 DUP8 ADD PUSH2 0x2197 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2733 DUP7 DUP3 DUP8 ADD PUSH2 0x2597 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2748 DUP3 PUSH2 0x2225 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2758 DUP2 PUSH2 0x273D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2773 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x274F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2782 DUP2 PUSH2 0x2273 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x279D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2779 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x27B8 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2142 JUMP JUMPDEST PUSH2 0x27C5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2142 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27E2 JUMPI PUSH2 0x27E1 PUSH2 0x2176 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27F0 DUP5 DUP3 DUP6 ADD PUSH2 0x229C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x282E DUP2 PUSH2 0x2138 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2840 DUP4 DUP4 PUSH2 0x2825 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2864 DUP3 PUSH2 0x27F9 JUMP JUMPDEST PUSH2 0x286E DUP2 DUP6 PUSH2 0x2804 JUMP JUMPDEST SWAP4 POP PUSH2 0x2879 DUP4 PUSH2 0x2815 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x28AA JUMPI DUP2 MLOAD PUSH2 0x2891 DUP9 DUP3 PUSH2 0x2834 JUMP JUMPDEST SWAP8 POP PUSH2 0x289C DUP4 PUSH2 0x284C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x287D JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28D1 DUP2 DUP5 PUSH2 0x2859 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28E4 DUP3 PUSH2 0x2225 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28F4 DUP2 PUSH2 0x28D9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x290F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x28EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x295C PUSH1 0x20 DUP4 PUSH2 0x2915 JUMP JUMPDEST SWAP2 POP PUSH2 0x2967 DUP3 PUSH2 0x2926 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x298B DUP2 PUSH2 0x294F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x29FB DUP3 PUSH2 0x2138 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2A2D JUMPI PUSH2 0x2A2C PUSH2 0x29C1 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F7520617265206E6F74204F776E6572206F6620746F6B656E206964000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A6E PUSH1 0x1D DUP4 PUSH2 0x2915 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A79 DUP3 PUSH2 0x2A38 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A9D DUP2 PUSH2 0x2A61 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x77697468647261773A206E6F7420676F6F640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2ADA PUSH1 0x12 DUP4 PUSH2 0x2915 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AE5 DUP3 PUSH2 0x2AA4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B09 DUP2 PUSH2 0x2ACD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2B25 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2779 JUMP JUMPDEST PUSH2 0x2B32 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2779 JUMP JUMPDEST PUSH2 0x2B3F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2142 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2B56 DUP2 PUSH2 0x2180 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B72 JUMPI PUSH2 0x2B71 PUSH2 0x2176 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B80 DUP5 DUP3 DUP6 ADD PUSH2 0x2B47 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2B9E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2779 JUMP JUMPDEST PUSH2 0x2BAB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2142 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2BC1 DUP2 PUSH2 0x2580 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BDD JUMPI PUSH2 0x2BDC PUSH2 0x2176 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2BEB DUP5 DUP3 DUP6 ADD PUSH2 0x2BB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206973207A65726F000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C2A PUSH1 0xE DUP4 PUSH2 0x2915 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C35 DUP3 PUSH2 0x2BF4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C59 DUP2 PUSH2 0x2C1D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2C75 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2142 JUMP JUMPDEST PUSH2 0x2C82 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2779 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CE5 PUSH1 0x26 DUP4 PUSH2 0x2915 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CF0 DUP3 PUSH2 0x2C89 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D14 DUP2 PUSH2 0x2CD8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D26 DUP3 PUSH2 0x2138 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D31 DUP4 PUSH2 0x2138 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2D66 JUMPI PUSH2 0x2D65 PUSH2 0x29C1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DA7 PUSH1 0x1B DUP4 PUSH2 0x2915 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DB2 DUP3 PUSH2 0x2D71 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DD6 DUP2 PUSH2 0x2D9A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE8 DUP3 PUSH2 0x2138 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DF3 DUP4 PUSH2 0x2138 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2E2C JUMPI PUSH2 0x2E2B PUSH2 0x29C1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2E71 DUP3 PUSH2 0x2138 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E7C DUP4 PUSH2 0x2138 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2E8C JUMPI PUSH2 0x2E8B PUSH2 0x2E37 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EF3 PUSH1 0x21 DUP4 PUSH2 0x2915 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EFE DUP3 PUSH2 0x2E97 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F22 DUP2 PUSH2 0x2EE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2F52 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2F37 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2F61 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F72 DUP3 PUSH2 0x2F29 JUMP JUMPDEST PUSH2 0x2F7C DUP2 DUP6 PUSH2 0x2915 JUMP JUMPDEST SWAP4 POP PUSH2 0x2F8C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2F34 JUMP JUMPDEST PUSH2 0x2F95 DUP2 PUSH2 0x22BB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2FBA DUP2 DUP5 PUSH2 0x2F67 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FCD DUP3 PUSH2 0x2138 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FD8 DUP4 PUSH2 0x2138 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2FEB JUMPI PUSH2 0x2FEA PUSH2 0x29C1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD ADDMOD 0xF8 EXTCODESIZE MUL SWAP9 0xEE 0xE6 0xB6 0xFC DUP6 NUMBER 0xB8 PUSH18 0xE1E34A818D84539510B111F97A41DAB7C5A1 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "28007:10488:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31225:95;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;38387:105;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;29447:17;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;30922:164;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;29839:26;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;30080:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;31489:562;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;32527:102;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;35790:1525;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;30170:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;33108:753;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;34200:729;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;31094:123;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;33944:180;;;:::i;:::-;;32146:305;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;20826:103;;;:::i;:::-;;29776:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;29638:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;20175:87;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;32705:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;29921:64;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;29559:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;37323:570;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;38284:95;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;29492:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;32857:188;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;34998:739;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;29380:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;21084:201;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;31225:95;31270:7;31297:8;:15;;;;31290:22;;31225:95;:::o;38387:105::-;20406:12;:10;:12::i;:::-;20395:23;;:7;:5;:7::i;:::-;:23;;;20387:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;38475:9:::1;38461:11;:23;;;;38387:105:::0;:::o;29447:17::-;;;;;;;;;;;;;:::o;30922:164::-;31022:6;31048:30;;;31041:37;;30922:164;;;;;;:::o;29839:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;30080:34::-;;;;:::o;31489:562::-;20406:12;:10;:12::i;:::-;20395:23;;:7;:5;:7::i;:::-;:23;;;20387:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;31594:11:::1;31590:61;;;31622:17;:15;:17::i;:::-;31590:61;31661:23;31702:10;;31687:12;:25;:53;;31730:10;;31687:53;;;31715:12;31687:53;31661:79;;31769:32;31789:11;31769:15;;:19;;:32;;;;:::i;:::-;31751:15;:50;;;;31812:8;31840:192;;;;;;;;31878:9;31840:192;;;;;;31918:11;31840:192;;;;31965:15;31840:192;;;;32015:1;31840:192;;::::0;31812:231:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31579:472;31489:562:::0;;;:::o;32527:102::-;20406:12;:10;:12::i;:::-;20395:23;;:7;:5;:7::i;:::-;:23;;;20387:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;32612:9:::1;32601:8;;:20;;;;;;;;;;;;;;;;;;32527:102:::0;:::o;35790:1525::-;35858:21;35882:8;35891:4;35882:14;;;;;;;;:::i;:::-;;;;;;;;;;;;35858:38;;35907:21;35931:8;:14;35940:4;35931:14;;;;;;;;;;;:26;35946:10;35931:26;;;;;;;;;;;;;;;35907:50;;35968:15;36009:1;35997:8;:13;35994:1262;;36026:16;36037:4;36026:10;:16::i;:::-;36067:67;36118:4;:15;;;36067:46;36108:4;36067:36;36083:4;:19;;;36067:4;:11;;;:15;;:36;;;;:::i;:::-;:40;;:46;;;;:::i;:::-;:50;;:67;;;;:::i;:::-;36057:77;;36162:1;36152:7;:11;36149:86;;;36183:36;36199:10;36211:7;36183:15;:36::i;:::-;36149:86;36267:46;36308:4;36267:36;36283:4;:19;;;36267:4;:11;;;:15;;:36;;;;:::i;:::-;:40;;:46;;;;:::i;:::-;36249:4;:15;;:64;;;;35994:1262;;;36345:18;36382:20;36421:9;36417:205;36434:4;:13;;:20;;;;36432:1;:22;36417:205;;;36502:8;36482:4;:13;;36496:1;36482:16;;;;;;;;:::i;:::-;;;;;;;;;;:28;36479:128;;36547:1;36534:14;;36586:1;36571:16;;36479:128;36456:3;;;;;:::i;:::-;;;;36417:205;;;;36658:1;36644:10;:15;36636:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;36731:1;36716:4;:11;;;:16;;36708:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;36770:16;36781:4;36770:10;:16::i;:::-;36811:67;36862:4;:15;;;36811:46;36852:4;36811:36;36827:4;:19;;;36811:4;:11;;;:15;;:36;;;;:::i;:::-;:40;;:46;;;;:::i;:::-;:50;;:67;;;;:::i;:::-;36801:77;;36906:1;36896:7;:11;36893:86;;;36927:36;36943:10;36955:7;36927:15;:36::i;:::-;36893:86;37007:18;37023:1;37007:4;:11;;;:15;;:18;;;;:::i;:::-;36993:4;:11;;:32;;;;37058:46;37099:4;37058:36;37074:4;:19;;;37058:4;:11;;;:15;;:36;;;;:::i;:::-;:40;;:46;;;;:::i;:::-;37040:4;:15;;:64;;;;37126:4;:13;;37140:12;37126:27;;;;;;;;:::i;:::-;;;;;;;;;37119:34;;;37168:4;:13;;;;;;;;;;;;:30;;;37207:4;37222:10;37235:8;37168:76;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36330:926;;35994:1262;37292:4;37280:10;37271:36;;;37298:8;37271:36;;;;;;:::i;:::-;;;;;;;;35847:1468;;;35790:1525;;:::o;30170:25::-;;;;:::o;33108:753::-;33180:7;33199:21;33223:8;33232:4;33223:14;;;;;;;;:::i;:::-;;;;;;;;;;;;33199:38;;33248:21;33272:8;:14;33281:4;33272:14;;;;;;;;;;;:21;33287:5;33272:21;;;;;;;;;;;;;;;33248:45;;33304:22;33329:4;:19;;;33304:44;;33359:17;33379:4;:13;;;;;;;;;;;;:23;;;33411:4;33379:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;33359:58;;33447:4;:20;;;33432:12;:35;:53;;;;;33484:1;33471:9;:14;;33432:53;33428:346;;;33502:18;33523:49;33537:4;:20;;;33559:12;33523:13;:49::i;:::-;33502:70;;33587:17;33607:69;33660:15;;33607:48;33639:4;:15;;;33607:27;33622:11;;33607:10;:14;;:27;;;;:::i;:::-;:31;;:48;;;;:::i;:::-;:52;;:69;;;;:::i;:::-;33587:89;;33708:54;33727:34;33751:9;33727:19;33741:4;33727:9;:13;;:19;;;;:::i;:::-;:23;;:34;;;;:::i;:::-;33708:14;:18;;:54;;;;:::i;:::-;33691:71;;33487:287;;33428:346;33791:62;33837:4;:15;;;33791:41;33827:4;33791:31;33807:14;33791:4;:11;;;:15;;:31;;;;:::i;:::-;:35;;:41;;;;:::i;:::-;:45;;:62;;;;:::i;:::-;33784:69;;;;;;33108:753;;;;:::o;34200:729::-;34252:21;34276:8;34285:4;34276:14;;;;;;;;:::i;:::-;;;;;;;;;;;;34252:38;;34321:4;:20;;;34305:12;:36;34301:75;;34358:7;;;34301:75;34386:17;34406:4;:13;;;;;;;;;;;;:23;;;34438:4;34406:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;34386:58;;34472:1;34459:9;:14;34455:103;;34513:12;34490:4;:20;;:35;;;;34540:7;;;;34455:103;34568:18;34589:49;34603:4;:20;;;34625:12;34589:13;:49::i;:::-;34568:70;;34649:17;34669:69;34722:15;;34669:48;34701:4;:15;;;34669:27;34684:11;;34669:10;:14;;:27;;;;:::i;:::-;:31;;:48;;;;:::i;:::-;:52;;:69;;;;:::i;:::-;34649:89;;34749:3;;;;;;;;;;;:8;;;34766:4;34773:9;34749:34;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;34816:59;34840:34;34864:9;34840:19;34854:4;34840:9;:13;;:19;;;;:::i;:::-;:23;;:34;;;;:::i;:::-;34816:4;:19;;;:23;;:59;;;;:::i;:::-;34794:4;:19;;:81;;;;34909:12;34886:4;:20;;:35;;;;34241:688;;;;34200:729;;:::o;31094:123::-;20406:12;:10;:12::i;:::-;20395:23;;:7;:5;:7::i;:::-;:23;;;20387:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;31193:16:::1;31174;:35;;;;31094:123:::0;:::o;33944:180::-;33989:14;34006:8;:15;;;;33989:32;;34037:11;34032:85;34060:6;34054:3;:12;34032:85;;;34090:15;34101:3;34090:10;:15::i;:::-;34068:5;;;;:::i;:::-;;;34032:85;;;;33978:146;33944:180::o;32146:305::-;20406:12;:10;:12::i;:::-;20395:23;;:7;:5;:7::i;:::-;:23;;;20387:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;32245:11:::1;32241:61;;;32273:17;:15;:17::i;:::-;32241:61;32330:63;32381:11;32330:46;32350:8;32359:4;32350:14;;;;;;;;:::i;:::-;;;;;;;;;;;;:25;;;32330:15;;:19;;:46;;;;:::i;:::-;:50;;:63;;;;:::i;:::-;32312:15;:81;;;;32432:11;32404:8;32413:4;32404:14;;;;;;;;:::i;:::-;;;;;;;;;;;;:25;;:39;;;;32146:305:::0;;;:::o;20826:103::-;20406:12;:10;:12::i;:::-;20395:23;;:7;:5;:7::i;:::-;:23;;;20387:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;20891:30:::1;20918:1;20891:18;:30::i;:::-;20826:103::o:0;29776:29::-;;;;;;;;;;;;;:::o;29638:35::-;;;;:::o;20175:87::-;20221:7;20248:6;;;;;;;;;;;20241:13;;20175:87;:::o;32705:144::-;32777:7;32805:36;32824:16;;32805:14;32813:5;32805:3;:7;;:14;;;;:::i;:::-;:18;;:36;;;;:::i;:::-;32798:43;;32705:144;;;;:::o;29921:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;29559:26::-;;;;:::o;37323:570::-;37375:21;37399:8;37408:4;37399:14;;;;;;;;:::i;:::-;;;;;;;;;;;;37375:38;;37424:21;37448:8;:14;37457:4;37448:14;;;;;;;;;;;:26;37463:10;37448:26;;;;;;;;;;;;;;;37424:50;;37485:16;37496:4;37485:10;:16::i;:::-;37512:15;37530:67;37581:4;:15;;;37530:46;37571:4;37530:36;37546:4;:19;;;37530:4;:11;;;:15;;:36;;;;:::i;:::-;:40;;:46;;;;:::i;:::-;:50;;:67;;;;:::i;:::-;37512:85;;37626:1;37616:7;:11;37608:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;37657:3;;;;;;;;;;;:11;;;37677:13;;;;;;;;;;;37693:7;37657:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;37712:13;;;;;;;;;;;:26;;;37739:7;37748:10;37712:47;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;37788:46;37829:4;37788:36;37804:4;:19;;;37788:4;:11;;;:15;;:36;;;;:::i;:::-;:40;;:46;;;;:::i;:::-;37770:4;:15;;:64;;;;37871:4;37859:10;37850:35;;;37877:7;37850:35;;;;;;:::i;:::-;;;;;;;;37364:529;;;37323:570;:::o;38284:95::-;20406:12;:10;:12::i;:::-;20395:23;;:7;:5;:7::i;:::-;:23;;;20387:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;38363:8:::1;38353:7;;:18;;;;;;;;;;;;;;;;;;38284:95:::0;:::o;29492:22::-;;;;;;;;;;;;;:::o;32857:188::-;32932:16;32961:21;32985:8;:14;32994:4;32985:14;;;;;;;;;;;:21;33000:5;32985:21;;;;;;;;;;;;;;;32961:45;;33024:4;:13;;33017:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32857:188;;;;:::o;34998:739::-;35065:21;35089:8;35098:4;35089:14;;;;;;;;:::i;:::-;;;;;;;;;;;;35065:38;;35114:21;35138:8;:14;35147:4;35138:14;;;;;;;;;;;:26;35153:10;35138:26;;;;;;;;;;;;;;;35114:50;;35175:16;35186:4;35175:10;:16::i;:::-;35220:1;35206:4;:11;;;:15;35202:233;;;35238:15;35256:67;35307:4;:15;;;35256:46;35297:4;35256:36;35272:4;:19;;;35256:4;:11;;;:15;;:36;;;;:::i;:::-;:40;;:46;;;;:::i;:::-;:50;;:67;;;;:::i;:::-;35238:85;;35351:1;35341:7;:11;35338:86;;;35372:36;35388:10;35400:7;35372:15;:36::i;:::-;35338:86;35223:212;35202:233;35445:4;:13;;;;;;;;;;;;:30;;;35484:10;35505:4;35512:8;35445:76;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35546:18;35562:1;35546:4;:11;;;:15;;:18;;;;:::i;:::-;35532:4;:11;;:32;;;;35593:46;35634:4;35593:36;35609:4;:19;;;35593:4;:11;;;:15;;:36;;;;:::i;:::-;:40;;:46;;;;:::i;:::-;35575:4;:15;;:64;;;;35650:4;:13;;35669:8;35650:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35714:4;35702:10;35694:35;;;35720:8;35694:35;;;;;;:::i;:::-;;;;;;;;35054:683;;34998:739;;:::o;29380:35::-;;;;;;;;;;;;;:::o;21084:201::-;20406:12;:10;:12::i;:::-;20395:23;;:7;:5;:7::i;:::-;:23;;;20387:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;21193:1:::1;21173:22;;:8;:22;;::::0;21165:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;21249:28;21268:8;21249:18;:28::i;:::-;21084:201:::0;:::o;19549:98::-;19602:7;19629:10;19622:17;;19549:98;:::o;455:181::-;513:7;533:9;549:1;545;:5;;;;:::i;:::-;533:17;;574:1;569;:6;;561:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;627:1;620:8;;;455:181;;;;:::o;1827:471::-;1885:7;2135:1;2130;:6;2126:47;;2160:1;2153:8;;;;2126:47;2185:9;2201:1;2197;:5;;;;:::i;:::-;2185:17;;2230:1;2225;2221;:5;;;;:::i;:::-;:10;2213:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2289:1;2282:8;;;1827:471;;;;;:::o;2766:132::-;2824:7;2851:39;2855:1;2858;2851:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;2844:46;;2766:132;;;;:::o;911:136::-;969:7;996:43;1000:1;1003;996:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;989:50;;911:136;;;;:::o;38005:271::-;38080:14;38097:3;;;;;;;;;;;:13;;;38119:4;38097:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;38080:45;;38150:6;38140:7;:16;38136:133;;;38173:3;;;;;;;;;;;:12;;;38186:3;38191:6;38173:25;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;38136:133;;;38231:3;;;;;;;;;;;:12;;;38244:3;38249:7;38231:26;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;38136:133;38069:207;38005:271;;:::o;21445:191::-;21519:16;21538:6;;;;;;;;;;;21519:25;;21564:8;21555:6;;:17;;;;;;;;;;;;;;;;;;21619:8;21588:40;;21609:8;21588:40;;;;;;;;;;;;21508:128;21445:191;:::o;3428:345::-;3514:7;3613:1;3609;:5;3616:12;3601:28;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;3640:9;3656:1;3652;:5;;;;:::i;:::-;3640:17;;3764:1;3757:8;;;3428:345;;;;;:::o;1384:192::-;1470:7;1503:1;1498;:6;;1506:12;1490:29;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1530:9;1546:1;1542;:5;;;;:::i;:::-;1530:17;;1567:1;1560:8;;;1384:192;;;;;:::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:75::-;475:6;508:2;502:9;492:19;;442:75;:::o;523:117::-;632:1;629;622:12;646:117;755:1;752;745:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:60::-;1537:3;1558:5;1551:12;;1509:60;;;:::o;1575:142::-;1625:9;1658:53;1676:34;1685:24;1703:5;1685:24;:::i;:::-;1676:34;:::i;:::-;1658:53;:::i;:::-;1645:66;;1575:142;;;:::o;1723:126::-;1773:9;1806:37;1837:5;1806:37;:::i;:::-;1793:50;;1723:126;;;:::o;1855:140::-;1919:9;1952:37;1983:5;1952:37;:::i;:::-;1939:50;;1855:140;;;:::o;2001:159::-;2102:51;2147:5;2102:51;:::i;:::-;2097:3;2090:64;2001:159;;:::o;2166:250::-;2273:4;2311:2;2300:9;2296:18;2288:26;;2324:85;2406:1;2395:9;2391:17;2382:6;2324:85;:::i;:::-;2166:250;;;;:::o;2422:96::-;2459:7;2488:24;2506:5;2488:24;:::i;:::-;2477:35;;2422:96;;;:::o;2524:122::-;2597:24;2615:5;2597:24;:::i;:::-;2590:5;2587:35;2577:63;;2636:1;2633;2626:12;2577:63;2524:122;:::o;2652:139::-;2698:5;2736:6;2723:20;2714:29;;2752:33;2779:5;2752:33;:::i;:::-;2652:139;;;;:::o;2797:117::-;2906:1;2903;2896:12;2920:117;3029:1;3026;3019:12;3043:102;3084:6;3135:2;3131:7;3126:2;3119:5;3115:14;3111:28;3101:38;;3043:102;;;:::o;3151:180::-;3199:77;3196:1;3189:88;3296:4;3293:1;3286:15;3320:4;3317:1;3310:15;3337:281;3420:27;3442:4;3420:27;:::i;:::-;3412:6;3408:40;3550:6;3538:10;3535:22;3514:18;3502:10;3499:34;3496:62;3493:88;;;3561:18;;:::i;:::-;3493:88;3601:10;3597:2;3590:22;3380:238;3337:281;;:::o;3624:129::-;3658:6;3685:20;;:::i;:::-;3675:30;;3714:33;3742:4;3734:6;3714:33;:::i;:::-;3624:129;;;:::o;3759:307::-;3820:4;3910:18;3902:6;3899:30;3896:56;;;3932:18;;:::i;:::-;3896:56;3970:29;3992:6;3970:29;:::i;:::-;3962:37;;4054:4;4048;4044:15;4036:23;;3759:307;;;:::o;4072:154::-;4156:6;4151:3;4146;4133:30;4218:1;4209:6;4204:3;4200:16;4193:27;4072:154;;;:::o;4232:410::-;4309:5;4334:65;4350:48;4391:6;4350:48;:::i;:::-;4334:65;:::i;:::-;4325:74;;4422:6;4415:5;4408:21;4460:4;4453:5;4449:16;4498:3;4489:6;4484:3;4480:16;4477:25;4474:112;;;4505:79;;:::i;:::-;4474:112;4595:41;4629:6;4624:3;4619;4595:41;:::i;:::-;4315:327;4232:410;;;;;:::o;4661:338::-;4716:5;4765:3;4758:4;4750:6;4746:17;4742:27;4732:122;;4773:79;;:::i;:::-;4732:122;4890:6;4877:20;4915:78;4989:3;4981:6;4974:4;4966:6;4962:17;4915:78;:::i;:::-;4906:87;;4722:277;4661:338;;;;:::o;5005:943::-;5100:6;5108;5116;5124;5173:3;5161:9;5152:7;5148:23;5144:33;5141:120;;;5180:79;;:::i;:::-;5141:120;5300:1;5325:53;5370:7;5361:6;5350:9;5346:22;5325:53;:::i;:::-;5315:63;;5271:117;5427:2;5453:53;5498:7;5489:6;5478:9;5474:22;5453:53;:::i;:::-;5443:63;;5398:118;5555:2;5581:53;5626:7;5617:6;5606:9;5602:22;5581:53;:::i;:::-;5571:63;;5526:118;5711:2;5700:9;5696:18;5683:32;5742:18;5734:6;5731:30;5728:117;;;5764:79;;:::i;:::-;5728:117;5869:62;5923:7;5914:6;5903:9;5899:22;5869:62;:::i;:::-;5859:72;;5654:287;5005:943;;;;;;;:::o;5954:149::-;5990:7;6030:66;6023:5;6019:78;6008:89;;5954:149;;;:::o;6109:115::-;6194:23;6211:5;6194:23;:::i;:::-;6189:3;6182:36;6109:115;;:::o;6230:218::-;6321:4;6359:2;6348:9;6344:18;6336:26;;6372:69;6438:1;6427:9;6423:17;6414:6;6372:69;:::i;:::-;6230:218;;;;:::o;6454:142::-;6520:9;6553:37;6584:5;6553:37;:::i;:::-;6540:50;;6454:142;;;:::o;6602:163::-;6705:53;6752:5;6705:53;:::i;:::-;6700:3;6693:66;6602:163;;:::o;6771:585::-;6964:4;7002:3;6991:9;6987:19;6979:27;;7016:87;7100:1;7089:9;7085:17;7076:6;7016:87;:::i;:::-;7113:72;7181:2;7170:9;7166:18;7157:6;7113:72;:::i;:::-;7195;7263:2;7252:9;7248:18;7239:6;7195:72;:::i;:::-;7277;7345:2;7334:9;7330:18;7321:6;7277:72;:::i;:::-;6771:585;;;;;;;:::o;7362:112::-;7415:7;7444:24;7462:5;7444:24;:::i;:::-;7433:35;;7362:112;;;:::o;7480:154::-;7569:40;7603:5;7569:40;:::i;:::-;7562:5;7559:51;7549:79;;7624:1;7621;7614:12;7549:79;7480:154;:::o;7640:171::-;7702:5;7740:6;7727:20;7718:29;;7756:49;7799:5;7756:49;:::i;:::-;7640:171;;;;:::o;7817:90::-;7851:7;7894:5;7887:13;7880:21;7869:32;;7817:90;;;:::o;7913:116::-;7983:21;7998:5;7983:21;:::i;:::-;7976:5;7973:32;7963:60;;8019:1;8016;8009:12;7963:60;7913:116;:::o;8035:133::-;8078:5;8116:6;8103:20;8094:29;;8132:30;8156:5;8132:30;:::i;:::-;8035:133;;;;:::o;8174:645::-;8264:6;8272;8280;8329:2;8317:9;8308:7;8304:23;8300:32;8297:119;;;8335:79;;:::i;:::-;8297:119;8455:1;8480:53;8525:7;8516:6;8505:9;8501:22;8480:53;:::i;:::-;8470:63;;8426:117;8582:2;8608:69;8669:7;8660:6;8649:9;8645:22;8608:69;:::i;:::-;8598:79;;8553:134;8726:2;8752:50;8794:7;8785:6;8774:9;8770:22;8752:50;:::i;:::-;8742:60;;8697:115;8174:645;;;;;:::o;8825:117::-;8883:7;8912:24;8930:5;8912:24;:::i;:::-;8901:35;;8825:117;;;:::o;8948:164::-;9042:45;9081:5;9042:45;:::i;:::-;9035:5;9032:56;9022:84;;9102:1;9099;9092:12;9022:84;8948:164;:::o;9118:181::-;9185:5;9223:6;9210:20;9201:29;;9239:54;9287:5;9239:54;:::i;:::-;9118:181;;;;:::o;9305:371::-;9385:6;9434:2;9422:9;9413:7;9409:23;9405:32;9402:119;;;9440:79;;:::i;:::-;9402:119;9560:1;9585:74;9651:7;9642:6;9631:9;9627:22;9585:74;:::i;:::-;9575:84;;9531:138;9305:371;;;;:::o;9682:474::-;9750:6;9758;9807:2;9795:9;9786:7;9782:23;9778:32;9775:119;;;9813:79;;:::i;:::-;9775:119;9933:1;9958:53;10003:7;9994:6;9983:9;9979:22;9958:53;:::i;:::-;9948:63;;9904:117;10060:2;10086:53;10131:7;10122:6;10111:9;10107:22;10086:53;:::i;:::-;10076:63;;10031:118;9682:474;;;;;:::o;10162:::-;10230:6;10238;10287:2;10275:9;10266:7;10262:23;10258:32;10255:119;;;10293:79;;:::i;:::-;10255:119;10413:1;10438:53;10483:7;10474:6;10463:9;10459:22;10438:53;:::i;:::-;10428:63;;10384:117;10540:2;10566:53;10611:7;10602:6;10591:9;10587:22;10566:53;:::i;:::-;10556:63;;10511:118;10162:474;;;;;:::o;10642:613::-;10716:6;10724;10732;10781:2;10769:9;10760:7;10756:23;10752:32;10749:119;;;10787:79;;:::i;:::-;10749:119;10907:1;10932:53;10977:7;10968:6;10957:9;10953:22;10932:53;:::i;:::-;10922:63;;10878:117;11034:2;11060:53;11105:7;11096:6;11085:9;11081:22;11060:53;:::i;:::-;11050:63;;11005:118;11162:2;11188:50;11230:7;11221:6;11210:9;11206:22;11188:50;:::i;:::-;11178:60;;11133:115;10642:613;;;;;:::o;11261:147::-;11332:9;11365:37;11396:5;11365:37;:::i;:::-;11352:50;;11261:147;;;:::o;11414:173::-;11522:58;11574:5;11522:58;:::i;:::-;11517:3;11510:71;11414:173;;:::o;11593:264::-;11707:4;11745:2;11734:9;11730:18;11722:26;;11758:92;11847:1;11836:9;11832:17;11823:6;11758:92;:::i;:::-;11593:264;;;;:::o;11863:118::-;11950:24;11968:5;11950:24;:::i;:::-;11945:3;11938:37;11863:118;;:::o;11987:222::-;12080:4;12118:2;12107:9;12103:18;12095:26;;12131:71;12199:1;12188:9;12184:17;12175:6;12131:71;:::i;:::-;11987:222;;;;:::o;12215:332::-;12336:4;12374:2;12363:9;12359:18;12351:26;;12387:71;12455:1;12444:9;12440:17;12431:6;12387:71;:::i;:::-;12468:72;12536:2;12525:9;12521:18;12512:6;12468:72;:::i;:::-;12215:332;;;;;:::o;12553:329::-;12612:6;12661:2;12649:9;12640:7;12636:23;12632:32;12629:119;;;12667:79;;:::i;:::-;12629:119;12787:1;12812:53;12857:7;12848:6;12837:9;12833:22;12812:53;:::i;:::-;12802:63;;12758:117;12553:329;;;;:::o;12888:114::-;12955:6;12989:5;12983:12;12973:22;;12888:114;;;:::o;13008:184::-;13107:11;13141:6;13136:3;13129:19;13181:4;13176:3;13172:14;13157:29;;13008:184;;;;:::o;13198:132::-;13265:4;13288:3;13280:11;;13318:4;13313:3;13309:14;13301:22;;13198:132;;;:::o;13336:108::-;13413:24;13431:5;13413:24;:::i;:::-;13408:3;13401:37;13336:108;;:::o;13450:179::-;13519:10;13540:46;13582:3;13574:6;13540:46;:::i;:::-;13618:4;13613:3;13609:14;13595:28;;13450:179;;;;:::o;13635:113::-;13705:4;13737;13732:3;13728:14;13720:22;;13635:113;;;:::o;13784:732::-;13903:3;13932:54;13980:5;13932:54;:::i;:::-;14002:86;14081:6;14076:3;14002:86;:::i;:::-;13995:93;;14112:56;14162:5;14112:56;:::i;:::-;14191:7;14222:1;14207:284;14232:6;14229:1;14226:13;14207:284;;;14308:6;14302:13;14335:63;14394:3;14379:13;14335:63;:::i;:::-;14328:70;;14421:60;14474:6;14421:60;:::i;:::-;14411:70;;14267:224;14254:1;14251;14247:9;14242:14;;14207:284;;;14211:14;14507:3;14500:10;;13908:608;;;13784:732;;;;:::o;14522:373::-;14665:4;14703:2;14692:9;14688:18;14680:26;;14752:9;14746:4;14742:20;14738:1;14727:9;14723:17;14716:47;14780:108;14883:4;14874:6;14780:108;:::i;:::-;14772:116;;14522:373;;;;:::o;14901:149::-;14974:9;15007:37;15038:5;15007:37;:::i;:::-;14994:50;;14901:149;;;:::o;15056:177::-;15166:60;15220:5;15166:60;:::i;:::-;15161:3;15154:73;15056:177;;:::o;15239:268::-;15355:4;15393:2;15382:9;15378:18;15370:26;;15406:94;15497:1;15486:9;15482:17;15473:6;15406:94;:::i;:::-;15239:268;;;;:::o;15513:169::-;15597:11;15631:6;15626:3;15619:19;15671:4;15666:3;15662:14;15647:29;;15513:169;;;;:::o;15688:182::-;15828:34;15824:1;15816:6;15812:14;15805:58;15688:182;:::o;15876:366::-;16018:3;16039:67;16103:2;16098:3;16039:67;:::i;:::-;16032:74;;16115:93;16204:3;16115:93;:::i;:::-;16233:2;16228:3;16224:12;16217:19;;15876:366;;;:::o;16248:419::-;16414:4;16452:2;16441:9;16437:18;16429:26;;16501:9;16495:4;16491:20;16487:1;16476:9;16472:17;16465:47;16529:131;16655:4;16529:131;:::i;:::-;16521:139;;16248:419;;;:::o;16673:180::-;16721:77;16718:1;16711:88;16818:4;16815:1;16808:15;16842:4;16839:1;16832:15;16859:180;16907:77;16904:1;16897:88;17004:4;17001:1;16994:15;17028:4;17025:1;17018:15;17045:233;17084:3;17107:24;17125:5;17107:24;:::i;:::-;17098:33;;17153:66;17146:5;17143:77;17140:103;;17223:18;;:::i;:::-;17140:103;17270:1;17263:5;17259:13;17252:20;;17045:233;;;:::o;17284:179::-;17424:31;17420:1;17412:6;17408:14;17401:55;17284:179;:::o;17469:366::-;17611:3;17632:67;17696:2;17691:3;17632:67;:::i;:::-;17625:74;;17708:93;17797:3;17708:93;:::i;:::-;17826:2;17821:3;17817:12;17810:19;;17469:366;;;:::o;17841:419::-;18007:4;18045:2;18034:9;18030:18;18022:26;;18094:9;18088:4;18084:20;18080:1;18069:9;18065:17;18058:47;18122:131;18248:4;18122:131;:::i;:::-;18114:139;;17841:419;;;:::o;18266:168::-;18406:20;18402:1;18394:6;18390:14;18383:44;18266:168;:::o;18440:366::-;18582:3;18603:67;18667:2;18662:3;18603:67;:::i;:::-;18596:74;;18679:93;18768:3;18679:93;:::i;:::-;18797:2;18792:3;18788:12;18781:19;;18440:366;;;:::o;18812:419::-;18978:4;19016:2;19005:9;19001:18;18993:26;;19065:9;19059:4;19055:20;19051:1;19040:9;19036:17;19029:47;19093:131;19219:4;19093:131;:::i;:::-;19085:139;;18812:419;;;:::o;19237:442::-;19386:4;19424:2;19413:9;19409:18;19401:26;;19437:71;19505:1;19494:9;19490:17;19481:6;19437:71;:::i;:::-;19518:72;19586:2;19575:9;19571:18;19562:6;19518:72;:::i;:::-;19600;19668:2;19657:9;19653:18;19644:6;19600:72;:::i;:::-;19237:442;;;;;;:::o;19685:143::-;19742:5;19773:6;19767:13;19758:22;;19789:33;19816:5;19789:33;:::i;:::-;19685:143;;;;:::o;19834:351::-;19904:6;19953:2;19941:9;19932:7;19928:23;19924:32;19921:119;;;19959:79;;:::i;:::-;19921:119;20079:1;20104:64;20160:7;20151:6;20140:9;20136:22;20104:64;:::i;:::-;20094:74;;20050:128;19834:351;;;;:::o;20191:332::-;20312:4;20350:2;20339:9;20335:18;20327:26;;20363:71;20431:1;20420:9;20416:17;20407:6;20363:71;:::i;:::-;20444:72;20512:2;20501:9;20497:18;20488:6;20444:72;:::i;:::-;20191:332;;;;;:::o;20529:137::-;20583:5;20614:6;20608:13;20599:22;;20630:30;20654:5;20630:30;:::i;:::-;20529:137;;;;:::o;20672:345::-;20739:6;20788:2;20776:9;20767:7;20763:23;20759:32;20756:119;;;20794:79;;:::i;:::-;20756:119;20914:1;20939:61;20992:7;20983:6;20972:9;20968:22;20939:61;:::i;:::-;20929:71;;20885:125;20672:345;;;;:::o;21023:164::-;21163:16;21159:1;21151:6;21147:14;21140:40;21023:164;:::o;21193:366::-;21335:3;21356:67;21420:2;21415:3;21356:67;:::i;:::-;21349:74;;21432:93;21521:3;21432:93;:::i;:::-;21550:2;21545:3;21541:12;21534:19;;21193:366;;;:::o;21565:419::-;21731:4;21769:2;21758:9;21754:18;21746:26;;21818:9;21812:4;21808:20;21804:1;21793:9;21789:17;21782:47;21846:131;21972:4;21846:131;:::i;:::-;21838:139;;21565:419;;;:::o;21990:332::-;22111:4;22149:2;22138:9;22134:18;22126:26;;22162:71;22230:1;22219:9;22215:17;22206:6;22162:71;:::i;:::-;22243:72;22311:2;22300:9;22296:18;22287:6;22243:72;:::i;:::-;21990:332;;;;;:::o;22328:225::-;22468:34;22464:1;22456:6;22452:14;22445:58;22537:8;22532:2;22524:6;22520:15;22513:33;22328:225;:::o;22559:366::-;22701:3;22722:67;22786:2;22781:3;22722:67;:::i;:::-;22715:74;;22798:93;22887:3;22798:93;:::i;:::-;22916:2;22911:3;22907:12;22900:19;;22559:366;;;:::o;22931:419::-;23097:4;23135:2;23124:9;23120:18;23112:26;;23184:9;23178:4;23174:20;23170:1;23159:9;23155:17;23148:47;23212:131;23338:4;23212:131;:::i;:::-;23204:139;;22931:419;;;:::o;23356:305::-;23396:3;23415:20;23433:1;23415:20;:::i;:::-;23410:25;;23449:20;23467:1;23449:20;:::i;:::-;23444:25;;23603:1;23535:66;23531:74;23528:1;23525:81;23522:107;;;23609:18;;:::i;:::-;23522:107;23653:1;23650;23646:9;23639:16;;23356:305;;;;:::o;23667:177::-;23807:29;23803:1;23795:6;23791:14;23784:53;23667:177;:::o;23850:366::-;23992:3;24013:67;24077:2;24072:3;24013:67;:::i;:::-;24006:74;;24089:93;24178:3;24089:93;:::i;:::-;24207:2;24202:3;24198:12;24191:19;;23850:366;;;:::o;24222:419::-;24388:4;24426:2;24415:9;24411:18;24403:26;;24475:9;24469:4;24465:20;24461:1;24450:9;24446:17;24439:47;24503:131;24629:4;24503:131;:::i;:::-;24495:139;;24222:419;;;:::o;24647:348::-;24687:7;24710:20;24728:1;24710:20;:::i;:::-;24705:25;;24744:20;24762:1;24744:20;:::i;:::-;24739:25;;24932:1;24864:66;24860:74;24857:1;24854:81;24849:1;24842:9;24835:17;24831:105;24828:131;;;24939:18;;:::i;:::-;24828:131;24987:1;24984;24980:9;24969:20;;24647:348;;;;:::o;25001:180::-;25049:77;25046:1;25039:88;25146:4;25143:1;25136:15;25170:4;25167:1;25160:15;25187:185;25227:1;25244:20;25262:1;25244:20;:::i;:::-;25239:25;;25278:20;25296:1;25278:20;:::i;:::-;25273:25;;25317:1;25307:35;;25322:18;;:::i;:::-;25307:35;25364:1;25361;25357:9;25352:14;;25187:185;;;;:::o;25378:220::-;25518:34;25514:1;25506:6;25502:14;25495:58;25587:3;25582:2;25574:6;25570:15;25563:28;25378:220;:::o;25604:366::-;25746:3;25767:67;25831:2;25826:3;25767:67;:::i;:::-;25760:74;;25843:93;25932:3;25843:93;:::i;:::-;25961:2;25956:3;25952:12;25945:19;;25604:366;;;:::o;25976:419::-;26142:4;26180:2;26169:9;26165:18;26157:26;;26229:9;26223:4;26219:20;26215:1;26204:9;26200:17;26193:47;26257:131;26383:4;26257:131;:::i;:::-;26249:139;;25976:419;;;:::o;26401:99::-;26453:6;26487:5;26481:12;26471:22;;26401:99;;;:::o;26506:307::-;26574:1;26584:113;26598:6;26595:1;26592:13;26584:113;;;26683:1;26678:3;26674:11;26668:18;26664:1;26659:3;26655:11;26648:39;26620:2;26617:1;26613:10;26608:15;;26584:113;;;26715:6;26712:1;26709:13;26706:101;;;26795:1;26786:6;26781:3;26777:16;26770:27;26706:101;26555:258;26506:307;;;:::o;26819:364::-;26907:3;26935:39;26968:5;26935:39;:::i;:::-;26990:71;27054:6;27049:3;26990:71;:::i;:::-;26983:78;;27070:52;27115:6;27110:3;27103:4;27096:5;27092:16;27070:52;:::i;:::-;27147:29;27169:6;27147:29;:::i;:::-;27142:3;27138:39;27131:46;;26911:272;26819:364;;;;:::o;27189:313::-;27302:4;27340:2;27329:9;27325:18;27317:26;;27389:9;27383:4;27379:20;27375:1;27364:9;27360:17;27353:47;27417:78;27490:4;27481:6;27417:78;:::i;:::-;27409:86;;27189:313;;;;:::o;27508:191::-;27548:4;27568:20;27586:1;27568:20;:::i;:::-;27563:25;;27602:20;27620:1;27602:20;:::i;:::-;27597:25;;27641:1;27638;27635:8;27632:34;;;27646:18;;:::i;:::-;27632:34;27691:1;27688;27684:9;27676:17;;27508:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2466400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"BONUS_MULTIPLIER()": "2474",
								"DRG()": "infinite",
								"DRGPerBlock()": "2474",
								"NFTMasterChef()": "infinite",
								"add(uint256,address,bool)": "infinite",
								"compundDRG(uint256)": "infinite",
								"deposit(uint256,uint256)": "infinite",
								"devaddr()": "2625",
								"getMultiplier(uint256,uint256)": "infinite",
								"getUserTokenIds(uint256,address)": "infinite",
								"massUpdatePools()": "infinite",
								"migrator()": "infinite",
								"onERC721Received(address,address,uint256,bytes)": "infinite",
								"owner()": "2589",
								"pendingDRG(uint256,address)": "infinite",
								"poolInfo(uint256)": "infinite",
								"poolLength()": "2492",
								"renounceOwnership()": "30442",
								"set(uint256,uint256,bool)": "infinite",
								"setDevAddress(address)": "27051",
								"setMigrator(address)": "27051",
								"startBlock()": "2519",
								"totalAllocPoint()": "2519",
								"transferOwnership(address)": "30830",
								"updateDRGPerBlock(uint256)": "24829",
								"updateMultiplier(uint256)": "24849",
								"updatePool(uint256)": "infinite",
								"userInfo(uint256,address)": "infinite",
								"withdraw(uint256,uint256)": "infinite"
							},
							"internal": {
								"safeDRGTransfer(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 28007,
									"end": 38495,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 28007,
									"end": 38495,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 28007,
									"end": 38495,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 29672,
									"end": 29673,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 29638,
									"end": 29673,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 29638,
									"end": 29673,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30113,
									"end": 30114,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30080,
									"end": 30114,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 30080,
									"end": 30114,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 30488,
									"end": 30828,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20054,
									"end": 20086,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 20073,
									"end": 20085,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 20073,
									"end": 20083,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 20073,
									"end": 20083,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20073,
									"end": 20083,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 20073,
									"end": 20085,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20073,
									"end": 20085,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 20073,
									"end": 20085,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 20073,
									"end": 20085,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 20073,
									"end": 20085,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20054,
									"end": 20072,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 20054,
									"end": 20072,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20054,
									"end": 20072,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 20054,
									"end": 20086,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20054,
									"end": 20086,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 20054,
									"end": 20086,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 20054,
									"end": 20086,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 20054,
									"end": 20086,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30674,
									"end": 30678,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 30668,
									"end": 30671,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 30668,
									"end": 30671,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30668,
									"end": 30678,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 30668,
									"end": 30678,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 30668,
									"end": 30678,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30668,
									"end": 30678,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 30668,
									"end": 30678,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30668,
									"end": 30678,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 30668,
									"end": 30678,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 30668,
									"end": 30678,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 30668,
									"end": 30678,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30668,
									"end": 30678,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30668,
									"end": 30678,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30668,
									"end": 30678,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 30668,
									"end": 30678,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30668,
									"end": 30678,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 30668,
									"end": 30678,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 30668,
									"end": 30678,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30668,
									"end": 30678,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30668,
									"end": 30678,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30705,
									"end": 30719,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30689,
									"end": 30702,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30689,
									"end": 30702,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30689,
									"end": 30719,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 30689,
									"end": 30719,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 30689,
									"end": 30719,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30689,
									"end": 30719,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 30689,
									"end": 30719,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30689,
									"end": 30719,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 30689,
									"end": 30719,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 30689,
									"end": 30719,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 30689,
									"end": 30719,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30689,
									"end": 30719,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30689,
									"end": 30719,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30689,
									"end": 30719,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 30689,
									"end": 30719,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30689,
									"end": 30719,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 30689,
									"end": 30719,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 30689,
									"end": 30719,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30689,
									"end": 30719,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30689,
									"end": 30719,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30740,
									"end": 30748,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30730,
									"end": 30737,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 30730,
									"end": 30737,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30730,
									"end": 30748,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 30730,
									"end": 30748,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 30730,
									"end": 30748,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30730,
									"end": 30748,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 30730,
									"end": 30748,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30730,
									"end": 30748,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 30730,
									"end": 30748,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 30730,
									"end": 30748,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 30730,
									"end": 30748,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30730,
									"end": 30748,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30730,
									"end": 30748,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30730,
									"end": 30748,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 30730,
									"end": 30748,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30730,
									"end": 30748,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 30730,
									"end": 30748,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 30730,
									"end": 30748,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30730,
									"end": 30748,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30730,
									"end": 30748,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30773,
									"end": 30785,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30759,
									"end": 30770,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 30759,
									"end": 30785,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30759,
									"end": 30785,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30759,
									"end": 30785,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30759,
									"end": 30785,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30809,
									"end": 30820,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30796,
									"end": 30806,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 30796,
									"end": 30820,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30796,
									"end": 30820,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30796,
									"end": 30820,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30796,
									"end": 30820,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 28007,
									"end": 38495,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 28007,
									"end": 38495,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 19549,
									"end": 19647,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 19549,
									"end": 19647,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19602,
									"end": 19609,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19629,
									"end": 19639,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 19622,
									"end": 19639,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19622,
									"end": 19639,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 19549,
									"end": 19647,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19549,
									"end": 19647,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 21445,
									"end": 21636,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 21445,
									"end": 21636,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21519,
									"end": 21535,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21538,
									"end": 21544,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21538,
									"end": 21544,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21538,
									"end": 21544,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21538,
									"end": 21544,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 21538,
									"end": 21544,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21538,
									"end": 21544,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 21538,
									"end": 21544,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 21538,
									"end": 21544,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21538,
									"end": 21544,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 21538,
									"end": 21544,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21538,
									"end": 21544,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21519,
									"end": 21544,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21519,
									"end": 21544,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21564,
									"end": 21572,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21555,
									"end": 21561,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21555,
									"end": 21561,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21619,
									"end": 21627,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21588,
									"end": 21628,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21588,
									"end": 21628,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21609,
									"end": 21617,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21588,
									"end": 21628,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21588,
									"end": 21628,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21588,
									"end": 21628,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 21588,
									"end": 21628,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 21588,
									"end": 21628,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 21588,
									"end": 21628,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 21588,
									"end": 21628,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 21588,
									"end": 21628,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21588,
									"end": 21628,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 21588,
									"end": 21628,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 21588,
									"end": 21628,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21588,
									"end": 21628,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 21508,
									"end": 21636,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21445,
									"end": 21636,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21445,
									"end": 21636,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 678,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 678,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 619,
									"end": 626,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 666,
									"end": 671,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 648,
									"end": 672,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 648,
									"end": 672,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 637,
									"end": 672,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 637,
									"end": 672,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 568,
									"end": 678,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 678,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 684,
									"end": 834,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 684,
									"end": 834,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 803,
									"end": 808,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 771,
									"end": 809,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 771,
									"end": 809,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 771,
									"end": 809,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 761,
									"end": 810,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 751,
									"end": 828,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 824,
									"end": 825,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 821,
									"end": 822,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 814,
									"end": 826,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 751,
									"end": 828,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 684,
									"end": 834,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 684,
									"end": 834,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 911,
									"end": 916,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 942,
									"end": 948,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 936,
									"end": 949,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 927,
									"end": 949,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 927,
									"end": 949,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 999,
									"end": 1004,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 958,
									"end": 1005,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 840,
									"end": 1011,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1017,
									"end": 1136,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1017,
									"end": 1136,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1077,
									"end": 1084,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1106,
									"end": 1130,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 1124,
									"end": 1129,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1106,
									"end": 1130,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1106,
									"end": 1130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1106,
									"end": 1130,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 1106,
									"end": 1130,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1095,
									"end": 1130,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1095,
									"end": 1130,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1017,
									"end": 1136,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1017,
									"end": 1136,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1017,
									"end": 1136,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1017,
									"end": 1136,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1142,
									"end": 1310,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1142,
									"end": 1310,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1238,
									"end": 1285,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1279,
									"end": 1284,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1238,
									"end": 1285,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1238,
									"end": 1285,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1238,
									"end": 1285,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1238,
									"end": 1285,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1231,
									"end": 1236,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1228,
									"end": 1286,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1218,
									"end": 1304,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 1218,
									"end": 1304,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1300,
									"end": 1301,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1290,
									"end": 1302,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1218,
									"end": 1304,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 1218,
									"end": 1304,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1142,
									"end": 1310,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1142,
									"end": 1310,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1316,
									"end": 1505,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 1316,
									"end": 1505,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1396,
									"end": 1401,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1427,
									"end": 1433,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1421,
									"end": 1434,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1412,
									"end": 1434,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1412,
									"end": 1434,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1443,
									"end": 1499,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 1493,
									"end": 1498,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1443,
									"end": 1499,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1443,
									"end": 1499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1443,
									"end": 1499,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 1443,
									"end": 1499,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1316,
									"end": 1505,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1316,
									"end": 1505,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1316,
									"end": 1505,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1316,
									"end": 1505,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1316,
									"end": 1505,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1511,
									"end": 1633,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1511,
									"end": 1633,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1584,
									"end": 1608,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 1602,
									"end": 1607,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1584,
									"end": 1608,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1584,
									"end": 1608,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1584,
									"end": 1608,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 1584,
									"end": 1608,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1577,
									"end": 1582,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1574,
									"end": 1609,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1564,
									"end": 1627,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 1564,
									"end": 1627,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1623,
									"end": 1624,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1620,
									"end": 1621,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1613,
									"end": 1625,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1564,
									"end": 1627,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 1564,
									"end": 1627,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1511,
									"end": 1633,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1511,
									"end": 1633,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1639,
									"end": 1782,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1639,
									"end": 1782,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1696,
									"end": 1701,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1727,
									"end": 1733,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1721,
									"end": 1734,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1712,
									"end": 1734,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1712,
									"end": 1734,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1743,
									"end": 1776,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 1770,
									"end": 1775,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1743,
									"end": 1776,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1743,
									"end": 1776,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1743,
									"end": 1776,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 1743,
									"end": 1776,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1639,
									"end": 1782,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1639,
									"end": 1782,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1639,
									"end": 1782,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1639,
									"end": 1782,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1639,
									"end": 1782,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1788,
									"end": 1865,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1788,
									"end": 1865,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1825,
									"end": 1832,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1854,
									"end": 1859,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1843,
									"end": 1859,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1843,
									"end": 1859,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1788,
									"end": 1865,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1788,
									"end": 1865,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1788,
									"end": 1865,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1788,
									"end": 1865,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1871,
									"end": 1993,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1871,
									"end": 1993,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1944,
									"end": 1968,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1944,
									"end": 1968,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1944,
									"end": 1968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1944,
									"end": 1968,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 1944,
									"end": 1968,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1937,
									"end": 1942,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1934,
									"end": 1969,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1924,
									"end": 1987,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1924,
									"end": 1987,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1983,
									"end": 1984,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1980,
									"end": 1981,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1973,
									"end": 1985,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1924,
									"end": 1987,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1924,
									"end": 1987,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1871,
									"end": 1993,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1871,
									"end": 1993,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1999,
									"end": 2142,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1999,
									"end": 2142,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2056,
									"end": 2061,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2087,
									"end": 2093,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2081,
									"end": 2094,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2072,
									"end": 2094,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2072,
									"end": 2094,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2103,
									"end": 2136,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 2130,
									"end": 2135,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2103,
									"end": 2136,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 2103,
									"end": 2136,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2103,
									"end": 2136,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 2103,
									"end": 2136,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1999,
									"end": 2142,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1999,
									"end": 2142,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1999,
									"end": 2142,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1999,
									"end": 2142,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1999,
									"end": 2142,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2148,
									"end": 3199,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2148,
									"end": 3199,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2291,
									"end": 2297,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2299,
									"end": 2305,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2307,
									"end": 2313,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2315,
									"end": 2321,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2323,
									"end": 2329,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2372,
									"end": 2375,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 2360,
									"end": 2369,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2351,
									"end": 2358,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2347,
									"end": 2370,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2343,
									"end": 2376,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 2340,
									"end": 2460,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2340,
									"end": 2460,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 2340,
									"end": 2460,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2379,
									"end": 2458,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 2379,
									"end": 2458,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 2379,
									"end": 2458,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2379,
									"end": 2458,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 2379,
									"end": 2458,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2340,
									"end": 2460,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 2340,
									"end": 2460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2499,
									"end": 2500,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2524,
									"end": 2602,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 2594,
									"end": 2601,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2585,
									"end": 2591,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2574,
									"end": 2583,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 2570,
									"end": 2592,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2524,
									"end": 2602,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 2524,
									"end": 2602,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2524,
									"end": 2602,
									"name": "tag",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 2524,
									"end": 2602,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2514,
									"end": 2602,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 2514,
									"end": 2602,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2470,
									"end": 2612,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2651,
									"end": 2653,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2677,
									"end": 2764,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 2756,
									"end": 2763,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2747,
									"end": 2753,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2736,
									"end": 2745,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 2732,
									"end": 2754,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2677,
									"end": 2764,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 2677,
									"end": 2764,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2677,
									"end": 2764,
									"name": "tag",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 2677,
									"end": 2764,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2667,
									"end": 2764,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2667,
									"end": 2764,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2622,
									"end": 2774,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2813,
									"end": 2815,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2839,
									"end": 2903,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 2895,
									"end": 2902,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2886,
									"end": 2892,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2875,
									"end": 2884,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 2871,
									"end": 2893,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2839,
									"end": 2903,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 2839,
									"end": 2903,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2839,
									"end": 2903,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 2839,
									"end": 2903,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2829,
									"end": 2903,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2829,
									"end": 2903,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2784,
									"end": 2913,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2952,
									"end": 2954,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 2978,
									"end": 3042,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 3034,
									"end": 3041,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 3025,
									"end": 3031,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3014,
									"end": 3023,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 3010,
									"end": 3032,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2978,
									"end": 3042,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 2978,
									"end": 3042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2978,
									"end": 3042,
									"name": "tag",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 2978,
									"end": 3042,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2968,
									"end": 3042,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2968,
									"end": 3042,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2923,
									"end": 3052,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3091,
									"end": 3094,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 3118,
									"end": 3182,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 3174,
									"end": 3181,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 3165,
									"end": 3171,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3154,
									"end": 3163,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 3150,
									"end": 3172,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3118,
									"end": 3182,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 3118,
									"end": 3182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3118,
									"end": 3182,
									"name": "tag",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 3118,
									"end": 3182,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3108,
									"end": 3182,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3108,
									"end": 3182,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3062,
									"end": 3192,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2148,
									"end": 3199,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2148,
									"end": 3199,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 2148,
									"end": 3199,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2148,
									"end": 3199,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2148,
									"end": 3199,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 2148,
									"end": 3199,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2148,
									"end": 3199,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2148,
									"end": 3199,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2148,
									"end": 3199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 28007,
									"end": 38495,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 28007,
									"end": 38495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28007,
									"end": 38495,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28007,
									"end": 38495,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28007,
									"end": 38495,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28007,
									"end": 38495,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28007,
									"end": 38495,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 28007,
									"end": 38495,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28007,
									"end": 38495,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200708f83b0298eee6b6fc8543b871e1e34a818d84539510b111f97a41dab7c5a164736f6c634300080f0033",
									".code": [
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "64482F79"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "A1EEF821"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "D5545992"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "D5545992"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "E2BBB158"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "E4D09896"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "A1EEF821"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "BE70FBA3"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "D0D41FE1"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "D49E77CD"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "8AA28550"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "8AA28550"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "8DBB1E3A"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "93F1A40B"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "64482F79"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "7CD07E47"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "23CF3118"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "4F17DBAF"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "4F17DBAF"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "51EB05A6"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "5FFE6146"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "630B5BA1"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "23CF3118"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "441A3E70"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "48CD4CB1"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "1526FE27"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "17CAF6F1"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "1EAAA045"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "81E3EDA"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "FE7EA17"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "141AA0BA"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31225,
											"end": 31320,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31225,
											"end": 31320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31225,
											"end": 31320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 31225,
											"end": 31320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31225,
											"end": 31320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31225,
											"end": 31320,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 31225,
											"end": 31320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31225,
											"end": 31320,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31225,
											"end": 31320,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31225,
											"end": 31320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 31225,
											"end": 31320,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31225,
											"end": 31320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31225,
											"end": 31320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 31225,
											"end": 31320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31225,
											"end": 31320,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 31225,
											"end": 31320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31225,
											"end": 31320,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31225,
											"end": 31320,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31225,
											"end": 31320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31225,
											"end": 31320,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31225,
											"end": 31320,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31225,
											"end": 31320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31225,
											"end": 31320,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 38387,
											"end": 38492,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38387,
											"end": 38492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38387,
											"end": 38492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 38387,
											"end": 38492,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38387,
											"end": 38492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38387,
											"end": 38492,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38387,
											"end": 38492,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38387,
											"end": 38492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38387,
											"end": 38492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38387,
											"end": 38492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38387,
											"end": 38492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 38387,
											"end": 38492,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38387,
											"end": 38492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38387,
											"end": 38492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 38387,
											"end": 38492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38387,
											"end": 38492,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 38387,
											"end": 38492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38387,
											"end": 38492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 38387,
											"end": 38492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38387,
											"end": 38492,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 38387,
											"end": 38492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38387,
											"end": 38492,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 29447,
											"end": 29464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 29447,
											"end": 29464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 30922,
											"end": 31086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 30922,
											"end": 31086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 30922,
											"end": 31086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 29839,
											"end": 29865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 29839,
											"end": 29865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 29839,
											"end": 29865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 30080,
											"end": 30114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 30080,
											"end": 30114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 31489,
											"end": 32051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 31489,
											"end": 32051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 32527,
											"end": 32629,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 32527,
											"end": 32629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32527,
											"end": 32629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 32527,
											"end": 32629,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32527,
											"end": 32629,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32527,
											"end": 32629,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32527,
											"end": 32629,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32527,
											"end": 32629,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32527,
											"end": 32629,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32527,
											"end": 32629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32527,
											"end": 32629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 32527,
											"end": 32629,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32527,
											"end": 32629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32527,
											"end": 32629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 32527,
											"end": 32629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32527,
											"end": 32629,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 32527,
											"end": 32629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32527,
											"end": 32629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 32527,
											"end": 32629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32527,
											"end": 32629,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 32527,
											"end": 32629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32527,
											"end": 32629,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 35790,
											"end": 37315,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 35790,
											"end": 37315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35790,
											"end": 37315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 35790,
											"end": 37315,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35790,
											"end": 37315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35790,
											"end": 37315,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 35790,
											"end": 37315,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35790,
											"end": 37315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35790,
											"end": 37315,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35790,
											"end": 37315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35790,
											"end": 37315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 35790,
											"end": 37315,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35790,
											"end": 37315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35790,
											"end": 37315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 35790,
											"end": 37315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35790,
											"end": 37315,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 35790,
											"end": 37315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35790,
											"end": 37315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 35790,
											"end": 37315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35790,
											"end": 37315,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 35790,
											"end": 37315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35790,
											"end": 37315,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 30170,
											"end": 30195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 30170,
											"end": 30195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 33108,
											"end": 33861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 33108,
											"end": 33861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 33108,
											"end": 33861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 34200,
											"end": 34929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 34200,
											"end": 34929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 31094,
											"end": 31217,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 31094,
											"end": 31217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31094,
											"end": 31217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 31094,
											"end": 31217,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31094,
											"end": 31217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31094,
											"end": 31217,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31094,
											"end": 31217,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31094,
											"end": 31217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31094,
											"end": 31217,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31094,
											"end": 31217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31094,
											"end": 31217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 31094,
											"end": 31217,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31094,
											"end": 31217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31094,
											"end": 31217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 31094,
											"end": 31217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31094,
											"end": 31217,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 31094,
											"end": 31217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31094,
											"end": 31217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 31094,
											"end": 31217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31094,
											"end": 31217,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 31094,
											"end": 31217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31094,
											"end": 31217,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 33944,
											"end": 34124,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 33944,
											"end": 34124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33944,
											"end": 34124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 33944,
											"end": 34124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 33944,
											"end": 34124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33944,
											"end": 34124,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 33944,
											"end": 34124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33944,
											"end": 34124,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 32146,
											"end": 32451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 32146,
											"end": 32451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 20826,
											"end": 20929,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 20826,
											"end": 20929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20826,
											"end": 20929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 20826,
											"end": 20929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 20826,
											"end": 20929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20826,
											"end": 20929,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 20826,
											"end": 20929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20826,
											"end": 20929,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29776,
											"end": 29805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 29776,
											"end": 29805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 29638,
											"end": 29673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 29638,
											"end": 29673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 20175,
											"end": 20262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 20175,
											"end": 20262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 32705,
											"end": 32849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 32705,
											"end": 32849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 32705,
											"end": 32849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 29921,
											"end": 29985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 29921,
											"end": 29985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 29921,
											"end": 29985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 29559,
											"end": 29585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 29559,
											"end": 29585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 37323,
											"end": 37893,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 37323,
											"end": 37893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37323,
											"end": 37893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 37323,
											"end": 37893,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37323,
											"end": 37893,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37323,
											"end": 37893,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 37323,
											"end": 37893,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37323,
											"end": 37893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37323,
											"end": 37893,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37323,
											"end": 37893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37323,
											"end": 37893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 37323,
											"end": 37893,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37323,
											"end": 37893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37323,
											"end": 37893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 37323,
											"end": 37893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37323,
											"end": 37893,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 37323,
											"end": 37893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37323,
											"end": 37893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 37323,
											"end": 37893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37323,
											"end": 37893,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 37323,
											"end": 37893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37323,
											"end": 37893,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 38284,
											"end": 38379,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 38284,
											"end": 38379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38284,
											"end": 38379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 38284,
											"end": 38379,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38284,
											"end": 38379,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38284,
											"end": 38379,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38284,
											"end": 38379,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38284,
											"end": 38379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38284,
											"end": 38379,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38284,
											"end": 38379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38284,
											"end": 38379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 38284,
											"end": 38379,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38284,
											"end": 38379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38284,
											"end": 38379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 38284,
											"end": 38379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38284,
											"end": 38379,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 38284,
											"end": 38379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38284,
											"end": 38379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 38284,
											"end": 38379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38284,
											"end": 38379,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 38284,
											"end": 38379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38284,
											"end": 38379,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 29492,
											"end": 29514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 29492,
											"end": 29514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 32857,
											"end": 33045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 32857,
											"end": 33045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 32857,
											"end": 33045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 34998,
											"end": 35737,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 34998,
											"end": 35737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34998,
											"end": 35737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 34998,
											"end": 35737,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34998,
											"end": 35737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34998,
											"end": 35737,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 34998,
											"end": 35737,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34998,
											"end": 35737,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34998,
											"end": 35737,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34998,
											"end": 35737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34998,
											"end": 35737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 34998,
											"end": 35737,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34998,
											"end": 35737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34998,
											"end": 35737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 34998,
											"end": 35737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34998,
											"end": 35737,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 34998,
											"end": 35737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34998,
											"end": 35737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 34998,
											"end": 35737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34998,
											"end": 35737,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 34998,
											"end": 35737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34998,
											"end": 35737,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 29380,
											"end": 29415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 29380,
											"end": 29415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 21084,
											"end": 21285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 21084,
											"end": 21285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 31225,
											"end": 31320,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31225,
											"end": 31320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31270,
											"end": 31277,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31297,
											"end": 31305,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 31297,
											"end": 31312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31297,
											"end": 31312,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31297,
											"end": 31312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31297,
											"end": 31312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31290,
											"end": 31312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31290,
											"end": 31312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31225,
											"end": 31320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31225,
											"end": 31320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38387,
											"end": 38492,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 38387,
											"end": 38492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 20406,
											"end": 20416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 20406,
											"end": 20418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 20395,
											"end": 20400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 20395,
											"end": 20402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 20387,
											"end": 20455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38475,
											"end": 38484,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38461,
											"end": 38472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38461,
											"end": 38484,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38461,
											"end": 38484,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38461,
											"end": 38484,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 38461,
											"end": 38484,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38387,
											"end": 38492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38387,
											"end": 38492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31022,
											"end": 31028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31048,
											"end": 31078,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 31048,
											"end": 31078,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 31048,
											"end": 31078,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 31041,
											"end": 31078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31041,
											"end": 31078,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30080,
											"end": 30114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 20406,
											"end": 20416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 20406,
											"end": 20418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 20395,
											"end": 20400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 20395,
											"end": 20402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 20387,
											"end": 20455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31594,
											"end": 31605,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31590,
											"end": 31651,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31590,
											"end": 31651,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 31590,
											"end": 31651,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31622,
											"end": 31639,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 31622,
											"end": 31637,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 31622,
											"end": 31639,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31622,
											"end": 31639,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 31622,
											"end": 31639,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31590,
											"end": 31651,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 31590,
											"end": 31651,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31661,
											"end": 31684,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31702,
											"end": 31712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 31702,
											"end": 31712,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31687,
											"end": 31699,
											"modifierDepth": 1,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 31687,
											"end": 31712,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31687,
											"end": 31740,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 31687,
											"end": 31740,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31730,
											"end": 31740,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 31730,
											"end": 31740,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31687,
											"end": 31740,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 31687,
											"end": 31740,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31687,
											"end": 31740,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 31687,
											"end": 31740,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31715,
											"end": 31727,
											"modifierDepth": 1,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 31687,
											"end": 31740,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 31687,
											"end": 31740,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31661,
											"end": 31740,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31661,
											"end": 31740,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31769,
											"end": 31801,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 31789,
											"end": 31800,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31769,
											"end": 31784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 31769,
											"end": 31784,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31769,
											"end": 31788,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 31769,
											"end": 31788,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31769,
											"end": 31801,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31769,
											"end": 31801,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31769,
											"end": 31801,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31769,
											"end": 31801,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31769,
											"end": 31801,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31769,
											"end": 31801,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 31769,
											"end": 31801,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31751,
											"end": 31766,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 31751,
											"end": 31801,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31751,
											"end": 31801,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31751,
											"end": 31801,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31751,
											"end": 31801,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 31820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 31840,
											"end": 32032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31840,
											"end": 32032,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31840,
											"end": 32032,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31840,
											"end": 32032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 31840,
											"end": 32032,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31840,
											"end": 32032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31840,
											"end": 32032,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31840,
											"end": 32032,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31878,
											"end": 31887,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31840,
											"end": 32032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31840,
											"end": 32032,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31840,
											"end": 32032,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31840,
											"end": 32032,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31840,
											"end": 32032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31840,
											"end": 32032,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31918,
											"end": 31929,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31840,
											"end": 32032,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31840,
											"end": 32032,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31840,
											"end": 32032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31840,
											"end": 32032,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31965,
											"end": 31980,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31840,
											"end": 32032,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31840,
											"end": 32032,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31840,
											"end": 32032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31840,
											"end": 32032,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32015,
											"end": 32016,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31840,
											"end": 32032,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31840,
											"end": 32032,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31840,
											"end": 32032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31579,
											"end": 32051,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31489,
											"end": 32051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32527,
											"end": 32629,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 32527,
											"end": 32629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 20406,
											"end": 20416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 20406,
											"end": 20418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 20395,
											"end": 20400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 20395,
											"end": 20402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 20387,
											"end": 20455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32612,
											"end": 32621,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32601,
											"end": 32609,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 32601,
											"end": 32609,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32601,
											"end": 32621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 32601,
											"end": 32621,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 32601,
											"end": 32621,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32601,
											"end": 32621,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32601,
											"end": 32621,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32601,
											"end": 32621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32601,
											"end": 32621,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 32601,
											"end": 32621,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 32601,
											"end": 32621,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32601,
											"end": 32621,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32601,
											"end": 32621,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32601,
											"end": 32621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32601,
											"end": 32621,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32601,
											"end": 32621,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 32601,
											"end": 32621,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 32601,
											"end": 32621,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32601,
											"end": 32621,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32601,
											"end": 32621,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32527,
											"end": 32629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32527,
											"end": 32629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35790,
											"end": 37315,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 35790,
											"end": 37315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35858,
											"end": 35879,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35882,
											"end": 35890,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 35891,
											"end": 35895,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35882,
											"end": 35896,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35882,
											"end": 35896,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35882,
											"end": 35896,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35882,
											"end": 35896,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 35882,
											"end": 35896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 35882,
											"end": 35896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35882,
											"end": 35896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 35882,
											"end": 35896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 35882,
											"end": 35896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35882,
											"end": 35896,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 35882,
											"end": 35896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35882,
											"end": 35896,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 35882,
											"end": 35896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35882,
											"end": 35896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35882,
											"end": 35896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35882,
											"end": 35896,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35882,
											"end": 35896,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35882,
											"end": 35896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35882,
											"end": 35896,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35882,
											"end": 35896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35882,
											"end": 35896,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35882,
											"end": 35896,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 35882,
											"end": 35896,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35858,
											"end": 35896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35858,
											"end": 35896,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35907,
											"end": 35928,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35931,
											"end": 35939,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 35931,
											"end": 35945,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35940,
											"end": 35944,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35931,
											"end": 35945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35931,
											"end": 35945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35931,
											"end": 35945,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35931,
											"end": 35945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35931,
											"end": 35945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35931,
											"end": 35945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35931,
											"end": 35945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35931,
											"end": 35945,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35931,
											"end": 35945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35931,
											"end": 35945,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35931,
											"end": 35945,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35931,
											"end": 35957,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35946,
											"end": 35956,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 35931,
											"end": 35957,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35931,
											"end": 35957,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35931,
											"end": 35957,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35931,
											"end": 35957,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35931,
											"end": 35957,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35931,
											"end": 35957,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35931,
											"end": 35957,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35931,
											"end": 35957,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35931,
											"end": 35957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35931,
											"end": 35957,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35931,
											"end": 35957,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35931,
											"end": 35957,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35931,
											"end": 35957,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35931,
											"end": 35957,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35931,
											"end": 35957,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35907,
											"end": 35957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35907,
											"end": 35957,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35968,
											"end": 35983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36009,
											"end": 36010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35997,
											"end": 36005,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35997,
											"end": 36010,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35994,
											"end": 37256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 35994,
											"end": 37256,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36026,
											"end": 36042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 36037,
											"end": 36041,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 36026,
											"end": 36036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 36026,
											"end": 36042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36026,
											"end": 36042,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 36026,
											"end": 36042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36067,
											"end": 36134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 36118,
											"end": 36122,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36118,
											"end": 36133,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 36118,
											"end": 36133,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36118,
											"end": 36133,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36067,
											"end": 36113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 36108,
											"end": 36112,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 36067,
											"end": 36103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 36083,
											"end": 36087,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 36083,
											"end": 36102,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 36083,
											"end": 36102,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36083,
											"end": 36102,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36067,
											"end": 36071,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 36067,
											"end": 36078,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36067,
											"end": 36078,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36067,
											"end": 36078,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36067,
											"end": 36082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 36067,
											"end": 36082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36067,
											"end": 36103,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36067,
											"end": 36103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36067,
											"end": 36103,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36067,
											"end": 36103,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36067,
											"end": 36103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36067,
											"end": 36103,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 36067,
											"end": 36103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36067,
											"end": 36107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 36067,
											"end": 36107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36067,
											"end": 36113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36067,
											"end": 36113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36067,
											"end": 36113,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36067,
											"end": 36113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36067,
											"end": 36113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36067,
											"end": 36113,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 36067,
											"end": 36113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36067,
											"end": 36117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 36067,
											"end": 36117,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36067,
											"end": 36134,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36067,
											"end": 36134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36067,
											"end": 36134,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36067,
											"end": 36134,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36067,
											"end": 36134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36067,
											"end": 36134,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 36067,
											"end": 36134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36057,
											"end": 36134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36057,
											"end": 36134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36162,
											"end": 36163,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36152,
											"end": 36159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36152,
											"end": 36163,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 36149,
											"end": 36235,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36149,
											"end": 36235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 36149,
											"end": 36235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36183,
											"end": 36219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 36199,
											"end": 36209,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 36211,
											"end": 36218,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36183,
											"end": 36198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 36183,
											"end": 36219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36183,
											"end": 36219,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 36183,
											"end": 36219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36149,
											"end": 36235,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 36149,
											"end": 36235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36267,
											"end": 36313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 36308,
											"end": 36312,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 36267,
											"end": 36303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 36283,
											"end": 36287,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 36283,
											"end": 36302,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 36283,
											"end": 36302,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36283,
											"end": 36302,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36267,
											"end": 36271,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 36267,
											"end": 36278,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36267,
											"end": 36278,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36267,
											"end": 36278,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36267,
											"end": 36282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 36267,
											"end": 36282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36267,
											"end": 36303,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36267,
											"end": 36303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36267,
											"end": 36303,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36267,
											"end": 36303,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36267,
											"end": 36303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36267,
											"end": 36303,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 36267,
											"end": 36303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36267,
											"end": 36307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 36267,
											"end": 36307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36267,
											"end": 36313,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36267,
											"end": 36313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36267,
											"end": 36313,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36267,
											"end": 36313,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36267,
											"end": 36313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36267,
											"end": 36313,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 36267,
											"end": 36313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36249,
											"end": 36253,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36249,
											"end": 36264,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 36249,
											"end": 36264,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36249,
											"end": 36313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36249,
											"end": 36313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36249,
											"end": 36313,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 36249,
											"end": 36313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35994,
											"end": 37256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 35994,
											"end": 37256,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35994,
											"end": 37256,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 35994,
											"end": 37256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36345,
											"end": 36363,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36382,
											"end": 36402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36421,
											"end": 36430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36417,
											"end": 36622,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 36417,
											"end": 36622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36434,
											"end": 36438,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36434,
											"end": 36447,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36434,
											"end": 36447,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36434,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36434,
											"end": 36454,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36434,
											"end": 36454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36434,
											"end": 36454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36432,
											"end": 36433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36432,
											"end": 36454,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 36417,
											"end": 36622,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36417,
											"end": 36622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 36417,
											"end": 36622,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36502,
											"end": 36510,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 36482,
											"end": 36486,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 36482,
											"end": 36495,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36482,
											"end": 36495,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36496,
											"end": 36497,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36482,
											"end": 36498,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36482,
											"end": 36498,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36482,
											"end": 36498,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36482,
											"end": 36498,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 36482,
											"end": 36498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 36482,
											"end": 36498,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36482,
											"end": 36498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 36482,
											"end": 36498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 36482,
											"end": 36498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36482,
											"end": 36498,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 36482,
											"end": 36498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36482,
											"end": 36498,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 36482,
											"end": 36498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36482,
											"end": 36498,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36482,
											"end": 36498,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36482,
											"end": 36498,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36482,
											"end": 36498,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36482,
											"end": 36498,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36482,
											"end": 36498,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 36482,
											"end": 36498,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36482,
											"end": 36498,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36482,
											"end": 36510,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36479,
											"end": 36607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 36479,
											"end": 36607,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36547,
											"end": 36548,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36534,
											"end": 36548,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36534,
											"end": 36548,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36586,
											"end": 36587,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36571,
											"end": 36587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36571,
											"end": 36587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36479,
											"end": 36607,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 36479,
											"end": 36607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36456,
											"end": 36459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36456,
											"end": 36459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36456,
											"end": 36459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 36456,
											"end": 36459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36456,
											"end": 36459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 36456,
											"end": 36459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36456,
											"end": 36459,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 36456,
											"end": 36459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36456,
											"end": 36459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36456,
											"end": 36459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36456,
											"end": 36459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36417,
											"end": 36622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 36417,
											"end": 36622,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36417,
											"end": 36622,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 36417,
											"end": 36622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36417,
											"end": 36622,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36658,
											"end": 36659,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36644,
											"end": 36654,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36644,
											"end": 36659,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 36636,
											"end": 36693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 36636,
											"end": 36693,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36636,
											"end": 36693,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36636,
											"end": 36693,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36636,
											"end": 36693,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 36636,
											"end": 36693,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36636,
											"end": 36693,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36636,
											"end": 36693,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36636,
											"end": 36693,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36636,
											"end": 36693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 36636,
											"end": 36693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36636,
											"end": 36693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 36636,
											"end": 36693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36636,
											"end": 36693,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 36636,
											"end": 36693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36636,
											"end": 36693,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36636,
											"end": 36693,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36636,
											"end": 36693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36636,
											"end": 36693,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36636,
											"end": 36693,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36636,
											"end": 36693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36636,
											"end": 36693,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36636,
											"end": 36693,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 36636,
											"end": 36693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36731,
											"end": 36732,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36716,
											"end": 36720,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36716,
											"end": 36727,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36716,
											"end": 36727,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36716,
											"end": 36727,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36716,
											"end": 36732,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 36716,
											"end": 36732,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36708,
											"end": 36755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 36708,
											"end": 36755,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36708,
											"end": 36755,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36708,
											"end": 36755,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36708,
											"end": 36755,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 36708,
											"end": 36755,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36708,
											"end": 36755,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36708,
											"end": 36755,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36708,
											"end": 36755,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36708,
											"end": 36755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 36708,
											"end": 36755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36708,
											"end": 36755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 36708,
											"end": 36755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36708,
											"end": 36755,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 36708,
											"end": 36755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36708,
											"end": 36755,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36708,
											"end": 36755,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36708,
											"end": 36755,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36708,
											"end": 36755,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36708,
											"end": 36755,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36708,
											"end": 36755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36708,
											"end": 36755,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36708,
											"end": 36755,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 36708,
											"end": 36755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36770,
											"end": 36786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 36781,
											"end": 36785,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 36770,
											"end": 36780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 36770,
											"end": 36786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36770,
											"end": 36786,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 36770,
											"end": 36786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36811,
											"end": 36878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 36862,
											"end": 36866,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36862,
											"end": 36877,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 36862,
											"end": 36877,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36862,
											"end": 36877,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36811,
											"end": 36857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 36852,
											"end": 36856,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 36811,
											"end": 36847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 36827,
											"end": 36831,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 36827,
											"end": 36846,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 36827,
											"end": 36846,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36827,
											"end": 36846,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36811,
											"end": 36815,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 36811,
											"end": 36822,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36811,
											"end": 36822,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36811,
											"end": 36822,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36811,
											"end": 36826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 36811,
											"end": 36826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36811,
											"end": 36847,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36811,
											"end": 36847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36811,
											"end": 36847,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36811,
											"end": 36847,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36811,
											"end": 36847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36811,
											"end": 36847,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 36811,
											"end": 36847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36811,
											"end": 36851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 36811,
											"end": 36851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36811,
											"end": 36857,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36811,
											"end": 36857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36811,
											"end": 36857,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36811,
											"end": 36857,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36811,
											"end": 36857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36811,
											"end": 36857,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 36811,
											"end": 36857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36811,
											"end": 36861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 36811,
											"end": 36861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36811,
											"end": 36878,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36811,
											"end": 36878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36811,
											"end": 36878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36811,
											"end": 36878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36811,
											"end": 36878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36811,
											"end": 36878,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 36811,
											"end": 36878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36801,
											"end": 36878,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36801,
											"end": 36878,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36906,
											"end": 36907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36896,
											"end": 36903,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36896,
											"end": 36907,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 36893,
											"end": 36979,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36893,
											"end": 36979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 36893,
											"end": 36979,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36927,
											"end": 36963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 36943,
											"end": 36953,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 36955,
											"end": 36962,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36927,
											"end": 36942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 36927,
											"end": 36963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36927,
											"end": 36963,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 36927,
											"end": 36963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36893,
											"end": 36979,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 36893,
											"end": 36979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37007,
											"end": 37025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 37023,
											"end": 37024,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37007,
											"end": 37011,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 37007,
											"end": 37018,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37007,
											"end": 37018,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37007,
											"end": 37018,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37007,
											"end": 37022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 37007,
											"end": 37022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37007,
											"end": 37025,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37007,
											"end": 37025,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37007,
											"end": 37025,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 37007,
											"end": 37025,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37007,
											"end": 37025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37007,
											"end": 37025,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 37007,
											"end": 37025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 36997,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37004,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36993,
											"end": 37004,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37025,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37025,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37025,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37025,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37058,
											"end": 37104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 37099,
											"end": 37103,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 37058,
											"end": 37094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 37074,
											"end": 37078,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 37074,
											"end": 37093,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 37074,
											"end": 37093,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37074,
											"end": 37093,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37058,
											"end": 37062,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 37058,
											"end": 37069,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37058,
											"end": 37069,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37058,
											"end": 37069,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37058,
											"end": 37073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 37058,
											"end": 37073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37058,
											"end": 37094,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37058,
											"end": 37094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37058,
											"end": 37094,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 37058,
											"end": 37094,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37058,
											"end": 37094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37058,
											"end": 37094,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 37058,
											"end": 37094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37058,
											"end": 37098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 37058,
											"end": 37098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37058,
											"end": 37104,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37058,
											"end": 37104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37058,
											"end": 37104,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 37058,
											"end": 37104,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37058,
											"end": 37104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37058,
											"end": 37104,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 37058,
											"end": 37104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37040,
											"end": 37044,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 37040,
											"end": 37055,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 37040,
											"end": 37055,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37040,
											"end": 37104,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37040,
											"end": 37104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37040,
											"end": 37104,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 37040,
											"end": 37104,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37126,
											"end": 37130,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37126,
											"end": 37139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37126,
											"end": 37139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37140,
											"end": 37152,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37126,
											"end": 37153,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37126,
											"end": 37153,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37126,
											"end": 37153,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37126,
											"end": 37153,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 37126,
											"end": 37153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 37126,
											"end": 37153,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37126,
											"end": 37153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 37126,
											"end": 37153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 37126,
											"end": 37153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37126,
											"end": 37153,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 37126,
											"end": 37153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37126,
											"end": 37153,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 37126,
											"end": 37153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37126,
											"end": 37153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37126,
											"end": 37153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37126,
											"end": 37153,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37126,
											"end": 37153,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37126,
											"end": 37153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37126,
											"end": 37153,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37126,
											"end": 37153,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37119,
											"end": 37153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37119,
											"end": 37153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37119,
											"end": 37153,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37172,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37181,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37168,
											"end": 37181,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37181,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37168,
											"end": 37181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37181,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37181,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 37168,
											"end": 37181,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37181,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37181,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37168,
											"end": 37181,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37198,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37168,
											"end": 37198,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37198,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 37207,
											"end": 37211,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 37222,
											"end": 37232,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 37235,
											"end": 37243,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 37168,
											"end": 37244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36330,
											"end": 37256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36330,
											"end": 37256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35994,
											"end": 37256,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 35994,
											"end": 37256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37292,
											"end": 37296,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 37280,
											"end": 37290,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 37271,
											"end": 37307,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37271,
											"end": 37307,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37271,
											"end": 37307,
											"name": "PUSH",
											"source": 0,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 37298,
											"end": 37306,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 37271,
											"end": 37307,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37271,
											"end": 37307,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37271,
											"end": 37307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 37271,
											"end": 37307,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37271,
											"end": 37307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37271,
											"end": 37307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 37271,
											"end": 37307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37271,
											"end": 37307,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 37271,
											"end": 37307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37271,
											"end": 37307,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37271,
											"end": 37307,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37271,
											"end": 37307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37271,
											"end": 37307,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37271,
											"end": 37307,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37271,
											"end": 37307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37271,
											"end": 37307,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 35847,
											"end": 37315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35847,
											"end": 37315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35847,
											"end": 37315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35790,
											"end": 37315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35790,
											"end": 37315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35790,
											"end": 37315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30195,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33180,
											"end": 33187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33199,
											"end": 33220,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33231,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 33232,
											"end": 33236,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33237,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33237,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33237,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33237,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 33223,
											"end": 33237,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 33223,
											"end": 33237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 33223,
											"end": 33237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33237,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 33223,
											"end": 33237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33237,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 33223,
											"end": 33237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33237,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33223,
											"end": 33237,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33237,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33223,
											"end": 33237,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33223,
											"end": 33237,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33237,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33223,
											"end": 33237,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33237,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33199,
											"end": 33237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33199,
											"end": 33237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33248,
											"end": 33269,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33272,
											"end": 33280,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 33272,
											"end": 33286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33281,
											"end": 33285,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 33272,
											"end": 33286,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33272,
											"end": 33286,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33272,
											"end": 33286,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33272,
											"end": 33286,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33272,
											"end": 33286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33272,
											"end": 33286,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33272,
											"end": 33286,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33272,
											"end": 33286,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33272,
											"end": 33286,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33272,
											"end": 33286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33272,
											"end": 33286,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33272,
											"end": 33293,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33287,
											"end": 33292,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33272,
											"end": 33293,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33272,
											"end": 33293,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33272,
											"end": 33293,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33272,
											"end": 33293,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33272,
											"end": 33293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33272,
											"end": 33293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33272,
											"end": 33293,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33272,
											"end": 33293,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33272,
											"end": 33293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33272,
											"end": 33293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33272,
											"end": 33293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33272,
											"end": 33293,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33272,
											"end": 33293,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33272,
											"end": 33293,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33272,
											"end": 33293,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33248,
											"end": 33293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33248,
											"end": 33293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33304,
											"end": 33326,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33329,
											"end": 33333,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33329,
											"end": 33348,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 33329,
											"end": 33348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33329,
											"end": 33348,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33304,
											"end": 33348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33304,
											"end": 33348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33359,
											"end": 33376,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33379,
											"end": 33383,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33379,
											"end": 33392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33379,
											"end": 33392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33392,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33392,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 33379,
											"end": 33392,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33392,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33392,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33379,
											"end": 33392,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33402,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33379,
											"end": 33402,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33402,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 33411,
											"end": 33415,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 33379,
											"end": 33417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 33379,
											"end": 33417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33359,
											"end": 33417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33359,
											"end": 33417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33447,
											"end": 33451,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33447,
											"end": 33467,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 33447,
											"end": 33467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33447,
											"end": 33467,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33432,
											"end": 33444,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 33432,
											"end": 33467,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 33432,
											"end": 33485,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33432,
											"end": 33485,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33432,
											"end": 33485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 33432,
											"end": 33485,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33432,
											"end": 33485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33484,
											"end": 33485,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33471,
											"end": 33480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33471,
											"end": 33485,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33471,
											"end": 33485,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33432,
											"end": 33485,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 33432,
											"end": 33485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33428,
											"end": 33774,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33428,
											"end": 33774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 33428,
											"end": 33774,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33502,
											"end": 33520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33523,
											"end": 33572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 33537,
											"end": 33541,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33537,
											"end": 33557,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 33537,
											"end": 33557,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33537,
											"end": 33557,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33559,
											"end": 33571,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 33523,
											"end": 33536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 33523,
											"end": 33572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33523,
											"end": 33572,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 33523,
											"end": 33572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33502,
											"end": 33572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33502,
											"end": 33572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33587,
											"end": 33604,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33607,
											"end": 33676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 33660,
											"end": 33675,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 33660,
											"end": 33675,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33607,
											"end": 33655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 33639,
											"end": 33643,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 33639,
											"end": 33654,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33639,
											"end": 33654,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33639,
											"end": 33654,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33607,
											"end": 33634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 33622,
											"end": 33633,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33622,
											"end": 33633,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33607,
											"end": 33617,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 33607,
											"end": 33621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 33607,
											"end": 33621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33607,
											"end": 33634,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33607,
											"end": 33634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33607,
											"end": 33634,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33607,
											"end": 33634,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33607,
											"end": 33634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33607,
											"end": 33634,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 33607,
											"end": 33634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33607,
											"end": 33638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 33607,
											"end": 33638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33607,
											"end": 33655,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33607,
											"end": 33655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33607,
											"end": 33655,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33607,
											"end": 33655,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33607,
											"end": 33655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33607,
											"end": 33655,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 33607,
											"end": 33655,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33607,
											"end": 33659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 33607,
											"end": 33659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33607,
											"end": 33676,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33607,
											"end": 33676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33607,
											"end": 33676,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33607,
											"end": 33676,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33607,
											"end": 33676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33607,
											"end": 33676,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 33607,
											"end": 33676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33587,
											"end": 33676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33587,
											"end": 33676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33708,
											"end": 33762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 33727,
											"end": 33761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 33751,
											"end": 33760,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 33741,
											"end": 33745,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 33727,
											"end": 33736,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33727,
											"end": 33740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 33727,
											"end": 33740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33727,
											"end": 33746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33727,
											"end": 33750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 33727,
											"end": 33750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33727,
											"end": 33761,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33727,
											"end": 33761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33727,
											"end": 33761,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33727,
											"end": 33761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33727,
											"end": 33761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33727,
											"end": 33761,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 33727,
											"end": 33761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33708,
											"end": 33722,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33708,
											"end": 33726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 33708,
											"end": 33726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33708,
											"end": 33762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33708,
											"end": 33762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33708,
											"end": 33762,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33708,
											"end": 33762,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33708,
											"end": 33762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33708,
											"end": 33762,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 33708,
											"end": 33762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33691,
											"end": 33762,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 33691,
											"end": 33762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33487,
											"end": 33774,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33487,
											"end": 33774,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33428,
											"end": 33774,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 33428,
											"end": 33774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 33837,
											"end": 33841,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33837,
											"end": 33852,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 33837,
											"end": 33852,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33837,
											"end": 33852,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 33827,
											"end": 33831,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 33791,
											"end": 33822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 33807,
											"end": 33821,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33795,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33802,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33791,
											"end": 33802,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33802,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 33791,
											"end": 33806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33822,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33822,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33791,
											"end": 33822,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33822,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 33791,
											"end": 33822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 33791,
											"end": 33826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33832,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33791,
											"end": 33832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33832,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 33791,
											"end": 33832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 33791,
											"end": 33836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33853,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33853,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33791,
											"end": 33853,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33853,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 33791,
											"end": 33853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33784,
											"end": 33853,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 33784,
											"end": 33853,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33784,
											"end": 33853,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33784,
											"end": 33853,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33784,
											"end": 33853,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33784,
											"end": 33853,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34252,
											"end": 34273,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34276,
											"end": 34284,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 34285,
											"end": 34289,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34276,
											"end": 34290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34276,
											"end": 34290,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34276,
											"end": 34290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34276,
											"end": 34290,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34276,
											"end": 34290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 34276,
											"end": 34290,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34276,
											"end": 34290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 34276,
											"end": 34290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 34276,
											"end": 34290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34276,
											"end": 34290,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 34276,
											"end": 34290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34276,
											"end": 34290,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 34276,
											"end": 34290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34276,
											"end": 34290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34276,
											"end": 34290,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34276,
											"end": 34290,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34276,
											"end": 34290,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34276,
											"end": 34290,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34276,
											"end": 34290,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34276,
											"end": 34290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34276,
											"end": 34290,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34276,
											"end": 34290,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 34276,
											"end": 34290,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34252,
											"end": 34290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34252,
											"end": 34290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34321,
											"end": 34325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34321,
											"end": 34341,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 34321,
											"end": 34341,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34321,
											"end": 34341,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34305,
											"end": 34317,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 34305,
											"end": 34341,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 34301,
											"end": 34376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 34301,
											"end": 34376,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34358,
											"end": 34365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34358,
											"end": 34365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 34358,
											"end": 34365,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34301,
											"end": 34376,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 34301,
											"end": 34376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34386,
											"end": 34403,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34406,
											"end": 34410,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34419,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34406,
											"end": 34419,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34419,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34406,
											"end": 34419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34419,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34419,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 34406,
											"end": 34419,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34419,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34419,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34406,
											"end": 34419,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34429,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34406,
											"end": 34429,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34429,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 34438,
											"end": 34442,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 34406,
											"end": 34444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 34406,
											"end": 34444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34386,
											"end": 34444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34386,
											"end": 34444,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34472,
											"end": 34473,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34459,
											"end": 34468,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34459,
											"end": 34473,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 34455,
											"end": 34558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 34455,
											"end": 34558,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34513,
											"end": 34525,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 34490,
											"end": 34494,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34490,
											"end": 34510,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 34490,
											"end": 34510,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34490,
											"end": 34525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34490,
											"end": 34525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34490,
											"end": 34525,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34490,
											"end": 34525,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34540,
											"end": 34547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34540,
											"end": 34547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34540,
											"end": 34547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 34540,
											"end": 34547,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34455,
											"end": 34558,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 34455,
											"end": 34558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34568,
											"end": 34586,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34589,
											"end": 34638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 34603,
											"end": 34607,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34603,
											"end": 34623,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 34603,
											"end": 34623,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34603,
											"end": 34623,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34625,
											"end": 34637,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 34589,
											"end": 34602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 34589,
											"end": 34638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34589,
											"end": 34638,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 34589,
											"end": 34638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34568,
											"end": 34638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34568,
											"end": 34638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34649,
											"end": 34666,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34669,
											"end": 34738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 34722,
											"end": 34737,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 34722,
											"end": 34737,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34669,
											"end": 34717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 34701,
											"end": 34705,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34701,
											"end": 34716,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34701,
											"end": 34716,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34701,
											"end": 34716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34669,
											"end": 34696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 34684,
											"end": 34695,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34684,
											"end": 34695,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34669,
											"end": 34679,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34669,
											"end": 34683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 34669,
											"end": 34683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34669,
											"end": 34696,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34669,
											"end": 34696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34669,
											"end": 34696,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34669,
											"end": 34696,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34669,
											"end": 34696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34669,
											"end": 34696,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 34669,
											"end": 34696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34669,
											"end": 34700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 34669,
											"end": 34700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34669,
											"end": 34717,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34669,
											"end": 34717,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34669,
											"end": 34717,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34669,
											"end": 34717,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34669,
											"end": 34717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34669,
											"end": 34717,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 34669,
											"end": 34717,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34669,
											"end": 34721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 34669,
											"end": 34721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34669,
											"end": 34738,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34669,
											"end": 34738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34669,
											"end": 34738,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34669,
											"end": 34738,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34669,
											"end": 34738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34669,
											"end": 34738,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 34669,
											"end": 34738,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34649,
											"end": 34738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34649,
											"end": 34738,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34752,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 34749,
											"end": 34752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34749,
											"end": 34752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34752,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34752,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 34749,
											"end": 34752,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34752,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34752,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34749,
											"end": 34752,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34757,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34749,
											"end": 34757,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34757,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 34766,
											"end": 34770,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 34773,
											"end": 34782,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 34749,
											"end": 34783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 34749,
											"end": 34783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34816,
											"end": 34875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 34840,
											"end": 34874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 34864,
											"end": 34873,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34840,
											"end": 34859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 34854,
											"end": 34858,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 34840,
											"end": 34849,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 34840,
											"end": 34853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 34840,
											"end": 34853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34840,
											"end": 34859,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34840,
											"end": 34859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34840,
											"end": 34859,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34840,
											"end": 34859,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34840,
											"end": 34859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34840,
											"end": 34859,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 34840,
											"end": 34859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34840,
											"end": 34863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 34840,
											"end": 34863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34840,
											"end": 34874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34840,
											"end": 34874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34840,
											"end": 34874,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34840,
											"end": 34874,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34840,
											"end": 34874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34840,
											"end": 34874,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 34840,
											"end": 34874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34816,
											"end": 34820,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 34816,
											"end": 34835,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 34816,
											"end": 34835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34816,
											"end": 34835,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34816,
											"end": 34839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 34816,
											"end": 34839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34816,
											"end": 34875,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34816,
											"end": 34875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34816,
											"end": 34875,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34816,
											"end": 34875,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34816,
											"end": 34875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34816,
											"end": 34875,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 34816,
											"end": 34875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34794,
											"end": 34798,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34794,
											"end": 34813,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 34794,
											"end": 34813,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34794,
											"end": 34875,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34794,
											"end": 34875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34794,
											"end": 34875,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34794,
											"end": 34875,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34909,
											"end": 34921,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 34886,
											"end": 34890,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34886,
											"end": 34906,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 34886,
											"end": 34906,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34886,
											"end": 34921,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34886,
											"end": 34921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34886,
											"end": 34921,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34886,
											"end": 34921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34241,
											"end": 34929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34241,
											"end": 34929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34241,
											"end": 34929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34241,
											"end": 34929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31094,
											"end": 31217,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 31094,
											"end": 31217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 20406,
											"end": 20416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 20406,
											"end": 20418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 20395,
											"end": 20400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 20395,
											"end": 20402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 20387,
											"end": 20455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31193,
											"end": 31209,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31174,
											"end": 31190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 31174,
											"end": 31209,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31174,
											"end": 31209,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31174,
											"end": 31209,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31174,
											"end": 31209,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31094,
											"end": 31217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31094,
											"end": 31217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33944,
											"end": 34124,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 33944,
											"end": 34124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33989,
											"end": 34003,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34006,
											"end": 34014,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 34006,
											"end": 34021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34006,
											"end": 34021,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34006,
											"end": 34021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34006,
											"end": 34021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33989,
											"end": 34021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33989,
											"end": 34021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34037,
											"end": 34048,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34032,
											"end": 34117,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 34032,
											"end": 34117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34060,
											"end": 34066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34054,
											"end": 34057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34054,
											"end": 34066,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34032,
											"end": 34117,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34032,
											"end": 34117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 34032,
											"end": 34117,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34090,
											"end": 34105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 34101,
											"end": 34104,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34090,
											"end": 34100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 34090,
											"end": 34105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34090,
											"end": 34105,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 34090,
											"end": 34105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34068,
											"end": 34073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34068,
											"end": 34073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 34068,
											"end": 34073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34068,
											"end": 34073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 34068,
											"end": 34073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34068,
											"end": 34073,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 34068,
											"end": 34073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34068,
											"end": 34073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34068,
											"end": 34073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34032,
											"end": 34117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 34032,
											"end": 34117,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34032,
											"end": 34117,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 34032,
											"end": 34117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34032,
											"end": 34117,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33978,
											"end": 34124,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33944,
											"end": 34124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 20406,
											"end": 20416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 20406,
											"end": 20418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 20395,
											"end": 20400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 20395,
											"end": 20402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 20387,
											"end": 20455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32245,
											"end": 32256,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32241,
											"end": 32302,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32241,
											"end": 32302,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 32241,
											"end": 32302,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32273,
											"end": 32290,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 32273,
											"end": 32288,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 32273,
											"end": 32290,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32273,
											"end": 32290,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 32273,
											"end": 32290,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32241,
											"end": 32302,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 32241,
											"end": 32302,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32393,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 32381,
											"end": 32392,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32376,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 32350,
											"end": 32358,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 32359,
											"end": 32363,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 32350,
											"end": 32364,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32350,
											"end": 32364,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32350,
											"end": 32364,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32350,
											"end": 32364,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32350,
											"end": 32364,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 32350,
											"end": 32364,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32350,
											"end": 32364,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 32350,
											"end": 32364,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 32350,
											"end": 32364,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32350,
											"end": 32364,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 32350,
											"end": 32364,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32350,
											"end": 32364,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 32350,
											"end": 32364,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32350,
											"end": 32364,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32350,
											"end": 32364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32350,
											"end": 32364,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32350,
											"end": 32364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32350,
											"end": 32364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32350,
											"end": 32364,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32350,
											"end": 32364,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32350,
											"end": 32364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32350,
											"end": 32364,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 32350,
											"end": 32364,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32350,
											"end": 32375,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32350,
											"end": 32375,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32350,
											"end": 32375,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 32330,
											"end": 32345,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32349,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 32330,
											"end": 32349,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32376,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32376,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32376,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32330,
											"end": 32376,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32376,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32376,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 32330,
											"end": 32376,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32380,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 32330,
											"end": 32380,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32393,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32393,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32330,
											"end": 32393,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32393,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32393,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 32330,
											"end": 32393,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32312,
											"end": 32327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 32312,
											"end": 32393,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32312,
											"end": 32393,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32312,
											"end": 32393,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32312,
											"end": 32393,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32432,
											"end": 32443,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32404,
											"end": 32412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 32413,
											"end": 32417,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32404,
											"end": 32418,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32404,
											"end": 32418,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32404,
											"end": 32418,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32404,
											"end": 32418,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32404,
											"end": 32418,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 32404,
											"end": 32418,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32404,
											"end": 32418,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 32404,
											"end": 32418,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 32404,
											"end": 32418,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32404,
											"end": 32418,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 32404,
											"end": 32418,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32404,
											"end": 32418,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 32404,
											"end": 32418,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32404,
											"end": 32418,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32404,
											"end": 32418,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32404,
											"end": 32418,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32404,
											"end": 32418,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32404,
											"end": 32418,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32404,
											"end": 32418,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32404,
											"end": 32418,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32404,
											"end": 32418,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32404,
											"end": 32418,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 32404,
											"end": 32418,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32404,
											"end": 32429,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32404,
											"end": 32429,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32404,
											"end": 32443,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32404,
											"end": 32443,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32404,
											"end": 32443,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32404,
											"end": 32443,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32451,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20826,
											"end": 20929,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 20826,
											"end": 20929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 20406,
											"end": 20416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 20406,
											"end": 20418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 20395,
											"end": 20400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 20395,
											"end": 20402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 20387,
											"end": 20455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 20918,
											"end": 20919,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20891,
											"end": 20909,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 20891,
											"end": 20921,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 20891,
											"end": 20921,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20826,
											"end": 20929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29776,
											"end": 29805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29638,
											"end": 29673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20221,
											"end": 20228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20248,
											"end": 20254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20248,
											"end": 20254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20254,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20254,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 20248,
											"end": 20254,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20254,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20254,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20248,
											"end": 20254,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20241,
											"end": 20254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20241,
											"end": 20254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20175,
											"end": 20262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32777,
											"end": 32784,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32805,
											"end": 32841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 32824,
											"end": 32840,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 32824,
											"end": 32840,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32805,
											"end": 32819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 32813,
											"end": 32818,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32805,
											"end": 32808,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32805,
											"end": 32812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 32805,
											"end": 32812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32805,
											"end": 32819,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32805,
											"end": 32819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32805,
											"end": 32819,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32805,
											"end": 32819,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32805,
											"end": 32819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32805,
											"end": 32819,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 32805,
											"end": 32819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32805,
											"end": 32823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 32805,
											"end": 32823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32805,
											"end": 32841,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32805,
											"end": 32841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32805,
											"end": 32841,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32805,
											"end": 32841,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32805,
											"end": 32841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32805,
											"end": 32841,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 32805,
											"end": 32841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32798,
											"end": 32841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32798,
											"end": 32841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37323,
											"end": 37893,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 37323,
											"end": 37893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37375,
											"end": 37396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37399,
											"end": 37407,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 37408,
											"end": 37412,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37399,
											"end": 37413,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37399,
											"end": 37413,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37399,
											"end": 37413,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37399,
											"end": 37413,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 37399,
											"end": 37413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 37399,
											"end": 37413,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37399,
											"end": 37413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 37399,
											"end": 37413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 37399,
											"end": 37413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37399,
											"end": 37413,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 37399,
											"end": 37413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37399,
											"end": 37413,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 37399,
											"end": 37413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37399,
											"end": 37413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37399,
											"end": 37413,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37399,
											"end": 37413,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37399,
											"end": 37413,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37399,
											"end": 37413,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37399,
											"end": 37413,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37399,
											"end": 37413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37399,
											"end": 37413,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37399,
											"end": 37413,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 37399,
											"end": 37413,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37375,
											"end": 37413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37375,
											"end": 37413,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37424,
											"end": 37445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37448,
											"end": 37456,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 37448,
											"end": 37462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37457,
											"end": 37461,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 37448,
											"end": 37462,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37448,
											"end": 37462,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37448,
											"end": 37462,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37448,
											"end": 37462,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37448,
											"end": 37462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37448,
											"end": 37462,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37448,
											"end": 37462,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37448,
											"end": 37462,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37448,
											"end": 37462,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37448,
											"end": 37462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37448,
											"end": 37462,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37448,
											"end": 37474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37463,
											"end": 37473,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 37448,
											"end": 37474,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37448,
											"end": 37474,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37448,
											"end": 37474,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37448,
											"end": 37474,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37448,
											"end": 37474,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37448,
											"end": 37474,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37448,
											"end": 37474,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37448,
											"end": 37474,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37448,
											"end": 37474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37448,
											"end": 37474,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37448,
											"end": 37474,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37448,
											"end": 37474,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37448,
											"end": 37474,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37448,
											"end": 37474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37448,
											"end": 37474,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37424,
											"end": 37474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37424,
											"end": 37474,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37485,
											"end": 37501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 37496,
											"end": 37500,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37485,
											"end": 37495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 37485,
											"end": 37501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37485,
											"end": 37501,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 37485,
											"end": 37501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37512,
											"end": 37527,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37530,
											"end": 37597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 37581,
											"end": 37585,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37581,
											"end": 37596,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 37581,
											"end": 37596,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37581,
											"end": 37596,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37530,
											"end": 37576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 37571,
											"end": 37575,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 37530,
											"end": 37566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 37546,
											"end": 37550,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 37546,
											"end": 37565,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 37546,
											"end": 37565,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37546,
											"end": 37565,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37530,
											"end": 37534,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 37530,
											"end": 37541,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37530,
											"end": 37541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37530,
											"end": 37541,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37530,
											"end": 37545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 37530,
											"end": 37545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37530,
											"end": 37566,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37530,
											"end": 37566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37530,
											"end": 37566,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 37530,
											"end": 37566,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37530,
											"end": 37566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37530,
											"end": 37566,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 37530,
											"end": 37566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37530,
											"end": 37570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 37530,
											"end": 37570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37530,
											"end": 37576,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37530,
											"end": 37576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37530,
											"end": 37576,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 37530,
											"end": 37576,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37530,
											"end": 37576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37530,
											"end": 37576,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 37530,
											"end": 37576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37530,
											"end": 37580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 37530,
											"end": 37580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37530,
											"end": 37597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37530,
											"end": 37597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37530,
											"end": 37597,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 37530,
											"end": 37597,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37530,
											"end": 37597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37530,
											"end": 37597,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 37530,
											"end": 37597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37512,
											"end": 37597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37512,
											"end": 37597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37626,
											"end": 37627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37616,
											"end": 37623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37616,
											"end": 37627,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 37608,
											"end": 37646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 37608,
											"end": 37646,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37608,
											"end": 37646,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37608,
											"end": 37646,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37608,
											"end": 37646,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 37608,
											"end": 37646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37608,
											"end": 37646,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37608,
											"end": 37646,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37608,
											"end": 37646,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37608,
											"end": 37646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 37608,
											"end": 37646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37608,
											"end": 37646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 37608,
											"end": 37646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37608,
											"end": 37646,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 37608,
											"end": 37646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37608,
											"end": 37646,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37608,
											"end": 37646,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37608,
											"end": 37646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37608,
											"end": 37646,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37608,
											"end": 37646,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37608,
											"end": 37646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37608,
											"end": 37646,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37608,
											"end": 37646,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 37608,
											"end": 37646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37660,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 37657,
											"end": 37660,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37657,
											"end": 37660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37660,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37660,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 37657,
											"end": 37660,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37660,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37660,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37657,
											"end": 37660,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37668,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37657,
											"end": 37668,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37668,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 37677,
											"end": 37690,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37677,
											"end": 37690,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37677,
											"end": 37690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37677,
											"end": 37690,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37677,
											"end": 37690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37677,
											"end": 37690,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 37677,
											"end": 37690,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 37677,
											"end": 37690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37677,
											"end": 37690,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 37677,
											"end": 37690,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37677,
											"end": 37690,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37693,
											"end": 37700,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 37657,
											"end": 37701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 37657,
											"end": 37701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37725,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37712,
											"end": 37725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37712,
											"end": 37725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37725,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37725,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 37712,
											"end": 37725,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37725,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37725,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37712,
											"end": 37725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37738,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37712,
											"end": 37738,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37738,
											"name": "PUSH",
											"source": 0,
											"value": "849DF12C"
										},
										{
											"begin": 37739,
											"end": 37746,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37748,
											"end": 37758,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 37712,
											"end": 37759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "tag",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37788,
											"end": 37834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 37829,
											"end": 37833,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 37788,
											"end": 37824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 37804,
											"end": 37808,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 37804,
											"end": 37823,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 37804,
											"end": 37823,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37804,
											"end": 37823,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37788,
											"end": 37792,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 37788,
											"end": 37799,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37788,
											"end": 37799,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37788,
											"end": 37799,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37788,
											"end": 37803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 37788,
											"end": 37803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37788,
											"end": 37824,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37788,
											"end": 37824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37788,
											"end": 37824,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 37788,
											"end": 37824,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37788,
											"end": 37824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37788,
											"end": 37824,
											"name": "tag",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 37788,
											"end": 37824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37788,
											"end": 37828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 37788,
											"end": 37828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37788,
											"end": 37834,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37788,
											"end": 37834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37788,
											"end": 37834,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 37788,
											"end": 37834,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37788,
											"end": 37834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37788,
											"end": 37834,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 37788,
											"end": 37834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37770,
											"end": 37774,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37770,
											"end": 37785,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 37770,
											"end": 37785,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37770,
											"end": 37834,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37770,
											"end": 37834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37770,
											"end": 37834,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 37770,
											"end": 37834,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37871,
											"end": 37875,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37859,
											"end": 37869,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 37850,
											"end": 37885,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37850,
											"end": 37885,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37850,
											"end": 37885,
											"name": "PUSH",
											"source": 0,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 37877,
											"end": 37884,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37850,
											"end": 37885,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37850,
											"end": 37885,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37850,
											"end": 37885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 37850,
											"end": 37885,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37850,
											"end": 37885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37850,
											"end": 37885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 37850,
											"end": 37885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37850,
											"end": 37885,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 37850,
											"end": 37885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37850,
											"end": 37885,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37850,
											"end": 37885,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37850,
											"end": 37885,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37850,
											"end": 37885,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37850,
											"end": 37885,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37850,
											"end": 37885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37850,
											"end": 37885,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 37364,
											"end": 37893,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37364,
											"end": 37893,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37364,
											"end": 37893,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37323,
											"end": 37893,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37323,
											"end": 37893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38284,
											"end": 38379,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 38284,
											"end": 38379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 20406,
											"end": 20416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 20406,
											"end": 20418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "tag",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 20395,
											"end": 20400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 20395,
											"end": 20402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "tag",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 20387,
											"end": 20455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38363,
											"end": 38371,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38353,
											"end": 38360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 38353,
											"end": 38360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38353,
											"end": 38371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 38353,
											"end": 38371,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 38353,
											"end": 38371,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38353,
											"end": 38371,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38353,
											"end": 38371,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38353,
											"end": 38371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38353,
											"end": 38371,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 38353,
											"end": 38371,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 38353,
											"end": 38371,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38353,
											"end": 38371,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38353,
											"end": 38371,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38353,
											"end": 38371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38353,
											"end": 38371,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38353,
											"end": 38371,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 38353,
											"end": 38371,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 38353,
											"end": 38371,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38353,
											"end": 38371,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 38353,
											"end": 38371,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38284,
											"end": 38379,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38284,
											"end": 38379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 29514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32932,
											"end": 32948,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 32961,
											"end": 32982,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32985,
											"end": 32993,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 32985,
											"end": 32999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32994,
											"end": 32998,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 32999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 32999,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 32999,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32985,
											"end": 32999,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 32999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 32999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 32999,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 32999,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32985,
											"end": 32999,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 32999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32985,
											"end": 32999,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 33006,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33000,
											"end": 33005,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 33006,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32985,
											"end": 33006,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 33006,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32985,
											"end": 33006,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 33006,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 33006,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 33006,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32985,
											"end": 33006,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 33006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 33006,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 33006,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 33006,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32985,
											"end": 33006,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 33006,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32985,
											"end": 33006,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32961,
											"end": 33006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32961,
											"end": 33006,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33037,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33024,
											"end": 33037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "tag",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34998,
											"end": 35737,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 34998,
											"end": 35737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35065,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35089,
											"end": 35097,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 35098,
											"end": 35102,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35089,
											"end": 35103,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35089,
											"end": 35103,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35089,
											"end": 35103,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35089,
											"end": 35103,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 35089,
											"end": 35103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 35089,
											"end": 35103,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35089,
											"end": 35103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 35089,
											"end": 35103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 35089,
											"end": 35103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35089,
											"end": 35103,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 35089,
											"end": 35103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35089,
											"end": 35103,
											"name": "tag",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 35089,
											"end": 35103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35089,
											"end": 35103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35089,
											"end": 35103,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35089,
											"end": 35103,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35089,
											"end": 35103,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35089,
											"end": 35103,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35089,
											"end": 35103,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35089,
											"end": 35103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35089,
											"end": 35103,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35089,
											"end": 35103,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 35089,
											"end": 35103,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35065,
											"end": 35103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35065,
											"end": 35103,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35114,
											"end": 35135,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35138,
											"end": 35146,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 35138,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35147,
											"end": 35151,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35138,
											"end": 35152,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35138,
											"end": 35152,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35138,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35138,
											"end": 35152,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35138,
											"end": 35152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35138,
											"end": 35152,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35138,
											"end": 35152,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35138,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35138,
											"end": 35152,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35138,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35138,
											"end": 35152,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35138,
											"end": 35164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35153,
											"end": 35163,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 35138,
											"end": 35164,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35138,
											"end": 35164,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35138,
											"end": 35164,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35138,
											"end": 35164,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35138,
											"end": 35164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35138,
											"end": 35164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35138,
											"end": 35164,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35138,
											"end": 35164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35138,
											"end": 35164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35138,
											"end": 35164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35138,
											"end": 35164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35138,
											"end": 35164,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35138,
											"end": 35164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35138,
											"end": 35164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35138,
											"end": 35164,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35114,
											"end": 35164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35114,
											"end": 35164,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35175,
											"end": 35191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 35186,
											"end": 35190,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35175,
											"end": 35185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 35175,
											"end": 35191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35175,
											"end": 35191,
											"name": "tag",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 35175,
											"end": 35191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35220,
											"end": 35221,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35206,
											"end": 35210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35206,
											"end": 35217,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35206,
											"end": 35217,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35206,
											"end": 35217,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35206,
											"end": 35221,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 35202,
											"end": 35435,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35202,
											"end": 35435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 35202,
											"end": 35435,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35238,
											"end": 35253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35256,
											"end": 35323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 35307,
											"end": 35311,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35307,
											"end": 35322,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 35307,
											"end": 35322,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35307,
											"end": 35322,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35256,
											"end": 35302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 35297,
											"end": 35301,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 35256,
											"end": 35292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 35272,
											"end": 35276,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 35272,
											"end": 35291,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 35272,
											"end": 35291,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35272,
											"end": 35291,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35256,
											"end": 35260,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 35256,
											"end": 35267,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35256,
											"end": 35267,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35256,
											"end": 35267,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35256,
											"end": 35271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 35256,
											"end": 35271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35256,
											"end": 35292,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35256,
											"end": 35292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35256,
											"end": 35292,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35256,
											"end": 35292,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35256,
											"end": 35292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35256,
											"end": 35292,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 35256,
											"end": 35292,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35256,
											"end": 35296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 35256,
											"end": 35296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35256,
											"end": 35302,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35256,
											"end": 35302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35256,
											"end": 35302,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35256,
											"end": 35302,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35256,
											"end": 35302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35256,
											"end": 35302,
											"name": "tag",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 35256,
											"end": 35302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35256,
											"end": 35306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 35256,
											"end": 35306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35256,
											"end": 35323,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35256,
											"end": 35323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35256,
											"end": 35323,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35256,
											"end": 35323,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35256,
											"end": 35323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35256,
											"end": 35323,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 35256,
											"end": 35323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35238,
											"end": 35323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35238,
											"end": 35323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35351,
											"end": 35352,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35341,
											"end": 35348,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35341,
											"end": 35352,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 35338,
											"end": 35424,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35338,
											"end": 35424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 35338,
											"end": 35424,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35372,
											"end": 35408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 35388,
											"end": 35398,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 35400,
											"end": 35407,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35372,
											"end": 35387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 35372,
											"end": 35408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35372,
											"end": 35408,
											"name": "tag",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 35372,
											"end": 35408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35338,
											"end": 35424,
											"name": "tag",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 35338,
											"end": 35424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35223,
											"end": 35435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35202,
											"end": 35435,
											"name": "tag",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 35202,
											"end": 35435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35445,
											"end": 35458,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35445,
											"end": 35458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35458,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35458,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 35445,
											"end": 35458,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35458,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35458,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35445,
											"end": 35458,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35475,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35445,
											"end": 35475,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35475,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 35484,
											"end": 35494,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 35505,
											"end": 35509,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 35512,
											"end": 35520,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 35445,
											"end": 35521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "tag",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "tag",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "tag",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35546,
											"end": 35564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 35562,
											"end": 35563,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35546,
											"end": 35550,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35546,
											"end": 35557,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35546,
											"end": 35557,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35546,
											"end": 35557,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35546,
											"end": 35561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 35546,
											"end": 35561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35546,
											"end": 35564,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35546,
											"end": 35564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35546,
											"end": 35564,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35546,
											"end": 35564,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35546,
											"end": 35564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35546,
											"end": 35564,
											"name": "tag",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 35546,
											"end": 35564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35532,
											"end": 35536,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35532,
											"end": 35543,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35532,
											"end": 35543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35532,
											"end": 35564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35532,
											"end": 35564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35532,
											"end": 35564,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 35532,
											"end": 35564,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35593,
											"end": 35639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 35634,
											"end": 35638,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 35593,
											"end": 35629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 35609,
											"end": 35613,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35609,
											"end": 35628,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 35609,
											"end": 35628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35609,
											"end": 35628,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35593,
											"end": 35597,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35593,
											"end": 35604,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35593,
											"end": 35604,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35593,
											"end": 35604,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35593,
											"end": 35608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 35593,
											"end": 35608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35593,
											"end": 35629,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35593,
											"end": 35629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35593,
											"end": 35629,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35593,
											"end": 35629,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35593,
											"end": 35629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35593,
											"end": 35629,
											"name": "tag",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 35593,
											"end": 35629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35593,
											"end": 35633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 35593,
											"end": 35633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35593,
											"end": 35639,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35593,
											"end": 35639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35593,
											"end": 35639,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35593,
											"end": 35639,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35593,
											"end": 35639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35593,
											"end": 35639,
											"name": "tag",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 35593,
											"end": 35639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35575,
											"end": 35579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35575,
											"end": 35590,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 35575,
											"end": 35590,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35575,
											"end": 35639,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35575,
											"end": 35639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35575,
											"end": 35639,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 35575,
											"end": 35639,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35663,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35650,
											"end": 35663,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35669,
											"end": 35677,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 35714,
											"end": 35718,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35702,
											"end": 35712,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 35694,
											"end": 35729,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35694,
											"end": 35729,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35694,
											"end": 35729,
											"name": "PUSH",
											"source": 0,
											"value": "90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
										},
										{
											"begin": 35720,
											"end": 35728,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35694,
											"end": 35729,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35694,
											"end": 35729,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35694,
											"end": 35729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 35694,
											"end": 35729,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35694,
											"end": 35729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35694,
											"end": 35729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 35694,
											"end": 35729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35694,
											"end": 35729,
											"name": "tag",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 35694,
											"end": 35729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35694,
											"end": 35729,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35694,
											"end": 35729,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35694,
											"end": 35729,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35694,
											"end": 35729,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35694,
											"end": 35729,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35694,
											"end": 35729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35694,
											"end": 35729,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 35054,
											"end": 35737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35054,
											"end": 35737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34998,
											"end": 35737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34998,
											"end": 35737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34998,
											"end": 35737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29380,
											"end": 29415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 20406,
											"end": 20416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 20406,
											"end": 20418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 20395,
											"end": 20400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 20395,
											"end": 20402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "tag",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 20387,
											"end": 20455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "tag",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "tag",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21193,
											"end": 21194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21173,
											"end": 21195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21173,
											"end": 21195,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21173,
											"end": 21181,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21173,
											"end": 21195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21173,
											"end": 21195,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21173,
											"end": 21195,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21165,
											"end": 21238,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 21165,
											"end": 21238,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21165,
											"end": 21238,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21165,
											"end": 21238,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21165,
											"end": 21238,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21165,
											"end": 21238,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21165,
											"end": 21238,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21165,
											"end": 21238,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21165,
											"end": 21238,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21165,
											"end": 21238,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 21165,
											"end": 21238,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21165,
											"end": 21238,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 21165,
											"end": 21238,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21165,
											"end": 21238,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 21165,
											"end": 21238,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21165,
											"end": 21238,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21165,
											"end": 21238,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21165,
											"end": 21238,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21165,
											"end": 21238,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21165,
											"end": 21238,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21165,
											"end": 21238,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21165,
											"end": 21238,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21165,
											"end": 21238,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 21165,
											"end": 21238,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21249,
											"end": 21277,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 21268,
											"end": 21276,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21249,
											"end": 21267,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 21249,
											"end": 21277,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21249,
											"end": 21277,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 21249,
											"end": 21277,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21084,
											"end": 21285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19549,
											"end": 19647,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 19549,
											"end": 19647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19602,
											"end": 19609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19629,
											"end": 19639,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19622,
											"end": 19639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19622,
											"end": 19639,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19549,
											"end": 19647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19549,
											"end": 19647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 455,
											"end": 636,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 455,
											"end": 636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 513,
											"end": 520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 533,
											"end": 542,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 549,
											"end": 550,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 545,
											"end": 546,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 545,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 545,
											"end": 550,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 545,
											"end": 550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 545,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 545,
											"end": 550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 545,
											"end": 550,
											"name": "tag",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 545,
											"end": 550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 533,
											"end": 550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 533,
											"end": 550,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 574,
											"end": 575,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 569,
											"end": 570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 569,
											"end": 575,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 569,
											"end": 575,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 561,
											"end": 607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 561,
											"end": 607,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 561,
											"end": 607,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 561,
											"end": 607,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 561,
											"end": 607,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 561,
											"end": 607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 561,
											"end": 607,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 561,
											"end": 607,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 561,
											"end": 607,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 561,
											"end": 607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 561,
											"end": 607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 561,
											"end": 607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 561,
											"end": 607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 561,
											"end": 607,
											"name": "tag",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 561,
											"end": 607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 561,
											"end": 607,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 561,
											"end": 607,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 561,
											"end": 607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 561,
											"end": 607,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 561,
											"end": 607,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 561,
											"end": 607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 561,
											"end": 607,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 561,
											"end": 607,
											"name": "tag",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 561,
											"end": 607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 627,
											"end": 628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 620,
											"end": 628,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 620,
											"end": 628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 620,
											"end": 628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 455,
											"end": 636,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 455,
											"end": 636,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 455,
											"end": 636,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 455,
											"end": 636,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 455,
											"end": 636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 2298,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1827,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 1892,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2135,
											"end": 2136,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2130,
											"end": 2131,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2130,
											"end": 2136,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 2126,
											"end": 2173,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2161,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2153,
											"end": 2161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2161,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 2153,
											"end": 2161,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2173,
											"name": "tag",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 2126,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2194,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2201,
											"end": 2202,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2198,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 2197,
											"end": 2202,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 2197,
											"end": 2202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2202,
											"name": "tag",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 2197,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2230,
											"end": 2231,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2225,
											"end": 2226,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2221,
											"end": 2222,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2221,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 2221,
											"end": 2226,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2221,
											"end": 2226,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2221,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 2221,
											"end": 2226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2221,
											"end": 2226,
											"name": "tag",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 2221,
											"end": 2226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2221,
											"end": 2231,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 2213,
											"end": 2269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "tag",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "tag",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2290,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2290,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 2298,
											"name": "tag",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 1827,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 2298,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 2298,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 2298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 2298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 2298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2898,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2766,
											"end": 2898,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2824,
											"end": 2831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 2855,
											"end": 2856,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2858,
											"end": 2859,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 2851,
											"end": 2890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "tag",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 2890,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 2890,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2898,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2898,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2898,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2898,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2898,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1047,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 911,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 969,
											"end": 976,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 1000,
											"end": 1001,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1003,
											"end": 1004,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 996,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 996,
											"end": 1039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "tag",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1039,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1047,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38005,
											"end": 38276,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 38005,
											"end": 38276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38080,
											"end": 38094,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38097,
											"end": 38100,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 38097,
											"end": 38100,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38097,
											"end": 38100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38100,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38100,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 38097,
											"end": 38100,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38100,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38100,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38097,
											"end": 38100,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38110,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38097,
											"end": 38110,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38110,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 38119,
											"end": 38123,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 38097,
											"end": 38125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "tag",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "tag",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 38097,
											"end": 38125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "tag",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38080,
											"end": 38125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38080,
											"end": 38125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38150,
											"end": 38156,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38140,
											"end": 38147,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38140,
											"end": 38156,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 38136,
											"end": 38269,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38136,
											"end": 38269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 38136,
											"end": 38269,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38176,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 38173,
											"end": 38176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38173,
											"end": 38176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38176,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38176,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 38173,
											"end": 38176,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38176,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38176,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38173,
											"end": 38176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38185,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38173,
											"end": 38185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38185,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 38186,
											"end": 38189,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38191,
											"end": 38197,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 38173,
											"end": 38198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "tag",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "tag",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 38173,
											"end": 38198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "tag",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38136,
											"end": 38269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 38136,
											"end": 38269,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38136,
											"end": 38269,
											"name": "tag",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 38136,
											"end": 38269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38234,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 38231,
											"end": 38234,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38231,
											"end": 38234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38234,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38234,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 38231,
											"end": 38234,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38234,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38234,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38231,
											"end": 38234,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38243,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38231,
											"end": 38243,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38243,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 38244,
											"end": 38247,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38249,
											"end": 38256,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 38231,
											"end": 38257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "tag",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "tag",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 38231,
											"end": 38257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "tag",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38136,
											"end": 38269,
											"name": "tag",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 38136,
											"end": 38269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38069,
											"end": 38276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38005,
											"end": 38276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38005,
											"end": 38276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38005,
											"end": 38276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21445,
											"end": 21636,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 21445,
											"end": 21636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21519,
											"end": 21535,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21538,
											"end": 21544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21538,
											"end": 21544,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21538,
											"end": 21544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21538,
											"end": 21544,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21538,
											"end": 21544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21538,
											"end": 21544,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 21538,
											"end": 21544,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 21538,
											"end": 21544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21538,
											"end": 21544,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 21538,
											"end": 21544,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21538,
											"end": 21544,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21519,
											"end": 21544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21519,
											"end": 21544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21564,
											"end": 21572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21555,
											"end": 21561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21619,
											"end": 21627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21588,
											"end": 21628,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21588,
											"end": 21628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21609,
											"end": 21617,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21588,
											"end": 21628,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21588,
											"end": 21628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21588,
											"end": 21628,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 21588,
											"end": 21628,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21588,
											"end": 21628,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21588,
											"end": 21628,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21588,
											"end": 21628,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21588,
											"end": 21628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21588,
											"end": 21628,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21588,
											"end": 21628,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21588,
											"end": 21628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21588,
											"end": 21628,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 21508,
											"end": 21636,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21445,
											"end": 21636,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21445,
											"end": 21636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3428,
											"end": 3773,
											"name": "tag",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 3428,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3514,
											"end": 3521,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3613,
											"end": 3614,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3610,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3614,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3616,
											"end": 3628,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 3601,
											"end": 3629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3649,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3656,
											"end": 3657,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3652,
											"end": 3653,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3652,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 3652,
											"end": 3657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3652,
											"end": 3657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3652,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 3652,
											"end": 3657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3652,
											"end": 3657,
											"name": "tag",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 3652,
											"end": 3657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 3765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3757,
											"end": 3765,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3757,
											"end": 3765,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3757,
											"end": 3765,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3428,
											"end": 3773,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3428,
											"end": 3773,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3428,
											"end": 3773,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3428,
											"end": 3773,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3428,
											"end": 3773,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3428,
											"end": 3773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1576,
											"name": "tag",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 1384,
											"end": 1576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1503,
											"end": 1504,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1498,
											"end": 1499,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1498,
											"end": 1504,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1498,
											"end": 1504,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1518,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 1490,
											"end": 1519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "tag",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "tag",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1546,
											"end": 1547,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1543,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 1542,
											"end": 1547,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 1542,
											"end": 1547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1547,
											"name": "tag",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 1542,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1567,
											"end": 1568,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1560,
											"end": 1568,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1560,
											"end": 1568,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1560,
											"end": 1568,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1576,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1576,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "500"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 1,
											"value": "500"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 517,
											"name": "tag",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 442,
											"end": 517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 475,
											"end": 481,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 508,
											"end": 510,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 511,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 492,
											"end": 511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 492,
											"end": 511,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 442,
											"end": 517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 646,
											"end": 763,
											"name": "tag",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 646,
											"end": 763,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 755,
											"end": 756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 753,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 745,
											"end": 757,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 769,
											"end": 891,
											"name": "tag",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 769,
											"end": 891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 860,
											"end": 865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 842,
											"end": 866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 842,
											"end": 866,
											"name": "tag",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 835,
											"end": 840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 832,
											"end": 867,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 822,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 881,
											"end": 882,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 879,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 871,
											"end": 883,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 822,
											"end": 885,
											"name": "tag",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 769,
											"end": 891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 769,
											"end": 891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "tag",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 943,
											"end": 948,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 987,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 968,
											"end": 988,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 959,
											"end": 988,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 959,
											"end": 988,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 1024,
											"end": 1029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 997,
											"end": 1030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "tag",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1152,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1138,
											"end": 1147,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1129,
											"end": 1136,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1148,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 1156,
											"end": 1235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "tag",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "tag",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1277,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 1301,
											"end": 1354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "tag",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1247,
											"end": 1364,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "tag",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1496,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1443,
											"end": 1497,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "tag",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1537,
											"end": 1540,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1558,
											"end": 1563,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "tag",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1625,
											"end": 1634,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1658,
											"end": 1711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 1676,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "519"
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 1703,
											"end": 1708,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 1685,
											"end": 1709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "tag",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 1676,
											"end": 1710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1710,
											"name": "tag",
											"source": 1,
											"value": "519"
										},
										{
											"begin": 1676,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 1658,
											"end": 1711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1711,
											"name": "tag",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 1658,
											"end": 1711,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1711,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1711,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1575,
											"end": 1717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1773,
											"end": 1782,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1806,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 1806,
											"end": 1843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1843,
											"name": "tag",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 1806,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1793,
											"end": 1843,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1793,
											"end": 1843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1995,
											"name": "tag",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 1855,
											"end": 1995,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 1928,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1952,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 1983,
											"end": 1988,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1952,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 1952,
											"end": 1989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1952,
											"end": 1989,
											"name": "tag",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 1952,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1939,
											"end": 1989,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1939,
											"end": 1989,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1995,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1995,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1995,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2160,
											"name": "tag",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 2001,
											"end": 2160,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2102,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "526"
										},
										{
											"begin": 2147,
											"end": 2152,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2102,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 2102,
											"end": 2153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2102,
											"end": 2153,
											"name": "tag",
											"source": 1,
											"value": "526"
										},
										{
											"begin": 2102,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2097,
											"end": 2100,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2154,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2160,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2160,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2166,
											"end": 2416,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2166,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2273,
											"end": 2277,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2311,
											"end": 2313,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2300,
											"end": 2309,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2314,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2314,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2314,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 2406,
											"end": 2407,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2395,
											"end": 2404,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2391,
											"end": 2408,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2382,
											"end": 2388,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 2324,
											"end": 2409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2409,
											"name": "tag",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 2324,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2166,
											"end": 2416,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2166,
											"end": 2416,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2166,
											"end": 2416,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2166,
											"end": 2416,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2166,
											"end": 2416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2422,
											"end": 2518,
											"name": "tag",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 2422,
											"end": 2518,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2459,
											"end": 2466,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2488,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "530"
										},
										{
											"begin": 2506,
											"end": 2511,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 2488,
											"end": 2512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 2512,
											"name": "tag",
											"source": 1,
											"value": "530"
										},
										{
											"begin": 2488,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2422,
											"end": 2518,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2422,
											"end": 2518,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2422,
											"end": 2518,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2422,
											"end": 2518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 2646,
											"name": "tag",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 2524,
											"end": 2646,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2597,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "532"
										},
										{
											"begin": 2615,
											"end": 2620,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2597,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 2597,
											"end": 2621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2597,
											"end": 2621,
											"name": "tag",
											"source": 1,
											"value": "532"
										},
										{
											"begin": 2597,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2595,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2622,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2577,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "533"
										},
										{
											"begin": 2577,
											"end": 2640,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2636,
											"end": 2637,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2634,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2638,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2577,
											"end": 2640,
											"name": "tag",
											"source": 1,
											"value": "533"
										},
										{
											"begin": 2577,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 2646,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 2646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2652,
											"end": 2791,
											"name": "tag",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 2652,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2703,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2736,
											"end": 2742,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2743,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 2785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 2785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 2752,
											"end": 2785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 2785,
											"name": "tag",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 2752,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2652,
											"end": 2791,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2652,
											"end": 2791,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2652,
											"end": 2791,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2652,
											"end": 2791,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2652,
											"end": 2791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2797,
											"end": 2914,
											"name": "tag",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 2797,
											"end": 2914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2906,
											"end": 2907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2903,
											"end": 2904,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 2908,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2920,
											"end": 3037,
											"name": "tag",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 2920,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3029,
											"end": 3030,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3026,
											"end": 3027,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3031,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3145,
											"name": "tag",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 3043,
											"end": 3145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3084,
											"end": 3090,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3135,
											"end": 3137,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3131,
											"end": 3138,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3126,
											"end": 3128,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3119,
											"end": 3124,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3129,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3111,
											"end": 3139,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3101,
											"end": 3139,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3101,
											"end": 3139,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3145,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3151,
											"end": 3331,
											"name": "tag",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 3151,
											"end": 3331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3276,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3196,
											"end": 3197,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3189,
											"end": 3277,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3300,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3293,
											"end": 3294,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3286,
											"end": 3301,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3320,
											"end": 3324,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3317,
											"end": 3318,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3310,
											"end": 3325,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3337,
											"end": 3618,
											"name": "tag",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 3337,
											"end": 3618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3420,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "541"
										},
										{
											"begin": 3442,
											"end": 3446,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3420,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 3420,
											"end": 3447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3420,
											"end": 3447,
											"name": "tag",
											"source": 1,
											"value": "541"
										},
										{
											"begin": 3420,
											"end": 3447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3412,
											"end": 3418,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3448,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3550,
											"end": 3556,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3538,
											"end": 3548,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3535,
											"end": 3557,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3514,
											"end": 3532,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3502,
											"end": 3512,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3499,
											"end": 3533,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3558,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3581,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 3493,
											"end": 3581,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "543"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 3561,
											"end": 3579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "tag",
											"source": 1,
											"value": "543"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3581,
											"name": "tag",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 3493,
											"end": 3581,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3601,
											"end": 3611,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3599,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3590,
											"end": 3612,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3618,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3337,
											"end": 3618,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3337,
											"end": 3618,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3337,
											"end": 3618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3624,
											"end": 3753,
											"name": "tag",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 3624,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3658,
											"end": 3664,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3685,
											"end": 3705,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "545"
										},
										{
											"begin": 3685,
											"end": 3705,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 3685,
											"end": 3705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3685,
											"end": 3705,
											"name": "tag",
											"source": 1,
											"value": "545"
										},
										{
											"begin": 3685,
											"end": 3705,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3675,
											"end": 3705,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3675,
											"end": 3705,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 3742,
											"end": 3746,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3734,
											"end": 3740,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 3714,
											"end": 3747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3747,
											"name": "tag",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 3714,
											"end": 3747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3624,
											"end": 3753,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3624,
											"end": 3753,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3624,
											"end": 3753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3624,
											"end": 3753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3759,
											"end": 4066,
											"name": "tag",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 3759,
											"end": 4066,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3820,
											"end": 3824,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3910,
											"end": 3928,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3902,
											"end": 3908,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3899,
											"end": 3929,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 3952,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 3952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "548"
										},
										{
											"begin": 3896,
											"end": 3952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3932,
											"end": 3950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 3932,
											"end": 3950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 3932,
											"end": 3950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3932,
											"end": 3950,
											"name": "tag",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 3932,
											"end": 3950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 3952,
											"name": "tag",
											"source": 1,
											"value": "548"
										},
										{
											"begin": 3896,
											"end": 3952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3970,
											"end": 3999,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 3992,
											"end": 3998,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3970,
											"end": 3999,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 3970,
											"end": 3999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3970,
											"end": 3999,
											"name": "tag",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 3970,
											"end": 3999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3962,
											"end": 3999,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3962,
											"end": 3999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4054,
											"end": 4058,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4048,
											"end": 4052,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4044,
											"end": 4059,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4036,
											"end": 4059,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4036,
											"end": 4059,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3759,
											"end": 4066,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3759,
											"end": 4066,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3759,
											"end": 4066,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3759,
											"end": 4066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4072,
											"end": 4226,
											"name": "tag",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 4072,
											"end": 4226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4156,
											"end": 4162,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4151,
											"end": 4154,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4146,
											"end": 4149,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4133,
											"end": 4163,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 4218,
											"end": 4219,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4209,
											"end": 4215,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4204,
											"end": 4207,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4200,
											"end": 4216,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4193,
											"end": 4220,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4072,
											"end": 4226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4072,
											"end": 4226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4072,
											"end": 4226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4072,
											"end": 4226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4642,
											"name": "tag",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 4232,
											"end": 4642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4309,
											"end": 4314,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4334,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 4350,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "554"
										},
										{
											"begin": 4391,
											"end": 4397,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 4350,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4398,
											"name": "tag",
											"source": 1,
											"value": "554"
										},
										{
											"begin": 4350,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4334,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 4334,
											"end": 4399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4334,
											"end": 4399,
											"name": "tag",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 4334,
											"end": 4399,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4399,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4399,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4422,
											"end": 4428,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4415,
											"end": 4420,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4408,
											"end": 4429,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4460,
											"end": 4464,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4453,
											"end": 4458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4449,
											"end": 4465,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4498,
											"end": 4501,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4489,
											"end": 4495,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4484,
											"end": 4487,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4480,
											"end": 4496,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4477,
											"end": 4502,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4586,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "555"
										},
										{
											"begin": 4474,
											"end": 4586,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4505,
											"end": 4584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 4505,
											"end": 4584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 4505,
											"end": 4584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4505,
											"end": 4584,
											"name": "tag",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 4505,
											"end": 4584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4586,
											"name": "tag",
											"source": 1,
											"value": "555"
										},
										{
											"begin": 4474,
											"end": 4586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4595,
											"end": 4636,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "557"
										},
										{
											"begin": 4629,
											"end": 4635,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4624,
											"end": 4627,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4619,
											"end": 4622,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4595,
											"end": 4636,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 4595,
											"end": 4636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4595,
											"end": 4636,
											"name": "tag",
											"source": 1,
											"value": "557"
										},
										{
											"begin": 4595,
											"end": 4636,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4315,
											"end": 4642,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4642,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4642,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4642,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4642,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4642,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4999,
											"name": "tag",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 4661,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4716,
											"end": 4721,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4765,
											"end": 4768,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4758,
											"end": 4762,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4750,
											"end": 4756,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4763,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4742,
											"end": 4769,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4732,
											"end": 4854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 4732,
											"end": 4854,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "560"
										},
										{
											"begin": 4773,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 4773,
											"end": 4852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4852,
											"name": "tag",
											"source": 1,
											"value": "560"
										},
										{
											"begin": 4773,
											"end": 4852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4732,
											"end": 4854,
											"name": "tag",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 4732,
											"end": 4854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 4896,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 4897,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4915,
											"end": 4993,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "561"
										},
										{
											"begin": 4989,
											"end": 4992,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4981,
											"end": 4987,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4974,
											"end": 4978,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4966,
											"end": 4972,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4962,
											"end": 4979,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4915,
											"end": 4993,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 4915,
											"end": 4993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4915,
											"end": 4993,
											"name": "tag",
											"source": 1,
											"value": "561"
										},
										{
											"begin": 4915,
											"end": 4993,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4993,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4993,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4722,
											"end": 4999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4999,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4999,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5948,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 5005,
											"end": 5948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5106,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5108,
											"end": 5114,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5116,
											"end": 5122,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5124,
											"end": 5130,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5173,
											"end": 5176,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5161,
											"end": 5170,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5152,
											"end": 5159,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5148,
											"end": 5171,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 5177,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5141,
											"end": 5261,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5141,
											"end": 5261,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "563"
										},
										{
											"begin": 5141,
											"end": 5261,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "564"
										},
										{
											"begin": 5180,
											"end": 5259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 5180,
											"end": 5259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5259,
											"name": "tag",
											"source": 1,
											"value": "564"
										},
										{
											"begin": 5180,
											"end": 5259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5141,
											"end": 5261,
											"name": "tag",
											"source": 1,
											"value": "563"
										},
										{
											"begin": 5141,
											"end": 5261,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5300,
											"end": 5301,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5325,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "565"
										},
										{
											"begin": 5370,
											"end": 5377,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5361,
											"end": 5367,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5350,
											"end": 5359,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5368,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5325,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 5325,
											"end": 5378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5325,
											"end": 5378,
											"name": "tag",
											"source": 1,
											"value": "565"
										},
										{
											"begin": 5325,
											"end": 5378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5378,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5427,
											"end": 5429,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5453,
											"end": 5506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "566"
										},
										{
											"begin": 5498,
											"end": 5505,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5489,
											"end": 5495,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5487,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5474,
											"end": 5496,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5453,
											"end": 5506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 5453,
											"end": 5506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5453,
											"end": 5506,
											"name": "tag",
											"source": 1,
											"value": "566"
										},
										{
											"begin": 5453,
											"end": 5506,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5506,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5506,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5398,
											"end": 5516,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5555,
											"end": 5557,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5581,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 5626,
											"end": 5633,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5617,
											"end": 5623,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5606,
											"end": 5615,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5602,
											"end": 5624,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5581,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 5581,
											"end": 5634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5581,
											"end": 5634,
											"name": "tag",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 5581,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5634,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5634,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5526,
											"end": 5644,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5711,
											"end": 5713,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5700,
											"end": 5709,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5696,
											"end": 5714,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5683,
											"end": 5715,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5742,
											"end": 5760,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5734,
											"end": 5740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5731,
											"end": 5761,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5728,
											"end": 5845,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5728,
											"end": 5845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "568"
										},
										{
											"begin": 5728,
											"end": 5845,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5764,
											"end": 5843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 5764,
											"end": 5843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 5764,
											"end": 5843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5764,
											"end": 5843,
											"name": "tag",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 5764,
											"end": 5843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5728,
											"end": 5845,
											"name": "tag",
											"source": 1,
											"value": "568"
										},
										{
											"begin": 5728,
											"end": 5845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5869,
											"end": 5931,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "570"
										},
										{
											"begin": 5923,
											"end": 5930,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5914,
											"end": 5920,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5903,
											"end": 5912,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 5921,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5869,
											"end": 5931,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 5869,
											"end": 5931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5869,
											"end": 5931,
											"name": "tag",
											"source": 1,
											"value": "570"
										},
										{
											"begin": 5869,
											"end": 5931,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5859,
											"end": 5931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5859,
											"end": 5931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5654,
											"end": 5941,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5948,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5948,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5948,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5948,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5948,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5954,
											"end": 6103,
											"name": "tag",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 5954,
											"end": 6103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5990,
											"end": 5997,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6030,
											"end": 6096,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6023,
											"end": 6028,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6019,
											"end": 6097,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 6097,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 6097,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5954,
											"end": 6103,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5954,
											"end": 6103,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5954,
											"end": 6103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5954,
											"end": 6103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 6224,
											"name": "tag",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 6109,
											"end": 6224,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6194,
											"end": 6217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "573"
										},
										{
											"begin": 6211,
											"end": 6216,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6194,
											"end": 6217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 6194,
											"end": 6217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6194,
											"end": 6217,
											"name": "tag",
											"source": 1,
											"value": "573"
										},
										{
											"begin": 6194,
											"end": 6217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6189,
											"end": 6192,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6182,
											"end": 6218,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 6224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 6224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 6224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6230,
											"end": 6448,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 6230,
											"end": 6448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6321,
											"end": 6325,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6359,
											"end": 6361,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6348,
											"end": 6357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6344,
											"end": 6362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6336,
											"end": 6362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6336,
											"end": 6362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6372,
											"end": 6441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "575"
										},
										{
											"begin": 6438,
											"end": 6439,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6427,
											"end": 6436,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6423,
											"end": 6440,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6414,
											"end": 6420,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6372,
											"end": 6441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 6372,
											"end": 6441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6372,
											"end": 6441,
											"name": "tag",
											"source": 1,
											"value": "575"
										},
										{
											"begin": 6372,
											"end": 6441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6230,
											"end": 6448,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6230,
											"end": 6448,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6230,
											"end": 6448,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6230,
											"end": 6448,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6230,
											"end": 6448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6454,
											"end": 6596,
											"name": "tag",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 6454,
											"end": 6596,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6520,
											"end": 6529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6553,
											"end": 6590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "577"
										},
										{
											"begin": 6584,
											"end": 6589,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6553,
											"end": 6590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 6553,
											"end": 6590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6553,
											"end": 6590,
											"name": "tag",
											"source": 1,
											"value": "577"
										},
										{
											"begin": 6553,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6540,
											"end": 6590,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6540,
											"end": 6590,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6454,
											"end": 6596,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6454,
											"end": 6596,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6454,
											"end": 6596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6454,
											"end": 6596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6765,
											"name": "tag",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 6602,
											"end": 6765,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6705,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "579"
										},
										{
											"begin": 6752,
											"end": 6757,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6705,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 6705,
											"end": 6758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6705,
											"end": 6758,
											"name": "tag",
											"source": 1,
											"value": "579"
										},
										{
											"begin": 6705,
											"end": 6758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6700,
											"end": 6703,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6693,
											"end": 6759,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6765,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6765,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6771,
											"end": 7356,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 6771,
											"end": 7356,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6964,
											"end": 6968,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7005,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6991,
											"end": 7000,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7006,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6979,
											"end": 7006,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6979,
											"end": 7006,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7016,
											"end": 7103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "581"
										},
										{
											"begin": 7100,
											"end": 7101,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7089,
											"end": 7098,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7076,
											"end": 7082,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7016,
											"end": 7103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 7016,
											"end": 7103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7016,
											"end": 7103,
											"name": "tag",
											"source": 1,
											"value": "581"
										},
										{
											"begin": 7016,
											"end": 7103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7113,
											"end": 7185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "582"
										},
										{
											"begin": 7181,
											"end": 7183,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7170,
											"end": 7179,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7166,
											"end": 7184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7157,
											"end": 7163,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7113,
											"end": 7185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 7113,
											"end": 7185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7113,
											"end": 7185,
											"name": "tag",
											"source": 1,
											"value": "582"
										},
										{
											"begin": 7113,
											"end": 7185,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7195,
											"end": 7267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "583"
										},
										{
											"begin": 7263,
											"end": 7265,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7252,
											"end": 7261,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7266,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7239,
											"end": 7245,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7195,
											"end": 7267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 7195,
											"end": 7267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7195,
											"end": 7267,
											"name": "tag",
											"source": 1,
											"value": "583"
										},
										{
											"begin": 7195,
											"end": 7267,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7277,
											"end": 7349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "584"
										},
										{
											"begin": 7345,
											"end": 7347,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7334,
											"end": 7343,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7321,
											"end": 7327,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7277,
											"end": 7349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 7277,
											"end": 7349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7277,
											"end": 7349,
											"name": "tag",
											"source": 1,
											"value": "584"
										},
										{
											"begin": 7277,
											"end": 7349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6771,
											"end": 7356,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 6771,
											"end": 7356,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6771,
											"end": 7356,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6771,
											"end": 7356,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6771,
											"end": 7356,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6771,
											"end": 7356,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6771,
											"end": 7356,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6771,
											"end": 7356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7362,
											"end": 7474,
											"name": "tag",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 7362,
											"end": 7474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7415,
											"end": 7422,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7444,
											"end": 7468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "586"
										},
										{
											"begin": 7462,
											"end": 7467,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7444,
											"end": 7468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 7444,
											"end": 7468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7444,
											"end": 7468,
											"name": "tag",
											"source": 1,
											"value": "586"
										},
										{
											"begin": 7444,
											"end": 7468,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7433,
											"end": 7468,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7433,
											"end": 7468,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7362,
											"end": 7474,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7362,
											"end": 7474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7362,
											"end": 7474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7362,
											"end": 7474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7480,
											"end": 7634,
											"name": "tag",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 7480,
											"end": 7634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7569,
											"end": 7609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "588"
										},
										{
											"begin": 7603,
											"end": 7608,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7569,
											"end": 7609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 7569,
											"end": 7609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7569,
											"end": 7609,
											"name": "tag",
											"source": 1,
											"value": "588"
										},
										{
											"begin": 7569,
											"end": 7609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7567,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7559,
											"end": 7610,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7549,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "589"
										},
										{
											"begin": 7549,
											"end": 7628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7624,
											"end": 7625,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7621,
											"end": 7622,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7614,
											"end": 7626,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7549,
											"end": 7628,
											"name": "tag",
											"source": 1,
											"value": "589"
										},
										{
											"begin": 7549,
											"end": 7628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7480,
											"end": 7634,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7480,
											"end": 7634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7640,
											"end": 7811,
											"name": "tag",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 7640,
											"end": 7811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7702,
											"end": 7707,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7740,
											"end": 7746,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7727,
											"end": 7747,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7718,
											"end": 7747,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7718,
											"end": 7747,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7756,
											"end": 7805,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "591"
										},
										{
											"begin": 7799,
											"end": 7804,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7756,
											"end": 7805,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 7756,
											"end": 7805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7756,
											"end": 7805,
											"name": "tag",
											"source": 1,
											"value": "591"
										},
										{
											"begin": 7756,
											"end": 7805,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7640,
											"end": 7811,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7640,
											"end": 7811,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7640,
											"end": 7811,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7640,
											"end": 7811,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7640,
											"end": 7811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7817,
											"end": 7907,
											"name": "tag",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 7817,
											"end": 7907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7851,
											"end": 7858,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7894,
											"end": 7899,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7900,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7880,
											"end": 7901,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7901,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7901,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7817,
											"end": 7907,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7817,
											"end": 7907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7817,
											"end": 7907,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7817,
											"end": 7907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7913,
											"end": 8029,
											"name": "tag",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 7913,
											"end": 8029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7983,
											"end": 8004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "594"
										},
										{
											"begin": 7998,
											"end": 8003,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7983,
											"end": 8004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 7983,
											"end": 8004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7983,
											"end": 8004,
											"name": "tag",
											"source": 1,
											"value": "594"
										},
										{
											"begin": 7983,
											"end": 8004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7976,
											"end": 7981,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7973,
											"end": 8005,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7963,
											"end": 8023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "595"
										},
										{
											"begin": 7963,
											"end": 8023,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8019,
											"end": 8020,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8016,
											"end": 8017,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8009,
											"end": 8021,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7963,
											"end": 8023,
											"name": "tag",
											"source": 1,
											"value": "595"
										},
										{
											"begin": 7963,
											"end": 8023,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7913,
											"end": 8029,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7913,
											"end": 8029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8035,
											"end": 8168,
											"name": "tag",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 8035,
											"end": 8168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8078,
											"end": 8083,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8116,
											"end": 8122,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8103,
											"end": 8123,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 8094,
											"end": 8123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8094,
											"end": 8123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8132,
											"end": 8162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "597"
										},
										{
											"begin": 8156,
											"end": 8161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8132,
											"end": 8162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 8132,
											"end": 8162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8132,
											"end": 8162,
											"name": "tag",
											"source": 1,
											"value": "597"
										},
										{
											"begin": 8132,
											"end": 8162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8035,
											"end": 8168,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8035,
											"end": 8168,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8035,
											"end": 8168,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8035,
											"end": 8168,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8035,
											"end": 8168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8174,
											"end": 8819,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 8174,
											"end": 8819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8264,
											"end": 8270,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8272,
											"end": 8278,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8280,
											"end": 8286,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8329,
											"end": 8331,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8317,
											"end": 8326,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8308,
											"end": 8315,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8304,
											"end": 8327,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8300,
											"end": 8332,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 8297,
											"end": 8416,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8297,
											"end": 8416,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "599"
										},
										{
											"begin": 8297,
											"end": 8416,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8335,
											"end": 8414,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "600"
										},
										{
											"begin": 8335,
											"end": 8414,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 8335,
											"end": 8414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8335,
											"end": 8414,
											"name": "tag",
											"source": 1,
											"value": "600"
										},
										{
											"begin": 8335,
											"end": 8414,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8297,
											"end": 8416,
											"name": "tag",
											"source": 1,
											"value": "599"
										},
										{
											"begin": 8297,
											"end": 8416,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8455,
											"end": 8456,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8480,
											"end": 8533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "601"
										},
										{
											"begin": 8525,
											"end": 8532,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8516,
											"end": 8522,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8505,
											"end": 8514,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8501,
											"end": 8523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8480,
											"end": 8533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 8480,
											"end": 8533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8480,
											"end": 8533,
											"name": "tag",
											"source": 1,
											"value": "601"
										},
										{
											"begin": 8480,
											"end": 8533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8470,
											"end": 8533,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8470,
											"end": 8533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8426,
											"end": 8543,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8582,
											"end": 8584,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8608,
											"end": 8677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 8669,
											"end": 8676,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8660,
											"end": 8666,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8649,
											"end": 8658,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8645,
											"end": 8667,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8608,
											"end": 8677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 8608,
											"end": 8677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8608,
											"end": 8677,
											"name": "tag",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 8608,
											"end": 8677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8598,
											"end": 8677,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8598,
											"end": 8677,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8687,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8728,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8752,
											"end": 8802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "603"
										},
										{
											"begin": 8794,
											"end": 8801,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8785,
											"end": 8791,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8774,
											"end": 8783,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8770,
											"end": 8792,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8752,
											"end": 8802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 8752,
											"end": 8802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8752,
											"end": 8802,
											"name": "tag",
											"source": 1,
											"value": "603"
										},
										{
											"begin": 8752,
											"end": 8802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8742,
											"end": 8802,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8742,
											"end": 8802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8697,
											"end": 8812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8174,
											"end": 8819,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8174,
											"end": 8819,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8174,
											"end": 8819,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8174,
											"end": 8819,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8174,
											"end": 8819,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8174,
											"end": 8819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8825,
											"end": 8942,
											"name": "tag",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 8825,
											"end": 8942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8883,
											"end": 8890,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "605"
										},
										{
											"begin": 8930,
											"end": 8935,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 8912,
											"end": 8936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "tag",
											"source": 1,
											"value": "605"
										},
										{
											"begin": 8912,
											"end": 8936,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8901,
											"end": 8936,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8901,
											"end": 8936,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8825,
											"end": 8942,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8825,
											"end": 8942,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8825,
											"end": 8942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8825,
											"end": 8942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8948,
											"end": 9112,
											"name": "tag",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 8948,
											"end": 9112,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "607"
										},
										{
											"begin": 9081,
											"end": 9086,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 9042,
											"end": 9087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9087,
											"name": "tag",
											"source": 1,
											"value": "607"
										},
										{
											"begin": 9042,
											"end": 9087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9035,
											"end": 9040,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9032,
											"end": 9088,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9022,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "608"
										},
										{
											"begin": 9022,
											"end": 9106,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9102,
											"end": 9103,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9099,
											"end": 9100,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9092,
											"end": 9104,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9022,
											"end": 9106,
											"name": "tag",
											"source": 1,
											"value": "608"
										},
										{
											"begin": 9022,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8948,
											"end": 9112,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8948,
											"end": 9112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9118,
											"end": 9299,
											"name": "tag",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 9118,
											"end": 9299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9185,
											"end": 9190,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9223,
											"end": 9229,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9210,
											"end": 9230,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 9201,
											"end": 9230,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9201,
											"end": 9230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9239,
											"end": 9293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "610"
										},
										{
											"begin": 9287,
											"end": 9292,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9239,
											"end": 9293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 9239,
											"end": 9293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9239,
											"end": 9293,
											"name": "tag",
											"source": 1,
											"value": "610"
										},
										{
											"begin": 9239,
											"end": 9293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9118,
											"end": 9299,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9118,
											"end": 9299,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9118,
											"end": 9299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9118,
											"end": 9299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9118,
											"end": 9299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9305,
											"end": 9676,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 9305,
											"end": 9676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9385,
											"end": 9391,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9434,
											"end": 9436,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9422,
											"end": 9431,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9420,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9409,
											"end": 9432,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9405,
											"end": 9437,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 9402,
											"end": 9521,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9402,
											"end": 9521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "612"
										},
										{
											"begin": 9402,
											"end": 9521,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9440,
											"end": 9519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "613"
										},
										{
											"begin": 9440,
											"end": 9519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 9440,
											"end": 9519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9440,
											"end": 9519,
											"name": "tag",
											"source": 1,
											"value": "613"
										},
										{
											"begin": 9440,
											"end": 9519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9402,
											"end": 9521,
											"name": "tag",
											"source": 1,
											"value": "612"
										},
										{
											"begin": 9402,
											"end": 9521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9560,
											"end": 9561,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9585,
											"end": 9659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "614"
										},
										{
											"begin": 9651,
											"end": 9658,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9642,
											"end": 9648,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9631,
											"end": 9640,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9627,
											"end": 9649,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9585,
											"end": 9659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 9585,
											"end": 9659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9585,
											"end": 9659,
											"name": "tag",
											"source": 1,
											"value": "614"
										},
										{
											"begin": 9585,
											"end": 9659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9575,
											"end": 9659,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9575,
											"end": 9659,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9531,
											"end": 9669,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9305,
											"end": 9676,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9305,
											"end": 9676,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9305,
											"end": 9676,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9305,
											"end": 9676,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9305,
											"end": 9676,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10156,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 9682,
											"end": 10156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9750,
											"end": 9756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9758,
											"end": 9764,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9807,
											"end": 9809,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9795,
											"end": 9804,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9786,
											"end": 9793,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9782,
											"end": 9805,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9778,
											"end": 9810,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 9775,
											"end": 9894,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9775,
											"end": 9894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "616"
										},
										{
											"begin": 9775,
											"end": 9894,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9813,
											"end": 9892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "617"
										},
										{
											"begin": 9813,
											"end": 9892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 9813,
											"end": 9892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9813,
											"end": 9892,
											"name": "tag",
											"source": 1,
											"value": "617"
										},
										{
											"begin": 9813,
											"end": 9892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9775,
											"end": 9894,
											"name": "tag",
											"source": 1,
											"value": "616"
										},
										{
											"begin": 9775,
											"end": 9894,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9933,
											"end": 9934,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9958,
											"end": 10011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "618"
										},
										{
											"begin": 10003,
											"end": 10010,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9994,
											"end": 10000,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9983,
											"end": 9992,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9979,
											"end": 10001,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9958,
											"end": 10011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 9958,
											"end": 10011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9958,
											"end": 10011,
											"name": "tag",
											"source": 1,
											"value": "618"
										},
										{
											"begin": 9958,
											"end": 10011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9948,
											"end": 10011,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9948,
											"end": 10011,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9904,
											"end": 10021,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10060,
											"end": 10062,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10086,
											"end": 10139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "619"
										},
										{
											"begin": 10131,
											"end": 10138,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10122,
											"end": 10128,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10111,
											"end": 10120,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10107,
											"end": 10129,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10086,
											"end": 10139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 10086,
											"end": 10139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10086,
											"end": 10139,
											"name": "tag",
											"source": 1,
											"value": "619"
										},
										{
											"begin": 10086,
											"end": 10139,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10076,
											"end": 10139,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10076,
											"end": 10139,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10031,
											"end": 10149,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10156,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10156,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10162,
											"end": 10636,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 10162,
											"end": 10636,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10230,
											"end": 10236,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10238,
											"end": 10244,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10287,
											"end": 10289,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10275,
											"end": 10284,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10266,
											"end": 10273,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10262,
											"end": 10285,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10258,
											"end": 10290,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 10255,
											"end": 10374,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10255,
											"end": 10374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "621"
										},
										{
											"begin": 10255,
											"end": 10374,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10293,
											"end": 10372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "622"
										},
										{
											"begin": 10293,
											"end": 10372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 10293,
											"end": 10372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10293,
											"end": 10372,
											"name": "tag",
											"source": 1,
											"value": "622"
										},
										{
											"begin": 10293,
											"end": 10372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10255,
											"end": 10374,
											"name": "tag",
											"source": 1,
											"value": "621"
										},
										{
											"begin": 10255,
											"end": 10374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10413,
											"end": 10414,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10438,
											"end": 10491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "623"
										},
										{
											"begin": 10483,
											"end": 10490,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10474,
											"end": 10480,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10463,
											"end": 10472,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10459,
											"end": 10481,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 10438,
											"end": 10491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10491,
											"name": "tag",
											"source": 1,
											"value": "623"
										},
										{
											"begin": 10438,
											"end": 10491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 10491,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 10491,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10384,
											"end": 10501,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10540,
											"end": 10542,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10566,
											"end": 10619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "624"
										},
										{
											"begin": 10611,
											"end": 10618,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10602,
											"end": 10608,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10600,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10587,
											"end": 10609,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10566,
											"end": 10619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 10566,
											"end": 10619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10566,
											"end": 10619,
											"name": "tag",
											"source": 1,
											"value": "624"
										},
										{
											"begin": 10566,
											"end": 10619,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10556,
											"end": 10619,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10556,
											"end": 10619,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10511,
											"end": 10629,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10162,
											"end": 10636,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10162,
											"end": 10636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10162,
											"end": 10636,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10162,
											"end": 10636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10162,
											"end": 10636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10162,
											"end": 10636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10642,
											"end": 11255,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 10642,
											"end": 11255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10716,
											"end": 10722,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10724,
											"end": 10730,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10732,
											"end": 10738,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10781,
											"end": 10783,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10769,
											"end": 10778,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10760,
											"end": 10767,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10756,
											"end": 10779,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10752,
											"end": 10784,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 10749,
											"end": 10868,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10749,
											"end": 10868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "626"
										},
										{
											"begin": 10749,
											"end": 10868,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10787,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "627"
										},
										{
											"begin": 10787,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 10787,
											"end": 10866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10787,
											"end": 10866,
											"name": "tag",
											"source": 1,
											"value": "627"
										},
										{
											"begin": 10787,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10749,
											"end": 10868,
											"name": "tag",
											"source": 1,
											"value": "626"
										},
										{
											"begin": 10749,
											"end": 10868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10907,
											"end": 10908,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10932,
											"end": 10985,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "628"
										},
										{
											"begin": 10977,
											"end": 10984,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10968,
											"end": 10974,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 10966,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10953,
											"end": 10975,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10932,
											"end": 10985,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 10932,
											"end": 10985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10932,
											"end": 10985,
											"name": "tag",
											"source": 1,
											"value": "628"
										},
										{
											"begin": 10932,
											"end": 10985,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10922,
											"end": 10985,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10922,
											"end": 10985,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10878,
											"end": 10995,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11034,
											"end": 11036,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11060,
											"end": 11113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "629"
										},
										{
											"begin": 11105,
											"end": 11112,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11096,
											"end": 11102,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11085,
											"end": 11094,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11081,
											"end": 11103,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11060,
											"end": 11113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 11060,
											"end": 11113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11060,
											"end": 11113,
											"name": "tag",
											"source": 1,
											"value": "629"
										},
										{
											"begin": 11060,
											"end": 11113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11050,
											"end": 11113,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11050,
											"end": 11113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11005,
											"end": 11123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11162,
											"end": 11164,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11188,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "630"
										},
										{
											"begin": 11230,
											"end": 11237,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11221,
											"end": 11227,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11210,
											"end": 11219,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11206,
											"end": 11228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11188,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 11188,
											"end": 11238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11188,
											"end": 11238,
											"name": "tag",
											"source": 1,
											"value": "630"
										},
										{
											"begin": 11188,
											"end": 11238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11178,
											"end": 11238,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11178,
											"end": 11238,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11133,
											"end": 11248,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10642,
											"end": 11255,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10642,
											"end": 11255,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10642,
											"end": 11255,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10642,
											"end": 11255,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10642,
											"end": 11255,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10642,
											"end": 11255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11261,
											"end": 11408,
											"name": "tag",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 11261,
											"end": 11408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11332,
											"end": 11341,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11365,
											"end": 11402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "632"
										},
										{
											"begin": 11396,
											"end": 11401,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11365,
											"end": 11402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 11365,
											"end": 11402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11365,
											"end": 11402,
											"name": "tag",
											"source": 1,
											"value": "632"
										},
										{
											"begin": 11365,
											"end": 11402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11352,
											"end": 11402,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11352,
											"end": 11402,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11261,
											"end": 11408,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11261,
											"end": 11408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11261,
											"end": 11408,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11261,
											"end": 11408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11414,
											"end": 11587,
											"name": "tag",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 11414,
											"end": 11587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11522,
											"end": 11580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "634"
										},
										{
											"begin": 11574,
											"end": 11579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11522,
											"end": 11580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 11522,
											"end": 11580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11522,
											"end": 11580,
											"name": "tag",
											"source": 1,
											"value": "634"
										},
										{
											"begin": 11522,
											"end": 11580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11517,
											"end": 11520,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11510,
											"end": 11581,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11414,
											"end": 11587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11414,
											"end": 11587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11414,
											"end": 11587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11593,
											"end": 11857,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 11593,
											"end": 11857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11707,
											"end": 11711,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11745,
											"end": 11747,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11734,
											"end": 11743,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11730,
											"end": 11748,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11722,
											"end": 11748,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11722,
											"end": 11748,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11758,
											"end": 11850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "636"
										},
										{
											"begin": 11847,
											"end": 11848,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11836,
											"end": 11845,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11832,
											"end": 11849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11823,
											"end": 11829,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11758,
											"end": 11850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 11758,
											"end": 11850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11758,
											"end": 11850,
											"name": "tag",
											"source": 1,
											"value": "636"
										},
										{
											"begin": 11758,
											"end": 11850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11593,
											"end": 11857,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11593,
											"end": 11857,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11593,
											"end": 11857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11593,
											"end": 11857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11593,
											"end": 11857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11863,
											"end": 11981,
											"name": "tag",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 11863,
											"end": 11981,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11950,
											"end": 11974,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "638"
										},
										{
											"begin": 11968,
											"end": 11973,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11950,
											"end": 11974,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 11950,
											"end": 11974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11950,
											"end": 11974,
											"name": "tag",
											"source": 1,
											"value": "638"
										},
										{
											"begin": 11950,
											"end": 11974,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11945,
											"end": 11948,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11938,
											"end": 11975,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11863,
											"end": 11981,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11863,
											"end": 11981,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11863,
											"end": 11981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11987,
											"end": 12209,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 11987,
											"end": 12209,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12080,
											"end": 12084,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12118,
											"end": 12120,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12107,
											"end": 12116,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12103,
											"end": 12121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12095,
											"end": 12121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12095,
											"end": 12121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12131,
											"end": 12202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "640"
										},
										{
											"begin": 12199,
											"end": 12200,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12188,
											"end": 12197,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12184,
											"end": 12201,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12175,
											"end": 12181,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12131,
											"end": 12202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 12131,
											"end": 12202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12131,
											"end": 12202,
											"name": "tag",
											"source": 1,
											"value": "640"
										},
										{
											"begin": 12131,
											"end": 12202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11987,
											"end": 12209,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11987,
											"end": 12209,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11987,
											"end": 12209,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11987,
											"end": 12209,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11987,
											"end": 12209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12215,
											"end": 12547,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 12215,
											"end": 12547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12336,
											"end": 12340,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12374,
											"end": 12376,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12363,
											"end": 12372,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12359,
											"end": 12377,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12351,
											"end": 12377,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12351,
											"end": 12377,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12387,
											"end": 12458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "642"
										},
										{
											"begin": 12455,
											"end": 12456,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12444,
											"end": 12453,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12440,
											"end": 12457,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12431,
											"end": 12437,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12387,
											"end": 12458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 12387,
											"end": 12458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12387,
											"end": 12458,
											"name": "tag",
											"source": 1,
											"value": "642"
										},
										{
											"begin": 12387,
											"end": 12458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12468,
											"end": 12540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "643"
										},
										{
											"begin": 12536,
											"end": 12538,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12525,
											"end": 12534,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12521,
											"end": 12539,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12512,
											"end": 12518,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12468,
											"end": 12540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 12468,
											"end": 12540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12468,
											"end": 12540,
											"name": "tag",
											"source": 1,
											"value": "643"
										},
										{
											"begin": 12468,
											"end": 12540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12215,
											"end": 12547,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 12215,
											"end": 12547,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12215,
											"end": 12547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12215,
											"end": 12547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12215,
											"end": 12547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12215,
											"end": 12547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12553,
											"end": 12882,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 12553,
											"end": 12882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12612,
											"end": 12618,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12661,
											"end": 12663,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12649,
											"end": 12658,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12640,
											"end": 12647,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12636,
											"end": 12659,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12632,
											"end": 12664,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 12629,
											"end": 12748,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12629,
											"end": 12748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "645"
										},
										{
											"begin": 12629,
											"end": 12748,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12667,
											"end": 12746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "646"
										},
										{
											"begin": 12667,
											"end": 12746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 12667,
											"end": 12746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12667,
											"end": 12746,
											"name": "tag",
											"source": 1,
											"value": "646"
										},
										{
											"begin": 12667,
											"end": 12746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12629,
											"end": 12748,
											"name": "tag",
											"source": 1,
											"value": "645"
										},
										{
											"begin": 12629,
											"end": 12748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12787,
											"end": 12788,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12812,
											"end": 12865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 12857,
											"end": 12864,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12854,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12837,
											"end": 12846,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12833,
											"end": 12855,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12812,
											"end": 12865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 12812,
											"end": 12865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12812,
											"end": 12865,
											"name": "tag",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 12812,
											"end": 12865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12802,
											"end": 12865,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12802,
											"end": 12865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12758,
											"end": 12875,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12553,
											"end": 12882,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12553,
											"end": 12882,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12553,
											"end": 12882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12553,
											"end": 12882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12553,
											"end": 12882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12888,
											"end": 13002,
											"name": "tag",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 12888,
											"end": 13002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12955,
											"end": 12961,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12989,
											"end": 12994,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12983,
											"end": 12995,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12973,
											"end": 12995,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12973,
											"end": 12995,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12888,
											"end": 13002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12888,
											"end": 13002,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12888,
											"end": 13002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12888,
											"end": 13002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13008,
											"end": 13192,
											"name": "tag",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 13008,
											"end": 13192,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13107,
											"end": 13118,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13141,
											"end": 13147,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13136,
											"end": 13139,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13129,
											"end": 13148,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13181,
											"end": 13185,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13176,
											"end": 13179,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13172,
											"end": 13186,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13157,
											"end": 13186,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13157,
											"end": 13186,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13008,
											"end": 13192,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13008,
											"end": 13192,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13008,
											"end": 13192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13008,
											"end": 13192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13008,
											"end": 13192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13198,
											"end": 13330,
											"name": "tag",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 13198,
											"end": 13330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13265,
											"end": 13269,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13288,
											"end": 13291,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13280,
											"end": 13291,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13280,
											"end": 13291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13318,
											"end": 13322,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13313,
											"end": 13316,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13309,
											"end": 13323,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13301,
											"end": 13323,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13301,
											"end": 13323,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13198,
											"end": 13330,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13198,
											"end": 13330,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13198,
											"end": 13330,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13198,
											"end": 13330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13336,
											"end": 13444,
											"name": "tag",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 13336,
											"end": 13444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13413,
											"end": 13437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "652"
										},
										{
											"begin": 13431,
											"end": 13436,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13413,
											"end": 13437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 13413,
											"end": 13437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13413,
											"end": 13437,
											"name": "tag",
											"source": 1,
											"value": "652"
										},
										{
											"begin": 13413,
											"end": 13437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13408,
											"end": 13411,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13401,
											"end": 13438,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13336,
											"end": 13444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13336,
											"end": 13444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13336,
											"end": 13444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13450,
											"end": 13629,
											"name": "tag",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 13450,
											"end": 13629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13519,
											"end": 13529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13540,
											"end": 13586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "654"
										},
										{
											"begin": 13582,
											"end": 13585,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13574,
											"end": 13580,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13540,
											"end": 13586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 13540,
											"end": 13586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13540,
											"end": 13586,
											"name": "tag",
											"source": 1,
											"value": "654"
										},
										{
											"begin": 13540,
											"end": 13586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13618,
											"end": 13622,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13613,
											"end": 13616,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13609,
											"end": 13623,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13595,
											"end": 13623,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13595,
											"end": 13623,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13450,
											"end": 13629,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13450,
											"end": 13629,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13450,
											"end": 13629,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13450,
											"end": 13629,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13450,
											"end": 13629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13635,
											"end": 13748,
											"name": "tag",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 13635,
											"end": 13748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13705,
											"end": 13709,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13737,
											"end": 13741,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13732,
											"end": 13735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13728,
											"end": 13742,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13720,
											"end": 13742,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13720,
											"end": 13742,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13635,
											"end": 13748,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13635,
											"end": 13748,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13635,
											"end": 13748,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13635,
											"end": 13748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13784,
											"end": 14516,
											"name": "tag",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 13784,
											"end": 14516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13903,
											"end": 13906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13932,
											"end": 13986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "657"
										},
										{
											"begin": 13980,
											"end": 13985,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13932,
											"end": 13986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 13932,
											"end": 13986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13932,
											"end": 13986,
											"name": "tag",
											"source": 1,
											"value": "657"
										},
										{
											"begin": 13932,
											"end": 13986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14002,
											"end": 14088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "658"
										},
										{
											"begin": 14081,
											"end": 14087,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14076,
											"end": 14079,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14002,
											"end": 14088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 14002,
											"end": 14088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14002,
											"end": 14088,
											"name": "tag",
											"source": 1,
											"value": "658"
										},
										{
											"begin": 14002,
											"end": 14088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13995,
											"end": 14088,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 13995,
											"end": 14088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14112,
											"end": 14168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "659"
										},
										{
											"begin": 14162,
											"end": 14167,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14112,
											"end": 14168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 14112,
											"end": 14168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14112,
											"end": 14168,
											"name": "tag",
											"source": 1,
											"value": "659"
										},
										{
											"begin": 14112,
											"end": 14168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14191,
											"end": 14198,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14222,
											"end": 14223,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14207,
											"end": 14491,
											"name": "tag",
											"source": 1,
											"value": "660"
										},
										{
											"begin": 14207,
											"end": 14491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14232,
											"end": 14238,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14229,
											"end": 14230,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14226,
											"end": 14239,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 14207,
											"end": 14491,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14207,
											"end": 14491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "662"
										},
										{
											"begin": 14207,
											"end": 14491,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14308,
											"end": 14314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14302,
											"end": 14315,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14335,
											"end": 14398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "663"
										},
										{
											"begin": 14394,
											"end": 14397,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 14379,
											"end": 14392,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14335,
											"end": 14398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 14335,
											"end": 14398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14335,
											"end": 14398,
											"name": "tag",
											"source": 1,
											"value": "663"
										},
										{
											"begin": 14335,
											"end": 14398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14328,
											"end": 14398,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 14328,
											"end": 14398,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14421,
											"end": 14481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "664"
										},
										{
											"begin": 14474,
											"end": 14480,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14421,
											"end": 14481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 14421,
											"end": 14481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14421,
											"end": 14481,
											"name": "tag",
											"source": 1,
											"value": "664"
										},
										{
											"begin": 14421,
											"end": 14481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14411,
											"end": 14481,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14411,
											"end": 14481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14267,
											"end": 14491,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14254,
											"end": 14255,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14251,
											"end": 14252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14247,
											"end": 14256,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14242,
											"end": 14256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14242,
											"end": 14256,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14207,
											"end": 14491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "660"
										},
										{
											"begin": 14207,
											"end": 14491,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14207,
											"end": 14491,
											"name": "tag",
											"source": 1,
											"value": "662"
										},
										{
											"begin": 14207,
											"end": 14491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14211,
											"end": 14225,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14507,
											"end": 14510,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14500,
											"end": 14510,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14500,
											"end": 14510,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13908,
											"end": 14516,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13908,
											"end": 14516,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13908,
											"end": 14516,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13784,
											"end": 14516,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13784,
											"end": 14516,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13784,
											"end": 14516,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13784,
											"end": 14516,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13784,
											"end": 14516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14522,
											"end": 14895,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 14522,
											"end": 14895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14665,
											"end": 14669,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14703,
											"end": 14705,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14692,
											"end": 14701,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14688,
											"end": 14706,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14680,
											"end": 14706,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14680,
											"end": 14706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14752,
											"end": 14761,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14746,
											"end": 14750,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14742,
											"end": 14762,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14738,
											"end": 14739,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14727,
											"end": 14736,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14723,
											"end": 14740,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14716,
											"end": 14763,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14780,
											"end": 14888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "666"
										},
										{
											"begin": 14883,
											"end": 14887,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14874,
											"end": 14880,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14780,
											"end": 14888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 14780,
											"end": 14888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14780,
											"end": 14888,
											"name": "tag",
											"source": 1,
											"value": "666"
										},
										{
											"begin": 14780,
											"end": 14888,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14888,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14888,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14522,
											"end": 14895,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14522,
											"end": 14895,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14522,
											"end": 14895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14522,
											"end": 14895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14522,
											"end": 14895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14901,
											"end": 15050,
											"name": "tag",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 14901,
											"end": 15050,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14974,
											"end": 14983,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15007,
											"end": 15044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "668"
										},
										{
											"begin": 15038,
											"end": 15043,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15007,
											"end": 15044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 15007,
											"end": 15044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15007,
											"end": 15044,
											"name": "tag",
											"source": 1,
											"value": "668"
										},
										{
											"begin": 15007,
											"end": 15044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14994,
											"end": 15044,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14994,
											"end": 15044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14901,
											"end": 15050,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14901,
											"end": 15050,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14901,
											"end": 15050,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14901,
											"end": 15050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15056,
											"end": 15233,
											"name": "tag",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 15056,
											"end": 15233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15166,
											"end": 15226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "670"
										},
										{
											"begin": 15220,
											"end": 15225,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15166,
											"end": 15226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 15166,
											"end": 15226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15166,
											"end": 15226,
											"name": "tag",
											"source": 1,
											"value": "670"
										},
										{
											"begin": 15166,
											"end": 15226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15161,
											"end": 15164,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15154,
											"end": 15227,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15056,
											"end": 15233,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15056,
											"end": 15233,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15056,
											"end": 15233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15239,
											"end": 15507,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 15239,
											"end": 15507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15355,
											"end": 15359,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15393,
											"end": 15395,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15382,
											"end": 15391,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15378,
											"end": 15396,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15370,
											"end": 15396,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15370,
											"end": 15396,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15406,
											"end": 15500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "672"
										},
										{
											"begin": 15497,
											"end": 15498,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15486,
											"end": 15495,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15482,
											"end": 15499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15473,
											"end": 15479,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15406,
											"end": 15500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 15406,
											"end": 15500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15406,
											"end": 15500,
											"name": "tag",
											"source": 1,
											"value": "672"
										},
										{
											"begin": 15406,
											"end": 15500,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15239,
											"end": 15507,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15239,
											"end": 15507,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15239,
											"end": 15507,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15239,
											"end": 15507,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15239,
											"end": 15507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15513,
											"end": 15682,
											"name": "tag",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 15513,
											"end": 15682,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15597,
											"end": 15608,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15631,
											"end": 15637,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15626,
											"end": 15629,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15619,
											"end": 15638,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15671,
											"end": 15675,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15666,
											"end": 15669,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15662,
											"end": 15676,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15647,
											"end": 15676,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15647,
											"end": 15676,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15513,
											"end": 15682,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15513,
											"end": 15682,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15513,
											"end": 15682,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15513,
											"end": 15682,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15513,
											"end": 15682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15688,
											"end": 15870,
											"name": "tag",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 15688,
											"end": 15870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15828,
											"end": 15862,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 15824,
											"end": 15825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15816,
											"end": 15822,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15812,
											"end": 15826,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15805,
											"end": 15863,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15688,
											"end": 15870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15688,
											"end": 15870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15876,
											"end": 16242,
											"name": "tag",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 15876,
											"end": 16242,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16018,
											"end": 16021,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16039,
											"end": 16106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "676"
										},
										{
											"begin": 16103,
											"end": 16105,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16098,
											"end": 16101,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16039,
											"end": 16106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 16039,
											"end": 16106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16039,
											"end": 16106,
											"name": "tag",
											"source": 1,
											"value": "676"
										},
										{
											"begin": 16039,
											"end": 16106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16032,
											"end": 16106,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16032,
											"end": 16106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16115,
											"end": 16208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "677"
										},
										{
											"begin": 16204,
											"end": 16207,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16115,
											"end": 16208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 16115,
											"end": 16208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16115,
											"end": 16208,
											"name": "tag",
											"source": 1,
											"value": "677"
										},
										{
											"begin": 16115,
											"end": 16208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16233,
											"end": 16235,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16228,
											"end": 16231,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16224,
											"end": 16236,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16217,
											"end": 16236,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16217,
											"end": 16236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15876,
											"end": 16242,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15876,
											"end": 16242,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15876,
											"end": 16242,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15876,
											"end": 16242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16248,
											"end": 16667,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 16248,
											"end": 16667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16414,
											"end": 16418,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16452,
											"end": 16454,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16441,
											"end": 16450,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16437,
											"end": 16455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16429,
											"end": 16455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16429,
											"end": 16455,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16501,
											"end": 16510,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16495,
											"end": 16499,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16491,
											"end": 16511,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16487,
											"end": 16488,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16476,
											"end": 16485,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16472,
											"end": 16489,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16465,
											"end": 16512,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16529,
											"end": 16660,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "679"
										},
										{
											"begin": 16655,
											"end": 16659,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16529,
											"end": 16660,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 16529,
											"end": 16660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16529,
											"end": 16660,
											"name": "tag",
											"source": 1,
											"value": "679"
										},
										{
											"begin": 16529,
											"end": 16660,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16521,
											"end": 16660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16521,
											"end": 16660,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16248,
											"end": 16667,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16248,
											"end": 16667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16248,
											"end": 16667,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16248,
											"end": 16667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16673,
											"end": 16853,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 16673,
											"end": 16853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16721,
											"end": 16798,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16718,
											"end": 16719,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16711,
											"end": 16799,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16818,
											"end": 16822,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 16815,
											"end": 16816,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16808,
											"end": 16823,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16842,
											"end": 16846,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 16839,
											"end": 16840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16832,
											"end": 16847,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16859,
											"end": 17039,
											"name": "tag",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 16859,
											"end": 17039,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16984,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16904,
											"end": 16905,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16897,
											"end": 16985,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17004,
											"end": 17008,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 17001,
											"end": 17002,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16994,
											"end": 17009,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17028,
											"end": 17032,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 17025,
											"end": 17026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17018,
											"end": 17033,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17045,
											"end": 17278,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 17045,
											"end": 17278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17084,
											"end": 17087,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17107,
											"end": 17131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "683"
										},
										{
											"begin": 17125,
											"end": 17130,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17107,
											"end": 17131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 17107,
											"end": 17131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17107,
											"end": 17131,
											"name": "tag",
											"source": 1,
											"value": "683"
										},
										{
											"begin": 17107,
											"end": 17131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17098,
											"end": 17131,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17098,
											"end": 17131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17153,
											"end": 17219,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17146,
											"end": 17151,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17143,
											"end": 17220,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17140,
											"end": 17243,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "684"
										},
										{
											"begin": 17140,
											"end": 17243,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17223,
											"end": 17241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "685"
										},
										{
											"begin": 17223,
											"end": 17241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 17223,
											"end": 17241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17223,
											"end": 17241,
											"name": "tag",
											"source": 1,
											"value": "685"
										},
										{
											"begin": 17223,
											"end": 17241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17140,
											"end": 17243,
											"name": "tag",
											"source": 1,
											"value": "684"
										},
										{
											"begin": 17140,
											"end": 17243,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17270,
											"end": 17271,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 17263,
											"end": 17268,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17259,
											"end": 17272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17252,
											"end": 17272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17252,
											"end": 17272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17045,
											"end": 17278,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17045,
											"end": 17278,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17045,
											"end": 17278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17045,
											"end": 17278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17284,
											"end": 17463,
											"name": "tag",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 17284,
											"end": 17463,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17424,
											"end": 17455,
											"name": "PUSH",
											"source": 1,
											"value": "596F7520617265206E6F74204F776E6572206F6620746F6B656E206964000000"
										},
										{
											"begin": 17420,
											"end": 17421,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17412,
											"end": 17418,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17408,
											"end": 17422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17401,
											"end": 17456,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17284,
											"end": 17463,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17284,
											"end": 17463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17469,
											"end": 17835,
											"name": "tag",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 17469,
											"end": 17835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17611,
											"end": 17614,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17632,
											"end": 17699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "688"
										},
										{
											"begin": 17696,
											"end": 17698,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 17691,
											"end": 17694,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17632,
											"end": 17699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 17632,
											"end": 17699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17632,
											"end": 17699,
											"name": "tag",
											"source": 1,
											"value": "688"
										},
										{
											"begin": 17632,
											"end": 17699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17625,
											"end": 17699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17625,
											"end": 17699,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17708,
											"end": 17801,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "689"
										},
										{
											"begin": 17797,
											"end": 17800,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17708,
											"end": 17801,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 17708,
											"end": 17801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17708,
											"end": 17801,
											"name": "tag",
											"source": 1,
											"value": "689"
										},
										{
											"begin": 17708,
											"end": 17801,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17826,
											"end": 17828,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17821,
											"end": 17824,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17817,
											"end": 17829,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17810,
											"end": 17829,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17810,
											"end": 17829,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17469,
											"end": 17835,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17469,
											"end": 17835,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17469,
											"end": 17835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17469,
											"end": 17835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17841,
											"end": 18260,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 17841,
											"end": 18260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18007,
											"end": 18011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18045,
											"end": 18047,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18034,
											"end": 18043,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18030,
											"end": 18048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18022,
											"end": 18048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18022,
											"end": 18048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18094,
											"end": 18103,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18088,
											"end": 18092,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18084,
											"end": 18104,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18080,
											"end": 18081,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18069,
											"end": 18078,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18065,
											"end": 18082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18058,
											"end": 18105,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18122,
											"end": 18253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "691"
										},
										{
											"begin": 18248,
											"end": 18252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18122,
											"end": 18253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 18122,
											"end": 18253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18122,
											"end": 18253,
											"name": "tag",
											"source": 1,
											"value": "691"
										},
										{
											"begin": 18122,
											"end": 18253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18114,
											"end": 18253,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18114,
											"end": 18253,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17841,
											"end": 18260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17841,
											"end": 18260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17841,
											"end": 18260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17841,
											"end": 18260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18266,
											"end": 18434,
											"name": "tag",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 18266,
											"end": 18434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18406,
											"end": 18426,
											"name": "PUSH",
											"source": 1,
											"value": "77697468647261773A206E6F7420676F6F640000000000000000000000000000"
										},
										{
											"begin": 18402,
											"end": 18403,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18394,
											"end": 18400,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18390,
											"end": 18404,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18383,
											"end": 18427,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18266,
											"end": 18434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18266,
											"end": 18434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18440,
											"end": 18806,
											"name": "tag",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 18440,
											"end": 18806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18582,
											"end": 18585,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18603,
											"end": 18670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "694"
										},
										{
											"begin": 18667,
											"end": 18669,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 18662,
											"end": 18665,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 18603,
											"end": 18670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18603,
											"end": 18670,
											"name": "tag",
											"source": 1,
											"value": "694"
										},
										{
											"begin": 18603,
											"end": 18670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18596,
											"end": 18670,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18596,
											"end": 18670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18679,
											"end": 18772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "695"
										},
										{
											"begin": 18768,
											"end": 18771,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18679,
											"end": 18772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 18679,
											"end": 18772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18679,
											"end": 18772,
											"name": "tag",
											"source": 1,
											"value": "695"
										},
										{
											"begin": 18679,
											"end": 18772,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18797,
											"end": 18799,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18792,
											"end": 18795,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18788,
											"end": 18800,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18781,
											"end": 18800,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18781,
											"end": 18800,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18440,
											"end": 18806,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18440,
											"end": 18806,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18440,
											"end": 18806,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18440,
											"end": 18806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18812,
											"end": 19231,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 18812,
											"end": 19231,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18978,
											"end": 18982,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19016,
											"end": 19018,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19005,
											"end": 19014,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19001,
											"end": 19019,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18993,
											"end": 19019,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18993,
											"end": 19019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19065,
											"end": 19074,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19059,
											"end": 19063,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19055,
											"end": 19075,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19051,
											"end": 19052,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19040,
											"end": 19049,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19036,
											"end": 19053,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19029,
											"end": 19076,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19093,
											"end": 19224,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "697"
										},
										{
											"begin": 19219,
											"end": 19223,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19093,
											"end": 19224,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 19093,
											"end": 19224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19093,
											"end": 19224,
											"name": "tag",
											"source": 1,
											"value": "697"
										},
										{
											"begin": 19093,
											"end": 19224,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19085,
											"end": 19224,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19085,
											"end": 19224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18812,
											"end": 19231,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18812,
											"end": 19231,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18812,
											"end": 19231,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18812,
											"end": 19231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19237,
											"end": 19679,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 19237,
											"end": 19679,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19386,
											"end": 19390,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19424,
											"end": 19426,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 19413,
											"end": 19422,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19409,
											"end": 19427,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19401,
											"end": 19427,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19401,
											"end": 19427,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19437,
											"end": 19508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "699"
										},
										{
											"begin": 19505,
											"end": 19506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19494,
											"end": 19503,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19490,
											"end": 19507,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19481,
											"end": 19487,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 19437,
											"end": 19508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 19437,
											"end": 19508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19437,
											"end": 19508,
											"name": "tag",
											"source": 1,
											"value": "699"
										},
										{
											"begin": 19437,
											"end": 19508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19518,
											"end": 19590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "700"
										},
										{
											"begin": 19586,
											"end": 19588,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19575,
											"end": 19584,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19571,
											"end": 19589,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19562,
											"end": 19568,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 19518,
											"end": 19590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 19518,
											"end": 19590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19518,
											"end": 19590,
											"name": "tag",
											"source": 1,
											"value": "700"
										},
										{
											"begin": 19518,
											"end": 19590,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19600,
											"end": 19672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "701"
										},
										{
											"begin": 19668,
											"end": 19670,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19657,
											"end": 19666,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19653,
											"end": 19671,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19644,
											"end": 19650,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 19600,
											"end": 19672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 19600,
											"end": 19672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19600,
											"end": 19672,
											"name": "tag",
											"source": 1,
											"value": "701"
										},
										{
											"begin": 19600,
											"end": 19672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19237,
											"end": 19679,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 19237,
											"end": 19679,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 19237,
											"end": 19679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19237,
											"end": 19679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19237,
											"end": 19679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19237,
											"end": 19679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19237,
											"end": 19679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19685,
											"end": 19828,
											"name": "tag",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 19685,
											"end": 19828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19742,
											"end": 19747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19773,
											"end": 19779,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19767,
											"end": 19780,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19758,
											"end": 19780,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19758,
											"end": 19780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19789,
											"end": 19822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "703"
										},
										{
											"begin": 19816,
											"end": 19821,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19789,
											"end": 19822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 19789,
											"end": 19822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19789,
											"end": 19822,
											"name": "tag",
											"source": 1,
											"value": "703"
										},
										{
											"begin": 19789,
											"end": 19822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19685,
											"end": 19828,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19685,
											"end": 19828,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19685,
											"end": 19828,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19685,
											"end": 19828,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19685,
											"end": 19828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19834,
											"end": 20185,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 19834,
											"end": 20185,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19904,
											"end": 19910,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19953,
											"end": 19955,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19941,
											"end": 19950,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19932,
											"end": 19939,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 19928,
											"end": 19951,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19924,
											"end": 19956,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 19921,
											"end": 20040,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19921,
											"end": 20040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "705"
										},
										{
											"begin": 19921,
											"end": 20040,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19959,
											"end": 20038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "706"
										},
										{
											"begin": 19959,
											"end": 20038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 19959,
											"end": 20038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19959,
											"end": 20038,
											"name": "tag",
											"source": 1,
											"value": "706"
										},
										{
											"begin": 19959,
											"end": 20038,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19921,
											"end": 20040,
											"name": "tag",
											"source": 1,
											"value": "705"
										},
										{
											"begin": 19921,
											"end": 20040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20079,
											"end": 20080,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20104,
											"end": 20168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "707"
										},
										{
											"begin": 20160,
											"end": 20167,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 20151,
											"end": 20157,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20140,
											"end": 20149,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 20136,
											"end": 20158,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20104,
											"end": 20168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 20104,
											"end": 20168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20104,
											"end": 20168,
											"name": "tag",
											"source": 1,
											"value": "707"
										},
										{
											"begin": 20104,
											"end": 20168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20094,
											"end": 20168,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20094,
											"end": 20168,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20050,
											"end": 20178,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19834,
											"end": 20185,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19834,
											"end": 20185,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19834,
											"end": 20185,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19834,
											"end": 20185,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19834,
											"end": 20185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20191,
											"end": 20523,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 20191,
											"end": 20523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20312,
											"end": 20316,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20350,
											"end": 20352,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20339,
											"end": 20348,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20335,
											"end": 20353,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20327,
											"end": 20353,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20327,
											"end": 20353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20363,
											"end": 20434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "709"
										},
										{
											"begin": 20431,
											"end": 20432,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20420,
											"end": 20429,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20416,
											"end": 20433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20407,
											"end": 20413,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 20363,
											"end": 20434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 20363,
											"end": 20434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20363,
											"end": 20434,
											"name": "tag",
											"source": 1,
											"value": "709"
										},
										{
											"begin": 20363,
											"end": 20434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20444,
											"end": 20516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "710"
										},
										{
											"begin": 20512,
											"end": 20514,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20501,
											"end": 20510,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20497,
											"end": 20515,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20488,
											"end": 20494,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 20444,
											"end": 20516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 20444,
											"end": 20516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20444,
											"end": 20516,
											"name": "tag",
											"source": 1,
											"value": "710"
										},
										{
											"begin": 20444,
											"end": 20516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20191,
											"end": 20523,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 20191,
											"end": 20523,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 20191,
											"end": 20523,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20191,
											"end": 20523,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20191,
											"end": 20523,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20191,
											"end": 20523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20529,
											"end": 20666,
											"name": "tag",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 20529,
											"end": 20666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20583,
											"end": 20588,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20614,
											"end": 20620,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20608,
											"end": 20621,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20599,
											"end": 20621,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20599,
											"end": 20621,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20630,
											"end": 20660,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "712"
										},
										{
											"begin": 20654,
											"end": 20659,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20630,
											"end": 20660,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 20630,
											"end": 20660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20630,
											"end": 20660,
											"name": "tag",
											"source": 1,
											"value": "712"
										},
										{
											"begin": 20630,
											"end": 20660,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20529,
											"end": 20666,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 20529,
											"end": 20666,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20529,
											"end": 20666,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20529,
											"end": 20666,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20529,
											"end": 20666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20672,
											"end": 21017,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 20672,
											"end": 21017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20739,
											"end": 20745,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20788,
											"end": 20790,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20776,
											"end": 20785,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20767,
											"end": 20774,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 20763,
											"end": 20786,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20759,
											"end": 20791,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 20756,
											"end": 20875,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20756,
											"end": 20875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "714"
										},
										{
											"begin": 20756,
											"end": 20875,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20794,
											"end": 20873,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "715"
										},
										{
											"begin": 20794,
											"end": 20873,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 20794,
											"end": 20873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20794,
											"end": 20873,
											"name": "tag",
											"source": 1,
											"value": "715"
										},
										{
											"begin": 20794,
											"end": 20873,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20756,
											"end": 20875,
											"name": "tag",
											"source": 1,
											"value": "714"
										},
										{
											"begin": 20756,
											"end": 20875,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20914,
											"end": 20915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20939,
											"end": 21000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "716"
										},
										{
											"begin": 20992,
											"end": 20999,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 20983,
											"end": 20989,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20972,
											"end": 20981,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 20968,
											"end": 20990,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20939,
											"end": 21000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 20939,
											"end": 21000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20939,
											"end": 21000,
											"name": "tag",
											"source": 1,
											"value": "716"
										},
										{
											"begin": 20939,
											"end": 21000,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20929,
											"end": 21000,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20929,
											"end": 21000,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20885,
											"end": 21010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20672,
											"end": 21017,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 20672,
											"end": 21017,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20672,
											"end": 21017,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20672,
											"end": 21017,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20672,
											"end": 21017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21023,
											"end": 21187,
											"name": "tag",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 21023,
											"end": 21187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21163,
											"end": 21179,
											"name": "PUSH",
											"source": 1,
											"value": "416D6F756E74206973207A65726F000000000000000000000000000000000000"
										},
										{
											"begin": 21159,
											"end": 21160,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21151,
											"end": 21157,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21147,
											"end": 21161,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21140,
											"end": 21180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21023,
											"end": 21187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21023,
											"end": 21187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21193,
											"end": 21559,
											"name": "tag",
											"source": 1,
											"value": "486"
										},
										{
											"begin": 21193,
											"end": 21559,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21335,
											"end": 21338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21356,
											"end": 21423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "719"
										},
										{
											"begin": 21420,
											"end": 21422,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 21415,
											"end": 21418,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21356,
											"end": 21423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 21356,
											"end": 21423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21356,
											"end": 21423,
											"name": "tag",
											"source": 1,
											"value": "719"
										},
										{
											"begin": 21356,
											"end": 21423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21349,
											"end": 21423,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21349,
											"end": 21423,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21432,
											"end": 21525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "720"
										},
										{
											"begin": 21521,
											"end": 21524,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21432,
											"end": 21525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 21432,
											"end": 21525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21432,
											"end": 21525,
											"name": "tag",
											"source": 1,
											"value": "720"
										},
										{
											"begin": 21432,
											"end": 21525,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21550,
											"end": 21552,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21545,
											"end": 21548,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21541,
											"end": 21553,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21534,
											"end": 21553,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21534,
											"end": 21553,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21193,
											"end": 21559,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21193,
											"end": 21559,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21193,
											"end": 21559,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21193,
											"end": 21559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21565,
											"end": 21984,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 21565,
											"end": 21984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21731,
											"end": 21735,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21769,
											"end": 21771,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21758,
											"end": 21767,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21754,
											"end": 21772,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21746,
											"end": 21772,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21746,
											"end": 21772,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21818,
											"end": 21827,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21812,
											"end": 21816,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21808,
											"end": 21828,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 21804,
											"end": 21805,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21793,
											"end": 21802,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21789,
											"end": 21806,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21782,
											"end": 21829,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21846,
											"end": 21977,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "722"
										},
										{
											"begin": 21972,
											"end": 21976,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21846,
											"end": 21977,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "486"
										},
										{
											"begin": 21846,
											"end": 21977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21846,
											"end": 21977,
											"name": "tag",
											"source": 1,
											"value": "722"
										},
										{
											"begin": 21846,
											"end": 21977,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21838,
											"end": 21977,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21838,
											"end": 21977,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21565,
											"end": 21984,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21565,
											"end": 21984,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21565,
											"end": 21984,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21565,
											"end": 21984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21990,
											"end": 22322,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 21990,
											"end": 22322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22111,
											"end": 22115,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22149,
											"end": 22151,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22138,
											"end": 22147,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22134,
											"end": 22152,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22126,
											"end": 22152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22126,
											"end": 22152,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22162,
											"end": 22233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "724"
										},
										{
											"begin": 22230,
											"end": 22231,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22219,
											"end": 22228,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22215,
											"end": 22232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22206,
											"end": 22212,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 22162,
											"end": 22233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 22162,
											"end": 22233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22162,
											"end": 22233,
											"name": "tag",
											"source": 1,
											"value": "724"
										},
										{
											"begin": 22162,
											"end": 22233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22243,
											"end": 22315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "725"
										},
										{
											"begin": 22311,
											"end": 22313,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22300,
											"end": 22309,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22296,
											"end": 22314,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22287,
											"end": 22293,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 22243,
											"end": 22315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 22243,
											"end": 22315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22243,
											"end": 22315,
											"name": "tag",
											"source": 1,
											"value": "725"
										},
										{
											"begin": 22243,
											"end": 22315,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21990,
											"end": 22322,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 21990,
											"end": 22322,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 21990,
											"end": 22322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21990,
											"end": 22322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21990,
											"end": 22322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21990,
											"end": 22322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22328,
											"end": 22553,
											"name": "tag",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 22328,
											"end": 22553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22468,
											"end": 22502,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 22464,
											"end": 22465,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22456,
											"end": 22462,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22452,
											"end": 22466,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22445,
											"end": 22503,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22537,
											"end": 22545,
											"name": "PUSH",
											"source": 1,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22532,
											"end": 22534,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22524,
											"end": 22530,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22520,
											"end": 22535,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22513,
											"end": 22546,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22328,
											"end": 22553,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22328,
											"end": 22553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22559,
											"end": 22925,
											"name": "tag",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 22559,
											"end": 22925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22701,
											"end": 22704,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22722,
											"end": 22789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "728"
										},
										{
											"begin": 22786,
											"end": 22788,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 22781,
											"end": 22784,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22722,
											"end": 22789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 22722,
											"end": 22789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22722,
											"end": 22789,
											"name": "tag",
											"source": 1,
											"value": "728"
										},
										{
											"begin": 22722,
											"end": 22789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22715,
											"end": 22789,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22715,
											"end": 22789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22798,
											"end": 22891,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "729"
										},
										{
											"begin": 22887,
											"end": 22890,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22798,
											"end": 22891,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 22798,
											"end": 22891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22798,
											"end": 22891,
											"name": "tag",
											"source": 1,
											"value": "729"
										},
										{
											"begin": 22798,
											"end": 22891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22916,
											"end": 22918,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22911,
											"end": 22914,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22907,
											"end": 22919,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22900,
											"end": 22919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22900,
											"end": 22919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22559,
											"end": 22925,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22559,
											"end": 22925,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22559,
											"end": 22925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22559,
											"end": 22925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22931,
											"end": 23350,
											"name": "tag",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 22931,
											"end": 23350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23097,
											"end": 23101,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23135,
											"end": 23137,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23124,
											"end": 23133,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23120,
											"end": 23138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23112,
											"end": 23138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23112,
											"end": 23138,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23184,
											"end": 23193,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23178,
											"end": 23182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23174,
											"end": 23194,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23170,
											"end": 23171,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23159,
											"end": 23168,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23155,
											"end": 23172,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23148,
											"end": 23195,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23212,
											"end": 23343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "731"
										},
										{
											"begin": 23338,
											"end": 23342,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23212,
											"end": 23343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 23212,
											"end": 23343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23212,
											"end": 23343,
											"name": "tag",
											"source": 1,
											"value": "731"
										},
										{
											"begin": 23212,
											"end": 23343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23204,
											"end": 23343,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23204,
											"end": 23343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22931,
											"end": 23350,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22931,
											"end": 23350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22931,
											"end": 23350,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22931,
											"end": 23350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23356,
											"end": 23661,
											"name": "tag",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 23356,
											"end": 23661,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23396,
											"end": 23399,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23415,
											"end": 23435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "733"
										},
										{
											"begin": 23433,
											"end": 23434,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23415,
											"end": 23435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 23415,
											"end": 23435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23415,
											"end": 23435,
											"name": "tag",
											"source": 1,
											"value": "733"
										},
										{
											"begin": 23415,
											"end": 23435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23410,
											"end": 23435,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23410,
											"end": 23435,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23449,
											"end": 23469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "734"
										},
										{
											"begin": 23467,
											"end": 23468,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23449,
											"end": 23469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 23449,
											"end": 23469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23449,
											"end": 23469,
											"name": "tag",
											"source": 1,
											"value": "734"
										},
										{
											"begin": 23449,
											"end": 23469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23444,
											"end": 23469,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 23444,
											"end": 23469,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23603,
											"end": 23604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23535,
											"end": 23601,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23531,
											"end": 23605,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23528,
											"end": 23529,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23525,
											"end": 23606,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 23522,
											"end": 23629,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 23522,
											"end": 23629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "735"
										},
										{
											"begin": 23522,
											"end": 23629,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 23609,
											"end": 23627,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "736"
										},
										{
											"begin": 23609,
											"end": 23627,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 23609,
											"end": 23627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23609,
											"end": 23627,
											"name": "tag",
											"source": 1,
											"value": "736"
										},
										{
											"begin": 23609,
											"end": 23627,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23522,
											"end": 23629,
											"name": "tag",
											"source": 1,
											"value": "735"
										},
										{
											"begin": 23522,
											"end": 23629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23653,
											"end": 23654,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23650,
											"end": 23651,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23646,
											"end": 23655,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23639,
											"end": 23655,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23639,
											"end": 23655,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23356,
											"end": 23661,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 23356,
											"end": 23661,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23356,
											"end": 23661,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23356,
											"end": 23661,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23356,
											"end": 23661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23667,
											"end": 23844,
											"name": "tag",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 23667,
											"end": 23844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23807,
											"end": 23836,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 23803,
											"end": 23804,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23795,
											"end": 23801,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23791,
											"end": 23805,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23784,
											"end": 23837,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23667,
											"end": 23844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23667,
											"end": 23844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23850,
											"end": 24216,
											"name": "tag",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 23850,
											"end": 24216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23992,
											"end": 23995,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24013,
											"end": 24080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "739"
										},
										{
											"begin": 24077,
											"end": 24079,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 24072,
											"end": 24075,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24013,
											"end": 24080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 24013,
											"end": 24080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24013,
											"end": 24080,
											"name": "tag",
											"source": 1,
											"value": "739"
										},
										{
											"begin": 24013,
											"end": 24080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24006,
											"end": 24080,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24006,
											"end": 24080,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24089,
											"end": 24182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "740"
										},
										{
											"begin": 24178,
											"end": 24181,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24089,
											"end": 24182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 24089,
											"end": 24182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24089,
											"end": 24182,
											"name": "tag",
											"source": 1,
											"value": "740"
										},
										{
											"begin": 24089,
											"end": 24182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24207,
											"end": 24209,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24202,
											"end": 24205,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24198,
											"end": 24210,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24191,
											"end": 24210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24191,
											"end": 24210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23850,
											"end": 24216,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23850,
											"end": 24216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23850,
											"end": 24216,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23850,
											"end": 24216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24222,
											"end": 24641,
											"name": "tag",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 24222,
											"end": 24641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24388,
											"end": 24392,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24426,
											"end": 24428,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24415,
											"end": 24424,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24411,
											"end": 24429,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24403,
											"end": 24429,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24403,
											"end": 24429,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24475,
											"end": 24484,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24469,
											"end": 24473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24465,
											"end": 24485,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 24461,
											"end": 24462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24450,
											"end": 24459,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24446,
											"end": 24463,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24439,
											"end": 24486,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24503,
											"end": 24634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "742"
										},
										{
											"begin": 24629,
											"end": 24633,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24503,
											"end": 24634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 24503,
											"end": 24634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24503,
											"end": 24634,
											"name": "tag",
											"source": 1,
											"value": "742"
										},
										{
											"begin": 24503,
											"end": 24634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24495,
											"end": 24634,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24495,
											"end": 24634,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24222,
											"end": 24641,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24222,
											"end": 24641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24222,
											"end": 24641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24222,
											"end": 24641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24647,
											"end": 24995,
											"name": "tag",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 24647,
											"end": 24995,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24687,
											"end": 24694,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24710,
											"end": 24730,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "744"
										},
										{
											"begin": 24728,
											"end": 24729,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24710,
											"end": 24730,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 24710,
											"end": 24730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24710,
											"end": 24730,
											"name": "tag",
											"source": 1,
											"value": "744"
										},
										{
											"begin": 24710,
											"end": 24730,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24705,
											"end": 24730,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24705,
											"end": 24730,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24744,
											"end": 24764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "745"
										},
										{
											"begin": 24762,
											"end": 24763,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24744,
											"end": 24764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 24744,
											"end": 24764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24744,
											"end": 24764,
											"name": "tag",
											"source": 1,
											"value": "745"
										},
										{
											"begin": 24744,
											"end": 24764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24739,
											"end": 24764,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24739,
											"end": 24764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24932,
											"end": 24933,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24864,
											"end": 24930,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24860,
											"end": 24934,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 24857,
											"end": 24858,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24854,
											"end": 24935,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 24849,
											"end": 24850,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24842,
											"end": 24851,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 24835,
											"end": 24852,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 24831,
											"end": 24936,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24828,
											"end": 24959,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 24828,
											"end": 24959,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "746"
										},
										{
											"begin": 24828,
											"end": 24959,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24939,
											"end": 24957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "747"
										},
										{
											"begin": 24939,
											"end": 24957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 24939,
											"end": 24957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24939,
											"end": 24957,
											"name": "tag",
											"source": 1,
											"value": "747"
										},
										{
											"begin": 24939,
											"end": 24957,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24828,
											"end": 24959,
											"name": "tag",
											"source": 1,
											"value": "746"
										},
										{
											"begin": 24828,
											"end": 24959,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24987,
											"end": 24988,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24984,
											"end": 24985,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24980,
											"end": 24989,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 24969,
											"end": 24989,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24969,
											"end": 24989,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24647,
											"end": 24995,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24647,
											"end": 24995,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24647,
											"end": 24995,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24647,
											"end": 24995,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24647,
											"end": 24995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25001,
											"end": 25181,
											"name": "tag",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 25001,
											"end": 25181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25049,
											"end": 25126,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25046,
											"end": 25047,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25039,
											"end": 25127,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25146,
											"end": 25150,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 25143,
											"end": 25144,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 25136,
											"end": 25151,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25170,
											"end": 25174,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 25167,
											"end": 25168,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25160,
											"end": 25175,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 25187,
											"end": 25372,
											"name": "tag",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 25187,
											"end": 25372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25227,
											"end": 25228,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25244,
											"end": 25264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "750"
										},
										{
											"begin": 25262,
											"end": 25263,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25244,
											"end": 25264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 25244,
											"end": 25264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25244,
											"end": 25264,
											"name": "tag",
											"source": 1,
											"value": "750"
										},
										{
											"begin": 25244,
											"end": 25264,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25239,
											"end": 25264,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25239,
											"end": 25264,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25278,
											"end": 25298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "751"
										},
										{
											"begin": 25296,
											"end": 25297,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 25278,
											"end": 25298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 25278,
											"end": 25298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25278,
											"end": 25298,
											"name": "tag",
											"source": 1,
											"value": "751"
										},
										{
											"begin": 25278,
											"end": 25298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25273,
											"end": 25298,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 25273,
											"end": 25298,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25317,
											"end": 25318,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25307,
											"end": 25342,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "752"
										},
										{
											"begin": 25307,
											"end": 25342,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 25322,
											"end": 25340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "753"
										},
										{
											"begin": 25322,
											"end": 25340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 25322,
											"end": 25340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25322,
											"end": 25340,
											"name": "tag",
											"source": 1,
											"value": "753"
										},
										{
											"begin": 25322,
											"end": 25340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25307,
											"end": 25342,
											"name": "tag",
											"source": 1,
											"value": "752"
										},
										{
											"begin": 25307,
											"end": 25342,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25364,
											"end": 25365,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25361,
											"end": 25362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25357,
											"end": 25366,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 25352,
											"end": 25366,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25352,
											"end": 25366,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25187,
											"end": 25372,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 25187,
											"end": 25372,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25187,
											"end": 25372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25187,
											"end": 25372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25187,
											"end": 25372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25378,
											"end": 25598,
											"name": "tag",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 25378,
											"end": 25598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25518,
											"end": 25552,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F"
										},
										{
											"begin": 25514,
											"end": 25515,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25506,
											"end": 25512,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25502,
											"end": 25516,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25495,
											"end": 25553,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25587,
											"end": 25590,
											"name": "PUSH",
											"source": 1,
											"value": "7700000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25582,
											"end": 25584,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25574,
											"end": 25580,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25570,
											"end": 25585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25563,
											"end": 25591,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25378,
											"end": 25598,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25378,
											"end": 25598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25604,
											"end": 25970,
											"name": "tag",
											"source": 1,
											"value": "493"
										},
										{
											"begin": 25604,
											"end": 25970,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25746,
											"end": 25749,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25767,
											"end": 25834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "756"
										},
										{
											"begin": 25831,
											"end": 25833,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 25826,
											"end": 25829,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 25767,
											"end": 25834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 25767,
											"end": 25834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25767,
											"end": 25834,
											"name": "tag",
											"source": 1,
											"value": "756"
										},
										{
											"begin": 25767,
											"end": 25834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25760,
											"end": 25834,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25760,
											"end": 25834,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25843,
											"end": 25936,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "757"
										},
										{
											"begin": 25932,
											"end": 25935,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25843,
											"end": 25936,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 25843,
											"end": 25936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25843,
											"end": 25936,
											"name": "tag",
											"source": 1,
											"value": "757"
										},
										{
											"begin": 25843,
											"end": 25936,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25961,
											"end": 25963,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 25956,
											"end": 25959,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25952,
											"end": 25964,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25945,
											"end": 25964,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25945,
											"end": 25964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25604,
											"end": 25970,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25604,
											"end": 25970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25604,
											"end": 25970,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25604,
											"end": 25970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25976,
											"end": 26395,
											"name": "tag",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 25976,
											"end": 26395,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26142,
											"end": 26146,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26180,
											"end": 26182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26169,
											"end": 26178,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26165,
											"end": 26183,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26157,
											"end": 26183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26157,
											"end": 26183,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26229,
											"end": 26238,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26223,
											"end": 26227,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26219,
											"end": 26239,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 26215,
											"end": 26216,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26204,
											"end": 26213,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26200,
											"end": 26217,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26193,
											"end": 26240,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26257,
											"end": 26388,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "759"
										},
										{
											"begin": 26383,
											"end": 26387,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26257,
											"end": 26388,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "493"
										},
										{
											"begin": 26257,
											"end": 26388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26257,
											"end": 26388,
											"name": "tag",
											"source": 1,
											"value": "759"
										},
										{
											"begin": 26257,
											"end": 26388,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26249,
											"end": 26388,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26249,
											"end": 26388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25976,
											"end": 26395,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25976,
											"end": 26395,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25976,
											"end": 26395,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25976,
											"end": 26395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26401,
											"end": 26500,
											"name": "tag",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 26401,
											"end": 26500,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26453,
											"end": 26459,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26487,
											"end": 26492,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26481,
											"end": 26493,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26471,
											"end": 26493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26471,
											"end": 26493,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26401,
											"end": 26500,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26401,
											"end": 26500,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26401,
											"end": 26500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26401,
											"end": 26500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26506,
											"end": 26813,
											"name": "tag",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 26506,
											"end": 26813,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26574,
											"end": 26575,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26584,
											"end": 26697,
											"name": "tag",
											"source": 1,
											"value": "762"
										},
										{
											"begin": 26584,
											"end": 26697,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26598,
											"end": 26604,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26595,
											"end": 26596,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26592,
											"end": 26605,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 26584,
											"end": 26697,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 26584,
											"end": 26697,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "764"
										},
										{
											"begin": 26584,
											"end": 26697,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26683,
											"end": 26684,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26678,
											"end": 26681,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26674,
											"end": 26685,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26668,
											"end": 26686,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26664,
											"end": 26665,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26659,
											"end": 26662,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 26655,
											"end": 26666,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26687,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26620,
											"end": 26622,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26617,
											"end": 26618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26613,
											"end": 26623,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26608,
											"end": 26623,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26608,
											"end": 26623,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26584,
											"end": 26697,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "762"
										},
										{
											"begin": 26584,
											"end": 26697,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26584,
											"end": 26697,
											"name": "tag",
											"source": 1,
											"value": "764"
										},
										{
											"begin": 26584,
											"end": 26697,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26715,
											"end": 26721,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26712,
											"end": 26713,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26709,
											"end": 26722,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 26706,
											"end": 26807,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 26706,
											"end": 26807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "765"
										},
										{
											"begin": 26706,
											"end": 26807,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26795,
											"end": 26796,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26786,
											"end": 26792,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 26781,
											"end": 26784,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 26777,
											"end": 26793,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26770,
											"end": 26797,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26706,
											"end": 26807,
											"name": "tag",
											"source": 1,
											"value": "765"
										},
										{
											"begin": 26706,
											"end": 26807,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26555,
											"end": 26813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26506,
											"end": 26813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26506,
											"end": 26813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26506,
											"end": 26813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26506,
											"end": 26813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26819,
											"end": 27183,
											"name": "tag",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 26819,
											"end": 27183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26907,
											"end": 26910,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26935,
											"end": 26974,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "767"
										},
										{
											"begin": 26968,
											"end": 26973,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26935,
											"end": 26974,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 26935,
											"end": 26974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26935,
											"end": 26974,
											"name": "tag",
											"source": 1,
											"value": "767"
										},
										{
											"begin": 26935,
											"end": 26974,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26990,
											"end": 27061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "768"
										},
										{
											"begin": 27054,
											"end": 27060,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27049,
											"end": 27052,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 26990,
											"end": 27061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 26990,
											"end": 27061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26990,
											"end": 27061,
											"name": "tag",
											"source": 1,
											"value": "768"
										},
										{
											"begin": 26990,
											"end": 27061,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26983,
											"end": 27061,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 26983,
											"end": 27061,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27070,
											"end": 27122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "769"
										},
										{
											"begin": 27115,
											"end": 27121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27110,
											"end": 27113,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 27103,
											"end": 27107,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27096,
											"end": 27101,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 27092,
											"end": 27108,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27070,
											"end": 27122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 27070,
											"end": 27122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27070,
											"end": 27122,
											"name": "tag",
											"source": 1,
											"value": "769"
										},
										{
											"begin": 27070,
											"end": 27122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27147,
											"end": 27176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "770"
										},
										{
											"begin": 27169,
											"end": 27175,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27147,
											"end": 27176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 27147,
											"end": 27176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27147,
											"end": 27176,
											"name": "tag",
											"source": 1,
											"value": "770"
										},
										{
											"begin": 27147,
											"end": 27176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27142,
											"end": 27145,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 27138,
											"end": 27177,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27131,
											"end": 27177,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27131,
											"end": 27177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26911,
											"end": 27183,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26819,
											"end": 27183,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 26819,
											"end": 27183,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26819,
											"end": 27183,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26819,
											"end": 27183,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26819,
											"end": 27183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27189,
											"end": 27502,
											"name": "tag",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 27189,
											"end": 27502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27302,
											"end": 27306,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27340,
											"end": 27342,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27329,
											"end": 27338,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27325,
											"end": 27343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27317,
											"end": 27343,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27317,
											"end": 27343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27389,
											"end": 27398,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27383,
											"end": 27387,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27379,
											"end": 27399,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27375,
											"end": 27376,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27364,
											"end": 27373,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 27360,
											"end": 27377,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27353,
											"end": 27400,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27417,
											"end": 27495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "772"
										},
										{
											"begin": 27490,
											"end": 27494,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27481,
											"end": 27487,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 27417,
											"end": 27495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 27417,
											"end": 27495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27417,
											"end": 27495,
											"name": "tag",
											"source": 1,
											"value": "772"
										},
										{
											"begin": 27417,
											"end": 27495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27409,
											"end": 27495,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27409,
											"end": 27495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27189,
											"end": 27502,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 27189,
											"end": 27502,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27189,
											"end": 27502,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27189,
											"end": 27502,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27189,
											"end": 27502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27508,
											"end": 27699,
											"name": "tag",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 27508,
											"end": 27699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27548,
											"end": 27552,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27568,
											"end": 27588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "774"
										},
										{
											"begin": 27586,
											"end": 27587,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27568,
											"end": 27588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 27568,
											"end": 27588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27568,
											"end": 27588,
											"name": "tag",
											"source": 1,
											"value": "774"
										},
										{
											"begin": 27568,
											"end": 27588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27563,
											"end": 27588,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27563,
											"end": 27588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27602,
											"end": 27622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "775"
										},
										{
											"begin": 27620,
											"end": 27621,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 27602,
											"end": 27622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 27602,
											"end": 27622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27602,
											"end": 27622,
											"name": "tag",
											"source": 1,
											"value": "775"
										},
										{
											"begin": 27602,
											"end": 27622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27597,
											"end": 27622,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 27597,
											"end": 27622,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27641,
											"end": 27642,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27638,
											"end": 27639,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27635,
											"end": 27643,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 27632,
											"end": 27666,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 27632,
											"end": 27666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "776"
										},
										{
											"begin": 27632,
											"end": 27666,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 27646,
											"end": 27664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "777"
										},
										{
											"begin": 27646,
											"end": 27664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 27646,
											"end": 27664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27646,
											"end": 27664,
											"name": "tag",
											"source": 1,
											"value": "777"
										},
										{
											"begin": 27646,
											"end": 27664,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27632,
											"end": 27666,
											"name": "tag",
											"source": 1,
											"value": "776"
										},
										{
											"begin": 27632,
											"end": 27666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27691,
											"end": 27692,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27688,
											"end": 27689,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27684,
											"end": 27693,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27676,
											"end": 27693,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27676,
											"end": 27693,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27508,
											"end": 27699,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 27508,
											"end": 27699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27508,
											"end": 27699,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27508,
											"end": 27699,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27508,
											"end": 27699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/NFTStake.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"BONUS_MULTIPLIER()": "8aa28550",
							"DRG()": "141aa0ba",
							"DRGPerBlock()": "a1eef821",
							"NFTMasterChef()": "e4d09896",
							"add(uint256,address,bool)": "1eaaa045",
							"compundDRG(uint256)": "be70fba3",
							"deposit(uint256,uint256)": "e2bbb158",
							"devaddr()": "d49e77cd",
							"getMultiplier(uint256,uint256)": "8dbb1e3a",
							"getUserTokenIds(uint256,address)": "d5545992",
							"massUpdatePools()": "630b5ba1",
							"migrator()": "7cd07e47",
							"onERC721Received(address,address,uint256,bytes)": "150b7a02",
							"owner()": "8da5cb5b",
							"pendingDRG(uint256,address)": "4f17dbaf",
							"poolInfo(uint256)": "1526fe27",
							"poolLength()": "081e3eda",
							"renounceOwnership()": "715018a6",
							"set(uint256,uint256,bool)": "64482f79",
							"setDevAddress(address)": "d0d41fe1",
							"setMigrator(address)": "23cf3118",
							"startBlock()": "48cd4cb1",
							"totalAllocPoint()": "17caf6f1",
							"transferOwnership(address)": "f2fde38b",
							"updateDRGPerBlock(uint256)": "0fe7ea17",
							"updateMultiplier(uint256)": "5ffe6146",
							"updatePool(uint256)": "51eb05a6",
							"userInfo(uint256,address)": "93f1a40b",
							"withdraw(uint256,uint256)": "441a3e70"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_DRG\",\"type\":\"address\"},{\"internalType\":\"contract INFTMasterChef\",\"name\":\"_NFTMasterChef\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_DRGPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DRG\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DRGPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NFTMasterChef\",\"outputs\":[{\"internalType\":\"contract INFTMasterChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC721\",\"name\":\"_NFTToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"compundDRG\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserTokenIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingDRG\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"NFTToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accDRGPerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"setDevAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"updateDRGPerBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplierNumber\",\"type\":\"uint256\"}],\"name\":\"updateMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"notice\":\"Always returns `IERC721Receiver.onERC721Received.selector`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTStake.sol\":\"NFTStake\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTStake.sol\":{\"keccak256\":\"0x8a5817077c2522aa4ea7969eb27dc700ae72b3908333b046c0e91858fb3659d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a81f9af2a103eaeacd422f5db8359693f2f61fe21342b67f139ade2f7e22f51\",\"dweb:/ipfs/QmdbKV6KbXdaMzcv9PJDqr2VjjmRH9jGSzuQB4q1eyTbu7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 820,
								"contract": "contracts/NFTStake.sol:NFTStake",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1103,
								"contract": "contracts/NFTStake.sol:NFTStake",
								"label": "NFTMasterChef",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(INFTMasterChef)1071"
							},
							{
								"astId": 1106,
								"contract": "contracts/NFTStake.sol:NFTStake",
								"label": "DRG",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)286"
							},
							{
								"astId": 1108,
								"contract": "contracts/NFTStake.sol:NFTStake",
								"label": "devaddr",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 1110,
								"contract": "contracts/NFTStake.sol:NFTStake",
								"label": "DRGPerBlock",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1113,
								"contract": "contracts/NFTStake.sol:NFTStake",
								"label": "BONUS_MULTIPLIER",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1116,
								"contract": "contracts/NFTStake.sol:NFTStake",
								"label": "migrator",
								"offset": 0,
								"slot": "6",
								"type": "t_contract(IMigratorChef)927"
							},
							{
								"astId": 1120,
								"contract": "contracts/NFTStake.sol:NFTStake",
								"label": "poolInfo",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_struct(PoolInfo)1100_storage)dyn_storage"
							},
							{
								"astId": 1127,
								"contract": "contracts/NFTStake.sol:NFTStake",
								"label": "userInfo",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1090_storage))"
							},
							{
								"astId": 1130,
								"contract": "contracts/NFTStake.sol:NFTStake",
								"label": "totalAllocPoint",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1132,
								"contract": "contracts/NFTStake.sol:NFTStake",
								"label": "startBlock",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(PoolInfo)1100_storage)dyn_storage": {
								"base": "t_struct(PoolInfo)1100_storage",
								"encoding": "dynamic_array",
								"label": "struct NFTStake.PoolInfo[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)286": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IERC721)1048": {
								"encoding": "inplace",
								"label": "contract IERC721",
								"numberOfBytes": "20"
							},
							"t_contract(IMigratorChef)927": {
								"encoding": "inplace",
								"label": "contract IMigratorChef",
								"numberOfBytes": "20"
							},
							"t_contract(INFTMasterChef)1071": {
								"encoding": "inplace",
								"label": "contract INFTMasterChef",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(UserInfo)1090_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct NFTStake.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)1090_storage"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1090_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => struct NFTStake.UserInfo))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(UserInfo)1090_storage)"
							},
							"t_struct(PoolInfo)1100_storage": {
								"encoding": "inplace",
								"label": "struct NFTStake.PoolInfo",
								"members": [
									{
										"astId": 1093,
										"contract": "contracts/NFTStake.sol:NFTStake",
										"label": "NFTToken",
										"offset": 0,
										"slot": "0",
										"type": "t_contract(IERC721)1048"
									},
									{
										"astId": 1095,
										"contract": "contracts/NFTStake.sol:NFTStake",
										"label": "allocPoint",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1097,
										"contract": "contracts/NFTStake.sol:NFTStake",
										"label": "lastRewardBlock",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1099,
										"contract": "contracts/NFTStake.sol:NFTStake",
										"label": "accDRGPerShare",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(UserInfo)1090_storage": {
								"encoding": "inplace",
								"label": "struct NFTStake.UserInfo",
								"members": [
									{
										"astId": 1085,
										"contract": "contracts/NFTStake.sol:NFTStake",
										"label": "tokenIds",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_uint256)dyn_storage"
									},
									{
										"astId": 1087,
										"contract": "contracts/NFTStake.sol:NFTStake",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1089,
										"contract": "contracts/NFTStake.sol:NFTStake",
										"label": "rewardDebt",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"notice": "Always returns `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTStake.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTStake.sol\":{\"keccak256\":\"0x8a5817077c2522aa4ea7969eb27dc700ae72b3908333b046c0e91858fb3659d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a81f9af2a103eaeacd422f5db8359693f2f61fe21342b67f139ade2f7e22f51\",\"dweb:/ipfs/QmdbKV6KbXdaMzcv9PJDqr2VjjmRH9jGSzuQB4q1eyTbu7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 820,
								"contract": "contracts/NFTStake.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTStake.sol\":16161:19512  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTStake.sol\":16161:19512  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f0a1a91dc2d1b9027e3f1142386e30dc933bdc6ea4417e47d6d242e7503fa92464736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f0a1a91dc2d1b9027e3f1142386e30dc933bdc6ea4417e47d6d242e7503fa92464736f6c634300080f0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE LOG1 0xA9 SAR 0xC2 0xD1 0xB9 MUL PUSH31 0x3F1142386E30DC933BDC6EA4417E47D6D242E7503FA92464736F6C63430008 0xF STOP CALLER ",
							"sourceMap": "16161:3351:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f0a1a91dc2d1b9027e3f1142386e30dc933bdc6ea4417e47d6d242e7503fa92464736f6c634300080f0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE LOG1 0xA9 SAR 0xC2 0xD1 0xB9 MUL PUSH31 0x3F1142386E30DC933BDC6EA4417E47D6D242E7503FA92464736F6C63430008 0xF STOP CALLER ",
							"sourceMap": "16161:3351:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 16161,
									"end": 19512,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f0a1a91dc2d1b9027e3f1142386e30dc933bdc6ea4417e47d6d242e7503fa92464736f6c634300080f0033",
									".code": [
										{
											"begin": 16161,
											"end": 19512,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 16161,
											"end": 19512,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 16161,
											"end": 19512,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16161,
											"end": 19512,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 16161,
											"end": 19512,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16161,
											"end": 19512,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16161,
											"end": 19512,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16161,
											"end": 19512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16161,
											"end": 19512,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/NFTStake.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTStake.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTStake.sol\":{\"keccak256\":\"0x8a5817077c2522aa4ea7969eb27dc700ae72b3908333b046c0e91858fb3659d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a81f9af2a103eaeacd422f5db8359693f2f61fe21342b67f139ade2f7e22f51\",\"dweb:/ipfs/QmdbKV6KbXdaMzcv9PJDqr2VjjmRH9jGSzuQB4q1eyTbu7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTStake.sol\":200:5048  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTStake.sol\":200:5048  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a364adf994d24ddfe8cb8c3af33e8f4eb2910ae2f49f4352c238cb08f0c65c7364736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a364adf994d24ddfe8cb8c3af33e8f4eb2910ae2f49f4352c238cb08f0c65c7364736f6c634300080f0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 PUSH5 0xADF994D24D 0xDF 0xE8 0xCB DUP13 GASPRICE RETURN RETURNDATACOPY DUP16 0x4E 0xB2 SWAP2 EXP 0xE2 DELEGATECALL SWAP16 NUMBER MSTORE 0xC2 CODESIZE 0xCB ADDMOD CREATE 0xC6 0x5C PUSH20 0x64736F6C634300080F0033000000000000000000 ",
							"sourceMap": "200:4848:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a364adf994d24ddfe8cb8c3af33e8f4eb2910ae2f49f4352c238cb08f0c65c7364736f6c634300080f0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 PUSH5 0xADF994D24D 0xDF 0xE8 0xCB DUP13 GASPRICE RETURN RETURNDATACOPY DUP16 0x4E 0xB2 SWAP2 EXP 0xE2 DELEGATECALL SWAP16 NUMBER MSTORE 0xC2 CODESIZE 0xCB ADDMOD CREATE 0xC6 0x5C PUSH20 0x64736F6C634300080F0033000000000000000000 ",
							"sourceMap": "200:4848:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 200,
									"end": 5048,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a364adf994d24ddfe8cb8c3af33e8f4eb2910ae2f49f4352c238cb08f0c65c7364736f6c634300080f0033",
									".code": [
										{
											"begin": 200,
											"end": 5048,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 200,
											"end": 5048,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 200,
											"end": 5048,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 200,
											"end": 5048,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 200,
											"end": 5048,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 200,
											"end": 5048,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 200,
											"end": 5048,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 200,
											"end": 5048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 5048,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/NFTStake.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTStake.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTStake.sol\":{\"keccak256\":\"0x8a5817077c2522aa4ea7969eb27dc700ae72b3908333b046c0e91858fb3659d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a81f9af2a103eaeacd422f5db8359693f2f61fe21342b67f139ade2f7e22f51\",\"dweb:/ipfs/QmdbKV6KbXdaMzcv9PJDqr2VjjmRH9jGSzuQB4q1eyTbu7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/NFTStake.sol": {
				"ast": {
					"absolutePath": "contracts/NFTStake.sol",
					"exportedSymbols": {
						"Address": [
							578
						],
						"Context": [
							816
						],
						"IERC165": [
							936
						],
						"IERC20": [
							286
						],
						"IERC721": [
							1048
						],
						"IERC721Receiver": [
							1063
						],
						"IMigratorChef": [
							927
						],
						"INFTMasterChef": [
							1071
						],
						"NFTStake": [
							2086
						],
						"Ownable": [
							917
						],
						"SafeERC20": [
							797
						],
						"SafeMath": [
							194
						]
					},
					"id": 2087,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "173:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194
							],
							"name": "SafeMath",
							"nameLocation": "208:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 26,
										"nodeType": "Block",
										"src": "522:114:0",
										"statements": [
											{
												"assignments": [
													12
												],
												"declarations": [
													{
														"constant": false,
														"id": 12,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "541:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 26,
														"src": "533:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 11,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "533:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 16,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 13,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "545:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 14,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "549:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "545:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "533:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 18,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 12,
																"src": "569:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 19,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4,
																"src": "574:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "569:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "577:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 17,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "561:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "561:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "561:46:0"
											},
											{
												"expression": {
													"id": 24,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 12,
													"src": "627:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 10,
												"id": 25,
												"nodeType": "Return",
												"src": "620:8:0"
											}
										]
									},
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "224:225:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 27,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "464:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "476:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "468:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "468:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "487:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "479:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "479:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "467:22:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "513:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "512:9:0"
									},
									"scope": 194,
									"src": "455:181:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "978:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 38,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "1000:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 39,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "1003:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1006:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 37,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															44,
															72
														],
														"referencedDeclaration": 72,
														"src": "996:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "996:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 36,
												"id": 42,
												"nodeType": "Return",
												"src": "989:50:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "644:261:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "920:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "924:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 29,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "935:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "969:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "969:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:9:0"
									},
									"scope": 194,
									"src": "911:136:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "1479:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 59,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 57,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 49,
																"src": "1498:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 58,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1503:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1498:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 60,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 51,
															"src": "1506:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 56,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1490:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1490:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "1490:29:0"
											},
											{
												"assignments": [
													64
												],
												"declarations": [
													{
														"constant": false,
														"id": 64,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1538:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 71,
														"src": "1530:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 63,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1530:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 68,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 65,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "1542:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 66,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 49,
														"src": "1546:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1542:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1530:17:0"
											},
											{
												"expression": {
													"id": 69,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 64,
													"src": "1567:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 55,
												"id": 70,
												"nodeType": "Return",
												"src": "1560:8:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1055:323:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow.\n _Available since v2.4.0._"
									},
									"id": 72,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1393:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1405:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1397:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1397:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1416:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1408:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1408:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "1433:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1419:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 50,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1419:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1396:50:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1470:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1470:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1469:9:0"
									},
									"scope": 194,
									"src": "1384:192:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "1894:404:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 82,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 75,
														"src": "2130:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 83,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2135:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2130:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 88,
												"nodeType": "IfStatement",
												"src": "2126:47:0",
												"trueBody": {
													"id": 87,
													"nodeType": "Block",
													"src": "2138:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 85,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2160:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 81,
															"id": 86,
															"nodeType": "Return",
															"src": "2153:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2193:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "2185:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 89,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2185:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 94,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 91,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 75,
														"src": "2197:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 92,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 77,
														"src": "2201:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2197:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2185:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 96,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 90,
																	"src": "2221:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 97,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 75,
																	"src": "2225:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2221:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 99,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "2230:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2221:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2233:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 95,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2213:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2213:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "2213:56:0"
											},
											{
												"expression": {
													"id": 104,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 90,
													"src": "2289:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 81,
												"id": 105,
												"nodeType": "Return",
												"src": "2282:8:0"
											}
										]
									},
									"documentation": {
										"id": 73,
										"nodeType": "StructuredDocumentation",
										"src": "1584:237:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "1836:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1848:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "1840:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1840:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1859:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "1851:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1851:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1839:22:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "1885:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1885:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1884:9:0"
									},
									"scope": 194,
									"src": "1827:471:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "2833:65:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 118,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "2855:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 119,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "2858:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2861:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 117,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															124,
															152
														],
														"referencedDeclaration": 152,
														"src": "2851:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2851:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 116,
												"id": 122,
												"nodeType": "Return",
												"src": "2844:46:0"
											}
										]
									},
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "2306:454:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "2775:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2787:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "2779:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2798:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "2790:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2790:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2778:22:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "2824:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2824:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2823:9:0"
									},
									"scope": 194,
									"src": "2766:132:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "3523:250:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 137,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "3609:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3613:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3609:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 140,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "3616:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 136,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3601:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3601:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "3601:28:0"
											},
											{
												"assignments": [
													144
												],
												"declarations": [
													{
														"constant": false,
														"id": 144,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "3648:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 151,
														"src": "3640:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 143,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3640:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 148,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 145,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "3652:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 146,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3656:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3652:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3640:17:0"
											},
											{
												"expression": {
													"id": 149,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 144,
													"src": "3764:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 135,
												"id": 150,
												"nodeType": "Return",
												"src": "3757:8:0"
											}
										]
									},
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "2906:516:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero.\n _Available since v2.4.0._"
									},
									"id": 152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3437:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3449:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "3441:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3441:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3460:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "3452:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3477:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "3463:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 130,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3463:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3440:50:0"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "3514:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3514:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3513:9:0"
									},
									"scope": 194,
									"src": "3428:345:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "4297:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 163,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "4319:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 164,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "4322:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4325:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 162,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															169,
															193
														],
														"referencedDeclaration": 193,
														"src": "4315:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4315:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 161,
												"id": 167,
												"nodeType": "Return",
												"src": "4308:44:0"
											}
										]
									},
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "3781:443:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4239:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4251:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "4243:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4243:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4262:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "4254:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4254:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4242:22:0"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "4288:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4288:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4287:9:0"
									},
									"scope": 194,
									"src": "4230:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "4974:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 182,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 174,
																"src": "4993:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 183,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4998:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4993:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 185,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 176,
															"src": "5001:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 181,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4985:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4985:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "4985:29:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 188,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "5032:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 189,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "5036:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5032:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 180,
												"id": 191,
												"nodeType": "Return",
												"src": "5025:12:0"
											}
										]
									},
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "4368:505:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero.\n _Available since v2.4.0._"
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4888:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4900:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "4892:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4892:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4911:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "4903:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4928:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "4914:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4914:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4891:50:0"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "4965:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4965:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4964:9:0"
									},
									"scope": 194,
									"src": "4879:166:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2087,
							"src": "200:4848:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 286,
							"linearizedBaseContracts": [
								286
							],
							"name": "IERC20",
							"nameLocation": "5062:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 195,
										"nodeType": "StructuredDocumentation",
										"src": "5076:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 200,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "5159:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5170:2:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "5196:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5196:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5195:9:0"
									},
									"scope": 286,
									"src": "5150:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "5213:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 208,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "5302:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5320:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "5312:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5312:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5311:17:0"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "5352:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5352:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5351:9:0"
									},
									"scope": 286,
									"src": "5293:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "5369:215:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 218,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "5599:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5616:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5608:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5608:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5635:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5627:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5627:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5607:35:0"
									},
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5661:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 215,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5661:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5660:6:0"
									},
									"scope": 286,
									"src": "5590:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "5675:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "5960:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5978:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5970:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5970:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5993:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5985:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5985:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5969:32:0"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "6025:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:9:0"
									},
									"scope": 286,
									"src": "5951:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "6042:655:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 238,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "6712:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6728:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "6720:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6720:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6745:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "6737:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6719:33:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "6771:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6771:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6770:6:0"
									},
									"scope": 286,
									"src": "6703:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "40c10f19",
									"id": 247,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "6794:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6807:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "6799:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6799:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6824:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "6816:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6816:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6798:33:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "6850:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6850:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6849:6:0"
									},
									"scope": 286,
									"src": "6785:71:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "6864:304:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 259,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "7183:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7214:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "7206:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7206:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7239:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "7231:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7231:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7267:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "7259:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7259:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7195:85:0"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "7299:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 256,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7299:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7298:6:0"
									},
									"scope": 286,
									"src": "7174:131:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "7313:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 268,
									"name": "Transfer",
									"nameLocation": "7488:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7513:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "7497:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7497:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7535:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "7519:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7519:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7547:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "7539:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7539:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7496:57:0"
									},
									"src": "7482:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "7562:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 277,
									"name": "Approval",
									"nameLocation": "7725:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7750:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "7734:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7734:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "7757:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7757:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7790:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "7782:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7782:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7733:63:0"
									},
									"src": "7719:78:0"
								},
								{
									"anonymous": false,
									"eventSelector": "ab8530f87dc9b59234c4623bf917212bb2536d647574c8e7e5da92c2ede0c9f8",
									"id": 285,
									"name": "Mint",
									"nameLocation": "7811:4:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"indexed": true,
												"mutability": "mutable",
												"name": "minter",
												"nameLocation": "7832:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7816:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7816:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7856:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7840:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7840:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7815:60:0"
									},
									"src": "7805:71:0"
								}
							],
							"scope": 2087,
							"src": "5052:2827:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 578,
							"linearizedBaseContracts": [
								578
							],
							"name": "Address",
							"nameLocation": "7891:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "8957:260:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 294,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 289,
																"src": "9186:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "9186:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "9186:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9208:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9186:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 293,
												"id": 299,
												"nodeType": "Return",
												"src": "9179:30:0"
											}
										]
									},
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "7906:979:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "8900:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8919:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "8911:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8911:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8910:17:0"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "8951:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 291,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8951:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8950:6:0"
									},
									"scope": 578,
									"src": "8891:326:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "10223:246:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 312,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "10250:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$578",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$578",
																				"typeString": "library Address"
																			}
																		],
																		"id": 311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10242:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 310,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "10242:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10242:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "10242:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 315,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "10267:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10242:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10275:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 309,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10234:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10234:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "10234:73:0"
											},
											{
												"assignments": [
													321,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 321,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "10326:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 334,
														"src": "10321:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 320,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10321:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 328,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10369:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 322,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 304,
																"src": "10339:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "10339:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 325,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 324,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "10361:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "10339:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10339:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10320:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 330,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "10391:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10400:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 329,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10383:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10383:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "10383:78:0"
											}
										]
									},
									"documentation": {
										"id": 302,
										"nodeType": "StructuredDocumentation",
										"src": "9225:921:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "10161:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "10187:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "10171:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10171:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10206:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "10198:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10198:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10170:43:0"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10223:0:0"
									},
									"scope": 578,
									"src": "10152:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "11320:86:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 346,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "11351:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 347,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "11359:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11365:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 345,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															352,
															372
														],
														"referencedDeclaration": 372,
														"src": "11338:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11338:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 344,
												"id": 350,
												"nodeType": "Return",
												"src": "11331:67:0"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "10477:748:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "11240:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "11261:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "11253:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11253:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11282:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "11269:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 339,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11269:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11252:35:0"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "11306:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 342,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11306:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11305:14:0"
									},
									"scope": 578,
									"src": "11231:175:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "11787:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 365,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "11827:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 366,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "11835:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11841:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 368,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "11844:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 364,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															392,
															442
														],
														"referencedDeclaration": 442,
														"src": "11805:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11805:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 363,
												"id": 370,
												"nodeType": "Return",
												"src": "11798:59:0"
											}
										]
									},
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "11414:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "11645:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "11676:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "11668:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11668:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11706:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "11693:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 356,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11693:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "11735:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "11721:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 358,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11721:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11657:97:0"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "11773:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 361,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11773:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11772:14:0"
									},
									"scope": 578,
									"src": "11636:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 391,
										"nodeType": "Block",
										"src": "12387:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 385,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "12427:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 386,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "12435:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 387,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "12441:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12448:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 384,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															392,
															442
														],
														"referencedDeclaration": 442,
														"src": "12405:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12405:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 383,
												"id": 390,
												"nodeType": "Return",
												"src": "12398:94:0"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "11873:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "12249:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "12289:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "12281:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12281:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "12319:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "12306:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 376,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12306:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12342:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "12334:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12334:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12270:84:0"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "12373:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 381,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12373:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12372:14:0"
									},
									"scope": 578,
									"src": "12240:260:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "12940:326:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 409,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "12967:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$578",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$578",
																				"typeString": "library Address"
																			}
																		],
																		"id": 408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12959:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 407,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "12959:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12959:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "12959:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 412,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 399,
																"src": "12984:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12959:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12991:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 406,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12951:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12951:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "12951:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 419,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "13062:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 418,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "13051:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13051:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13071:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 417,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13043:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13043:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 423,
												"nodeType": "ExpressionStatement",
												"src": "13043:60:0"
											},
											{
												"assignments": [
													425,
													427
												],
												"declarations": [
													{
														"constant": false,
														"id": 425,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "13122:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 441,
														"src": "13117:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 424,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "13117:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 427,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "13144:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 441,
														"src": "13131:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 426,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "13131:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 434,
												"initialValue": {
													"arguments": [
														{
															"id": 432,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "13184:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 428,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 395,
																"src": "13158:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "13158:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 430,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 399,
																"src": "13177:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "13158:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13158:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13116:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 436,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "13224:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 437,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "13233:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 438,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "13245:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 435,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "13207:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13207:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 405,
												"id": 440,
												"nodeType": "Return",
												"src": "13200:58:0"
											}
										]
									},
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "12508:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "12765:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "12805:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "12797:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12797:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "12835:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "12822:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 396,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12822:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12858:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "12850:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12850:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "12888:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "12874:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 400,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12874:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12786:121:0"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "12926:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 403,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12926:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12925:14:0"
									},
									"scope": 578,
									"src": "12756:510:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "13551:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 453,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "13588:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "13596:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13602:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 452,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															459,
															494
														],
														"referencedDeclaration": 494,
														"src": "13569:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13569:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 451,
												"id": 457,
												"nodeType": "Return",
												"src": "13562:80:0"
											}
										]
									},
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "13274:171:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "13460:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "13487:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "13479:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13479:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13508:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "13495:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 446,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13495:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13478:35:0"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "13537:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 449,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13537:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13536:14:0"
									},
									"scope": 578,
									"src": "13451:199:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 493,
										"nodeType": "Block",
										"src": "14004:233:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 473,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "14034:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 472,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "14023:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14023:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14043:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 471,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14015:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14015:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 477,
												"nodeType": "ExpressionStatement",
												"src": "14015:67:0"
											},
											{
												"assignments": [
													479,
													481
												],
												"declarations": [
													{
														"constant": false,
														"id": 479,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "14101:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 493,
														"src": "14096:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 478,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "14096:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 481,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "14123:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 493,
														"src": "14110:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 480,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "14110:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 486,
												"initialValue": {
													"arguments": [
														{
															"id": 484,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "14155:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 482,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "14137:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "14137:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14137:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14095:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 488,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "14195:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 489,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "14204:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 490,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "14216:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 487,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "14178:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14178:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 470,
												"id": 492,
												"nodeType": "Return",
												"src": "14171:58:0"
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "13658:178:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "13851:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "13888:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "13880:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13880:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13918:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "13905:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 463,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13905:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "13947:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "13933:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 465,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13933:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13869:97:0"
									},
									"returnParameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "13990:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 468,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13990:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13989:14:0"
									},
									"scope": 578,
									"src": "13842:395:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 510,
										"nodeType": "Block",
										"src": "14521:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 505,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "14560:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 506,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "14568:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14574:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 504,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															511,
															546
														],
														"referencedDeclaration": 546,
														"src": "14539:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14539:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 503,
												"id": 509,
												"nodeType": "Return",
												"src": "14532:84:0"
											}
										]
									},
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "14245:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "14433:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "14462:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "14454:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14483:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "14470:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 498,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14470:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14453:35:0"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "14507:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 501,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14507:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14506:14:0"
									},
									"scope": 578,
									"src": "14424:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 545,
										"nodeType": "Block",
										"src": "14977:237:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 525,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "15007:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 524,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "14996:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14996:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 527,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15016:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 523,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14988:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14988:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 529,
												"nodeType": "ExpressionStatement",
												"src": "14988:69:0"
											},
											{
												"assignments": [
													531,
													533
												],
												"declarations": [
													{
														"constant": false,
														"id": 531,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "15076:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 545,
														"src": "15071:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 530,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "15071:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 533,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "15098:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 545,
														"src": "15085:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 532,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "15085:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 538,
												"initialValue": {
													"arguments": [
														{
															"id": 536,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "15132:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 534,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "15112:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 535,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "15112:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15112:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15070:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 540,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "15172:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 541,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "15181:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 542,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "15193:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 539,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "15155:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15155:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 522,
												"id": 544,
												"nodeType": "Return",
												"src": "15148:58:0"
											}
										]
									},
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "14632:180:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "14827:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "14866:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "14858:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14896:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "14883:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 515,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14883:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "14925:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "14911:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 517,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14911:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14847:97:0"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "14963:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 520,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14963:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14962:14:0"
									},
									"scope": 578,
									"src": "14818:396:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "15606:548:0",
										"statements": [
											{
												"condition": {
													"id": 558,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 549,
													"src": "15621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 574,
													"nodeType": "Block",
													"src": "15680:467:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 562,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 551,
																		"src": "15766:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "15766:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15786:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "15766:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 572,
																"nodeType": "Block",
																"src": "16081:55:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 569,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 553,
																					"src": "16107:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 568,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "16100:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 570,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16100:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 571,
																		"nodeType": "ExpressionStatement",
																		"src": "16100:20:0"
																	}
																]
															},
															"id": 573,
															"nodeType": "IfStatement",
															"src": "15762:374:0",
															"trueBody": {
																"id": 567,
																"nodeType": "Block",
																"src": "15789:286:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "15912:148:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "15935:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "15964:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "15958:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15958:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "15939:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "16008:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "16012:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "16004:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "16004:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "16025:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "15997:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15997:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "15997:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 551,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "15964:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 551,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "16012:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 566,
																		"nodeType": "InlineAssembly",
																		"src": "15903:157:0"
																	}
																]
															}
														}
													]
												},
												"id": 575,
												"nodeType": "IfStatement",
												"src": "15617:530:0",
												"trueBody": {
													"id": 561,
													"nodeType": "Block",
													"src": "15630:44:0",
													"statements": [
														{
															"expression": {
																"id": 559,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 551,
																"src": "15652:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 557,
															"id": 560,
															"nodeType": "Return",
															"src": "15645:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 547,
										"nodeType": "StructuredDocumentation",
										"src": "15222:214:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "15451:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "15483:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "15478:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 548,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15478:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "15514:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "15501:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 550,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15501:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "15549:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "15535:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 552,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "15535:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15467:101:0"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "15592:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 555,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15592:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15591:14:0"
									},
									"scope": 578,
									"src": "15442:712:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2087,
							"src": "7883:8274:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 797,
							"linearizedBaseContracts": [
								797
							],
							"name": "SafeERC20",
							"nameLocation": "16169:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 581,
									"libraryName": {
										"id": 579,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 578,
										"src": "16192:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "16186:26:0",
									"typeName": {
										"id": 580,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "16204:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 603,
										"nodeType": "Block",
										"src": "16326:105:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 592,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "16357:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 595,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 584,
																			"src": "16387:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$286",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 218,
																		"src": "16387:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "16387:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 598,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 586,
																	"src": "16412:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 599,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 588,
																	"src": "16416:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 593,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "16364:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 594,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "16364:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16364:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 591,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "16337:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16337:86:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 602,
												"nodeType": "ExpressionStatement",
												"src": "16337:86:0"
											}
										]
									},
									"id": 604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "16229:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "16259:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "16252:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 583,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 582,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "16252:6:0"
													},
													"referencedDeclaration": 286,
													"src": "16252:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16283:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "16275:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16275:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16304:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "16296:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16296:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16241:75:0"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16326:0:0"
									},
									"scope": 797,
									"src": "16220:211:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "16572:115:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 617,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "16603:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 620,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 607,
																			"src": "16633:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$286",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 259,
																		"src": "16633:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "16633:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 623,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "16662:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 624,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 611,
																	"src": "16668:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 625,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "16672:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 618,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "16610:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 619,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "16610:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16610:68:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 616,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "16583:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16583:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 628,
												"nodeType": "ExpressionStatement",
												"src": "16583:96:0"
											}
										]
									},
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "16448:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "16482:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "16475:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 606,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 605,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "16475:6:0"
													},
													"referencedDeclaration": 286,
													"src": "16475:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16506:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "16498:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16498:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16529:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "16521:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16521:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16550:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "16542:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16542:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16464:98:0"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16572:0:0"
									},
									"scope": 797,
									"src": "16439:248:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "17066:506:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 642,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 638,
																			"src": "17320:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 643,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17329:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "17320:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 645,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "17319:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 650,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "17360:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$797",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$797",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 649,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "17352:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 648,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "17352:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 651,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "17352:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 652,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 636,
																					"src": "17367:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 646,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 634,
																					"src": "17336:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$286",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 647,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 228,
																				"src": "17336:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 653,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17336:39:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17379:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "17336:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 656,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "17335:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "17319:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17396:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 641,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17297:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17297:166:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "17297:166:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 662,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "17494:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 665,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 634,
																			"src": "17524:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$286",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 238,
																		"src": "17524:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "17524:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 668,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 636,
																	"src": "17548:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 669,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "17557:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 663,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "17501:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "17501:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17501:62:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 661,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "17474:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17474:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 672,
												"nodeType": "ExpressionStatement",
												"src": "17474:90:0"
											}
										]
									},
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "16695:255:0",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "16965:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "16994:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "16987:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 633,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 632,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "16987:6:0"
													},
													"referencedDeclaration": 286,
													"src": "16987:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "17018:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "17010:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17010:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17044:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "17036:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17036:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16976:80:0"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17066:0:0"
									},
									"scope": 797,
									"src": "16956:616:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "17700:197:0",
										"statements": [
											{
												"assignments": [
													685
												],
												"declarations": [
													{
														"constant": false,
														"id": 685,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "17719:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 709,
														"src": "17711:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 684,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17711:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 696,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 690,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "17758:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$797",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$797",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17750:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 688,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "17750:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17750:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 692,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 679,
																"src": "17765:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 686,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 677,
																"src": "17734:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$286",
																	"typeString": "contract IERC20"
																}
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 228,
															"src": "17734:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 693,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17734:39:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 694,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "17776:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17734:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17711:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 698,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "17812:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 701,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 677,
																			"src": "17842:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$286",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 238,
																		"src": "17842:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "17842:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 704,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "17866:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 705,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 685,
																	"src": "17875:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 699,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "17819:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "17819:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17819:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 697,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "17792:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17792:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 708,
												"nodeType": "ExpressionStatement",
												"src": "17792:97:0"
											}
										]
									},
									"id": 710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "17589:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "17628:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "17621:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 676,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 675,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "17621:6:0"
													},
													"referencedDeclaration": 286,
													"src": "17621:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "17652:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "17644:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17644:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17678:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "17670:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17610:80:0"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17700:0:0"
									},
									"scope": 797,
									"src": "17580:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 757,
										"nodeType": "Block",
										"src": "18025:377:0",
										"statements": [
											{
												"id": 756,
												"nodeType": "UncheckedBlock",
												"src": "18036:359:0",
												"statements": [
													{
														"assignments": [
															721
														],
														"declarations": [
															{
																"constant": false,
																"id": 721,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "18069:12:0",
																"nodeType": "VariableDeclaration",
																"scope": 756,
																"src": "18061:20:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 720,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "18061:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 730,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 726,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "18108:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$797",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$797",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 725,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "18100:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 724,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "18100:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18100:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 728,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 715,
																	"src": "18115:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 722,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 713,
																	"src": "18084:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "18084:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18084:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "18061:62:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 734,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 732,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 721,
																		"src": "18146:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 733,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 717,
																		"src": "18162:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "18146:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18169:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 731,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "18138:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18138:75:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 737,
														"nodeType": "ExpressionStatement",
														"src": "18138:75:0"
													},
													{
														"assignments": [
															739
														],
														"declarations": [
															{
																"constant": false,
																"id": 739,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "18236:12:0",
																"nodeType": "VariableDeclaration",
																"scope": 756,
																"src": "18228:20:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 738,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "18228:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 743,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 740,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 721,
																"src": "18251:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 741,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 717,
																"src": "18266:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18251:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "18228:43:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 745,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 713,
																	"src": "18306:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 748,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 713,
																					"src": "18336:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$286",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 749,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 238,
																				"src": "18336:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 750,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "18336:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 751,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 715,
																			"src": "18360:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 752,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 739,
																			"src": "18369:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 746,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "18313:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "18313:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18313:69:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 744,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "18286:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18286:97:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 755,
														"nodeType": "ExpressionStatement",
														"src": "18286:97:0"
													}
												]
											}
										]
									},
									"id": 758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "17914:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "17953:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "17946:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 712,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 711,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "17946:6:0"
													},
													"referencedDeclaration": 286,
													"src": "17946:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "17977:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "17969:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17969:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18003:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "17995:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17995:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17935:80:0"
									},
									"returnParameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18025:0:0"
									},
									"scope": 797,
									"src": "17905:497:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 795,
										"nodeType": "Block",
										"src": "18863:646:0",
										"statements": [
											{
												"assignments": [
													768
												],
												"declarations": [
													{
														"constant": false,
														"id": 768,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "19230:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 795,
														"src": "19217:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 767,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "19217:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 777,
												"initialValue": {
													"arguments": [
														{
															"id": 774,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 764,
															"src": "19271:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19277:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 771,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "19251:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19243:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 769,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19243:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19243:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 773,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 372,
														"src": "19243:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19243:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19217:95:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 778,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "19327:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "19327:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 780,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19347:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "19327:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 794,
												"nodeType": "IfStatement",
												"src": "19323:179:0",
												"trueBody": {
													"id": 793,
													"nodeType": "Block",
													"src": "19350:152:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 785,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 768,
																				"src": "19424:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 787,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "19437:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 786,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "19437:4:0",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 788,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "19436:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 783,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "19413:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 784,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "19413:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19413:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19445:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 782,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "19405:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19405:85:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 792,
															"nodeType": "ExpressionStatement",
															"src": "19405:85:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 759,
										"nodeType": "StructuredDocumentation",
										"src": "18410:377:0",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "18802:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "18829:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "18822:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 761,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 760,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "18822:6:0"
													},
													"referencedDeclaration": 286,
													"src": "18822:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "18849:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "18836:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 763,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18836:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18821:33:0"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18863:0:0"
									},
									"scope": 797,
									"src": "18793:716:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2087,
							"src": "16161:3351:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 816,
							"linearizedBaseContracts": [
								816
							],
							"name": "Context",
							"nameLocation": "19534:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 805,
										"nodeType": "Block",
										"src": "19611:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 802,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "19629:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "19629:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 801,
												"id": 804,
												"nodeType": "Return",
												"src": "19622:17:0"
											}
										]
									},
									"id": 806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "19558:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19568:2:0"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "19602:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19602:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19601:9:0"
									},
									"scope": 816,
									"src": "19549:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "19722:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 811,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "19740:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "19740:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 810,
												"id": 813,
												"nodeType": "Return",
												"src": "19733:15:0"
											}
										]
									},
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "19664:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19672:2:0"
									},
									"returnParameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "19706:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 808,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19706:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19705:16:0"
									},
									"scope": 816,
									"src": "19655:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2087,
							"src": "19516:243:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 817,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 816,
										"src": "19792:7:0"
									},
									"id": 818,
									"nodeType": "InheritanceSpecifier",
									"src": "19792:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 917,
							"linearizedBaseContracts": [
								917,
								816
							],
							"name": "Ownable",
							"nameLocation": "19781:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 820,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "19823:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 917,
									"src": "19807:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 819,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "19807:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 826,
									"name": "OwnershipTransferred",
									"nameLocation": "19844:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "19881:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "19865:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19865:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "19912:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "19896:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19896:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19864:57:0"
									},
									"src": "19838:84:0"
								},
								{
									"body": {
										"id": 835,
										"nodeType": "Block",
										"src": "20043:51:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 831,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "20073:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20073:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 830,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "20054:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20054:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 834,
												"nodeType": "ExpressionStatement",
												"src": "20054:32:0"
											}
										]
									},
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "19930:93:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 836,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20040:2:0"
									},
									"returnParameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20043:0:0"
									},
									"scope": 917,
									"src": "20029:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 844,
										"nodeType": "Block",
										"src": "20230:32:0",
										"statements": [
											{
												"expression": {
													"id": 842,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 820,
													"src": "20248:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 841,
												"id": 843,
												"nodeType": "Return",
												"src": "20241:13:0"
											}
										]
									},
									"documentation": {
										"id": 837,
										"nodeType": "StructuredDocumentation",
										"src": "20102:67:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "20184:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20189:2:0"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "20221:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20220:9:0"
									},
									"scope": 917,
									"src": "20175:87:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 858,
										"nodeType": "Block",
										"src": "20376:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 849,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 845,
																	"src": "20395:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20395:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 851,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 806,
																	"src": "20406:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20406:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "20395:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20420:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 848,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20387:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20387:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 856,
												"nodeType": "ExpressionStatement",
												"src": "20387:68:0"
											},
											{
												"id": 857,
												"nodeType": "PlaceholderStatement",
												"src": "20466:1:0"
											}
										]
									},
									"documentation": {
										"id": 846,
										"nodeType": "StructuredDocumentation",
										"src": "20270:79:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 859,
									"name": "onlyOwner",
									"nameLocation": "20364:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20373:2:0"
									},
									"src": "20355:120:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "20880:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 868,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20918:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 867,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20910:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 866,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20910:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20910:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 865,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "20891:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20891:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 871,
												"nodeType": "ExpressionStatement",
												"src": "20891:30:0"
											}
										]
									},
									"documentation": {
										"id": 860,
										"nodeType": "StructuredDocumentation",
										"src": "20483:337:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 873,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 863,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 862,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "20870:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "20870:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "20835:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20852:2:0"
									},
									"returnParameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20880:0:0"
									},
									"scope": 917,
									"src": "20826:103:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 895,
										"nodeType": "Block",
										"src": "21154:131:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 882,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 876,
																"src": "21173:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21193:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21185:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 883,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "21185:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 886,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21185:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "21173:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21197:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 881,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21165:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21165:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 890,
												"nodeType": "ExpressionStatement",
												"src": "21165:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 892,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "21268:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 891,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "21249:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21249:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 894,
												"nodeType": "ExpressionStatement",
												"src": "21249:28:0"
											}
										]
									},
									"documentation": {
										"id": 874,
										"nodeType": "StructuredDocumentation",
										"src": "20937:141:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 896,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 879,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 878,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "21144:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "21144:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "21093:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "21119:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "21111:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21111:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21110:18:0"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21154:0:0"
									},
									"scope": 917,
									"src": "21084:201:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 915,
										"nodeType": "Block",
										"src": "21508:128:0",
										"statements": [
											{
												"assignments": [
													903
												],
												"declarations": [
													{
														"constant": false,
														"id": 903,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "21527:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 915,
														"src": "21519:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 902,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "21519:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 905,
												"initialValue": {
													"id": 904,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 820,
													"src": "21538:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21519:25:0"
											},
											{
												"expression": {
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 906,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "21555:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 907,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 899,
														"src": "21564:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "21555:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 909,
												"nodeType": "ExpressionStatement",
												"src": "21555:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 911,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "21609:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 912,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "21619:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 910,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "21588:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21588:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 914,
												"nodeType": "EmitStatement",
												"src": "21583:45:0"
											}
										]
									},
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "21293:146:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 916,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "21454:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "21481:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "21473:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21473:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21472:18:0"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21508:0:0"
									},
									"scope": 917,
									"src": "21445:191:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2087,
							"src": "19763:1876:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IMigratorChef",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 927,
							"linearizedBaseContracts": [
								927
							],
							"name": "IMigratorChef",
							"nameLocation": "21653:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "ce5494bb",
									"id": 926,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "migrate",
									"nameLocation": "21683:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "21698:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "21691:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 919,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 918,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "21691:6:0"
													},
													"referencedDeclaration": 286,
													"src": "21691:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21690:14:0"
									},
									"returnParameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "21723:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 923,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 922,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "21723:6:0"
													},
													"referencedDeclaration": 286,
													"src": "21723:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21722:8:0"
									},
									"scope": 927,
									"src": "21674:57:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2087,
							"src": "21643:91:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 936,
							"linearizedBaseContracts": [
								936
							],
							"name": "IERC165",
							"nameLocation": "21748:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 928,
										"nodeType": "StructuredDocumentation",
										"src": "21763:347:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 935,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "22125:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "22150:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "22143:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 929,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "22143:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22142:20:0"
									},
									"returnParameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "22186:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 932,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22186:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22185:6:0"
									},
									"scope": 936,
									"src": "22116:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2087,
							"src": "21738:457:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 937,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 936,
										"src": "22220:7:0"
									},
									"id": 938,
									"nodeType": "InheritanceSpecifier",
									"src": "22220:7:0"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1048,
							"linearizedBaseContracts": [
								1048,
								936
							],
							"name": "IERC721",
							"nameLocation": "22209:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 939,
										"nodeType": "StructuredDocumentation",
										"src": "22235:90:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 947,
									"name": "Transfer",
									"nameLocation": "22337:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "22362:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "22346:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22346:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "22384:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "22368:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22368:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "22404:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "22388:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22388:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22345:67:0"
									},
									"src": "22331:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "22421:96:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 956,
									"name": "Approval",
									"nameLocation": "22529:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "22554:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "22538:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22538:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "22577:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "22561:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22561:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "22603:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "22587:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22587:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22537:74:0"
									},
									"src": "22523:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 957,
										"nodeType": "StructuredDocumentation",
										"src": "22620:119:0",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 965,
									"name": "ApprovalForAll",
									"nameLocation": "22751:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "22782:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "22766:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22766:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "22805:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "22789:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22789:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "22820:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "22815:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 962,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22815:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22765:64:0"
									},
									"src": "22745:85:0"
								},
								{
									"documentation": {
										"id": 966,
										"nodeType": "StructuredDocumentation",
										"src": "22838:78:0",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 973,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "22931:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "22949:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "22941:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22941:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22940:15:0"
									},
									"returnParameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "22987:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "22979:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22979:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22978:17:0"
									},
									"scope": 1048,
									"src": "22922:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 974,
										"nodeType": "StructuredDocumentation",
										"src": "23004:137:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 981,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "23156:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "23172:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "23164:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23164:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23163:17:0"
									},
									"returnParameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "23212:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "23204:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23204:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23203:15:0"
									},
									"scope": 1048,
									"src": "23147:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 982,
										"nodeType": "StructuredDocumentation",
										"src": "23227:703:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 991,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "23945:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "23980:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "23972:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23972:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24003:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "23995:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23995:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "24024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "24016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23961:77:0"
									},
									"returnParameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24047:0:0"
									},
									"scope": 1048,
									"src": "23936:112:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 992,
										"nodeType": "StructuredDocumentation",
										"src": "24056:517:0",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1001,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "24588:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "24619:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "24611:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24611:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24642:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "24634:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "24663:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "24655:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24655:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24600:77:0"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24686:0:0"
									},
									"scope": 1048,
									"src": "24579:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1002,
										"nodeType": "StructuredDocumentation",
										"src": "24695:464:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1009,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "25174:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "25190:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "25182:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25182:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "25202:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "25194:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25194:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25181:29:0"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25219:0:0"
									},
									"scope": 1048,
									"src": "25165:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1010,
										"nodeType": "StructuredDocumentation",
										"src": "25228:145:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1017,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "25388:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "25408:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "25400:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25400:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25399:17:0"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "25448:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "25440:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1014,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25440:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25439:18:0"
									},
									"scope": 1048,
									"src": "25379:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1018,
										"nodeType": "StructuredDocumentation",
										"src": "25466:318:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1025,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "25799:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "25825:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "25817:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25817:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "25840:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "25835:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1021,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "25835:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25816:34:0"
									},
									"returnParameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25859:0:0"
									},
									"scope": 1048,
									"src": "25790:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1026,
										"nodeType": "StructuredDocumentation",
										"src": "25868:142:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1035,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "26025:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "26050:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "26042:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "26065:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "26057:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26057:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26041:33:0"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "26098:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1032,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26098:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26097:6:0"
									},
									"scope": 1048,
									"src": "26016:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1036,
										"nodeType": "StructuredDocumentation",
										"src": "26112:568:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1047,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "26695:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "26730:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "26722:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26722:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26753:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "26745:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26745:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "26774:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "26766:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26766:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "26807:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "26792:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1043,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26792:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26711:107:0"
									},
									"returnParameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26827:0:0"
									},
									"scope": 1048,
									"src": "26686:142:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2087,
							"src": "22199:4632:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1063,
							"linearizedBaseContracts": [
								1063
							],
							"name": "IERC721Receiver",
							"nameLocation": "26845:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1049,
										"nodeType": "StructuredDocumentation",
										"src": "26868:493:0",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1062,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "27376:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "27411:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "27403:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "27438:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "27430:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27430:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "27461:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "27453:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27453:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "27494:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "27479:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1056,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "27479:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27392:113:0"
									},
									"returnParameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "27524:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1059,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "27524:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27523:8:0"
									},
									"scope": 1063,
									"src": "27367:165:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2087,
							"src": "26835:700:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "INFTMasterChef",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1071,
							"linearizedBaseContracts": [
								1071
							],
							"name": "INFTMasterChef",
							"nameLocation": "27549:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "849df12c",
									"id": 1070,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "enterStaking",
									"nameLocation": "27580:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "27601:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "27593:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27593:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "27618:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "27610:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27610:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27592:35:0"
									},
									"returnParameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27636:0:0"
									},
									"scope": 1071,
									"src": "27571:66:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2087,
							"src": "27539:101:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1072,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 917,
										"src": "28028:7:0"
									},
									"id": 1073,
									"nodeType": "InheritanceSpecifier",
									"src": "28028:7:0"
								},
								{
									"baseName": {
										"id": 1074,
										"name": "IERC721Receiver",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1063,
										"src": "28037:15:0"
									},
									"id": 1075,
									"nodeType": "InheritanceSpecifier",
									"src": "28037:15:0"
								}
							],
							"canonicalName": "NFTStake",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2086,
							"linearizedBaseContracts": [
								2086,
								1063,
								917,
								816
							],
							"name": "NFTStake",
							"nameLocation": "28016:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1078,
									"libraryName": {
										"id": 1076,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "28066:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "28060:27:0",
									"typeName": {
										"id": 1077,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "28079:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 1082,
									"libraryName": {
										"id": 1079,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 797,
										"src": "28099:9:0"
									},
									"nodeType": "UsingForDirective",
									"src": "28093:27:0",
									"typeName": {
										"id": 1081,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1080,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 286,
											"src": "28113:6:0"
										},
										"referencedDeclaration": 286,
										"src": "28113:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$286",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "NFTStake.UserInfo",
									"id": 1090,
									"members": [
										{
											"constant": false,
											"id": 1085,
											"mutability": "mutable",
											"name": "tokenIds",
											"nameLocation": "28190:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 1090,
											"src": "28180:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 1083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28180:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1084,
												"nodeType": "ArrayTypeName",
												"src": "28180:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1087,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "28217:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 1090,
											"src": "28209:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1086,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "28209:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1089,
											"mutability": "mutable",
											"name": "rewardDebt",
											"nameLocation": "28287:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 1090,
											"src": "28279:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1088,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "28279:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nameLocation": "28160:8:0",
									"nodeType": "StructDefinition",
									"scope": 2086,
									"src": "28153:817:0",
									"visibility": "public"
								},
								{
									"canonicalName": "NFTStake.PoolInfo",
									"id": 1100,
									"members": [
										{
											"constant": false,
											"id": 1093,
											"mutability": "mutable",
											"name": "NFTToken",
											"nameLocation": "29038:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 1100,
											"src": "29030:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC721_$1048",
												"typeString": "contract IERC721"
											},
											"typeName": {
												"id": 1092,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1091,
													"name": "IERC721",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1048,
													"src": "29030:7:0"
												},
												"referencedDeclaration": 1048,
												"src": "29030:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC721_$1048",
													"typeString": "contract IERC721"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1095,
											"mutability": "mutable",
											"name": "allocPoint",
											"nameLocation": "29098:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 1100,
											"src": "29090:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1094,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "29090:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1097,
											"mutability": "mutable",
											"name": "lastRewardBlock",
											"nameLocation": "29210:15:0",
											"nodeType": "VariableDeclaration",
											"scope": 1100,
											"src": "29202:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1096,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "29202:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1099,
											"mutability": "mutable",
											"name": "accDRGPerShare",
											"nameLocation": "29296:14:0",
											"nodeType": "VariableDeclaration",
											"scope": 1100,
											"src": "29288:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1098,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "29288:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolInfo",
									"nameLocation": "29010:8:0",
									"nodeType": "StructDefinition",
									"scope": 2086,
									"src": "29003:369:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e4d09896",
									"id": 1103,
									"mutability": "mutable",
									"name": "NFTMasterChef",
									"nameLocation": "29402:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 2086,
									"src": "29380:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_INFTMasterChef_$1071",
										"typeString": "contract INFTMasterChef"
									},
									"typeName": {
										"id": 1102,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1101,
											"name": "INFTMasterChef",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1071,
											"src": "29380:14:0"
										},
										"referencedDeclaration": 1071,
										"src": "29380:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_INFTMasterChef_$1071",
											"typeString": "contract INFTMasterChef"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "141aa0ba",
									"id": 1106,
									"mutability": "mutable",
									"name": "DRG",
									"nameLocation": "29461:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 2086,
									"src": "29447:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$286",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1105,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1104,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 286,
											"src": "29447:6:0"
										},
										"referencedDeclaration": 286,
										"src": "29447:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$286",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d49e77cd",
									"id": 1108,
									"mutability": "mutable",
									"name": "devaddr",
									"nameLocation": "29507:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2086,
									"src": "29492:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1107,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "29492:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a1eef821",
									"id": 1110,
									"mutability": "mutable",
									"name": "DRGPerBlock",
									"nameLocation": "29574:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 2086,
									"src": "29559:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1109,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "29559:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8aa28550",
									"id": 1113,
									"mutability": "mutable",
									"name": "BONUS_MULTIPLIER",
									"nameLocation": "29653:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 2086,
									"src": "29638:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1111,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "29638:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1112,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "29672:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7cd07e47",
									"id": 1116,
									"mutability": "mutable",
									"name": "migrator",
									"nameLocation": "29797:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 2086,
									"src": "29776:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IMigratorChef_$927",
										"typeString": "contract IMigratorChef"
									},
									"typeName": {
										"id": 1115,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1114,
											"name": "IMigratorChef",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 927,
											"src": "29776:13:0"
										},
										"referencedDeclaration": 927,
										"src": "29776:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IMigratorChef_$927",
											"typeString": "contract IMigratorChef"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1526fe27",
									"id": 1120,
									"mutability": "mutable",
									"name": "poolInfo",
									"nameLocation": "29857:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 2086,
									"src": "29839:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1100_storage_$dyn_storage",
										"typeString": "struct NFTStake.PoolInfo[]"
									},
									"typeName": {
										"baseType": {
											"id": 1118,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1117,
												"name": "PoolInfo",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1100,
												"src": "29839:8:0"
											},
											"referencedDeclaration": 1100,
											"src": "29839:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
												"typeString": "struct NFTStake.PoolInfo"
											}
										},
										"id": 1119,
										"nodeType": "ArrayTypeName",
										"src": "29839:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1100_storage_$dyn_storage_ptr",
											"typeString": "struct NFTStake.PoolInfo[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "93f1a40b",
									"id": 1127,
									"mutability": "mutable",
									"name": "userInfo",
									"nameLocation": "29977:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 2086,
									"src": "29921:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1090_storage_$_$",
										"typeString": "mapping(uint256 => mapping(address => struct NFTStake.UserInfo))"
									},
									"typeName": {
										"id": 1126,
										"keyType": {
											"id": 1121,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "29929:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "29921:48:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1090_storage_$_$",
											"typeString": "mapping(uint256 => mapping(address => struct NFTStake.UserInfo))"
										},
										"valueType": {
											"id": 1125,
											"keyType": {
												"id": 1122,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "29948:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "29940:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1090_storage_$",
												"typeString": "mapping(address => struct NFTStake.UserInfo)"
											},
											"valueType": {
												"id": 1124,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1123,
													"name": "UserInfo",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1090,
													"src": "29959:8:0"
												},
												"referencedDeclaration": 1090,
												"src": "29959:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
													"typeString": "struct NFTStake.UserInfo"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "17caf6f1",
									"id": 1130,
									"mutability": "mutable",
									"name": "totalAllocPoint",
									"nameLocation": "30095:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 2086,
									"src": "30080:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1128,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "30080:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1129,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "30113:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "48cd4cb1",
									"id": 1132,
									"mutability": "mutable",
									"name": "startBlock",
									"nameLocation": "30185:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 2086,
									"src": "30170:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1131,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "30170:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15",
									"id": 1140,
									"name": "Deposit",
									"nameLocation": "30210:7:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "30234:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "30218:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30218:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "30256:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "30240:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30240:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1138,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "30269:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "30261:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30261:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30217:59:0"
									},
									"src": "30204:73:0"
								},
								{
									"anonymous": false,
									"eventSelector": "f279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568",
									"id": 1148,
									"name": "Withdraw",
									"nameLocation": "30289:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "30314:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "30298:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1144,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "30336:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "30320:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1146,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "30349:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "30341:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30341:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30297:59:0"
									},
									"src": "30283:74:0"
								},
								{
									"anonymous": false,
									"eventSelector": "bb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595",
									"id": 1156,
									"name": "EmergencyWithdraw",
									"nameLocation": "30369:17:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "30413:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "30397:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30397:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "30444:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "30428:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30428:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "30466:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "30458:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30458:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30386:93:0"
									},
									"src": "30363:117:0"
								},
								{
									"body": {
										"id": 1191,
										"nodeType": "Block",
										"src": "30657:171:0",
										"statements": [
											{
												"expression": {
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1171,
														"name": "DRG",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1106,
														"src": "30668:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$286",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1172,
														"name": "_DRG",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "30674:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$286",
															"typeString": "contract IERC20"
														}
													},
													"src": "30668:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"id": 1174,
												"nodeType": "ExpressionStatement",
												"src": "30668:10:0"
											},
											{
												"expression": {
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1175,
														"name": "NFTMasterChef",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1103,
														"src": "30689:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_INFTMasterChef_$1071",
															"typeString": "contract INFTMasterChef"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1176,
														"name": "_NFTMasterChef",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "30705:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_INFTMasterChef_$1071",
															"typeString": "contract INFTMasterChef"
														}
													},
													"src": "30689:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_INFTMasterChef_$1071",
														"typeString": "contract INFTMasterChef"
													}
												},
												"id": 1178,
												"nodeType": "ExpressionStatement",
												"src": "30689:30:0"
											},
											{
												"expression": {
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1179,
														"name": "devaddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1108,
														"src": "30730:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1180,
														"name": "_devaddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "30740:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "30730:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1182,
												"nodeType": "ExpressionStatement",
												"src": "30730:18:0"
											},
											{
												"expression": {
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1183,
														"name": "DRGPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "30759:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1184,
														"name": "_DRGPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1166,
														"src": "30773:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30759:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1186,
												"nodeType": "ExpressionStatement",
												"src": "30759:26:0"
											},
											{
												"expression": {
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1187,
														"name": "startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1132,
														"src": "30796:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1188,
														"name": "_startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "30809:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30796:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1190,
												"nodeType": "ExpressionStatement",
												"src": "30796:24:0"
											}
										]
									},
									"id": 1192,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "_DRG",
												"nameLocation": "30517:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "30510:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1158,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1157,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "30510:6:0"
													},
													"referencedDeclaration": 286,
													"src": "30510:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "_NFTMasterChef",
												"nameLocation": "30547:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "30532:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_INFTMasterChef_$1071",
													"typeString": "contract INFTMasterChef"
												},
												"typeName": {
													"id": 1161,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1160,
														"name": "INFTMasterChef",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1071,
														"src": "30532:14:0"
													},
													"referencedDeclaration": 1071,
													"src": "30532:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_INFTMasterChef_$1071",
														"typeString": "contract INFTMasterChef"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "_devaddr",
												"nameLocation": "30580:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "30572:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "_DRGPerBlock",
												"nameLocation": "30607:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "30599:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30599:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "_startBlock",
												"nameLocation": "30638:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "30630:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30630:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30499:157:0"
									},
									"returnParameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30657:0:0"
									},
									"scope": 2086,
									"src": "30488:340:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1062
									],
									"body": {
										"id": 1211,
										"nodeType": "Block",
										"src": "31030:56:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 1207,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "31048:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_NFTStake_$2086",
																"typeString": "contract NFTStake"
															}
														},
														"id": 1208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1212,
														"src": "31048:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "31048:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 1206,
												"id": 1210,
												"nodeType": "Return",
												"src": "31041:37:0"
											}
										]
									},
									"documentation": {
										"id": 1193,
										"nodeType": "StructuredDocumentation",
										"src": "30836:80:0",
										"text": " Always returns `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "30931:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1203,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "31004:8:0"
									},
									"parameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "30948:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30948:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "30957:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30957:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "30966:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30966:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "30975:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "30975:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30947:41:0"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "31022:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1204,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "31022:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31021:8:0"
									},
									"scope": 2086,
									"src": "30922:164:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1223,
										"nodeType": "Block",
										"src": "31163:54:0",
										"statements": [
											{
												"expression": {
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1219,
														"name": "BONUS_MULTIPLIER",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1113,
														"src": "31174:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1220,
														"name": "multiplierNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1214,
														"src": "31193:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31174:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1222,
												"nodeType": "ExpressionStatement",
												"src": "31174:35:0"
											}
										]
									},
									"functionSelector": "5ffe6146",
									"id": 1224,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1217,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1216,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "31153:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "31153:9:0"
										}
									],
									"name": "updateMultiplier",
									"nameLocation": "31103:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "multiplierNumber",
												"nameLocation": "31128:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "31120:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31120:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31119:26:0"
									},
									"returnParameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31163:0:0"
									},
									"scope": 2086,
									"src": "31094:123:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1232,
										"nodeType": "Block",
										"src": "31279:41:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1229,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "31297:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1100_storage_$dyn_storage",
															"typeString": "struct NFTStake.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "31297:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1228,
												"id": 1231,
												"nodeType": "Return",
												"src": "31290:22:0"
											}
										]
									},
									"functionSelector": "081e3eda",
									"id": 1233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "poolLength",
									"nameLocation": "31234:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31244:2:0"
									},
									"returnParameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "31270:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31270:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31269:9:0"
									},
									"scope": 2086,
									"src": "31225:95:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1280,
										"nodeType": "Block",
										"src": "31579:472:0",
										"statements": [
											{
												"condition": {
													"id": 1245,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1240,
													"src": "31594:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1250,
												"nodeType": "IfStatement",
												"src": "31590:61:0",
												"trueBody": {
													"id": 1249,
													"nodeType": "Block",
													"src": "31607:44:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1246,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1500,
																	"src": "31622:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31622:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1248,
															"nodeType": "ExpressionStatement",
															"src": "31622:17:0"
														}
													]
												}
											},
											{
												"assignments": [
													1252
												],
												"declarations": [
													{
														"constant": false,
														"id": 1252,
														"mutability": "mutable",
														"name": "lastRewardBlock",
														"nameLocation": "31669:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 1280,
														"src": "31661:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1251,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "31661:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1261,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1256,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1253,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "31687:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "31687:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1255,
															"name": "startBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1132,
															"src": "31702:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "31687:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1259,
														"name": "startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1132,
														"src": "31730:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "31687:53:0",
													"trueExpression": {
														"expression": {
															"id": 1257,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "31715:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "31715:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31661:79:0"
											},
											{
												"expression": {
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1262,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1130,
														"src": "31751:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1265,
																"name": "_allocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1235,
																"src": "31789:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1263,
																"name": "totalAllocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1130,
																"src": "31769:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 27,
															"src": "31769:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31769:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31751:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1268,
												"nodeType": "ExpressionStatement",
												"src": "31751:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1273,
																	"name": "_NFTToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1238,
																	"src": "31878:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC721_$1048",
																		"typeString": "contract IERC721"
																	}
																},
																{
																	"id": 1274,
																	"name": "_allocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1235,
																	"src": "31918:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1275,
																	"name": "lastRewardBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1252,
																	"src": "31965:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 1276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32015:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC721_$1048",
																		"typeString": "contract IERC721"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1272,
																"name": "PoolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1100,
																"src": "31840:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_PoolInfo_$1100_storage_ptr_$",
																	"typeString": "type(struct NFTStake.PoolInfo storage pointer)"
																}
															},
															"id": 1277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [
																"NFTToken",
																"allocPoint",
																"lastRewardBlock",
																"accDRGPerShare"
															],
															"nodeType": "FunctionCall",
															"src": "31840:192:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1100_memory_ptr",
																"typeString": "struct NFTStake.PoolInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PoolInfo_$1100_memory_ptr",
																"typeString": "struct NFTStake.PoolInfo memory"
															}
														],
														"expression": {
															"id": 1269,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1120,
															"src": "31812:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1100_storage_$dyn_storage",
																"typeString": "struct NFTStake.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 1271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "31812:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_PoolInfo_$1100_storage_$dyn_storage_ptr_$_t_struct$_PoolInfo_$1100_storage_$returns$__$bound_to$_t_array$_t_struct$_PoolInfo_$1100_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct NFTStake.PoolInfo storage ref[] storage pointer,struct NFTStake.PoolInfo storage ref)"
														}
													},
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31812:231:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1279,
												"nodeType": "ExpressionStatement",
												"src": "31812:231:0"
											}
										]
									},
									"functionSelector": "1eaaa045",
									"id": 1281,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1243,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1242,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "31569:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "31569:9:0"
										}
									],
									"name": "add",
									"nameLocation": "31498:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nameLocation": "31511:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "31503:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31503:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "_NFTToken",
												"nameLocation": "31532:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "31524:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC721_$1048",
													"typeString": "contract IERC721"
												},
												"typeName": {
													"id": 1237,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1236,
														"name": "IERC721",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1048,
														"src": "31524:7:0"
													},
													"referencedDeclaration": 1048,
													"src": "31524:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$1048",
														"typeString": "contract IERC721"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nameLocation": "31548:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "31543:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1239,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "31543:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31501:60:0"
									},
									"returnParameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31579:0:0"
									},
									"scope": 2086,
									"src": "31489:562:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1318,
										"nodeType": "Block",
										"src": "32230:221:0",
										"statements": [
											{
												"condition": {
													"id": 1292,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1287,
													"src": "32245:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1297,
												"nodeType": "IfStatement",
												"src": "32241:61:0",
												"trueBody": {
													"id": 1296,
													"nodeType": "Block",
													"src": "32258:44:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1293,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1500,
																	"src": "32273:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32273:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1295,
															"nodeType": "ExpressionStatement",
															"src": "32273:17:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1298,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1130,
														"src": "32312:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1307,
																"name": "_allocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1285,
																"src": "32381:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 1301,
																				"name": "poolInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1120,
																				"src": "32350:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1100_storage_$dyn_storage",
																					"typeString": "struct NFTStake.PoolInfo storage ref[] storage ref"
																				}
																			},
																			"id": 1303,
																			"indexExpression": {
																				"id": 1302,
																				"name": "_pid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1283,
																				"src": "32359:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "32350:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1100_storage",
																				"typeString": "struct NFTStake.PoolInfo storage ref"
																			}
																		},
																		"id": 1304,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "allocPoint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1095,
																		"src": "32350:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1299,
																		"name": "totalAllocPoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1130,
																		"src": "32330:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "32330:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32330:46:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 27,
															"src": "32330:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32330:63:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32312:81:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1310,
												"nodeType": "ExpressionStatement",
												"src": "32312:81:0"
											},
											{
												"expression": {
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1311,
																"name": "poolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1120,
																"src": "32404:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1100_storage_$dyn_storage",
																	"typeString": "struct NFTStake.PoolInfo storage ref[] storage ref"
																}
															},
															"id": 1313,
															"indexExpression": {
																"id": 1312,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1283,
																"src": "32413:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "32404:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1100_storage",
																"typeString": "struct NFTStake.PoolInfo storage ref"
															}
														},
														"id": 1314,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "allocPoint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1095,
														"src": "32404:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1315,
														"name": "_allocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1285,
														"src": "32432:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32404:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1317,
												"nodeType": "ExpressionStatement",
												"src": "32404:39:0"
											}
										]
									},
									"functionSelector": "64482f79",
									"id": 1319,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1290,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1289,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "32220:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "32220:9:0"
										}
									],
									"name": "set",
									"nameLocation": "32155:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "32168:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "32160:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32160:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nameLocation": "32182:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "32174:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32174:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nameLocation": "32200:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "32195:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1286,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "32195:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32158:54:0"
									},
									"returnParameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32230:0:0"
									},
									"scope": 2086,
									"src": "32146:305:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1331,
										"nodeType": "Block",
										"src": "32590:39:0",
										"statements": [
											{
												"expression": {
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1327,
														"name": "migrator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1116,
														"src": "32601:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMigratorChef_$927",
															"typeString": "contract IMigratorChef"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1328,
														"name": "_migrator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1322,
														"src": "32612:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMigratorChef_$927",
															"typeString": "contract IMigratorChef"
														}
													},
													"src": "32601:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMigratorChef_$927",
														"typeString": "contract IMigratorChef"
													}
												},
												"id": 1330,
												"nodeType": "ExpressionStatement",
												"src": "32601:20:0"
											}
										]
									},
									"functionSelector": "23cf3118",
									"id": 1332,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1325,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1324,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "32580:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "32580:9:0"
										}
									],
									"name": "setMigrator",
									"nameLocation": "32536:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "_migrator",
												"nameLocation": "32562:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "32548:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IMigratorChef_$927",
													"typeString": "contract IMigratorChef"
												},
												"typeName": {
													"id": 1321,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1320,
														"name": "IMigratorChef",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 927,
														"src": "32548:13:0"
													},
													"referencedDeclaration": 927,
													"src": "32548:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMigratorChef_$927",
														"typeString": "contract IMigratorChef"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32547:25:0"
									},
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32590:0:0"
									},
									"scope": 2086,
									"src": "32527:102:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1349,
										"nodeType": "Block",
										"src": "32786:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1346,
															"name": "BONUS_MULTIPLIER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "32824:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1343,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1334,
																	"src": "32813:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1341,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1336,
																	"src": "32805:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 44,
																"src": "32805:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32805:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1345,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 107,
														"src": "32805:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32805:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1340,
												"id": 1348,
												"nodeType": "Return",
												"src": "32798:43:0"
											}
										]
									},
									"functionSelector": "8dbb1e3a",
									"id": 1350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMultiplier",
									"nameLocation": "32714:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "32736:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "32728:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32728:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "32751:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "32743:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32743:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32727:28:0"
									},
									"returnParameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "32777:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32777:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32776:9:0"
									},
									"scope": 2086,
									"src": "32705:144:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1372,
										"nodeType": "Block",
										"src": "32950:95:0",
										"statements": [
											{
												"assignments": [
													1362
												],
												"declarations": [
													{
														"constant": false,
														"id": 1362,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "32978:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1372,
														"src": "32961:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
															"typeString": "struct NFTStake.UserInfo"
														},
														"typeName": {
															"id": 1361,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1360,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1090,
																"src": "32961:8:0"
															},
															"referencedDeclaration": 1090,
															"src": "32961:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																"typeString": "struct NFTStake.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1368,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1363,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "32985:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1090_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTStake.UserInfo storage ref))"
															}
														},
														"id": 1365,
														"indexExpression": {
															"id": 1364,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1352,
															"src": "32994:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "32985:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1090_storage_$",
															"typeString": "mapping(address => struct NFTStake.UserInfo storage ref)"
														}
													},
													"id": 1367,
													"indexExpression": {
														"id": 1366,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1354,
														"src": "33000:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "32985:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1090_storage",
														"typeString": "struct NFTStake.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32961:45:0"
											},
											{
												"expression": {
													"expression": {
														"id": 1369,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1362,
														"src": "33024:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
															"typeString": "struct NFTStake.UserInfo storage pointer"
														}
													},
													"id": 1370,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "tokenIds",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1085,
													"src": "33024:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"functionReturnParameters": 1359,
												"id": 1371,
												"nodeType": "Return",
												"src": "33017:20:0"
											}
										]
									},
									"functionSelector": "d5545992",
									"id": 1373,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserTokenIds",
									"nameLocation": "32866:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "32890:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "32882:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32882:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "32904:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "32896:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32896:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32881:29:0"
									},
									"returnParameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "32932:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1356,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "32932:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1357,
													"nodeType": "ArrayTypeName",
													"src": "32932:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32931:18:0"
									},
									"scope": 2086,
									"src": "32857:188:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1474,
										"nodeType": "Block",
										"src": "33188:673:0",
										"statements": [
											{
												"assignments": [
													1384
												],
												"declarations": [
													{
														"constant": false,
														"id": 1384,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "33216:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1474,
														"src": "33199:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
															"typeString": "struct NFTStake.PoolInfo"
														},
														"typeName": {
															"id": 1383,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1382,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1100,
																"src": "33199:8:0"
															},
															"referencedDeclaration": 1100,
															"src": "33199:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																"typeString": "struct NFTStake.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1388,
												"initialValue": {
													"baseExpression": {
														"id": 1385,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "33223:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1100_storage_$dyn_storage",
															"typeString": "struct NFTStake.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1387,
													"indexExpression": {
														"id": 1386,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1375,
														"src": "33232:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "33223:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1100_storage",
														"typeString": "struct NFTStake.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33199:38:0"
											},
											{
												"assignments": [
													1391
												],
												"declarations": [
													{
														"constant": false,
														"id": 1391,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "33265:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1474,
														"src": "33248:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
															"typeString": "struct NFTStake.UserInfo"
														},
														"typeName": {
															"id": 1390,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1389,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1090,
																"src": "33248:8:0"
															},
															"referencedDeclaration": 1090,
															"src": "33248:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																"typeString": "struct NFTStake.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1397,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1392,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "33272:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1090_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTStake.UserInfo storage ref))"
															}
														},
														"id": 1394,
														"indexExpression": {
															"id": 1393,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1375,
															"src": "33281:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "33272:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1090_storage_$",
															"typeString": "mapping(address => struct NFTStake.UserInfo storage ref)"
														}
													},
													"id": 1396,
													"indexExpression": {
														"id": 1395,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1377,
														"src": "33287:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "33272:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1090_storage",
														"typeString": "struct NFTStake.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33248:45:0"
											},
											{
												"assignments": [
													1399
												],
												"declarations": [
													{
														"constant": false,
														"id": 1399,
														"mutability": "mutable",
														"name": "accDRGPerShare",
														"nameLocation": "33312:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 1474,
														"src": "33304:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1398,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "33304:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1402,
												"initialValue": {
													"expression": {
														"id": 1400,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1384,
														"src": "33329:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
															"typeString": "struct NFTStake.PoolInfo storage pointer"
														}
													},
													"id": 1401,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "accDRGPerShare",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1099,
													"src": "33329:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33304:44:0"
											},
											{
												"assignments": [
													1404
												],
												"declarations": [
													{
														"constant": false,
														"id": 1404,
														"mutability": "mutable",
														"name": "NFTSupply",
														"nameLocation": "33367:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1474,
														"src": "33359:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1403,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "33359:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1413,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1410,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "33411:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTStake_$2086",
																		"typeString": "contract NFTStake"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTStake_$2086",
																		"typeString": "contract NFTStake"
																	}
																],
																"id": 1409,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "33403:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1408,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "33403:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33403:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 1405,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1384,
																"src": "33379:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																	"typeString": "struct NFTStake.PoolInfo storage pointer"
																}
															},
															"id": 1406,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "NFTToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1093,
															"src": "33379:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$1048",
																"typeString": "contract IERC721"
															}
														},
														"id": 1407,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 973,
														"src": "33379:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33379:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33359:58:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1418,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1414,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "33432:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "33432:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"id": 1416,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1384,
																"src": "33447:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																	"typeString": "struct NFTStake.PoolInfo storage pointer"
																}
															},
															"id": 1417,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastRewardBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1097,
															"src": "33447:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "33432:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1421,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1419,
															"name": "NFTSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1404,
															"src": "33471:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33484:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "33471:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "33432:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1460,
												"nodeType": "IfStatement",
												"src": "33428:346:0",
												"trueBody": {
													"id": 1459,
													"nodeType": "Block",
													"src": "33487:287:0",
													"statements": [
														{
															"assignments": [
																1424
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1424,
																	"mutability": "mutable",
																	"name": "multiplier",
																	"nameLocation": "33510:10:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1459,
																	"src": "33502:18:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1423,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "33502:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1431,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1426,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1384,
																			"src": "33537:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																				"typeString": "struct NFTStake.PoolInfo storage pointer"
																			}
																		},
																		"id": 1427,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lastRewardBlock",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1097,
																		"src": "33537:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1428,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "33559:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "33559:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1425,
																	"name": "getMultiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1350,
																	"src": "33523:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256)"
																	}
																},
																"id": 1430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33523:49:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "33502:70:0"
														},
														{
															"assignments": [
																1433
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1433,
																	"mutability": "mutable",
																	"name": "DRGReward",
																	"nameLocation": "33595:9:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1459,
																	"src": "33587:17:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1432,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "33587:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1445,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1443,
																		"name": "totalAllocPoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1130,
																		"src": "33660:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1439,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1384,
																					"src": "33639:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																						"typeString": "struct NFTStake.PoolInfo storage pointer"
																					}
																				},
																				"id": 1440,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allocPoint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1095,
																				"src": "33639:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1436,
																						"name": "DRGPerBlock",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1110,
																						"src": "33622:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1434,
																						"name": "multiplier",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1424,
																						"src": "33607:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1435,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 107,
																					"src": "33607:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1437,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "33607:27:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1438,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 107,
																			"src": "33607:31:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "33607:48:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 124,
																	"src": "33607:52:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33607:69:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "33587:89:0"
														},
														{
															"expression": {
																"id": 1457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1446,
																	"name": "accDRGPerShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1399,
																	"src": "33691:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1454,
																					"name": "NFTSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1404,
																					"src": "33751:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "31653132",
																							"id": 1451,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "33741:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							},
																							"value": "1e12"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							}
																						],
																						"expression": {
																							"id": 1449,
																							"name": "DRGReward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1433,
																							"src": "33727:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1450,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 107,
																						"src": "33727:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1452,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "33727:19:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1453,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 124,
																				"src": "33727:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1455,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "33727:34:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1447,
																			"name": "accDRGPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1399,
																			"src": "33708:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 27,
																		"src": "33708:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "33708:54:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "33691:71:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1458,
															"nodeType": "ExpressionStatement",
															"src": "33691:71:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1470,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1391,
																"src": "33837:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																	"typeString": "struct NFTStake.UserInfo storage pointer"
																}
															},
															"id": 1471,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1089,
															"src": "33837:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653132",
																	"id": 1467,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33827:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	},
																	"value": "1e12"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1464,
																			"name": "accDRGPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1399,
																			"src": "33807:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1461,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1391,
																				"src": "33791:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																					"typeString": "struct NFTStake.UserInfo storage pointer"
																				}
																			},
																			"id": 1462,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1087,
																			"src": "33791:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 107,
																		"src": "33791:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "33791:31:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 124,
																"src": "33791:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33791:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1469,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "33791:45:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33791:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1381,
												"id": 1473,
												"nodeType": "Return",
												"src": "33784:69:0"
											}
										]
									},
									"functionSelector": "4f17dbaf",
									"id": 1475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingDRG",
									"nameLocation": "33117:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "33136:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "33128:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33128:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "33150:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "33142:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33142:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33127:29:0"
									},
									"returnParameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "33180:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33180:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33179:9:0"
									},
									"scope": 2086,
									"src": "33108:753:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1499,
										"nodeType": "Block",
										"src": "33978:146:0",
										"statements": [
											{
												"assignments": [
													1479
												],
												"declarations": [
													{
														"constant": false,
														"id": 1479,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "33997:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1499,
														"src": "33989:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1478,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "33989:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1482,
												"initialValue": {
													"expression": {
														"id": 1480,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "34006:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1100_storage_$dyn_storage",
															"typeString": "struct NFTStake.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "34006:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33989:32:0"
											},
											{
												"body": {
													"id": 1497,
													"nodeType": "Block",
													"src": "34075:42:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1494,
																		"name": "pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1484,
																		"src": "34101:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1493,
																	"name": "updatePool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1601,
																	"src": "34090:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34090:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1496,
															"nodeType": "ExpressionStatement",
															"src": "34090:15:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1487,
														"name": "pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1484,
														"src": "34054:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1488,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1479,
														"src": "34060:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34054:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1498,
												"initializationExpression": {
													"assignments": [
														1484
													],
													"declarations": [
														{
															"constant": false,
															"id": 1484,
															"mutability": "mutable",
															"name": "pid",
															"nameLocation": "34045:3:0",
															"nodeType": "VariableDeclaration",
															"scope": 1498,
															"src": "34037:11:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1483,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "34037:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1486,
													"initialValue": {
														"hexValue": "30",
														"id": 1485,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "34051:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "34037:15:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "34068:5:0",
														"subExpression": {
															"id": 1490,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1484,
															"src": "34070:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1492,
													"nodeType": "ExpressionStatement",
													"src": "34068:5:0"
												},
												"nodeType": "ForStatement",
												"src": "34032:85:0"
											}
										]
									},
									"functionSelector": "630b5ba1",
									"id": 1500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "massUpdatePools",
									"nameLocation": "33953:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33968:2:0"
									},
									"returnParameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33978:0:0"
									},
									"scope": 2086,
									"src": "33944:180:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1600,
										"nodeType": "Block",
										"src": "34241:688:0",
										"statements": [
											{
												"assignments": [
													1507
												],
												"declarations": [
													{
														"constant": false,
														"id": 1507,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "34269:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1600,
														"src": "34252:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
															"typeString": "struct NFTStake.PoolInfo"
														},
														"typeName": {
															"id": 1506,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1505,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1100,
																"src": "34252:8:0"
															},
															"referencedDeclaration": 1100,
															"src": "34252:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																"typeString": "struct NFTStake.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1511,
												"initialValue": {
													"baseExpression": {
														"id": 1508,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "34276:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1100_storage_$dyn_storage",
															"typeString": "struct NFTStake.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1510,
													"indexExpression": {
														"id": 1509,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1502,
														"src": "34285:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "34276:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1100_storage",
														"typeString": "struct NFTStake.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34252:38:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1512,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "34305:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1513,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "34305:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"expression": {
															"id": 1514,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1507,
															"src": "34321:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																"typeString": "struct NFTStake.PoolInfo storage pointer"
															}
														},
														"id": 1515,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "lastRewardBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1097,
														"src": "34321:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34305:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1519,
												"nodeType": "IfStatement",
												"src": "34301:75:0",
												"trueBody": {
													"id": 1518,
													"nodeType": "Block",
													"src": "34343:33:0",
													"statements": [
														{
															"functionReturnParameters": 1504,
															"id": 1517,
															"nodeType": "Return",
															"src": "34358:7:0"
														}
													]
												}
											},
											{
												"assignments": [
													1521
												],
												"declarations": [
													{
														"constant": false,
														"id": 1521,
														"mutability": "mutable",
														"name": "NFTSupply",
														"nameLocation": "34394:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1600,
														"src": "34386:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1520,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "34386:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1530,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1527,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "34438:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTStake_$2086",
																		"typeString": "contract NFTStake"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTStake_$2086",
																		"typeString": "contract NFTStake"
																	}
																],
																"id": 1526,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "34430:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1525,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "34430:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34430:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 1522,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1507,
																"src": "34406:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																	"typeString": "struct NFTStake.PoolInfo storage pointer"
																}
															},
															"id": 1523,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "NFTToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1093,
															"src": "34406:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$1048",
																"typeString": "contract IERC721"
															}
														},
														"id": 1524,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 973,
														"src": "34406:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34406:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34386:58:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1531,
														"name": "NFTSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1521,
														"src": "34459:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1532,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "34472:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "34459:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1543,
												"nodeType": "IfStatement",
												"src": "34455:103:0",
												"trueBody": {
													"id": 1542,
													"nodeType": "Block",
													"src": "34475:83:0",
													"statements": [
														{
															"expression": {
																"id": 1539,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1534,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1507,
																		"src": "34490:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																			"typeString": "struct NFTStake.PoolInfo storage pointer"
																		}
																	},
																	"id": 1536,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastRewardBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1097,
																	"src": "34490:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1537,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "34513:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "34513:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "34490:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1540,
															"nodeType": "ExpressionStatement",
															"src": "34490:35:0"
														},
														{
															"functionReturnParameters": 1504,
															"id": 1541,
															"nodeType": "Return",
															"src": "34540:7:0"
														}
													]
												}
											},
											{
												"assignments": [
													1545
												],
												"declarations": [
													{
														"constant": false,
														"id": 1545,
														"mutability": "mutable",
														"name": "multiplier",
														"nameLocation": "34576:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1600,
														"src": "34568:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1544,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "34568:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1552,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1547,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1507,
																"src": "34603:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																	"typeString": "struct NFTStake.PoolInfo storage pointer"
																}
															},
															"id": 1548,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastRewardBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1097,
															"src": "34603:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1549,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "34625:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "34625:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1546,
														"name": "getMultiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1350,
														"src": "34589:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256)"
														}
													},
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34589:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34568:70:0"
											},
											{
												"assignments": [
													1554
												],
												"declarations": [
													{
														"constant": false,
														"id": 1554,
														"mutability": "mutable",
														"name": "DRGReward",
														"nameLocation": "34657:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1600,
														"src": "34649:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1553,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "34649:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1566,
												"initialValue": {
													"arguments": [
														{
															"id": 1564,
															"name": "totalAllocPoint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1130,
															"src": "34722:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1560,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1507,
																		"src": "34701:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																			"typeString": "struct NFTStake.PoolInfo storage pointer"
																		}
																	},
																	"id": 1561,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "allocPoint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1095,
																	"src": "34701:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1557,
																			"name": "DRGPerBlock",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1110,
																			"src": "34684:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1555,
																			"name": "multiplier",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1545,
																			"src": "34669:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 107,
																		"src": "34669:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34669:27:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1559,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 107,
																"src": "34669:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34669:48:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1563,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 124,
														"src": "34669:52:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34669:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34649:89:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1572,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "34766:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTStake_$2086",
																		"typeString": "contract NFTStake"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTStake_$2086",
																		"typeString": "contract NFTStake"
																	}
																],
																"id": 1571,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "34758:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1570,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "34758:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34758:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1574,
															"name": "DRGReward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1554,
															"src": "34773:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1567,
															"name": "DRG",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1106,
															"src": "34749:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"id": 1569,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 247,
														"src": "34749:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34749:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1576,
												"nodeType": "ExpressionStatement",
												"src": "34749:34:0"
											},
											{
												"expression": {
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1577,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1507,
															"src": "34794:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																"typeString": "struct NFTStake.PoolInfo storage pointer"
															}
														},
														"id": 1579,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "accDRGPerShare",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1099,
														"src": "34794:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1588,
																		"name": "NFTSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1521,
																		"src": "34864:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "31653132",
																				"id": 1585,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "34854:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				},
																				"value": "1e12"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				}
																			],
																			"expression": {
																				"id": 1583,
																				"name": "DRGReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1554,
																				"src": "34840:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1584,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 107,
																			"src": "34840:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "34840:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 124,
																	"src": "34840:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34840:34:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1580,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1507,
																	"src": "34816:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																		"typeString": "struct NFTStake.PoolInfo storage pointer"
																	}
																},
																"id": 1581,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "accDRGPerShare",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1099,
																"src": "34816:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 27,
															"src": "34816:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1590,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34816:59:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34794:81:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1592,
												"nodeType": "ExpressionStatement",
												"src": "34794:81:0"
											},
											{
												"expression": {
													"id": 1598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1593,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1507,
															"src": "34886:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																"typeString": "struct NFTStake.PoolInfo storage pointer"
															}
														},
														"id": 1595,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastRewardBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1097,
														"src": "34886:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1596,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "34909:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1597,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "34909:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34886:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1599,
												"nodeType": "ExpressionStatement",
												"src": "34886:35:0"
											}
										]
									},
									"functionSelector": "51eb05a6",
									"id": 1601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updatePool",
									"nameLocation": "34209:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1502,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "34228:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "34220:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34220:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34219:14:0"
									},
									"returnParameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34241:0:0"
									},
									"scope": 2086,
									"src": "34200:729:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1718,
										"nodeType": "Block",
										"src": "35054:683:0",
										"statements": [
											{
												"assignments": [
													1610
												],
												"declarations": [
													{
														"constant": false,
														"id": 1610,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "35082:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1718,
														"src": "35065:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
															"typeString": "struct NFTStake.PoolInfo"
														},
														"typeName": {
															"id": 1609,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1608,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1100,
																"src": "35065:8:0"
															},
															"referencedDeclaration": 1100,
															"src": "35065:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																"typeString": "struct NFTStake.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1614,
												"initialValue": {
													"baseExpression": {
														"id": 1611,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "35089:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1100_storage_$dyn_storage",
															"typeString": "struct NFTStake.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1613,
													"indexExpression": {
														"id": 1612,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1603,
														"src": "35098:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "35089:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1100_storage",
														"typeString": "struct NFTStake.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35065:38:0"
											},
											{
												"assignments": [
													1617
												],
												"declarations": [
													{
														"constant": false,
														"id": 1617,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "35131:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1718,
														"src": "35114:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
															"typeString": "struct NFTStake.UserInfo"
														},
														"typeName": {
															"id": 1616,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1615,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1090,
																"src": "35114:8:0"
															},
															"referencedDeclaration": 1090,
															"src": "35114:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																"typeString": "struct NFTStake.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1624,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1618,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "35138:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1090_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTStake.UserInfo storage ref))"
															}
														},
														"id": 1620,
														"indexExpression": {
															"id": 1619,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1603,
															"src": "35147:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "35138:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1090_storage_$",
															"typeString": "mapping(address => struct NFTStake.UserInfo storage ref)"
														}
													},
													"id": 1623,
													"indexExpression": {
														"expression": {
															"id": 1621,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "35153:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1622,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "35153:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "35138:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1090_storage",
														"typeString": "struct NFTStake.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35114:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1626,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1603,
															"src": "35186:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1625,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1601,
														"src": "35175:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35175:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1628,
												"nodeType": "ExpressionStatement",
												"src": "35175:16:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1629,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1617,
															"src": "35206:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																"typeString": "struct NFTStake.UserInfo storage pointer"
															}
														},
														"id": 1630,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1087,
														"src": "35206:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1631,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "35220:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "35206:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1661,
												"nodeType": "IfStatement",
												"src": "35202:233:0",
												"trueBody": {
													"id": 1660,
													"nodeType": "Block",
													"src": "35223:212:0",
													"statements": [
														{
															"assignments": [
																1634
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1634,
																	"mutability": "mutable",
																	"name": "pending",
																	"nameLocation": "35246:7:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1660,
																	"src": "35238:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1633,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "35238:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1648,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1645,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1617,
																			"src": "35307:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																				"typeString": "struct NFTStake.UserInfo storage pointer"
																			}
																		},
																		"id": 1646,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardDebt",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1089,
																		"src": "35307:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "31653132",
																				"id": 1642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "35297:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				},
																				"value": "1e12"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 1638,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1610,
																							"src": "35272:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																								"typeString": "struct NFTStake.PoolInfo storage pointer"
																							}
																						},
																						"id": 1639,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "accDRGPerShare",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1099,
																						"src": "35272:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"id": 1635,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1617,
																							"src": "35256:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																								"typeString": "struct NFTStake.UserInfo storage pointer"
																							}
																						},
																						"id": 1636,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1087,
																						"src": "35256:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1637,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 107,
																					"src": "35256:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1640,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "35256:36:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1641,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 124,
																			"src": "35256:40:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1643,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "35256:46:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "35256:50:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35256:67:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "35238:85:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1649,
																	"name": "pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1634,
																	"src": "35341:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "35351:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "35341:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1659,
															"nodeType": "IfStatement",
															"src": "35338:86:0",
															"trueBody": {
																"id": 1658,
																"nodeType": "Block",
																"src": "35353:71:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1653,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "35388:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1654,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "35388:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1655,
																					"name": "pending",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1634,
																					"src": "35400:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1652,
																				"name": "safeDRGTransfer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2061,
																				"src": "35372:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 1656,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "35372:36:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1657,
																		"nodeType": "ExpressionStatement",
																		"src": "35372:36:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1669,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "35484:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1670,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "35484:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1668,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "35476:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1667,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "35476:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1671,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35476:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1674,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "35505:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTStake_$2086",
																		"typeString": "contract NFTStake"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTStake_$2086",
																		"typeString": "contract NFTStake"
																	}
																],
																"id": 1673,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "35497:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1672,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "35497:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35497:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1676,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1605,
															"src": "35512:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1662,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1610,
																"src": "35445:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																	"typeString": "struct NFTStake.PoolInfo storage pointer"
																}
															},
															"id": 1665,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "NFTToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1093,
															"src": "35445:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$1048",
																"typeString": "contract IERC721"
															}
														},
														"id": 1666,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 991,
														"src": "35445:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 1677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35445:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1678,
												"nodeType": "ExpressionStatement",
												"src": "35445:76:0"
											},
											{
												"expression": {
													"id": 1687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1679,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1617,
															"src": "35532:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																"typeString": "struct NFTStake.UserInfo storage pointer"
															}
														},
														"id": 1681,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1087,
														"src": "35532:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 1685,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "35562:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"expression": {
																"expression": {
																	"id": 1682,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1617,
																	"src": "35546:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																		"typeString": "struct NFTStake.UserInfo storage pointer"
																	}
																},
																"id": 1683,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1087,
																"src": "35546:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 27,
															"src": "35546:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1686,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "35546:18:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "35532:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1688,
												"nodeType": "ExpressionStatement",
												"src": "35532:32:0"
											},
											{
												"expression": {
													"id": 1701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1689,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1617,
															"src": "35575:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																"typeString": "struct NFTStake.UserInfo storage pointer"
															}
														},
														"id": 1691,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1089,
														"src": "35575:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653132",
																"id": 1699,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "35634:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																},
																"value": "1e12"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1695,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1610,
																			"src": "35609:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																				"typeString": "struct NFTStake.PoolInfo storage pointer"
																			}
																		},
																		"id": 1696,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accDRGPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1099,
																		"src": "35609:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1692,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1617,
																			"src": "35593:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																				"typeString": "struct NFTStake.UserInfo storage pointer"
																			}
																		},
																		"id": 1693,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1087,
																		"src": "35593:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1694,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 107,
																	"src": "35593:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1697,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35593:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 124,
															"src": "35593:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1700,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "35593:46:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "35575:64:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1702,
												"nodeType": "ExpressionStatement",
												"src": "35575:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1708,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1605,
															"src": "35669:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1703,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1617,
																"src": "35650:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																	"typeString": "struct NFTStake.UserInfo storage pointer"
																}
															},
															"id": 1706,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "tokenIds",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1085,
															"src": "35650:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1707,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "35650:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 1709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35650:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1710,
												"nodeType": "ExpressionStatement",
												"src": "35650:28:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1712,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "35702:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "35702:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1714,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1603,
															"src": "35714:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1715,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1605,
															"src": "35720:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1711,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1140,
														"src": "35694:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35694:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1717,
												"nodeType": "EmitStatement",
												"src": "35689:40:0"
											}
										]
									},
									"functionSelector": "e2bbb158",
									"id": 1719,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "35007:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "35023:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1719,
												"src": "35015:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35015:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "35037:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1719,
												"src": "35029:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35029:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35014:32:0"
									},
									"returnParameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35054:0:0"
									},
									"scope": 2086,
									"src": "34998:739:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1933,
										"nodeType": "Block",
										"src": "35847:1468:0",
										"statements": [
											{
												"assignments": [
													1728
												],
												"declarations": [
													{
														"constant": false,
														"id": 1728,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "35875:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1933,
														"src": "35858:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
															"typeString": "struct NFTStake.PoolInfo"
														},
														"typeName": {
															"id": 1727,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1726,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1100,
																"src": "35858:8:0"
															},
															"referencedDeclaration": 1100,
															"src": "35858:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																"typeString": "struct NFTStake.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1732,
												"initialValue": {
													"baseExpression": {
														"id": 1729,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "35882:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1100_storage_$dyn_storage",
															"typeString": "struct NFTStake.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1731,
													"indexExpression": {
														"id": 1730,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1721,
														"src": "35891:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "35882:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1100_storage",
														"typeString": "struct NFTStake.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35858:38:0"
											},
											{
												"assignments": [
													1735
												],
												"declarations": [
													{
														"constant": false,
														"id": 1735,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "35924:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1933,
														"src": "35907:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
															"typeString": "struct NFTStake.UserInfo"
														},
														"typeName": {
															"id": 1734,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1733,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1090,
																"src": "35907:8:0"
															},
															"referencedDeclaration": 1090,
															"src": "35907:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																"typeString": "struct NFTStake.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1742,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1736,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "35931:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1090_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTStake.UserInfo storage ref))"
															}
														},
														"id": 1738,
														"indexExpression": {
															"id": 1737,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1721,
															"src": "35940:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "35931:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1090_storage_$",
															"typeString": "mapping(address => struct NFTStake.UserInfo storage ref)"
														}
													},
													"id": 1741,
													"indexExpression": {
														"expression": {
															"id": 1739,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "35946:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "35946:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "35931:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1090_storage",
														"typeString": "struct NFTStake.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35907:50:0"
											},
											{
												"assignments": [
													1744
												],
												"declarations": [
													{
														"constant": false,
														"id": 1744,
														"mutability": "mutable",
														"name": "pending",
														"nameLocation": "35976:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1933,
														"src": "35968:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1743,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "35968:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1745,
												"nodeType": "VariableDeclarationStatement",
												"src": "35968:15:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1746,
														"name": "_tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1723,
														"src": "35997:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1747,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "36009:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "35997:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1924,
													"nodeType": "Block",
													"src": "36330:926:0",
													"statements": [
														{
															"assignments": [
																1796
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1796,
																	"mutability": "mutable",
																	"name": "hasTokenId",
																	"nameLocation": "36353:10:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1924,
																	"src": "36345:18:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1795,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "36345:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1798,
															"initialValue": {
																"hexValue": "30",
																"id": 1797,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "36366:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "36345:22:0"
														},
														{
															"assignments": [
																1800
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1800,
																	"mutability": "mutable",
																	"name": "tokenIdIndex",
																	"nameLocation": "36390:12:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1924,
																	"src": "36382:20:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1799,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "36382:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1801,
															"nodeType": "VariableDeclarationStatement",
															"src": "36382:20:0"
														},
														{
															"body": {
																"id": 1829,
																"nodeType": "Block",
																"src": "36460:162:0",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1818,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"expression": {
																						"id": 1813,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1735,
																						"src": "36482:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																							"typeString": "struct NFTStake.UserInfo storage pointer"
																						}
																					},
																					"id": 1814,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "tokenIds",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1085,
																					"src": "36482:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																						"typeString": "uint256[] storage ref"
																					}
																				},
																				"id": 1816,
																				"indexExpression": {
																					"id": 1815,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1803,
																					"src": "36496:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "36482:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 1817,
																				"name": "_tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1723,
																				"src": "36502:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "36482:28:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1828,
																		"nodeType": "IfStatement",
																		"src": "36479:128:0",
																		"trueBody": {
																			"id": 1827,
																			"nodeType": "Block",
																			"src": "36511:96:0",
																			"statements": [
																				{
																					"expression": {
																						"id": 1821,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 1819,
																							"name": "hasTokenId",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1796,
																							"src": "36534:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"hexValue": "31",
																							"id": 1820,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "36547:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "36534:14:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1822,
																					"nodeType": "ExpressionStatement",
																					"src": "36534:14:0"
																				},
																				{
																					"expression": {
																						"id": 1825,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 1823,
																							"name": "tokenIdIndex",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1800,
																							"src": "36571:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"id": 1824,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1803,
																							"src": "36586:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "36571:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1826,
																					"nodeType": "ExpressionStatement",
																					"src": "36571:16:0"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1809,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1805,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1803,
																	"src": "36432:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"expression": {
																			"id": 1806,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1735,
																			"src": "36434:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																				"typeString": "struct NFTStake.UserInfo storage pointer"
																			}
																		},
																		"id": 1807,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "tokenIds",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1085,
																		"src": "36434:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 1808,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "36434:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "36432:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1830,
															"initializationExpression": {
																"assignments": [
																	1803
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1803,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "36429:1:0",
																		"nodeType": "VariableDeclaration",
																		"scope": 1830,
																		"src": "36421:9:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1802,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "36421:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1804,
																"nodeType": "VariableDeclarationStatement",
																"src": "36421:9:0"
															},
															"loopExpression": {
																"expression": {
																	"id": 1811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "36456:3:0",
																	"subExpression": {
																		"id": 1810,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1803,
																		"src": "36456:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1812,
																"nodeType": "ExpressionStatement",
																"src": "36456:3:0"
															},
															"nodeType": "ForStatement",
															"src": "36417:205:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1832,
																			"name": "hasTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1796,
																			"src": "36644:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1833,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "36658:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "36644:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "596f7520617265206e6f74204f776e6572206f6620746f6b656e206964",
																		"id": 1835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "36661:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_6bd482f4508d6ff87f5e2fd70a2544768e808d8d25d190c4a2ac86648d1a36cd",
																			"typeString": "literal_string \"You are not Owner of token id\""
																		},
																		"value": "You are not Owner of token id"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_6bd482f4508d6ff87f5e2fd70a2544768e808d8d25d190c4a2ac86648d1a36cd",
																			"typeString": "literal_string \"You are not Owner of token id\""
																		}
																	],
																	"id": 1831,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "36636:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1836,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36636:57:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1837,
															"nodeType": "ExpressionStatement",
															"src": "36636:57:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1839,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1735,
																				"src": "36716:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																					"typeString": "struct NFTStake.UserInfo storage pointer"
																				}
																			},
																			"id": 1840,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1087,
																			"src": "36716:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1841,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "36731:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "36716:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "77697468647261773a206e6f7420676f6f64",
																		"id": 1843,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "36734:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																			"typeString": "literal_string \"withdraw: not good\""
																		},
																		"value": "withdraw: not good"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																			"typeString": "literal_string \"withdraw: not good\""
																		}
																	],
																	"id": 1838,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "36708:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36708:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1845,
															"nodeType": "ExpressionStatement",
															"src": "36708:47:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1847,
																		"name": "_pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1721,
																		"src": "36781:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1846,
																	"name": "updatePool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1601,
																	"src": "36770:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36770:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1849,
															"nodeType": "ExpressionStatement",
															"src": "36770:16:0"
														},
														{
															"expression": {
																"id": 1864,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1850,
																	"name": "pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1744,
																	"src": "36801:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1861,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1735,
																				"src": "36862:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																					"typeString": "struct NFTStake.UserInfo storage pointer"
																				}
																			},
																			"id": 1862,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "rewardDebt",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1089,
																			"src": "36862:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "31653132",
																					"id": 1858,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "36852:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000000000000_by_1",
																						"typeString": "int_const 1000000000000"
																					},
																					"value": "1e12"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_1000000000000_by_1",
																						"typeString": "int_const 1000000000000"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"expression": {
																								"id": 1854,
																								"name": "pool",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1728,
																								"src": "36827:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																									"typeString": "struct NFTStake.PoolInfo storage pointer"
																								}
																							},
																							"id": 1855,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "accDRGPerShare",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1099,
																							"src": "36827:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"expression": {
																								"id": 1851,
																								"name": "user",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1735,
																								"src": "36811:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																									"typeString": "struct NFTStake.UserInfo storage pointer"
																								}
																							},
																							"id": 1852,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "amount",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1087,
																							"src": "36811:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1853,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 107,
																						"src": "36811:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1856,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "36811:36:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1857,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 124,
																				"src": "36811:40:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1859,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "36811:46:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1860,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 44,
																		"src": "36811:50:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "36811:67:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "36801:77:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1865,
															"nodeType": "ExpressionStatement",
															"src": "36801:77:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1868,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1866,
																	"name": "pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1744,
																	"src": "36896:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "36906:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "36896:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1876,
															"nodeType": "IfStatement",
															"src": "36893:86:0",
															"trueBody": {
																"id": 1875,
																"nodeType": "Block",
																"src": "36908:71:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1870,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "36943:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1871,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "36943:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1872,
																					"name": "pending",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1744,
																					"src": "36955:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1869,
																				"name": "safeDRGTransfer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2061,
																				"src": "36927:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 1873,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "36927:36:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1874,
																		"nodeType": "ExpressionStatement",
																		"src": "36927:36:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1885,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1877,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1735,
																		"src": "36993:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																			"typeString": "struct NFTStake.UserInfo storage pointer"
																		}
																	},
																	"id": 1879,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1087,
																	"src": "36993:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "31",
																			"id": 1883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "37023:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1880,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1735,
																				"src": "37007:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																					"typeString": "struct NFTStake.UserInfo storage pointer"
																				}
																			},
																			"id": 1881,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1087,
																			"src": "37007:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 44,
																		"src": "37007:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "37007:18:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "36993:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1886,
															"nodeType": "ExpressionStatement",
															"src": "36993:32:0"
														},
														{
															"expression": {
																"id": 1899,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1887,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1735,
																		"src": "37040:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																			"typeString": "struct NFTStake.UserInfo storage pointer"
																		}
																	},
																	"id": 1889,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "rewardDebt",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1089,
																	"src": "37040:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "31653132",
																			"id": 1897,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "37099:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000_by_1",
																				"typeString": "int_const 1000000000000"
																			},
																			"value": "1e12"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000000000000_by_1",
																				"typeString": "int_const 1000000000000"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1893,
																						"name": "pool",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1728,
																						"src": "37074:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																							"typeString": "struct NFTStake.PoolInfo storage pointer"
																						}
																					},
																					"id": 1894,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "accDRGPerShare",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1099,
																					"src": "37074:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"expression": {
																						"id": 1890,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1735,
																						"src": "37058:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																							"typeString": "struct NFTStake.UserInfo storage pointer"
																						}
																					},
																					"id": 1891,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1087,
																					"src": "37058:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1892,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 107,
																				"src": "37058:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1895,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "37058:36:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 124,
																		"src": "37058:40:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "37058:46:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "37040:64:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1900,
															"nodeType": "ExpressionStatement",
															"src": "37040:64:0"
														},
														{
															"expression": {
																"id": 1905,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "37119:34:0",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 1901,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1735,
																			"src": "37126:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																				"typeString": "struct NFTStake.UserInfo storage pointer"
																			}
																		},
																		"id": 1902,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "tokenIds",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1085,
																		"src": "37126:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 1904,
																	"indexExpression": {
																		"id": 1903,
																		"name": "tokenIdIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1800,
																		"src": "37140:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "37126:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1906,
															"nodeType": "ExpressionStatement",
															"src": "37119:34:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1914,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "37207:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_NFTStake_$2086",
																					"typeString": "contract NFTStake"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_NFTStake_$2086",
																					"typeString": "contract NFTStake"
																				}
																			],
																			"id": 1913,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "37199:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1912,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "37199:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1915,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "37199:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1918,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "37222:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1919,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "37222:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1917,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "37214:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1916,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "37214:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1920,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "37214:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1921,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1723,
																		"src": "37235:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1907,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1728,
																			"src": "37168:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																				"typeString": "struct NFTStake.PoolInfo storage pointer"
																			}
																		},
																		"id": 1910,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "NFTToken",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1093,
																		"src": "37168:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$1048",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 1911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 991,
																	"src": "37168:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) external"
																	}
																},
																"id": 1922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "37168:76:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1923,
															"nodeType": "ExpressionStatement",
															"src": "37168:76:0"
														}
													]
												},
												"id": 1925,
												"nodeType": "IfStatement",
												"src": "35994:1262:0",
												"trueBody": {
													"id": 1794,
													"nodeType": "Block",
													"src": "36011:314:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1750,
																		"name": "_pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1721,
																		"src": "36037:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1749,
																	"name": "updatePool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1601,
																	"src": "36026:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1751,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36026:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1752,
															"nodeType": "ExpressionStatement",
															"src": "36026:16:0"
														},
														{
															"expression": {
																"id": 1767,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1753,
																	"name": "pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1744,
																	"src": "36057:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1764,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1735,
																				"src": "36118:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																					"typeString": "struct NFTStake.UserInfo storage pointer"
																				}
																			},
																			"id": 1765,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "rewardDebt",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1089,
																			"src": "36118:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "31653132",
																					"id": 1761,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "36108:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000000000000_by_1",
																						"typeString": "int_const 1000000000000"
																					},
																					"value": "1e12"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_1000000000000_by_1",
																						"typeString": "int_const 1000000000000"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"expression": {
																								"id": 1757,
																								"name": "pool",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1728,
																								"src": "36083:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																									"typeString": "struct NFTStake.PoolInfo storage pointer"
																								}
																							},
																							"id": 1758,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "accDRGPerShare",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1099,
																							"src": "36083:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"expression": {
																								"id": 1754,
																								"name": "user",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1735,
																								"src": "36067:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																									"typeString": "struct NFTStake.UserInfo storage pointer"
																								}
																							},
																							"id": 1755,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "amount",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1087,
																							"src": "36067:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1756,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 107,
																						"src": "36067:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1759,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "36067:36:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1760,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 124,
																				"src": "36067:40:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1762,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "36067:46:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1763,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 44,
																		"src": "36067:50:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1766,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "36067:67:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "36057:77:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1768,
															"nodeType": "ExpressionStatement",
															"src": "36057:77:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1769,
																	"name": "pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1744,
																	"src": "36152:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "36162:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "36152:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1779,
															"nodeType": "IfStatement",
															"src": "36149:86:0",
															"trueBody": {
																"id": 1778,
																"nodeType": "Block",
																"src": "36164:71:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1773,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "36199:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1774,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "36199:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1775,
																					"name": "pending",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1744,
																					"src": "36211:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1772,
																				"name": "safeDRGTransfer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2061,
																				"src": "36183:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 1776,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "36183:36:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1777,
																		"nodeType": "ExpressionStatement",
																		"src": "36183:36:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1792,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1780,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1735,
																		"src": "36249:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																			"typeString": "struct NFTStake.UserInfo storage pointer"
																		}
																	},
																	"id": 1782,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "rewardDebt",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1089,
																	"src": "36249:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "31653132",
																			"id": 1790,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "36308:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000_by_1",
																				"typeString": "int_const 1000000000000"
																			},
																			"value": "1e12"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000000000000_by_1",
																				"typeString": "int_const 1000000000000"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1786,
																						"name": "pool",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1728,
																						"src": "36283:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																							"typeString": "struct NFTStake.PoolInfo storage pointer"
																						}
																					},
																					"id": 1787,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "accDRGPerShare",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1099,
																					"src": "36283:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"expression": {
																						"id": 1783,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1735,
																						"src": "36267:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																							"typeString": "struct NFTStake.UserInfo storage pointer"
																						}
																					},
																					"id": 1784,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1087,
																					"src": "36267:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1785,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 107,
																				"src": "36267:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1788,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "36267:36:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 124,
																		"src": "36267:40:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1791,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "36267:46:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "36249:64:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1793,
															"nodeType": "ExpressionStatement",
															"src": "36249:64:0"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1927,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "37280:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1928,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "37280:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1929,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1721,
															"src": "37292:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1930,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1723,
															"src": "37298:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1926,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1148,
														"src": "37271:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37271:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1932,
												"nodeType": "EmitStatement",
												"src": "37266:41:0"
											}
										]
									},
									"functionSelector": "441a3e70",
									"id": 1934,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "35799:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "35816:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1934,
												"src": "35808:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35808:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "35830:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1934,
												"src": "35822:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35807:32:0"
									},
									"returnParameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35847:0:0"
									},
									"scope": 2086,
									"src": "35790:1525:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2022,
										"nodeType": "Block",
										"src": "37364:529:0",
										"statements": [
											{
												"assignments": [
													1941
												],
												"declarations": [
													{
														"constant": false,
														"id": 1941,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "37392:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2022,
														"src": "37375:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
															"typeString": "struct NFTStake.PoolInfo"
														},
														"typeName": {
															"id": 1940,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1939,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1100,
																"src": "37375:8:0"
															},
															"referencedDeclaration": 1100,
															"src": "37375:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																"typeString": "struct NFTStake.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1945,
												"initialValue": {
													"baseExpression": {
														"id": 1942,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "37399:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1100_storage_$dyn_storage",
															"typeString": "struct NFTStake.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1944,
													"indexExpression": {
														"id": 1943,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1936,
														"src": "37408:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "37399:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1100_storage",
														"typeString": "struct NFTStake.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "37375:38:0"
											},
											{
												"assignments": [
													1948
												],
												"declarations": [
													{
														"constant": false,
														"id": 1948,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "37441:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2022,
														"src": "37424:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
															"typeString": "struct NFTStake.UserInfo"
														},
														"typeName": {
															"id": 1947,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1946,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1090,
																"src": "37424:8:0"
															},
															"referencedDeclaration": 1090,
															"src": "37424:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																"typeString": "struct NFTStake.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1955,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1949,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "37448:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1090_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTStake.UserInfo storage ref))"
															}
														},
														"id": 1951,
														"indexExpression": {
															"id": 1950,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1936,
															"src": "37457:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "37448:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1090_storage_$",
															"typeString": "mapping(address => struct NFTStake.UserInfo storage ref)"
														}
													},
													"id": 1954,
													"indexExpression": {
														"expression": {
															"id": 1952,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "37463:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1953,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "37463:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "37448:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1090_storage",
														"typeString": "struct NFTStake.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "37424:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1957,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1936,
															"src": "37496:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1956,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1601,
														"src": "37485:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37485:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1959,
												"nodeType": "ExpressionStatement",
												"src": "37485:16:0"
											},
											{
												"assignments": [
													1961
												],
												"declarations": [
													{
														"constant": false,
														"id": 1961,
														"mutability": "mutable",
														"name": "pending",
														"nameLocation": "37520:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2022,
														"src": "37512:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1960,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "37512:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1975,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1972,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1948,
																"src": "37581:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																	"typeString": "struct NFTStake.UserInfo storage pointer"
																}
															},
															"id": 1973,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1089,
															"src": "37581:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653132",
																	"id": 1969,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "37571:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	},
																	"value": "1e12"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1965,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1941,
																				"src": "37546:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																					"typeString": "struct NFTStake.PoolInfo storage pointer"
																				}
																			},
																			"id": 1966,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "accDRGPerShare",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1099,
																			"src": "37546:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1962,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1948,
																				"src": "37530:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																					"typeString": "struct NFTStake.UserInfo storage pointer"
																				}
																			},
																			"id": 1963,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1087,
																			"src": "37530:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1964,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 107,
																		"src": "37530:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1967,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "37530:36:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1968,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 124,
																"src": "37530:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37530:46:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1971,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "37530:50:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37530:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "37512:85:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1979,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1977,
																"name": "pending",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1961,
																"src": "37616:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1978,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "37626:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "37616:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206973207a65726f",
															"id": 1980,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37629:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c",
																"typeString": "literal_string \"Amount is zero\""
															},
															"value": "Amount is zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c",
																"typeString": "literal_string \"Amount is zero\""
															}
														],
														"id": 1976,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "37608:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37608:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1982,
												"nodeType": "ExpressionStatement",
												"src": "37608:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1988,
																	"name": "NFTMasterChef",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1103,
																	"src": "37677:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_INFTMasterChef_$1071",
																		"typeString": "contract INFTMasterChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_INFTMasterChef_$1071",
																		"typeString": "contract INFTMasterChef"
																	}
																],
																"id": 1987,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "37669:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1986,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "37669:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37669:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1990,
															"name": "pending",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1961,
															"src": "37693:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1983,
															"name": "DRG",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1106,
															"src": "37657:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"id": 1985,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 238,
														"src": "37657:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37657:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1992,
												"nodeType": "ExpressionStatement",
												"src": "37657:44:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1996,
															"name": "pending",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1961,
															"src": "37739:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1997,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "37748:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "37748:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1993,
															"name": "NFTMasterChef",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "37712:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INFTMasterChef_$1071",
																"typeString": "contract INFTMasterChef"
															}
														},
														"id": 1995,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "enterStaking",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1070,
														"src": "37712:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address) external"
														}
													},
													"id": 1999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37712:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2000,
												"nodeType": "ExpressionStatement",
												"src": "37712:47:0"
											},
											{
												"expression": {
													"id": 2013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2001,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1948,
															"src": "37770:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																"typeString": "struct NFTStake.UserInfo storage pointer"
															}
														},
														"id": 2003,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1089,
														"src": "37770:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653132",
																"id": 2011,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "37829:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																},
																"value": "1e12"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2007,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1941,
																			"src": "37804:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																				"typeString": "struct NFTStake.PoolInfo storage pointer"
																			}
																		},
																		"id": 2008,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accDRGPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1099,
																		"src": "37804:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2004,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1948,
																			"src": "37788:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																				"typeString": "struct NFTStake.UserInfo storage pointer"
																			}
																		},
																		"id": 2005,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1087,
																		"src": "37788:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 107,
																	"src": "37788:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "37788:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 124,
															"src": "37788:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2012,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37788:46:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "37770:64:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2014,
												"nodeType": "ExpressionStatement",
												"src": "37770:64:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2016,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "37859:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "37859:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2018,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1936,
															"src": "37871:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2019,
															"name": "pending",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1961,
															"src": "37877:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2015,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1148,
														"src": "37850:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37850:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2021,
												"nodeType": "EmitStatement",
												"src": "37845:40:0"
											}
										]
									},
									"functionSelector": "be70fba3",
									"id": 2023,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "compundDRG",
									"nameLocation": "37332:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "37351:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2023,
												"src": "37343:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37342:14:0"
									},
									"returnParameters": {
										"id": 1938,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37364:0:0"
									},
									"scope": 2086,
									"src": "37323:570:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2060,
										"nodeType": "Block",
										"src": "38069:207:0",
										"statements": [
											{
												"assignments": [
													2031
												],
												"declarations": [
													{
														"constant": false,
														"id": 2031,
														"mutability": "mutable",
														"name": "DRGbal",
														"nameLocation": "38088:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2060,
														"src": "38080:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2030,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "38080:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2039,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2036,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "38119:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTStake_$2086",
																		"typeString": "contract NFTStake"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTStake_$2086",
																		"typeString": "contract NFTStake"
																	}
																],
																"id": 2035,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "38111:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2034,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "38111:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38111:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2032,
															"name": "DRG",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1106,
															"src": "38097:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"id": 2033,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 208,
														"src": "38097:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38097:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "38080:45:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2040,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2027,
														"src": "38140:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2041,
														"name": "DRGbal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2031,
														"src": "38150:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "38140:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2058,
													"nodeType": "Block",
													"src": "38216:53:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2054,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2025,
																		"src": "38244:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2055,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2027,
																		"src": "38249:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2051,
																		"name": "DRG",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1106,
																		"src": "38231:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$286",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 218,
																	"src": "38231:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 2056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38231:26:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2057,
															"nodeType": "ExpressionStatement",
															"src": "38231:26:0"
														}
													]
												},
												"id": 2059,
												"nodeType": "IfStatement",
												"src": "38136:133:0",
												"trueBody": {
													"id": 2050,
													"nodeType": "Block",
													"src": "38158:52:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2046,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2025,
																		"src": "38186:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2047,
																		"name": "DRGbal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2031,
																		"src": "38191:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2043,
																		"name": "DRG",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1106,
																		"src": "38173:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$286",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2045,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 218,
																	"src": "38173:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 2048,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38173:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2049,
															"nodeType": "ExpressionStatement",
															"src": "38173:25:0"
														}
													]
												}
											}
										]
									},
									"id": 2061,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDRGTransfer",
									"nameLocation": "38014:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2025,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "38038:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2061,
												"src": "38030:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2024,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38030:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2027,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "38051:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2061,
												"src": "38043:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38043:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38029:30:0"
									},
									"returnParameters": {
										"id": 2029,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38069:0:0"
									},
									"scope": 2086,
									"src": "38005:271:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2072,
										"nodeType": "Block",
										"src": "38342:37:0",
										"statements": [
											{
												"expression": {
													"id": 2070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2068,
														"name": "devaddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1108,
														"src": "38353:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2069,
														"name": "_devaddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2063,
														"src": "38363:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "38353:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2071,
												"nodeType": "ExpressionStatement",
												"src": "38353:18:0"
											}
										]
									},
									"functionSelector": "d0d41fe1",
									"id": 2073,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2066,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2065,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "38332:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "38332:9:0"
										}
									],
									"name": "setDevAddress",
									"nameLocation": "38293:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "_devaddr",
												"nameLocation": "38315:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2073,
												"src": "38307:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38307:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38306:18:0"
									},
									"returnParameters": {
										"id": 2067,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38342:0:0"
									},
									"scope": 2086,
									"src": "38284:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2084,
										"nodeType": "Block",
										"src": "38450:42:0",
										"statements": [
											{
												"expression": {
													"id": 2082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2080,
														"name": "DRGPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "38461:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2081,
														"name": "newAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2075,
														"src": "38475:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "38461:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2083,
												"nodeType": "ExpressionStatement",
												"src": "38461:23:0"
											}
										]
									},
									"functionSelector": "0fe7ea17",
									"id": 2085,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2078,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2077,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "38440:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "38440:9:0"
										}
									],
									"name": "updateDRGPerBlock",
									"nameLocation": "38396:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2075,
												"mutability": "mutable",
												"name": "newAmount",
												"nameLocation": "38422:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2085,
												"src": "38414:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38414:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38413:19:0"
									},
									"returnParameters": {
										"id": 2079,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38450:0:0"
									},
									"scope": 2086,
									"src": "38387:105:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2087,
							"src": "28007:10488:0",
							"usedErrors": []
						}
					],
					"src": "173:38322:0"
				},
				"id": 0
			}
		}
	}
}
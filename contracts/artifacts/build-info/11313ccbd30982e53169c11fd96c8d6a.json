{
	"id": "11313ccbd30982e53169c11fd96c8d6a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/LpPrice.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function token0() external view returns (address);\r\n\r\n    function token1() external view returns (address);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n}\r\n\r\ninterface Router {\r\n    function getAmountsOut(uint amountIn, address[] memory path) external\r\n        view\r\n        returns (uint[] memory amounts);\r\n}\r\n\r\ncontract LpUtils {\r\n    address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd;\r\n    address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7;\r\n    uint256 amount = 1000000000000000000;\r\n\r\n    function price(Router routerAddress, address token) internal view returns(uint){\r\n        address[] memory path = new address[](3);\r\n        path[0] = token;\r\n        path[1] = WBNB;\r\n        path[2] = BUSD;\r\n        return routerAddress.getAmountsOut(amount,path)[2];\r\n    }\r\n\r\n    function CalcLpPrice(IERC20 lpAddress, Router routerAddress, address busd) external view returns(uint256){\r\n        return ((lpAddress.balanceOf(lpAddress.token0())*price(routerAddress,lpAddress.token0())) );\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/LpPrice.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LpPrice.sol\":60:8334  library Address {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LpPrice.sol\":60:8334  library Address {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d0db1c4738f9f35a05dc519dab0bfde5f03997c5eb3e480e93f2a608b8f85f9464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d0db1c4738f9f35a05dc519dab0bfde5f03997c5eb3e480e93f2a608b8f85f9464736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 0xDB SHR SELFBALANCE CODESIZE 0xF9 RETURN GAS SDIV 0xDC MLOAD SWAP14 0xAB SIGNEXTEND REVERT 0xE5 CREATE CODECOPY SWAP8 0xC5 0xEB RETURNDATACOPY BASEFEE 0xE SWAP4 CALLCODE 0xA6 ADDMOD 0xB8 0xF8 0x5F SWAP5 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "60:8274:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d0db1c4738f9f35a05dc519dab0bfde5f03997c5eb3e480e93f2a608b8f85f9464736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 0xDB SHR SELFBALANCE CODESIZE 0xF9 RETURN GAS SDIV 0xDC MLOAD SWAP14 0xAB SIGNEXTEND REVERT 0xE5 CREATE CODECOPY SWAP8 0xC5 0xEB RETURNDATACOPY BASEFEE 0xE SWAP4 CALLCODE 0xA6 ADDMOD 0xB8 0xF8 0x5F SWAP5 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "60:8274:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d0db1c4738f9f35a05dc519dab0bfde5f03997c5eb3e480e93f2a608b8f85f9464736f6c63430008070033",
									".code": [
										{
											"begin": 60,
											"end": 8334,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0x6a0c2d1f43bb372d5bc93710958ce457ab68c96ce0543a4ce9661a64639b4b73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c70ac9a67e2c902833613f8e885efd0d5da964c1e00f623eee9f5e23575e0f9a\",\"dweb:/ipfs/QmZudRw8iRnVYLaiLo5yaJcRXZsuLwMnRGvkSmFcZvCsXB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0x6a0c2d1f43bb372d5bc93710958ce457ab68c96ce0543a4ce9661a64639b4b73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c70ac9a67e2c902833613f8e885efd0d5da964c1e00f623eee9f5e23575e0f9a\",\"dweb:/ipfs/QmZudRw8iRnVYLaiLo5yaJcRXZsuLwMnRGvkSmFcZvCsXB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"LpUtils": {
					"abi": [
						{
							"inputs": [],
							"name": "BUSD",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "lpAddress",
									"type": "address"
								},
								{
									"internalType": "contract Router",
									"name": "routerAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "busd",
									"type": "address"
								}
							],
							"name": "CalcLpPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WBNB",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LpPrice.sol\":8846:9558  contract LpUtils {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/LpPrice.sol\":8892:8934  0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n  0xae13d989dac2f0debff460ac112a837c89baa7cd\n    /* \"contracts/LpPrice.sol\":8870:8934  address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/LpPrice.sol\":8963:9005  0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n  0x78867bbeef44f2326bf8ddd1941a4439382ef2a7\n    /* \"contracts/LpPrice.sol\":8941:9005  address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n  0x01\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/LpPrice.sol\":9029:9048  1000000000000000000 */\n  0x0de0b6b3a7640000\n    /* \"contracts/LpPrice.sol\":9012:9048  uint256 amount = 1000000000000000000 */\n  0x02\n  sstore\n    /* \"contracts/LpPrice.sol\":8846:9558  contract LpUtils {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LpPrice.sol\":8846:9558  contract LpUtils {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x20ae0b6d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x484f4ea9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8dd95002\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/LpPrice.sol\":9340:9555  function CalcLpPrice(IERC20 lpAddress, Router routerAddress, address busd) external view returns(uint256){\r... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":8941:9005  address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":8870:8934  address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n    tag_5:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":9340:9555  function CalcLpPrice(IERC20 lpAddress, Router routerAddress, address busd) external view returns(uint256){\r... */\n    tag_9:\n        /* \"contracts/LpPrice.sol\":9437:9444  uint256 */\n      0x00\n        /* \"contracts/LpPrice.sol\":9505:9544  price(routerAddress,lpAddress.token0()) */\n      tag_20\n        /* \"contracts/LpPrice.sol\":9511:9524  routerAddress */\n      dup4\n        /* \"contracts/LpPrice.sol\":9525:9534  lpAddress */\n      dup6\n        /* \"contracts/LpPrice.sol\":9525:9541  lpAddress.token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0dfe1681\n        /* \"contracts/LpPrice.sol\":9525:9543  lpAddress.token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_23\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_23:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n        /* \"contracts/LpPrice.sol\":9505:9510  price */\n      tag_26\n        /* \"contracts/LpPrice.sol\":9505:9544  price(routerAddress,lpAddress.token0()) */\n      jump\t// in\n    tag_20:\n        /* \"contracts/LpPrice.sol\":9465:9474  lpAddress */\n      dup5\n        /* \"contracts/LpPrice.sol\":9465:9484  lpAddress.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/LpPrice.sol\":9485:9494  lpAddress */\n      dup7\n        /* \"contracts/LpPrice.sol\":9485:9501  lpAddress.token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0dfe1681\n        /* \"contracts/LpPrice.sol\":9485:9503  lpAddress.token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_29\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_29:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_30:\n        /* \"contracts/LpPrice.sol\":9465:9504  lpAddress.balanceOf(lpAddress.token0()) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_31\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_31:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_34\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_34:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n        /* \"contracts/LpPrice.sol\":9465:9544  lpAddress.balanceOf(lpAddress.token0())*price(routerAddress,lpAddress.token0()) */\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n        /* \"contracts/LpPrice.sol\":9456:9547  return ((lpAddress.balanceOf(lpAddress.token0())*price(routerAddress,lpAddress.token0())) ) */\n      swap1\n      pop\n        /* \"contracts/LpPrice.sol\":9340:9555  function CalcLpPrice(IERC20 lpAddress, Router routerAddress, address busd) external view returns(uint256){\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":8941:9005  address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n    tag_13:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":8870:8934  address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n    tag_17:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":9057:9332  function price(Router routerAddress, address token) internal view returns(uint){\r... */\n    tag_26:\n        /* \"contracts/LpPrice.sol\":9131:9135  uint */\n      0x00\n        /* \"contracts/LpPrice.sol\":9147:9168  address[] memory path */\n      dup1\n        /* \"contracts/LpPrice.sol\":9185:9186  3 */\n      0x03\n        /* \"contracts/LpPrice.sol\":9171:9187  new address[](3) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_40\n      jumpi\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n    tag_40:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_43\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_43:\n      pop\n        /* \"contracts/LpPrice.sol\":9147:9187  address[] memory path = new address[](3) */\n      swap1\n      pop\n        /* \"contracts/LpPrice.sol\":9208:9213  token */\n      dup3\n        /* \"contracts/LpPrice.sol\":9198:9202  path */\n      dup2\n        /* \"contracts/LpPrice.sol\":9203:9204  0 */\n      0x00\n        /* \"contracts/LpPrice.sol\":9198:9205  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_44\n      jumpi\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n    tag_44:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/LpPrice.sol\":9198:9213  path[0] = token */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":9234:9238  WBNB */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LpPrice.sol\":9224:9228  path */\n      dup2\n        /* \"contracts/LpPrice.sol\":9229:9230  1 */\n      0x01\n        /* \"contracts/LpPrice.sol\":9224:9231  path[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_47\n      jumpi\n      tag_48\n      tag_46\n      jump\t// in\n    tag_48:\n    tag_47:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/LpPrice.sol\":9224:9238  path[1] = WBNB */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":9259:9263  BUSD */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LpPrice.sol\":9249:9253  path */\n      dup2\n        /* \"contracts/LpPrice.sol\":9254:9255  2 */\n      0x02\n        /* \"contracts/LpPrice.sol\":9249:9256  path[2] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_49\n      jumpi\n      tag_50\n      tag_46\n      jump\t// in\n    tag_50:\n    tag_49:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/LpPrice.sol\":9249:9263  path[2] = BUSD */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":9281:9294  routerAddress */\n      dup4\n        /* \"contracts/LpPrice.sol\":9281:9308  routerAddress.getAmountsOut */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd06ca61f\n        /* \"contracts/LpPrice.sol\":9309:9315  amount */\n      sload(0x02)\n        /* \"contracts/LpPrice.sol\":9316:9320  path */\n      dup4\n        /* \"contracts/LpPrice.sol\":9281:9321  routerAddress.getAmountsOut(amount,path) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_51\n      swap3\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_55\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_55:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n        /* \"contracts/LpPrice.sol\":9322:9323  2 */\n      0x02\n        /* \"contracts/LpPrice.sol\":9281:9324  routerAddress.getAmountsOut(amount,path)[2] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_58\n      jumpi\n      tag_59\n      tag_46\n      jump\t// in\n    tag_59:\n    tag_58:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/LpPrice.sol\":9274:9324  return routerAddress.getAmountsOut(amount,path)[2] */\n      swap2\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":9057:9332  function price(Router routerAddress, address token) internal view returns(uint){\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24:768   */\n    tag_61:\n        /* \"#utility.yul\":131:136   */\n      0x00\n        /* \"#utility.yul\":156:237   */\n      tag_63\n        /* \"#utility.yul\":172:236   */\n      tag_64\n        /* \"#utility.yul\":229:235   */\n      dup5\n        /* \"#utility.yul\":172:236   */\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":156:237   */\n      tag_66\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":147:237   */\n      swap1\n      pop\n        /* \"#utility.yul\":257:262   */\n      dup1\n        /* \"#utility.yul\":286:292   */\n      dup4\n        /* \"#utility.yul\":279:284   */\n      dup3\n        /* \"#utility.yul\":272:293   */\n      mstore\n        /* \"#utility.yul\":320:324   */\n      0x20\n        /* \"#utility.yul\":313:318   */\n      dup3\n        /* \"#utility.yul\":309:325   */\n      add\n        /* \"#utility.yul\":302:325   */\n      swap1\n      pop\n        /* \"#utility.yul\":346:352   */\n      dup3\n        /* \"#utility.yul\":396:399   */\n      dup6\n        /* \"#utility.yul\":388:392   */\n      0x20\n        /* \"#utility.yul\":380:386   */\n      dup7\n        /* \"#utility.yul\":376:393   */\n      mul\n        /* \"#utility.yul\":371:374   */\n      dup3\n        /* \"#utility.yul\":367:394   */\n      add\n        /* \"#utility.yul\":364:400   */\n      gt\n        /* \"#utility.yul\":361:504   */\n      iszero\n      tag_67\n      jumpi\n        /* \"#utility.yul\":415:494   */\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":361:504   */\n    tag_67:\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":513:762   */\n    tag_70:\n        /* \"#utility.yul\":538:544   */\n      dup6\n        /* \"#utility.yul\":535:536   */\n      dup2\n        /* \"#utility.yul\":532:545   */\n      lt\n        /* \"#utility.yul\":513:762   */\n      iszero\n      tag_72\n      jumpi\n        /* \"#utility.yul\":606:609   */\n      dup2\n        /* \"#utility.yul\":635:683   */\n      tag_73\n        /* \"#utility.yul\":679:682   */\n      dup9\n        /* \"#utility.yul\":667:677   */\n      dup3\n        /* \"#utility.yul\":635:683   */\n      tag_74\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":630:633   */\n      dup5\n        /* \"#utility.yul\":623:684   */\n      mstore\n        /* \"#utility.yul\":713:717   */\n      0x20\n        /* \"#utility.yul\":708:711   */\n      dup5\n        /* \"#utility.yul\":704:718   */\n      add\n        /* \"#utility.yul\":697:718   */\n      swap4\n      pop\n        /* \"#utility.yul\":747:751   */\n      0x20\n        /* \"#utility.yul\":742:745   */\n      dup4\n        /* \"#utility.yul\":738:752   */\n      add\n        /* \"#utility.yul\":731:752   */\n      swap3\n      pop\n        /* \"#utility.yul\":573:762   */\n      pop\n        /* \"#utility.yul\":560:561   */\n      0x01\n        /* \"#utility.yul\":557:558   */\n      dup2\n        /* \"#utility.yul\":553:562   */\n      add\n        /* \"#utility.yul\":548:562   */\n      swap1\n      pop\n        /* \"#utility.yul\":513:762   */\n      jump(tag_70)\n    tag_72:\n        /* \"#utility.yul\":517:531   */\n      pop\n        /* \"#utility.yul\":137:768   */\n      pop\n      pop\n        /* \"#utility.yul\":24:768   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":774:913   */\n    tag_75:\n        /* \"#utility.yul\":820:825   */\n      0x00\n        /* \"#utility.yul\":858:864   */\n      dup2\n        /* \"#utility.yul\":845:865   */\n      calldataload\n        /* \"#utility.yul\":836:865   */\n      swap1\n      pop\n        /* \"#utility.yul\":874:907   */\n      tag_77\n        /* \"#utility.yul\":901:906   */\n      dup2\n        /* \"#utility.yul\":874:907   */\n      tag_78\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":774:913   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":919:1062   */\n    tag_79:\n        /* \"#utility.yul\":976:981   */\n      0x00\n        /* \"#utility.yul\":1007:1013   */\n      dup2\n        /* \"#utility.yul\":1001:1014   */\n      mload\n        /* \"#utility.yul\":992:1014   */\n      swap1\n      pop\n        /* \"#utility.yul\":1023:1056   */\n      tag_81\n        /* \"#utility.yul\":1050:1055   */\n      dup2\n        /* \"#utility.yul\":1023:1056   */\n      tag_78\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":919:1062   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1085:1470   */\n    tag_82:\n        /* \"#utility.yul\":1167:1172   */\n      0x00\n        /* \"#utility.yul\":1216:1219   */\n      dup3\n        /* \"#utility.yul\":1209:1213   */\n      0x1f\n        /* \"#utility.yul\":1201:1207   */\n      dup4\n        /* \"#utility.yul\":1197:1214   */\n      add\n        /* \"#utility.yul\":1193:1220   */\n      slt\n        /* \"#utility.yul\":1183:1305   */\n      tag_84\n      jumpi\n        /* \"#utility.yul\":1224:1303   */\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":1183:1305   */\n    tag_84:\n        /* \"#utility.yul\":1334:1340   */\n      dup2\n        /* \"#utility.yul\":1328:1341   */\n      mload\n        /* \"#utility.yul\":1359:1464   */\n      tag_87\n        /* \"#utility.yul\":1460:1463   */\n      dup5\n        /* \"#utility.yul\":1452:1458   */\n      dup3\n        /* \"#utility.yul\":1445:1449   */\n      0x20\n        /* \"#utility.yul\":1437:1443   */\n      dup7\n        /* \"#utility.yul\":1433:1450   */\n      add\n        /* \"#utility.yul\":1359:1464   */\n      tag_61\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":1350:1464   */\n      swap2\n      pop\n        /* \"#utility.yul\":1173:1470   */\n      pop\n        /* \"#utility.yul\":1085:1470   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1476:1643   */\n    tag_88:\n        /* \"#utility.yul\":1536:1541   */\n      0x00\n        /* \"#utility.yul\":1574:1580   */\n      dup2\n        /* \"#utility.yul\":1561:1581   */\n      calldataload\n        /* \"#utility.yul\":1552:1581   */\n      swap1\n      pop\n        /* \"#utility.yul\":1590:1637   */\n      tag_90\n        /* \"#utility.yul\":1631:1636   */\n      dup2\n        /* \"#utility.yul\":1590:1637   */\n      tag_91\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":1476:1643   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1649:1816   */\n    tag_92:\n        /* \"#utility.yul\":1709:1714   */\n      0x00\n        /* \"#utility.yul\":1747:1753   */\n      dup2\n        /* \"#utility.yul\":1734:1754   */\n      calldataload\n        /* \"#utility.yul\":1725:1754   */\n      swap1\n      pop\n        /* \"#utility.yul\":1763:1810   */\n      tag_94\n        /* \"#utility.yul\":1804:1809   */\n      dup2\n        /* \"#utility.yul\":1763:1810   */\n      tag_95\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":1649:1816   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1822:1965   */\n    tag_74:\n        /* \"#utility.yul\":1879:1884   */\n      0x00\n        /* \"#utility.yul\":1910:1916   */\n      dup2\n        /* \"#utility.yul\":1904:1917   */\n      mload\n        /* \"#utility.yul\":1895:1917   */\n      swap1\n      pop\n        /* \"#utility.yul\":1926:1959   */\n      tag_97\n        /* \"#utility.yul\":1953:1958   */\n      dup2\n        /* \"#utility.yul\":1926:1959   */\n      tag_98\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":1822:1965   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1971:2322   */\n    tag_25:\n        /* \"#utility.yul\":2041:2047   */\n      0x00\n        /* \"#utility.yul\":2090:2092   */\n      0x20\n        /* \"#utility.yul\":2078:2087   */\n      dup3\n        /* \"#utility.yul\":2069:2076   */\n      dup5\n        /* \"#utility.yul\":2065:2088   */\n      sub\n        /* \"#utility.yul\":2061:2093   */\n      slt\n        /* \"#utility.yul\":2058:2177   */\n      iszero\n      tag_100\n      jumpi\n        /* \"#utility.yul\":2096:2175   */\n      tag_101\n      tag_102\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":2058:2177   */\n    tag_100:\n        /* \"#utility.yul\":2216:2217   */\n      0x00\n        /* \"#utility.yul\":2241:2305   */\n      tag_103\n        /* \"#utility.yul\":2297:2304   */\n      dup5\n        /* \"#utility.yul\":2288:2294   */\n      dup3\n        /* \"#utility.yul\":2277:2286   */\n      dup6\n        /* \"#utility.yul\":2273:2295   */\n      add\n        /* \"#utility.yul\":2241:2305   */\n      tag_79\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":2231:2305   */\n      swap2\n      pop\n        /* \"#utility.yul\":2187:2315   */\n      pop\n        /* \"#utility.yul\":1971:2322   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2328:2882   */\n    tag_57:\n        /* \"#utility.yul\":2423:2429   */\n      0x00\n        /* \"#utility.yul\":2472:2474   */\n      0x20\n        /* \"#utility.yul\":2460:2469   */\n      dup3\n        /* \"#utility.yul\":2451:2458   */\n      dup5\n        /* \"#utility.yul\":2447:2470   */\n      sub\n        /* \"#utility.yul\":2443:2475   */\n      slt\n        /* \"#utility.yul\":2440:2559   */\n      iszero\n      tag_105\n      jumpi\n        /* \"#utility.yul\":2478:2557   */\n      tag_106\n      tag_102\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":2440:2559   */\n    tag_105:\n        /* \"#utility.yul\":2619:2620   */\n      0x00\n        /* \"#utility.yul\":2608:2617   */\n      dup3\n        /* \"#utility.yul\":2604:2621   */\n      add\n        /* \"#utility.yul\":2598:2622   */\n      mload\n        /* \"#utility.yul\":2649:2667   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2641:2647   */\n      dup2\n        /* \"#utility.yul\":2638:2668   */\n      gt\n        /* \"#utility.yul\":2635:2752   */\n      iszero\n      tag_107\n      jumpi\n        /* \"#utility.yul\":2671:2750   */\n      tag_108\n      tag_109\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":2635:2752   */\n    tag_107:\n        /* \"#utility.yul\":2776:2865   */\n      tag_110\n        /* \"#utility.yul\":2857:2864   */\n      dup5\n        /* \"#utility.yul\":2848:2854   */\n      dup3\n        /* \"#utility.yul\":2837:2846   */\n      dup6\n        /* \"#utility.yul\":2833:2855   */\n      add\n        /* \"#utility.yul\":2776:2865   */\n      tag_82\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":2766:2865   */\n      swap2\n      pop\n        /* \"#utility.yul\":2569:2875   */\n      pop\n        /* \"#utility.yul\":2328:2882   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2888:3563   */\n    tag_8:\n        /* \"#utility.yul\":2993:2999   */\n      0x00\n        /* \"#utility.yul\":3001:3007   */\n      dup1\n        /* \"#utility.yul\":3009:3015   */\n      0x00\n        /* \"#utility.yul\":3058:3060   */\n      0x60\n        /* \"#utility.yul\":3046:3055   */\n      dup5\n        /* \"#utility.yul\":3037:3044   */\n      dup7\n        /* \"#utility.yul\":3033:3056   */\n      sub\n        /* \"#utility.yul\":3029:3061   */\n      slt\n        /* \"#utility.yul\":3026:3145   */\n      iszero\n      tag_112\n      jumpi\n        /* \"#utility.yul\":3064:3143   */\n      tag_113\n      tag_102\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":3026:3145   */\n    tag_112:\n        /* \"#utility.yul\":3184:3185   */\n      0x00\n        /* \"#utility.yul\":3209:3276   */\n      tag_114\n        /* \"#utility.yul\":3268:3275   */\n      dup7\n        /* \"#utility.yul\":3259:3265   */\n      dup3\n        /* \"#utility.yul\":3248:3257   */\n      dup8\n        /* \"#utility.yul\":3244:3266   */\n      add\n        /* \"#utility.yul\":3209:3276   */\n      tag_88\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":3199:3276   */\n      swap4\n      pop\n        /* \"#utility.yul\":3155:3286   */\n      pop\n        /* \"#utility.yul\":3325:3327   */\n      0x20\n        /* \"#utility.yul\":3351:3418   */\n      tag_115\n        /* \"#utility.yul\":3410:3417   */\n      dup7\n        /* \"#utility.yul\":3401:3407   */\n      dup3\n        /* \"#utility.yul\":3390:3399   */\n      dup8\n        /* \"#utility.yul\":3386:3408   */\n      add\n        /* \"#utility.yul\":3351:3418   */\n      tag_92\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":3341:3418   */\n      swap3\n      pop\n        /* \"#utility.yul\":3296:3428   */\n      pop\n        /* \"#utility.yul\":3467:3469   */\n      0x40\n        /* \"#utility.yul\":3493:3546   */\n      tag_116\n        /* \"#utility.yul\":3538:3545   */\n      dup7\n        /* \"#utility.yul\":3529:3535   */\n      dup3\n        /* \"#utility.yul\":3518:3527   */\n      dup8\n        /* \"#utility.yul\":3514:3536   */\n      add\n        /* \"#utility.yul\":3493:3546   */\n      tag_75\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":3483:3546   */\n      swap2\n      pop\n        /* \"#utility.yul\":3438:3556   */\n      pop\n        /* \"#utility.yul\":2888:3563   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3569:3920   */\n    tag_36:\n        /* \"#utility.yul\":3639:3645   */\n      0x00\n        /* \"#utility.yul\":3688:3690   */\n      0x20\n        /* \"#utility.yul\":3676:3685   */\n      dup3\n        /* \"#utility.yul\":3667:3674   */\n      dup5\n        /* \"#utility.yul\":3663:3686   */\n      sub\n        /* \"#utility.yul\":3659:3691   */\n      slt\n        /* \"#utility.yul\":3656:3775   */\n      iszero\n      tag_118\n      jumpi\n        /* \"#utility.yul\":3694:3773   */\n      tag_119\n      tag_102\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":3656:3775   */\n    tag_118:\n        /* \"#utility.yul\":3814:3815   */\n      0x00\n        /* \"#utility.yul\":3839:3903   */\n      tag_120\n        /* \"#utility.yul\":3895:3902   */\n      dup5\n        /* \"#utility.yul\":3886:3892   */\n      dup3\n        /* \"#utility.yul\":3875:3884   */\n      dup6\n        /* \"#utility.yul\":3871:3893   */\n      add\n        /* \"#utility.yul\":3839:3903   */\n      tag_74\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":3829:3903   */\n      swap2\n      pop\n        /* \"#utility.yul\":3785:3913   */\n      pop\n        /* \"#utility.yul\":3569:3920   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3926:4105   */\n    tag_121:\n        /* \"#utility.yul\":3995:4005   */\n      0x00\n        /* \"#utility.yul\":4016:4062   */\n      tag_123\n        /* \"#utility.yul\":4058:4061   */\n      dup4\n        /* \"#utility.yul\":4050:4056   */\n      dup4\n        /* \"#utility.yul\":4016:4062   */\n      tag_124\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":4094:4098   */\n      0x20\n        /* \"#utility.yul\":4089:4092   */\n      dup4\n        /* \"#utility.yul\":4085:4099   */\n      add\n        /* \"#utility.yul\":4071:4099   */\n      swap1\n      pop\n        /* \"#utility.yul\":3926:4105   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4111:4219   */\n    tag_124:\n        /* \"#utility.yul\":4188:4212   */\n      tag_126\n        /* \"#utility.yul\":4206:4211   */\n      dup2\n        /* \"#utility.yul\":4188:4212   */\n      tag_127\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":4183:4186   */\n      dup3\n        /* \"#utility.yul\":4176:4213   */\n      mstore\n        /* \"#utility.yul\":4111:4219   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4225:4343   */\n    tag_128:\n        /* \"#utility.yul\":4312:4336   */\n      tag_130\n        /* \"#utility.yul\":4330:4335   */\n      dup2\n        /* \"#utility.yul\":4312:4336   */\n      tag_127\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":4307:4310   */\n      dup3\n        /* \"#utility.yul\":4300:4337   */\n      mstore\n        /* \"#utility.yul\":4225:4343   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4379:5111   */\n    tag_131:\n        /* \"#utility.yul\":4498:4501   */\n      0x00\n        /* \"#utility.yul\":4527:4581   */\n      tag_133\n        /* \"#utility.yul\":4575:4580   */\n      dup3\n        /* \"#utility.yul\":4527:4581   */\n      tag_134\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":4597:4683   */\n      tag_135\n        /* \"#utility.yul\":4676:4682   */\n      dup2\n        /* \"#utility.yul\":4671:4674   */\n      dup6\n        /* \"#utility.yul\":4597:4683   */\n      tag_136\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":4590:4683   */\n      swap4\n      pop\n        /* \"#utility.yul\":4707:4763   */\n      tag_137\n        /* \"#utility.yul\":4757:4762   */\n      dup4\n        /* \"#utility.yul\":4707:4763   */\n      tag_138\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":4786:4793   */\n      dup1\n        /* \"#utility.yul\":4817:4818   */\n      0x00\n        /* \"#utility.yul\":4802:5086   */\n    tag_139:\n        /* \"#utility.yul\":4827:4833   */\n      dup4\n        /* \"#utility.yul\":4824:4825   */\n      dup2\n        /* \"#utility.yul\":4821:4834   */\n      lt\n        /* \"#utility.yul\":4802:5086   */\n      iszero\n      tag_141\n      jumpi\n        /* \"#utility.yul\":4903:4909   */\n      dup2\n        /* \"#utility.yul\":4897:4910   */\n      mload\n        /* \"#utility.yul\":4930:4993   */\n      tag_142\n        /* \"#utility.yul\":4989:4992   */\n      dup9\n        /* \"#utility.yul\":4974:4987   */\n      dup3\n        /* \"#utility.yul\":4930:4993   */\n      tag_121\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":4923:4993   */\n      swap8\n      pop\n        /* \"#utility.yul\":5016:5076   */\n      tag_143\n        /* \"#utility.yul\":5069:5075   */\n      dup4\n        /* \"#utility.yul\":5016:5076   */\n      tag_144\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":5006:5076   */\n      swap3\n      pop\n        /* \"#utility.yul\":4862:5086   */\n      pop\n        /* \"#utility.yul\":4849:4850   */\n      0x01\n        /* \"#utility.yul\":4846:4847   */\n      dup2\n        /* \"#utility.yul\":4842:4851   */\n      add\n        /* \"#utility.yul\":4837:4851   */\n      swap1\n      pop\n        /* \"#utility.yul\":4802:5086   */\n      jump(tag_139)\n    tag_141:\n        /* \"#utility.yul\":4806:4820   */\n      pop\n        /* \"#utility.yul\":5102:5105   */\n      dup6\n        /* \"#utility.yul\":5095:5105   */\n      swap4\n      pop\n        /* \"#utility.yul\":4503:5111   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4379:5111   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5117:5235   */\n    tag_145:\n        /* \"#utility.yul\":5204:5228   */\n      tag_147\n        /* \"#utility.yul\":5222:5227   */\n      dup2\n        /* \"#utility.yul\":5204:5228   */\n      tag_148\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":5199:5202   */\n      dup3\n        /* \"#utility.yul\":5192:5229   */\n      mstore\n        /* \"#utility.yul\":5117:5235   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5241:5463   */\n    tag_15:\n        /* \"#utility.yul\":5334:5338   */\n      0x00\n        /* \"#utility.yul\":5372:5374   */\n      0x20\n        /* \"#utility.yul\":5361:5370   */\n      dup3\n        /* \"#utility.yul\":5357:5375   */\n      add\n        /* \"#utility.yul\":5349:5375   */\n      swap1\n      pop\n        /* \"#utility.yul\":5385:5456   */\n      tag_150\n        /* \"#utility.yul\":5453:5454   */\n      0x00\n        /* \"#utility.yul\":5442:5451   */\n      dup4\n        /* \"#utility.yul\":5438:5455   */\n      add\n        /* \"#utility.yul\":5429:5435   */\n      dup5\n        /* \"#utility.yul\":5385:5456   */\n      tag_128\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":5241:5463   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5469:5691   */\n    tag_11:\n        /* \"#utility.yul\":5562:5566   */\n      0x00\n        /* \"#utility.yul\":5600:5602   */\n      0x20\n        /* \"#utility.yul\":5589:5598   */\n      dup3\n        /* \"#utility.yul\":5585:5603   */\n      add\n        /* \"#utility.yul\":5577:5603   */\n      swap1\n      pop\n        /* \"#utility.yul\":5613:5684   */\n      tag_152\n        /* \"#utility.yul\":5681:5682   */\n      0x00\n        /* \"#utility.yul\":5670:5679   */\n      dup4\n        /* \"#utility.yul\":5666:5683   */\n      add\n        /* \"#utility.yul\":5657:5663   */\n      dup5\n        /* \"#utility.yul\":5613:5684   */\n      tag_145\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":5469:5691   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5697:6180   */\n    tag_52:\n        /* \"#utility.yul\":5868:5872   */\n      0x00\n        /* \"#utility.yul\":5906:5908   */\n      0x40\n        /* \"#utility.yul\":5895:5904   */\n      dup3\n        /* \"#utility.yul\":5891:5909   */\n      add\n        /* \"#utility.yul\":5883:5909   */\n      swap1\n      pop\n        /* \"#utility.yul\":5919:5990   */\n      tag_154\n        /* \"#utility.yul\":5987:5988   */\n      0x00\n        /* \"#utility.yul\":5976:5985   */\n      dup4\n        /* \"#utility.yul\":5972:5989   */\n      add\n        /* \"#utility.yul\":5963:5969   */\n      dup6\n        /* \"#utility.yul\":5919:5990   */\n      tag_145\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":6037:6046   */\n      dup2\n        /* \"#utility.yul\":6031:6035   */\n      dup2\n        /* \"#utility.yul\":6027:6047   */\n      sub\n        /* \"#utility.yul\":6022:6024   */\n      0x20\n        /* \"#utility.yul\":6011:6020   */\n      dup4\n        /* \"#utility.yul\":6007:6025   */\n      add\n        /* \"#utility.yul\":6000:6048   */\n      mstore\n        /* \"#utility.yul\":6065:6173   */\n      tag_155\n        /* \"#utility.yul\":6168:6172   */\n      dup2\n        /* \"#utility.yul\":6159:6165   */\n      dup5\n        /* \"#utility.yul\":6065:6173   */\n      tag_131\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":6057:6173   */\n      swap1\n      pop\n        /* \"#utility.yul\":5697:6180   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6186:6315   */\n    tag_66:\n        /* \"#utility.yul\":6220:6226   */\n      0x00\n        /* \"#utility.yul\":6247:6267   */\n      tag_157\n      tag_158\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":6237:6267   */\n      swap1\n      pop\n        /* \"#utility.yul\":6276:6309   */\n      tag_159\n        /* \"#utility.yul\":6304:6308   */\n      dup3\n        /* \"#utility.yul\":6296:6302   */\n      dup3\n        /* \"#utility.yul\":6276:6309   */\n      tag_160\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":6186:6315   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6321:6396   */\n    tag_158:\n        /* \"#utility.yul\":6354:6360   */\n      0x00\n        /* \"#utility.yul\":6387:6389   */\n      0x40\n        /* \"#utility.yul\":6381:6390   */\n      mload\n        /* \"#utility.yul\":6371:6390   */\n      swap1\n      pop\n        /* \"#utility.yul\":6321:6396   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":6402:6713   */\n    tag_65:\n        /* \"#utility.yul\":6479:6483   */\n      0x00\n        /* \"#utility.yul\":6569:6587   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6561:6567   */\n      dup3\n        /* \"#utility.yul\":6558:6588   */\n      gt\n        /* \"#utility.yul\":6555:6611   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":6591:6609   */\n      tag_164\n      tag_42\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":6555:6611   */\n    tag_163:\n        /* \"#utility.yul\":6641:6645   */\n      0x20\n        /* \"#utility.yul\":6633:6639   */\n      dup3\n        /* \"#utility.yul\":6629:6646   */\n      mul\n        /* \"#utility.yul\":6621:6646   */\n      swap1\n      pop\n        /* \"#utility.yul\":6701:6705   */\n      0x20\n        /* \"#utility.yul\":6695:6699   */\n      dup2\n        /* \"#utility.yul\":6691:6706   */\n      add\n        /* \"#utility.yul\":6683:6706   */\n      swap1\n      pop\n        /* \"#utility.yul\":6402:6713   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6719:6851   */\n    tag_138:\n        /* \"#utility.yul\":6786:6790   */\n      0x00\n        /* \"#utility.yul\":6809:6812   */\n      dup2\n        /* \"#utility.yul\":6801:6812   */\n      swap1\n      pop\n        /* \"#utility.yul\":6839:6843   */\n      0x20\n        /* \"#utility.yul\":6834:6837   */\n      dup3\n        /* \"#utility.yul\":6830:6844   */\n      add\n        /* \"#utility.yul\":6822:6844   */\n      swap1\n      pop\n        /* \"#utility.yul\":6719:6851   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6857:6971   */\n    tag_134:\n        /* \"#utility.yul\":6924:6930   */\n      0x00\n        /* \"#utility.yul\":6958:6963   */\n      dup2\n        /* \"#utility.yul\":6952:6964   */\n      mload\n        /* \"#utility.yul\":6942:6964   */\n      swap1\n      pop\n        /* \"#utility.yul\":6857:6971   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6977:7090   */\n    tag_144:\n        /* \"#utility.yul\":7047:7051   */\n      0x00\n        /* \"#utility.yul\":7079:7083   */\n      0x20\n        /* \"#utility.yul\":7074:7077   */\n      dup3\n        /* \"#utility.yul\":7070:7084   */\n      add\n        /* \"#utility.yul\":7062:7084   */\n      swap1\n      pop\n        /* \"#utility.yul\":6977:7090   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7096:7280   */\n    tag_136:\n        /* \"#utility.yul\":7195:7206   */\n      0x00\n        /* \"#utility.yul\":7229:7235   */\n      dup3\n        /* \"#utility.yul\":7224:7227   */\n      dup3\n        /* \"#utility.yul\":7217:7236   */\n      mstore\n        /* \"#utility.yul\":7269:7273   */\n      0x20\n        /* \"#utility.yul\":7264:7267   */\n      dup3\n        /* \"#utility.yul\":7260:7274   */\n      add\n        /* \"#utility.yul\":7245:7274   */\n      swap1\n      pop\n        /* \"#utility.yul\":7096:7280   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7286:7634   */\n    tag_38:\n        /* \"#utility.yul\":7326:7333   */\n      0x00\n        /* \"#utility.yul\":7349:7369   */\n      tag_170\n        /* \"#utility.yul\":7367:7368   */\n      dup3\n        /* \"#utility.yul\":7349:7369   */\n      tag_148\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":7344:7369   */\n      swap2\n      pop\n        /* \"#utility.yul\":7383:7403   */\n      tag_171\n        /* \"#utility.yul\":7401:7402   */\n      dup4\n        /* \"#utility.yul\":7383:7403   */\n      tag_148\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":7378:7403   */\n      swap3\n      pop\n        /* \"#utility.yul\":7571:7572   */\n      dup2\n        /* \"#utility.yul\":7503:7569   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7499:7573   */\n      div\n        /* \"#utility.yul\":7496:7497   */\n      dup4\n        /* \"#utility.yul\":7493:7574   */\n      gt\n        /* \"#utility.yul\":7488:7489   */\n      dup3\n        /* \"#utility.yul\":7481:7490   */\n      iszero\n        /* \"#utility.yul\":7474:7491   */\n      iszero\n        /* \"#utility.yul\":7470:7575   */\n      and\n        /* \"#utility.yul\":7467:7598   */\n      iszero\n      tag_172\n      jumpi\n        /* \"#utility.yul\":7578:7596   */\n      tag_173\n      tag_174\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":7467:7598   */\n    tag_172:\n        /* \"#utility.yul\":7626:7627   */\n      dup3\n        /* \"#utility.yul\":7623:7624   */\n      dup3\n        /* \"#utility.yul\":7619:7628   */\n      mul\n        /* \"#utility.yul\":7608:7628   */\n      swap1\n      pop\n        /* \"#utility.yul\":7286:7634   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7640:7736   */\n    tag_127:\n        /* \"#utility.yul\":7677:7684   */\n      0x00\n        /* \"#utility.yul\":7706:7730   */\n      tag_176\n        /* \"#utility.yul\":7724:7729   */\n      dup3\n        /* \"#utility.yul\":7706:7730   */\n      tag_177\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":7695:7730   */\n      swap1\n      pop\n        /* \"#utility.yul\":7640:7736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7742:7852   */\n    tag_178:\n        /* \"#utility.yul\":7793:7800   */\n      0x00\n        /* \"#utility.yul\":7822:7846   */\n      tag_180\n        /* \"#utility.yul\":7840:7845   */\n      dup3\n        /* \"#utility.yul\":7822:7846   */\n      tag_127\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":7811:7846   */\n      swap1\n      pop\n        /* \"#utility.yul\":7742:7852   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7858:7968   */\n    tag_181:\n        /* \"#utility.yul\":7909:7916   */\n      0x00\n        /* \"#utility.yul\":7938:7962   */\n      tag_183\n        /* \"#utility.yul\":7956:7961   */\n      dup3\n        /* \"#utility.yul\":7938:7962   */\n      tag_127\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":7927:7962   */\n      swap1\n      pop\n        /* \"#utility.yul\":7858:7968   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7974:8100   */\n    tag_177:\n        /* \"#utility.yul\":8011:8018   */\n      0x00\n        /* \"#utility.yul\":8051:8093   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":8044:8049   */\n      dup3\n        /* \"#utility.yul\":8040:8094   */\n      and\n        /* \"#utility.yul\":8029:8094   */\n      swap1\n      pop\n        /* \"#utility.yul\":7974:8100   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8106:8183   */\n    tag_148:\n        /* \"#utility.yul\":8143:8150   */\n      0x00\n        /* \"#utility.yul\":8172:8177   */\n      dup2\n        /* \"#utility.yul\":8161:8177   */\n      swap1\n      pop\n        /* \"#utility.yul\":8106:8183   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8189:8470   */\n    tag_160:\n        /* \"#utility.yul\":8272:8299   */\n      tag_187\n        /* \"#utility.yul\":8294:8298   */\n      dup3\n        /* \"#utility.yul\":8272:8299   */\n      tag_188\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":8264:8270   */\n      dup2\n        /* \"#utility.yul\":8260:8300   */\n      add\n        /* \"#utility.yul\":8402:8408   */\n      dup2\n        /* \"#utility.yul\":8390:8400   */\n      dup2\n        /* \"#utility.yul\":8387:8409   */\n      lt\n        /* \"#utility.yul\":8366:8384   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8354:8364   */\n      dup3\n        /* \"#utility.yul\":8351:8385   */\n      gt\n        /* \"#utility.yul\":8348:8410   */\n      or\n        /* \"#utility.yul\":8345:8433   */\n      iszero\n      tag_189\n      jumpi\n        /* \"#utility.yul\":8413:8431   */\n      tag_190\n      tag_42\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":8345:8433   */\n    tag_189:\n        /* \"#utility.yul\":8453:8463   */\n      dup1\n        /* \"#utility.yul\":8449:8451   */\n      0x40\n        /* \"#utility.yul\":8442:8464   */\n      mstore\n        /* \"#utility.yul\":8232:8470   */\n      pop\n        /* \"#utility.yul\":8189:8470   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8476:8656   */\n    tag_174:\n        /* \"#utility.yul\":8524:8601   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8521:8522   */\n      0x00\n        /* \"#utility.yul\":8514:8602   */\n      mstore\n        /* \"#utility.yul\":8621:8625   */\n      0x11\n        /* \"#utility.yul\":8618:8619   */\n      0x04\n        /* \"#utility.yul\":8611:8626   */\n      mstore\n        /* \"#utility.yul\":8645:8649   */\n      0x24\n        /* \"#utility.yul\":8642:8643   */\n      0x00\n        /* \"#utility.yul\":8635:8650   */\n      revert\n        /* \"#utility.yul\":8662:8842   */\n    tag_46:\n        /* \"#utility.yul\":8710:8787   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8707:8708   */\n      0x00\n        /* \"#utility.yul\":8700:8788   */\n      mstore\n        /* \"#utility.yul\":8807:8811   */\n      0x32\n        /* \"#utility.yul\":8804:8805   */\n      0x04\n        /* \"#utility.yul\":8797:8812   */\n      mstore\n        /* \"#utility.yul\":8831:8835   */\n      0x24\n        /* \"#utility.yul\":8828:8829   */\n      0x00\n        /* \"#utility.yul\":8821:8836   */\n      revert\n        /* \"#utility.yul\":8848:9028   */\n    tag_42:\n        /* \"#utility.yul\":8896:8973   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8893:8894   */\n      0x00\n        /* \"#utility.yul\":8886:8974   */\n      mstore\n        /* \"#utility.yul\":8993:8997   */\n      0x41\n        /* \"#utility.yul\":8990:8991   */\n      0x04\n        /* \"#utility.yul\":8983:8998   */\n      mstore\n        /* \"#utility.yul\":9017:9021   */\n      0x24\n        /* \"#utility.yul\":9014:9015   */\n      0x00\n        /* \"#utility.yul\":9007:9022   */\n      revert\n        /* \"#utility.yul\":9034:9151   */\n    tag_86:\n        /* \"#utility.yul\":9143:9144   */\n      0x00\n        /* \"#utility.yul\":9140:9141   */\n      dup1\n        /* \"#utility.yul\":9133:9145   */\n      revert\n        /* \"#utility.yul\":9157:9274   */\n    tag_69:\n        /* \"#utility.yul\":9266:9267   */\n      0x00\n        /* \"#utility.yul\":9263:9264   */\n      dup1\n        /* \"#utility.yul\":9256:9268   */\n      revert\n        /* \"#utility.yul\":9280:9397   */\n    tag_109:\n        /* \"#utility.yul\":9389:9390   */\n      0x00\n        /* \"#utility.yul\":9386:9387   */\n      dup1\n        /* \"#utility.yul\":9379:9391   */\n      revert\n        /* \"#utility.yul\":9403:9520   */\n    tag_102:\n        /* \"#utility.yul\":9512:9513   */\n      0x00\n        /* \"#utility.yul\":9509:9510   */\n      dup1\n        /* \"#utility.yul\":9502:9514   */\n      revert\n        /* \"#utility.yul\":9526:9628   */\n    tag_188:\n        /* \"#utility.yul\":9567:9573   */\n      0x00\n        /* \"#utility.yul\":9618:9620   */\n      0x1f\n        /* \"#utility.yul\":9614:9621   */\n      not\n        /* \"#utility.yul\":9609:9611   */\n      0x1f\n        /* \"#utility.yul\":9602:9607   */\n      dup4\n        /* \"#utility.yul\":9598:9612   */\n      add\n        /* \"#utility.yul\":9594:9622   */\n      and\n        /* \"#utility.yul\":9584:9622   */\n      swap1\n      pop\n        /* \"#utility.yul\":9526:9628   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9634:9756   */\n    tag_78:\n        /* \"#utility.yul\":9707:9731   */\n      tag_200\n        /* \"#utility.yul\":9725:9730   */\n      dup2\n        /* \"#utility.yul\":9707:9731   */\n      tag_127\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":9700:9705   */\n      dup2\n        /* \"#utility.yul\":9697:9732   */\n      eq\n        /* \"#utility.yul\":9687:9750   */\n      tag_201\n      jumpi\n        /* \"#utility.yul\":9746:9747   */\n      0x00\n        /* \"#utility.yul\":9743:9744   */\n      dup1\n        /* \"#utility.yul\":9736:9748   */\n      revert\n        /* \"#utility.yul\":9687:9750   */\n    tag_201:\n        /* \"#utility.yul\":9634:9756   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9762:9912   */\n    tag_91:\n        /* \"#utility.yul\":9849:9887   */\n      tag_203\n        /* \"#utility.yul\":9881:9886   */\n      dup2\n        /* \"#utility.yul\":9849:9887   */\n      tag_178\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":9842:9847   */\n      dup2\n        /* \"#utility.yul\":9839:9888   */\n      eq\n        /* \"#utility.yul\":9829:9906   */\n      tag_204\n      jumpi\n        /* \"#utility.yul\":9902:9903   */\n      0x00\n        /* \"#utility.yul\":9899:9900   */\n      dup1\n        /* \"#utility.yul\":9892:9904   */\n      revert\n        /* \"#utility.yul\":9829:9906   */\n    tag_204:\n        /* \"#utility.yul\":9762:9912   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9918:10068   */\n    tag_95:\n        /* \"#utility.yul\":10005:10043   */\n      tag_206\n        /* \"#utility.yul\":10037:10042   */\n      dup2\n        /* \"#utility.yul\":10005:10043   */\n      tag_181\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":9998:10003   */\n      dup2\n        /* \"#utility.yul\":9995:10044   */\n      eq\n        /* \"#utility.yul\":9985:10062   */\n      tag_207\n      jumpi\n        /* \"#utility.yul\":10058:10059   */\n      0x00\n        /* \"#utility.yul\":10055:10056   */\n      dup1\n        /* \"#utility.yul\":10048:10060   */\n      revert\n        /* \"#utility.yul\":9985:10062   */\n    tag_207:\n        /* \"#utility.yul\":9918:10068   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10074:10196   */\n    tag_98:\n        /* \"#utility.yul\":10147:10171   */\n      tag_209\n        /* \"#utility.yul\":10165:10170   */\n      dup2\n        /* \"#utility.yul\":10147:10171   */\n      tag_148\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":10140:10145   */\n      dup2\n        /* \"#utility.yul\":10137:10172   */\n      eq\n        /* \"#utility.yul\":10127:10190   */\n      tag_210\n      jumpi\n        /* \"#utility.yul\":10186:10187   */\n      0x00\n        /* \"#utility.yul\":10183:10184   */\n      dup1\n        /* \"#utility.yul\":10176:10188   */\n      revert\n        /* \"#utility.yul\":10127:10190   */\n    tag_210:\n        /* \"#utility.yul\":10074:10196   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122008ce865198629ba41f9ccf2fb5dce08bd9ae69d4e7205f5723284fdf802734a164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405273ae13d989dac2f0debff460ac112a837c89baa7cd6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507378867bbeef44f2326bf8ddd1941a4439382ef2a7600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550670de0b6b3a76400006002553480156100c557600080fd5b50610a91806100d56000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806320ae0b6d14610046578063484f4ea9146100765780638dd9500214610094575b600080fd5b610060600480360381019061005b919061064f565b6100b2565b60405161006d919061078d565b60405180910390f35b61007e610254565b60405161008b9190610772565b60405180910390f35b61009c61027a565b6040516100a99190610772565b60405180910390f35b600061013b838573ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156100fe57600080fd5b505afa158015610112573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013691906105d9565b61029e565b8473ffffffffffffffffffffffffffffffffffffffff166370a082318673ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561019d57600080fd5b505afa1580156101b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d591906105d9565b6040518263ffffffff1660e01b81526004016101f19190610772565b60206040518083038186803b15801561020957600080fd5b505afa15801561021d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024191906106a2565b61024b9190610862565b90509392505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600367ffffffffffffffff8111156102bc576102bb6109ab565b5b6040519080825280602002602001820160405280156102ea5781602001602082028036833780820191505090505b50905082816000815181106103025761030161097c565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816001815181106103715761037061097c565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816002815181106103e2576103e161097c565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508373ffffffffffffffffffffffffffffffffffffffff1663d06ca61f600254836040518363ffffffff1660e01b81526004016104599291906107a8565b60006040518083038186803b15801561047157600080fd5b505afa158015610485573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906104ae9190610606565b6002815181106104c1576104c061097c565b5b602002602001015191505092915050565b60006104e56104e0846107fd565b6107d8565b90508083825260208201905082856020860282011115610508576105076109df565b5b60005b85811015610538578161051e88826105c4565b84526020840193506020830192505060018101905061050b565b5050509392505050565b600081359050610551816109ff565b92915050565b600081519050610566816109ff565b92915050565b600082601f830112610581576105806109da565b5b81516105918482602086016104d2565b91505092915050565b6000813590506105a981610a16565b92915050565b6000813590506105be81610a2d565b92915050565b6000815190506105d381610a44565b92915050565b6000602082840312156105ef576105ee6109e9565b5b60006105fd84828501610557565b91505092915050565b60006020828403121561061c5761061b6109e9565b5b600082015167ffffffffffffffff81111561063a576106396109e4565b5b6106468482850161056c565b91505092915050565b600080600060608486031215610668576106676109e9565b5b60006106768682870161059a565b9350506020610687868287016105af565b925050604061069886828701610542565b9150509250925092565b6000602082840312156106b8576106b76109e9565b5b60006106c6848285016105c4565b91505092915050565b60006106db83836106e7565b60208301905092915050565b6106f0816108bc565b82525050565b6106ff816108bc565b82525050565b600061071082610839565b61071a8185610851565b935061072583610829565b8060005b8381101561075657815161073d88826106cf565b975061074883610844565b925050600181019050610729565b5085935050505092915050565b61076c81610912565b82525050565b600060208201905061078760008301846106f6565b92915050565b60006020820190506107a26000830184610763565b92915050565b60006040820190506107bd6000830185610763565b81810360208301526107cf8184610705565b90509392505050565b60006107e26107f3565b90506107ee828261091c565b919050565b6000604051905090565b600067ffffffffffffffff821115610818576108176109ab565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600061086d82610912565b915061087883610912565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156108b1576108b061094d565b5b828202905092915050565b60006108c7826108f2565b9050919050565b60006108d9826108bc565b9050919050565b60006108eb826108bc565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b610925826109ee565b810181811067ffffffffffffffff82111715610944576109436109ab565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b610a08816108bc565b8114610a1357600080fd5b50565b610a1f816108ce565b8114610a2a57600080fd5b50565b610a36816108e0565b8114610a4157600080fd5b50565b610a4d81610912565b8114610a5857600080fd5b5056fea264697066735822122008ce865198629ba41f9ccf2fb5dce08bd9ae69d4e7205f5723284fdf802734a164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0xAE13D989DAC2F0DEBFF460AC112A837C89BAA7CD PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x78867BBEEF44F2326BF8DDD1941A4439382EF2A7 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0xC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA91 DUP1 PUSH2 0xD5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x20AE0B6D EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x484F4EA9 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0x8DD95002 EQ PUSH2 0x94 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x64F JUMP JUMPDEST PUSH2 0xB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x78D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0x254 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x772 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x772 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x13B DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x112 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x136 SWAP2 SWAP1 PUSH2 0x5D9 JUMP JUMPDEST PUSH2 0x29E JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x772 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x21D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x6A2 JUMP JUMPDEST PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x862 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BC JUMPI PUSH2 0x2BB PUSH2 0x9AB JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2EA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x302 JUMPI PUSH2 0x301 PUSH2 0x97C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x371 JUMPI PUSH2 0x370 PUSH2 0x97C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x3E2 JUMPI PUSH2 0x3E1 PUSH2 0x97C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD06CA61F PUSH1 0x2 SLOAD DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x459 SWAP3 SWAP2 SWAP1 PUSH2 0x7A8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x471 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x485 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4AE SWAP2 SWAP1 PUSH2 0x606 JUMP JUMPDEST PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x4C1 JUMPI PUSH2 0x4C0 PUSH2 0x97C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E5 PUSH2 0x4E0 DUP5 PUSH2 0x7FD JUMP JUMPDEST PUSH2 0x7D8 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x508 JUMPI PUSH2 0x507 PUSH2 0x9DF JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x538 JUMPI DUP2 PUSH2 0x51E DUP9 DUP3 PUSH2 0x5C4 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x50B JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x551 DUP2 PUSH2 0x9FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x566 DUP2 PUSH2 0x9FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x581 JUMPI PUSH2 0x580 PUSH2 0x9DA JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x591 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5A9 DUP2 PUSH2 0xA16 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5BE DUP2 PUSH2 0xA2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5D3 DUP2 PUSH2 0xA44 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5EF JUMPI PUSH2 0x5EE PUSH2 0x9E9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5FD DUP5 DUP3 DUP6 ADD PUSH2 0x557 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x61C JUMPI PUSH2 0x61B PUSH2 0x9E9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x63A JUMPI PUSH2 0x639 PUSH2 0x9E4 JUMP JUMPDEST JUMPDEST PUSH2 0x646 DUP5 DUP3 DUP6 ADD PUSH2 0x56C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x668 JUMPI PUSH2 0x667 PUSH2 0x9E9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x676 DUP7 DUP3 DUP8 ADD PUSH2 0x59A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x687 DUP7 DUP3 DUP8 ADD PUSH2 0x5AF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x698 DUP7 DUP3 DUP8 ADD PUSH2 0x542 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6B8 JUMPI PUSH2 0x6B7 PUSH2 0x9E9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6C6 DUP5 DUP3 DUP6 ADD PUSH2 0x5C4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6DB DUP4 DUP4 PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6F0 DUP2 PUSH2 0x8BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x6FF DUP2 PUSH2 0x8BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x710 DUP3 PUSH2 0x839 JUMP JUMPDEST PUSH2 0x71A DUP2 DUP6 PUSH2 0x851 JUMP JUMPDEST SWAP4 POP PUSH2 0x725 DUP4 PUSH2 0x829 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x756 JUMPI DUP2 MLOAD PUSH2 0x73D DUP9 DUP3 PUSH2 0x6CF JUMP JUMPDEST SWAP8 POP PUSH2 0x748 DUP4 PUSH2 0x844 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x729 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x76C DUP2 PUSH2 0x912 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x787 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7A2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x763 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7BD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x763 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x7CF DUP2 DUP5 PUSH2 0x705 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7E2 PUSH2 0x7F3 JUMP JUMPDEST SWAP1 POP PUSH2 0x7EE DUP3 DUP3 PUSH2 0x91C JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x818 JUMPI PUSH2 0x817 PUSH2 0x9AB JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86D DUP3 PUSH2 0x912 JUMP JUMPDEST SWAP2 POP PUSH2 0x878 DUP4 PUSH2 0x912 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x8B1 JUMPI PUSH2 0x8B0 PUSH2 0x94D JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8C7 DUP3 PUSH2 0x8F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D9 DUP3 PUSH2 0x8BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8EB DUP3 PUSH2 0x8BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x925 DUP3 PUSH2 0x9EE JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x944 JUMPI PUSH2 0x943 PUSH2 0x9AB JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA08 DUP2 PUSH2 0x8BC JUMP JUMPDEST DUP2 EQ PUSH2 0xA13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xA1F DUP2 PUSH2 0x8CE JUMP JUMPDEST DUP2 EQ PUSH2 0xA2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xA36 DUP2 PUSH2 0x8E0 JUMP JUMPDEST DUP2 EQ PUSH2 0xA41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xA4D DUP2 PUSH2 0x912 JUMP JUMPDEST DUP2 EQ PUSH2 0xA58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD 0xCE DUP7 MLOAD SWAP9 PUSH3 0x9BA41F SWAP13 0xCF 0x2F 0xB5 0xDC 0xE0 DUP12 0xD9 0xAE PUSH10 0xD4E7205F5723284FDF80 0x27 CALLVALUE LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "8846:712:0:-:0;;;8892:42;8870:64;;;;;;;;;;;;;;;;;;;;8963:42;8941:64;;;;;;;;;;;;;;;;;;;;9029:19;9012:36;;8846:712;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BUSD_335": {
									"entryPoint": 596,
									"id": 335,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@CalcLpPrice_416": {
									"entryPoint": 178,
									"id": 416,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@WBNB_332": {
									"entryPoint": 634,
									"id": 332,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@price_386": {
									"entryPoint": 670,
									"id": 386,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1234,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1346,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1367,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$317": {
									"entryPoint": 1434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_Router_$329": {
									"entryPoint": 1455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1476,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1497,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$317t_contract$_Router_$329t_address": {
									"entryPoint": 1615,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1698,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 1743,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 1767,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1782,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 1797,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1891,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 1960,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 2008,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 2035,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 2045,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 2089,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 2105,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 2116,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 2129,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2236,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$317": {
									"entryPoint": 2254,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_Router_$329": {
									"entryPoint": 2272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2290,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2322,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 2332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 2381,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 2428,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2475,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 2522,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 2527,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 2532,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2537,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2542,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 2559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$317": {
									"entryPoint": 2582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_Router_$329": {
									"entryPoint": 2605,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2628,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10199:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "137:631:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "147:90:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "229:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "172:56:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "172:64:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "156:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "156:81:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "147:5:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "246:16:1",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "257:5:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "250:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "286:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "272:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "272:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "272:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "302:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "313:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "309:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "309:16:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "302:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "335:17:1",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "346:6:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "339:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "401:103:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "415:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "415:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "415:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "371:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "380:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "388:4:1",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "376:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "376:17:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "367:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "367:27:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "396:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "364:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "364:36:1"
															},
															"nodeType": "YulIf",
															"src": "361:143:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "573:189:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "588:21:1",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "606:3:1"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "592:10:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "630:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "667:10:1"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "679:3:1"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256_fromMemory",
																						"nodeType": "YulIdentifier",
																						"src": "635:31:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "635:48:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "623:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "623:61:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "623:61:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "697:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "713:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "704:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "704:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "697:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "731:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "742:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "738:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "738:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "731:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "535:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "538:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "532:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "546:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "548:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "557:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "560:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "553:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "553:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "548:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "517:14:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "519:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "528:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "523:1:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "513:249:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "107:6:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "123:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "131:5:1",
														"type": ""
													}
												],
												"src": "24:744:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "826:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "836:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "858:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "845:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "836:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "901:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "874:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "874:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "874:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "804:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "812:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "820:5:1",
														"type": ""
													}
												],
												"src": "774:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "982:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "992:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1007:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1001:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1001:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "992:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1050:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1023:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1023:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1023:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "960:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "968:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "976:5:1",
														"type": ""
													}
												],
												"src": "919:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1173:297:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1222:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "1224:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1224:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1224:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1201:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1209:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1197:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1197:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1216:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1193:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1193:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1186:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1186:35:1"
															},
															"nodeType": "YulIf",
															"src": "1183:122:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1314:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1334:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1328:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1328:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1318:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1350:114:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1437:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1445:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1433:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1433:17:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1452:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1460:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1359:73:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1359:105:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1350:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1151:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1159:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1167:5:1",
														"type": ""
													}
												],
												"src": "1085:385:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1542:101:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1552:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1574:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1561:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1561:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1552:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1631:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$317",
																	"nodeType": "YulIdentifier",
																	"src": "1590:40:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1590:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1590:47:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$317",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1520:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1528:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1536:5:1",
														"type": ""
													}
												],
												"src": "1476:167:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1715:101:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1725:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1747:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1734:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1734:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1725:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1804:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_Router_$329",
																	"nodeType": "YulIdentifier",
																	"src": "1763:40:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1763:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1763:47:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_Router_$329",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1693:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1701:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1709:5:1",
														"type": ""
													}
												],
												"src": "1649:167:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1885:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1895:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1910:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1904:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1904:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1895:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1953:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1926:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1926:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1926:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1863:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1871:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1879:5:1",
														"type": ""
													}
												],
												"src": "1822:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2048:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2094:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2096:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2096:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2096:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2069:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2078:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2065:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2065:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2090:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2061:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2061:32:1"
															},
															"nodeType": "YulIf",
															"src": "2058:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2187:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2202:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2216:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2206:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2231:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2277:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2288:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2273:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2273:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2297:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2241:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2241:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2231:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2018:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2029:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2041:6:1",
														"type": ""
													}
												],
												"src": "1971:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2430:452:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2476:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2478:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2478:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2478:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2451:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2460:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2447:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2447:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2472:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2443:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2443:32:1"
															},
															"nodeType": "YulIf",
															"src": "2440:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2569:306:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2584:38:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2608:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2619:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2604:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2604:17:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2598:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2598:24:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2588:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2669:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "2671:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2671:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2671:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2641:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2649:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2638:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2638:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "2635:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2766:99:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2837:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2848:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2833:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2833:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2857:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2776:56:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2776:89:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2766:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2400:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2411:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2423:6:1",
														"type": ""
													}
												],
												"src": "2328:554:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3016:547:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3062:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3064:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3064:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3064:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3037:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3046:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3033:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3033:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3058:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3029:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3029:32:1"
															},
															"nodeType": "YulIf",
															"src": "3026:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3155:131:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3170:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3184:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3174:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3199:77:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3248:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3259:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3244:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3244:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3268:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$317",
																			"nodeType": "YulIdentifier",
																			"src": "3209:34:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3209:67:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3199:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3296:132:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3311:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3325:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3315:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3341:77:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3390:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3401:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3386:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3386:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3410:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_Router_$329",
																			"nodeType": "YulIdentifier",
																			"src": "3351:34:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3351:67:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3341:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3438:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3453:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3467:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3457:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3483:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3518:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3529:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3514:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3514:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3538:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3493:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3493:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3483:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$317t_contract$_Router_$329t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2970:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2981:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2993:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3001:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3009:6:1",
														"type": ""
													}
												],
												"src": "2888:675:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3646:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3692:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3694:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3694:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3694:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3667:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3676:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3663:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3663:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3688:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3659:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3659:32:1"
															},
															"nodeType": "YulIf",
															"src": "3656:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3785:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3800:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3814:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3804:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3829:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3875:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3886:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3871:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3871:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3895:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3839:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3839:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3829:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3616:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3627:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3639:6:1",
														"type": ""
													}
												],
												"src": "3569:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4006:99:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4050:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4058:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4016:33:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4016:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4016:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4071:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4089:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4094:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4085:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4085:14:1"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "4071:10:1"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3979:6:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3987:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "3995:10:1",
														"type": ""
													}
												],
												"src": "3926:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4166:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4183:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4206:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4188:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4188:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4176:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4176:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4176:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4154:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4161:3:1",
														"type": ""
													}
												],
												"src": "4111:108:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4290:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4307:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4330:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4312:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4312:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4300:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4300:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4300:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4278:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4285:3:1",
														"type": ""
													}
												],
												"src": "4225:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4503:608:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4513:68:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4575:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4527:47:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4527:54:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4517:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4590:93:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4671:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4676:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4597:73:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4597:86:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4590:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4692:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4757:5:1"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4707:49:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4707:56:1"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "4696:7:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4772:21:1",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "4786:7:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "4776:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4862:224:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4876:34:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4903:6:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "4897:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4897:13:1"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "4880:13:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4923:70:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "4974:13:1"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "4989:3:1"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nodeType": "YulIdentifier",
																				"src": "4930:43:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4930:63:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4923:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5006:70:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "5069:6:1"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "5016:52:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5016:60:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5006:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4824:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4827:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4821:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4821:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4835:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4837:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4846:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4849:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4842:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4842:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4837:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4806:14:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4808:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "4817:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "4812:1:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "4802:284:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5095:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "5102:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5095:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4482:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4489:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4498:3:1",
														"type": ""
													}
												],
												"src": "4379:732:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5182:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5199:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5222:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5204:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5204:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5192:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5192:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5192:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5170:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5177:3:1",
														"type": ""
													}
												],
												"src": "5117:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5339:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5349:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5361:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5372:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5357:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5357:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5349:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5429:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5442:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5453:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5438:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5438:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5385:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5385:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5385:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5311:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5323:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5334:4:1",
														"type": ""
													}
												],
												"src": "5241:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5567:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5577:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5589:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5600:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5585:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5585:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5577:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5657:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5670:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5681:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5666:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5666:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5613:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5613:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5613:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5539:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5551:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5562:4:1",
														"type": ""
													}
												],
												"src": "5469:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5873:307:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5883:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5895:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5906:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5891:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5891:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5883:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5963:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5976:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5987:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5972:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5972:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5919:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5919:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5919:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6011:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6022:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6007:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6007:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6031:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6037:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6027:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6027:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6000:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6000:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6000:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6057:116:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6159:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6168:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6065:93:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6065:108:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6057:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5837:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5849:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5857:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5868:4:1",
														"type": ""
													}
												],
												"src": "5697:483:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6227:88:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6237:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "6247:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6247:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "6237:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6296:6:1"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6304:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "6276:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6276:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6276:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6211:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6220:6:1",
														"type": ""
													}
												],
												"src": "6186:129:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6361:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6371:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6387:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6381:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6381:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "6371:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6354:6:1",
														"type": ""
													}
												],
												"src": "6321:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6484:229:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6589:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6591:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6591:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6591:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6561:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6569:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6558:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6558:30:1"
															},
															"nodeType": "YulIf",
															"src": "6555:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6621:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6633:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6641:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6629:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6629:17:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6621:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6683:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6695:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6701:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6691:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6691:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6683:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6468:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6479:4:1",
														"type": ""
													}
												],
												"src": "6402:311:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6791:60:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6801:11:1",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "6809:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "6801:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6822:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "6834:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6839:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6830:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6830:14:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "6822:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "6778:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6786:4:1",
														"type": ""
													}
												],
												"src": "6719:132:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6931:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6942:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6958:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6952:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6952:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6942:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6914:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6924:6:1",
														"type": ""
													}
												],
												"src": "6857:114:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7052:38:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7062:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "7074:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7079:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7070:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7070:14:1"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "7062:4:1"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "7039:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "7047:4:1",
														"type": ""
													}
												],
												"src": "6977:113:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7207:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7224:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7229:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7217:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7217:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7217:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7245:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7264:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7269:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7260:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7260:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "7245:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7179:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7184:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "7195:11:1",
														"type": ""
													}
												],
												"src": "7096:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7334:300:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7344:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7367:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7349:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7349:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7344:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7378:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7401:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7383:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7383:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7378:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7576:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7578:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7578:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7578:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7488:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7481:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7481:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "7474:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7474:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7496:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7503:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7571:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "7499:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7499:74:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7493:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7493:81:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7470:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7470:105:1"
															},
															"nodeType": "YulIf",
															"src": "7467:131:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7608:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7623:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7626:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7619:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7619:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "7608:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7317:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7320:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "7326:7:1",
														"type": ""
													}
												],
												"src": "7286:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7685:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7695:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7724:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "7706:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7706:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7695:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7667:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7677:7:1",
														"type": ""
													}
												],
												"src": "7640:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7801:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7811:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7840:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "7822:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7822:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7811:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$317",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7783:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7793:7:1",
														"type": ""
													}
												],
												"src": "7742:110:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7917:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7927:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7956:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "7938:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7938:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7927:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_Router_$329",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7899:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7909:7:1",
														"type": ""
													}
												],
												"src": "7858:110:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8019:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8029:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8044:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8051:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8040:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8040:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8029:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8001:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8011:7:1",
														"type": ""
													}
												],
												"src": "7974:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8151:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8161:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "8172:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8161:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8133:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8143:7:1",
														"type": ""
													}
												],
												"src": "8106:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8232:238:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8242:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "8264:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "8294:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "8272:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8272:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8260:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8260:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "8246:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8411:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "8413:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8413:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8413:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "8354:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8366:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8351:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8351:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "8390:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8402:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "8387:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8387:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "8348:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8348:62:1"
															},
															"nodeType": "YulIf",
															"src": "8345:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8449:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "8453:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8442:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8442:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8442:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8218:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "8226:4:1",
														"type": ""
													}
												],
												"src": "8189:281:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8504:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8521:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8524:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8514:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8514:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8514:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8618:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8621:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8611:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8611:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8611:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8642:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8645:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8635:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8635:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8635:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8476:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8690:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8707:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8710:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8700:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8700:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8700:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8804:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8807:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8797:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8797:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8797:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8828:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8831:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8821:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8821:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8821:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "8662:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8876:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8893:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8896:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8886:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8886:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8886:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8990:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8993:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8983:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8983:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8983:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9014:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9017:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9007:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9007:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9007:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "8848:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9123:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9140:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9143:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9133:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9133:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9133:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "9034:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9246:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9263:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9266:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9256:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9256:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9256:12:1"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "9157:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9369:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9386:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9389:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9379:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9379:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9379:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "9280:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9492:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9509:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9512:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9502:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9502:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9502:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "9403:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9574:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9584:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9602:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9609:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9598:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9598:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9618:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "9614:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9614:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9594:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9594:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "9584:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9557:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "9567:6:1",
														"type": ""
													}
												],
												"src": "9526:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9677:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9734:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9743:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9746:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9736:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9736:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9736:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9700:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9725:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "9707:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9707:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9697:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9697:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9690:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9690:43:1"
															},
															"nodeType": "YulIf",
															"src": "9687:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9670:5:1",
														"type": ""
													}
												],
												"src": "9634:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9819:93:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9890:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9899:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9902:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9892:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9892:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9892:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9842:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9881:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$317",
																					"nodeType": "YulIdentifier",
																					"src": "9849:31:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9849:38:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9839:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9839:49:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9832:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9832:57:1"
															},
															"nodeType": "YulIf",
															"src": "9829:77:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$317",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9812:5:1",
														"type": ""
													}
												],
												"src": "9762:150:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9975:93:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10046:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10055:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10058:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10048:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10048:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10048:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9998:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10037:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_Router_$329",
																					"nodeType": "YulIdentifier",
																					"src": "10005:31:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10005:38:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9995:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9995:49:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9988:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9988:57:1"
															},
															"nodeType": "YulIf",
															"src": "9985:77:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_Router_$329",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9968:5:1",
														"type": ""
													}
												],
												"src": "9918:150:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10117:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10174:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10183:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10186:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10176:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10176:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10176:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10140:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10165:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "10147:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10147:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "10137:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10137:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10130:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10130:43:1"
															},
															"nodeType": "YulIf",
															"src": "10127:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10110:5:1",
														"type": ""
													}
												],
												"src": "10074:122:1"
											}
										]
									},
									"contents": "{\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_contract$_IERC20_$317(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$317(value)\n    }\n\n    function abi_decode_t_contract$_Router_$329(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_Router_$329(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$317t_contract$_Router_$329t_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$317(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_Router_$329(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$317(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_Router_$329(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IERC20_$317(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$317(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_Router_$329(value) {\n        if iszero(eq(value, cleanup_t_contract$_Router_$329(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806320ae0b6d14610046578063484f4ea9146100765780638dd9500214610094575b600080fd5b610060600480360381019061005b919061064f565b6100b2565b60405161006d919061078d565b60405180910390f35b61007e610254565b60405161008b9190610772565b60405180910390f35b61009c61027a565b6040516100a99190610772565b60405180910390f35b600061013b838573ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156100fe57600080fd5b505afa158015610112573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013691906105d9565b61029e565b8473ffffffffffffffffffffffffffffffffffffffff166370a082318673ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561019d57600080fd5b505afa1580156101b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d591906105d9565b6040518263ffffffff1660e01b81526004016101f19190610772565b60206040518083038186803b15801561020957600080fd5b505afa15801561021d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024191906106a2565b61024b9190610862565b90509392505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600367ffffffffffffffff8111156102bc576102bb6109ab565b5b6040519080825280602002602001820160405280156102ea5781602001602082028036833780820191505090505b50905082816000815181106103025761030161097c565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816001815181106103715761037061097c565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816002815181106103e2576103e161097c565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508373ffffffffffffffffffffffffffffffffffffffff1663d06ca61f600254836040518363ffffffff1660e01b81526004016104599291906107a8565b60006040518083038186803b15801561047157600080fd5b505afa158015610485573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906104ae9190610606565b6002815181106104c1576104c061097c565b5b602002602001015191505092915050565b60006104e56104e0846107fd565b6107d8565b90508083825260208201905082856020860282011115610508576105076109df565b5b60005b85811015610538578161051e88826105c4565b84526020840193506020830192505060018101905061050b565b5050509392505050565b600081359050610551816109ff565b92915050565b600081519050610566816109ff565b92915050565b600082601f830112610581576105806109da565b5b81516105918482602086016104d2565b91505092915050565b6000813590506105a981610a16565b92915050565b6000813590506105be81610a2d565b92915050565b6000815190506105d381610a44565b92915050565b6000602082840312156105ef576105ee6109e9565b5b60006105fd84828501610557565b91505092915050565b60006020828403121561061c5761061b6109e9565b5b600082015167ffffffffffffffff81111561063a576106396109e4565b5b6106468482850161056c565b91505092915050565b600080600060608486031215610668576106676109e9565b5b60006106768682870161059a565b9350506020610687868287016105af565b925050604061069886828701610542565b9150509250925092565b6000602082840312156106b8576106b76109e9565b5b60006106c6848285016105c4565b91505092915050565b60006106db83836106e7565b60208301905092915050565b6106f0816108bc565b82525050565b6106ff816108bc565b82525050565b600061071082610839565b61071a8185610851565b935061072583610829565b8060005b8381101561075657815161073d88826106cf565b975061074883610844565b925050600181019050610729565b5085935050505092915050565b61076c81610912565b82525050565b600060208201905061078760008301846106f6565b92915050565b60006020820190506107a26000830184610763565b92915050565b60006040820190506107bd6000830185610763565b81810360208301526107cf8184610705565b90509392505050565b60006107e26107f3565b90506107ee828261091c565b919050565b6000604051905090565b600067ffffffffffffffff821115610818576108176109ab565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600061086d82610912565b915061087883610912565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156108b1576108b061094d565b5b828202905092915050565b60006108c7826108f2565b9050919050565b60006108d9826108bc565b9050919050565b60006108eb826108bc565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b610925826109ee565b810181811067ffffffffffffffff82111715610944576109436109ab565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b610a08816108bc565b8114610a1357600080fd5b50565b610a1f816108ce565b8114610a2a57600080fd5b50565b610a36816108e0565b8114610a4157600080fd5b50565b610a4d81610912565b8114610a5857600080fd5b5056fea264697066735822122008ce865198629ba41f9ccf2fb5dce08bd9ae69d4e7205f5723284fdf802734a164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x20AE0B6D EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x484F4EA9 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0x8DD95002 EQ PUSH2 0x94 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x64F JUMP JUMPDEST PUSH2 0xB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x78D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0x254 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x772 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x772 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x13B DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x112 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x136 SWAP2 SWAP1 PUSH2 0x5D9 JUMP JUMPDEST PUSH2 0x29E JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x772 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x21D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x6A2 JUMP JUMPDEST PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x862 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BC JUMPI PUSH2 0x2BB PUSH2 0x9AB JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2EA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x302 JUMPI PUSH2 0x301 PUSH2 0x97C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x371 JUMPI PUSH2 0x370 PUSH2 0x97C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x3E2 JUMPI PUSH2 0x3E1 PUSH2 0x97C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD06CA61F PUSH1 0x2 SLOAD DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x459 SWAP3 SWAP2 SWAP1 PUSH2 0x7A8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x471 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x485 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4AE SWAP2 SWAP1 PUSH2 0x606 JUMP JUMPDEST PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x4C1 JUMPI PUSH2 0x4C0 PUSH2 0x97C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E5 PUSH2 0x4E0 DUP5 PUSH2 0x7FD JUMP JUMPDEST PUSH2 0x7D8 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x508 JUMPI PUSH2 0x507 PUSH2 0x9DF JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x538 JUMPI DUP2 PUSH2 0x51E DUP9 DUP3 PUSH2 0x5C4 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x50B JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x551 DUP2 PUSH2 0x9FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x566 DUP2 PUSH2 0x9FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x581 JUMPI PUSH2 0x580 PUSH2 0x9DA JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x591 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5A9 DUP2 PUSH2 0xA16 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5BE DUP2 PUSH2 0xA2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5D3 DUP2 PUSH2 0xA44 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5EF JUMPI PUSH2 0x5EE PUSH2 0x9E9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5FD DUP5 DUP3 DUP6 ADD PUSH2 0x557 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x61C JUMPI PUSH2 0x61B PUSH2 0x9E9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x63A JUMPI PUSH2 0x639 PUSH2 0x9E4 JUMP JUMPDEST JUMPDEST PUSH2 0x646 DUP5 DUP3 DUP6 ADD PUSH2 0x56C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x668 JUMPI PUSH2 0x667 PUSH2 0x9E9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x676 DUP7 DUP3 DUP8 ADD PUSH2 0x59A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x687 DUP7 DUP3 DUP8 ADD PUSH2 0x5AF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x698 DUP7 DUP3 DUP8 ADD PUSH2 0x542 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6B8 JUMPI PUSH2 0x6B7 PUSH2 0x9E9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6C6 DUP5 DUP3 DUP6 ADD PUSH2 0x5C4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6DB DUP4 DUP4 PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6F0 DUP2 PUSH2 0x8BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x6FF DUP2 PUSH2 0x8BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x710 DUP3 PUSH2 0x839 JUMP JUMPDEST PUSH2 0x71A DUP2 DUP6 PUSH2 0x851 JUMP JUMPDEST SWAP4 POP PUSH2 0x725 DUP4 PUSH2 0x829 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x756 JUMPI DUP2 MLOAD PUSH2 0x73D DUP9 DUP3 PUSH2 0x6CF JUMP JUMPDEST SWAP8 POP PUSH2 0x748 DUP4 PUSH2 0x844 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x729 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x76C DUP2 PUSH2 0x912 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x787 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7A2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x763 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7BD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x763 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x7CF DUP2 DUP5 PUSH2 0x705 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7E2 PUSH2 0x7F3 JUMP JUMPDEST SWAP1 POP PUSH2 0x7EE DUP3 DUP3 PUSH2 0x91C JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x818 JUMPI PUSH2 0x817 PUSH2 0x9AB JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86D DUP3 PUSH2 0x912 JUMP JUMPDEST SWAP2 POP PUSH2 0x878 DUP4 PUSH2 0x912 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x8B1 JUMPI PUSH2 0x8B0 PUSH2 0x94D JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8C7 DUP3 PUSH2 0x8F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D9 DUP3 PUSH2 0x8BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8EB DUP3 PUSH2 0x8BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x925 DUP3 PUSH2 0x9EE JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x944 JUMPI PUSH2 0x943 PUSH2 0x9AB JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA08 DUP2 PUSH2 0x8BC JUMP JUMPDEST DUP2 EQ PUSH2 0xA13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xA1F DUP2 PUSH2 0x8CE JUMP JUMPDEST DUP2 EQ PUSH2 0xA2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xA36 DUP2 PUSH2 0x8E0 JUMP JUMPDEST DUP2 EQ PUSH2 0xA41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xA4D DUP2 PUSH2 0x912 JUMP JUMPDEST DUP2 EQ PUSH2 0xA58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD 0xCE DUP7 MLOAD SWAP9 PUSH3 0x9BA41F SWAP13 0xCF 0x2F 0xB5 0xDC 0xE0 DUP12 0xD9 0xAE PUSH10 0xD4E7205F5723284FDF80 0x27 CALLVALUE LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "8846:712:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9340:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8941:64;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8870;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9340:215;9437:7;9505:39;9511:13;9525:9;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9505:5;:39::i;:::-;9465:9;:19;;;9485:9;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9465:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:79;;;;:::i;:::-;9456:91;;9340:215;;;;;:::o;8941:64::-;;;;;;;;;;;;;:::o;8870:::-;;;;;;;;;;;;:::o;9057:275::-;9131:4;9147:21;9185:1;9171:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9147:40;;9208:5;9198:4;9203:1;9198:7;;;;;;;;:::i;:::-;;;;;;;:15;;;;;;;;;;;9234:4;;;;;;;;;;9224;9229:1;9224:7;;;;;;;;:::i;:::-;;;;;;;:14;;;;;;;;;;;9259:4;;;;;;;;;;;9249;9254:1;9249:7;;;;;;;;:::i;:::-;;;;;;;:14;;;;;;;;;;;9281:13;:27;;;9309:6;;9316:4;9281:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9322:1;9281:43;;;;;;;;:::i;:::-;;;;;;;;9274:50;;;9057:275;;;;:::o;24:744:1:-;131:5;156:81;172:64;229:6;172:64;:::i;:::-;156:81;:::i;:::-;147:90;;257:5;286:6;279:5;272:21;320:4;313:5;309:16;302:23;;346:6;396:3;388:4;380:6;376:17;371:3;367:27;364:36;361:143;;;415:79;;:::i;:::-;361:143;528:1;513:249;538:6;535:1;532:13;513:249;;;606:3;635:48;679:3;667:10;635:48;:::i;:::-;630:3;623:61;713:4;708:3;704:14;697:21;;747:4;742:3;738:14;731:21;;573:189;560:1;557;553:9;548:14;;513:249;;;517:14;137:631;;24:744;;;;;:::o;774:139::-;820:5;858:6;845:20;836:29;;874:33;901:5;874:33;:::i;:::-;774:139;;;;:::o;919:143::-;976:5;1007:6;1001:13;992:22;;1023:33;1050:5;1023:33;:::i;:::-;919:143;;;;:::o;1085:385::-;1167:5;1216:3;1209:4;1201:6;1197:17;1193:27;1183:122;;1224:79;;:::i;:::-;1183:122;1334:6;1328:13;1359:105;1460:3;1452:6;1445:4;1437:6;1433:17;1359:105;:::i;:::-;1350:114;;1173:297;1085:385;;;;:::o;1476:167::-;1536:5;1574:6;1561:20;1552:29;;1590:47;1631:5;1590:47;:::i;:::-;1476:167;;;;:::o;1649:::-;1709:5;1747:6;1734:20;1725:29;;1763:47;1804:5;1763:47;:::i;:::-;1649:167;;;;:::o;1822:143::-;1879:5;1910:6;1904:13;1895:22;;1926:33;1953:5;1926:33;:::i;:::-;1822:143;;;;:::o;1971:351::-;2041:6;2090:2;2078:9;2069:7;2065:23;2061:32;2058:119;;;2096:79;;:::i;:::-;2058:119;2216:1;2241:64;2297:7;2288:6;2277:9;2273:22;2241:64;:::i;:::-;2231:74;;2187:128;1971:351;;;;:::o;2328:554::-;2423:6;2472:2;2460:9;2451:7;2447:23;2443:32;2440:119;;;2478:79;;:::i;:::-;2440:119;2619:1;2608:9;2604:17;2598:24;2649:18;2641:6;2638:30;2635:117;;;2671:79;;:::i;:::-;2635:117;2776:89;2857:7;2848:6;2837:9;2833:22;2776:89;:::i;:::-;2766:99;;2569:306;2328:554;;;;:::o;2888:675::-;2993:6;3001;3009;3058:2;3046:9;3037:7;3033:23;3029:32;3026:119;;;3064:79;;:::i;:::-;3026:119;3184:1;3209:67;3268:7;3259:6;3248:9;3244:22;3209:67;:::i;:::-;3199:77;;3155:131;3325:2;3351:67;3410:7;3401:6;3390:9;3386:22;3351:67;:::i;:::-;3341:77;;3296:132;3467:2;3493:53;3538:7;3529:6;3518:9;3514:22;3493:53;:::i;:::-;3483:63;;3438:118;2888:675;;;;;:::o;3569:351::-;3639:6;3688:2;3676:9;3667:7;3663:23;3659:32;3656:119;;;3694:79;;:::i;:::-;3656:119;3814:1;3839:64;3895:7;3886:6;3875:9;3871:22;3839:64;:::i;:::-;3829:74;;3785:128;3569:351;;;;:::o;3926:179::-;3995:10;4016:46;4058:3;4050:6;4016:46;:::i;:::-;4094:4;4089:3;4085:14;4071:28;;3926:179;;;;:::o;4111:108::-;4188:24;4206:5;4188:24;:::i;:::-;4183:3;4176:37;4111:108;;:::o;4225:118::-;4312:24;4330:5;4312:24;:::i;:::-;4307:3;4300:37;4225:118;;:::o;4379:732::-;4498:3;4527:54;4575:5;4527:54;:::i;:::-;4597:86;4676:6;4671:3;4597:86;:::i;:::-;4590:93;;4707:56;4757:5;4707:56;:::i;:::-;4786:7;4817:1;4802:284;4827:6;4824:1;4821:13;4802:284;;;4903:6;4897:13;4930:63;4989:3;4974:13;4930:63;:::i;:::-;4923:70;;5016:60;5069:6;5016:60;:::i;:::-;5006:70;;4862:224;4849:1;4846;4842:9;4837:14;;4802:284;;;4806:14;5102:3;5095:10;;4503:608;;;4379:732;;;;:::o;5117:118::-;5204:24;5222:5;5204:24;:::i;:::-;5199:3;5192:37;5117:118;;:::o;5241:222::-;5334:4;5372:2;5361:9;5357:18;5349:26;;5385:71;5453:1;5442:9;5438:17;5429:6;5385:71;:::i;:::-;5241:222;;;;:::o;5469:::-;5562:4;5600:2;5589:9;5585:18;5577:26;;5613:71;5681:1;5670:9;5666:17;5657:6;5613:71;:::i;:::-;5469:222;;;;:::o;5697:483::-;5868:4;5906:2;5895:9;5891:18;5883:26;;5919:71;5987:1;5976:9;5972:17;5963:6;5919:71;:::i;:::-;6037:9;6031:4;6027:20;6022:2;6011:9;6007:18;6000:48;6065:108;6168:4;6159:6;6065:108;:::i;:::-;6057:116;;5697:483;;;;;:::o;6186:129::-;6220:6;6247:20;;:::i;:::-;6237:30;;6276:33;6304:4;6296:6;6276:33;:::i;:::-;6186:129;;;:::o;6321:75::-;6354:6;6387:2;6381:9;6371:19;;6321:75;:::o;6402:311::-;6479:4;6569:18;6561:6;6558:30;6555:56;;;6591:18;;:::i;:::-;6555:56;6641:4;6633:6;6629:17;6621:25;;6701:4;6695;6691:15;6683:23;;6402:311;;;:::o;6719:132::-;6786:4;6809:3;6801:11;;6839:4;6834:3;6830:14;6822:22;;6719:132;;;:::o;6857:114::-;6924:6;6958:5;6952:12;6942:22;;6857:114;;;:::o;6977:113::-;7047:4;7079;7074:3;7070:14;7062:22;;6977:113;;;:::o;7096:184::-;7195:11;7229:6;7224:3;7217:19;7269:4;7264:3;7260:14;7245:29;;7096:184;;;;:::o;7286:348::-;7326:7;7349:20;7367:1;7349:20;:::i;:::-;7344:25;;7383:20;7401:1;7383:20;:::i;:::-;7378:25;;7571:1;7503:66;7499:74;7496:1;7493:81;7488:1;7481:9;7474:17;7470:105;7467:131;;;7578:18;;:::i;:::-;7467:131;7626:1;7623;7619:9;7608:20;;7286:348;;;;:::o;7640:96::-;7677:7;7706:24;7724:5;7706:24;:::i;:::-;7695:35;;7640:96;;;:::o;7742:110::-;7793:7;7822:24;7840:5;7822:24;:::i;:::-;7811:35;;7742:110;;;:::o;7858:::-;7909:7;7938:24;7956:5;7938:24;:::i;:::-;7927:35;;7858:110;;;:::o;7974:126::-;8011:7;8051:42;8044:5;8040:54;8029:65;;7974:126;;;:::o;8106:77::-;8143:7;8172:5;8161:16;;8106:77;;;:::o;8189:281::-;8272:27;8294:4;8272:27;:::i;:::-;8264:6;8260:40;8402:6;8390:10;8387:22;8366:18;8354:10;8351:34;8348:62;8345:88;;;8413:18;;:::i;:::-;8345:88;8453:10;8449:2;8442:22;8232:238;8189:281;;:::o;8476:180::-;8524:77;8521:1;8514:88;8621:4;8618:1;8611:15;8645:4;8642:1;8635:15;8662:180;8710:77;8707:1;8700:88;8807:4;8804:1;8797:15;8831:4;8828:1;8821:15;8848:180;8896:77;8893:1;8886:88;8993:4;8990:1;8983:15;9017:4;9014:1;9007:15;9034:117;9143:1;9140;9133:12;9157:117;9266:1;9263;9256:12;9280:117;9389:1;9386;9379:12;9403:117;9512:1;9509;9502:12;9526:102;9567:6;9618:2;9614:7;9609:2;9602:5;9598:14;9594:28;9584:38;;9526:102;;;:::o;9634:122::-;9707:24;9725:5;9707:24;:::i;:::-;9700:5;9697:35;9687:63;;9746:1;9743;9736:12;9687:63;9634:122;:::o;9762:150::-;9849:38;9881:5;9849:38;:::i;:::-;9842:5;9839:49;9829:77;;9902:1;9899;9892:12;9829:77;9762:150;:::o;9918:::-;10005:38;10037:5;10005:38;:::i;:::-;9998:5;9995:49;9985:77;;10058:1;10055;10048:12;9985:77;9918:150;:::o;10074:122::-;10147:24;10165:5;10147:24;:::i;:::-;10140:5;10137:35;10127:63;;10186:1;10183;10176:12;10127:63;10074:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "541000",
								"executionCost": "71215",
								"totalCost": "612215"
							},
							"external": {
								"BUSD()": "2514",
								"CalcLpPrice(address,address,address)": "infinite",
								"WBNB()": "2533"
							},
							"internal": {
								"price(contract Router,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 8846,
									"end": 9558,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 8846,
									"end": 9558,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8846,
									"end": 9558,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8892,
									"end": 8934,
									"name": "PUSH",
									"source": 0,
									"value": "AE13D989DAC2F0DEBFF460AC112A837C89BAA7CD"
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8870,
									"end": 8934,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8963,
									"end": 9005,
									"name": "PUSH",
									"source": 0,
									"value": "78867BBEEF44F2326BF8DDD1941A4439382EF2A7"
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8941,
									"end": 9005,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9029,
									"end": 9048,
									"name": "PUSH",
									"source": 0,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 9012,
									"end": 9048,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 9012,
									"end": 9048,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9558,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9558,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9558,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9558,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8846,
									"end": 9558,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9558,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8846,
									"end": 9558,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9558,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9558,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8846,
									"end": 9558,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9558,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8846,
									"end": 9558,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9558,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8846,
									"end": 9558,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8846,
									"end": 9558,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 8846,
									"end": 9558,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8846,
									"end": 9558,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122008ce865198629ba41f9ccf2fb5dce08bd9ae69d4e7205f5723284fdf802734a164736f6c63430008070033",
									".code": [
										{
											"begin": 8846,
											"end": 9558,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8846,
											"end": 9558,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8846,
											"end": 9558,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9558,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9558,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8846,
											"end": 9558,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9558,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8846,
											"end": 9558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9558,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9558,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8846,
											"end": 9558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9558,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8846,
											"end": 9558,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9558,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8846,
											"end": 9558,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9558,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8846,
											"end": 9558,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9558,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 8846,
											"end": 9558,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9558,
											"name": "PUSH",
											"source": 0,
											"value": "20AE0B6D"
										},
										{
											"begin": 8846,
											"end": 9558,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8846,
											"end": 9558,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9558,
											"name": "PUSH",
											"source": 0,
											"value": "484F4EA9"
										},
										{
											"begin": 8846,
											"end": 9558,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8846,
											"end": 9558,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9558,
											"name": "PUSH",
											"source": 0,
											"value": "8DD95002"
										},
										{
											"begin": 8846,
											"end": 9558,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8846,
											"end": 9558,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9558,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8846,
											"end": 9558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9558,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8846,
											"end": 9558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 9558,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9555,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9340,
											"end": 9555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9340,
											"end": 9555,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9340,
											"end": 9555,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9555,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9555,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9555,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 9340,
											"end": 9555,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 9340,
											"end": 9555,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9340,
											"end": 9555,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 9340,
											"end": 9555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9340,
											"end": 9555,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9340,
											"end": 9555,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9340,
											"end": 9555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9555,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9340,
											"end": 9555,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 9340,
											"end": 9555,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 9340,
											"end": 9555,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9340,
											"end": 9555,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 9340,
											"end": 9555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9555,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9340,
											"end": 9555,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9555,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9555,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9555,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9555,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9555,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9340,
											"end": 9555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9437,
											"end": 9444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9505,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9511,
											"end": 9524,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9534,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9541,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9525,
											"end": 9541,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9541,
											"name": "PUSH",
											"source": 0,
											"value": "DFE1681"
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9505,
											"end": 9510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 9505,
											"end": 9544,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9505,
											"end": 9544,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9505,
											"end": 9544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9474,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9484,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9465,
											"end": 9484,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9484,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 9485,
											"end": 9494,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9501,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9485,
											"end": 9501,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9501,
											"name": "PUSH",
											"source": 0,
											"value": "DFE1681"
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 9465,
											"end": 9544,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 9465,
											"end": 9544,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9465,
											"end": 9544,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 9465,
											"end": 9544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9456,
											"end": 9547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9456,
											"end": 9547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9555,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9555,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9555,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9005,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8934,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9057,
											"end": 9332,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 9057,
											"end": 9332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9131,
											"end": 9135,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9147,
											"end": 9168,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9185,
											"end": 9186,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9147,
											"end": 9187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9147,
											"end": 9187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9208,
											"end": 9213,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9198,
											"end": 9202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9203,
											"end": 9204,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9198,
											"end": 9205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9198,
											"end": 9205,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9198,
											"end": 9205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9198,
											"end": 9205,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9198,
											"end": 9205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 9198,
											"end": 9205,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9198,
											"end": 9205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 9198,
											"end": 9205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 9198,
											"end": 9205,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9198,
											"end": 9205,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 9198,
											"end": 9205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9198,
											"end": 9205,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 9198,
											"end": 9205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9198,
											"end": 9205,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9198,
											"end": 9205,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9198,
											"end": 9205,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9198,
											"end": 9205,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9198,
											"end": 9205,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9198,
											"end": 9213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9198,
											"end": 9213,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9198,
											"end": 9213,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9198,
											"end": 9213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9198,
											"end": 9213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9198,
											"end": 9213,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9198,
											"end": 9213,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9198,
											"end": 9213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9198,
											"end": 9213,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9198,
											"end": 9213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9198,
											"end": 9213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9234,
											"end": 9238,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9234,
											"end": 9238,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9234,
											"end": 9238,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9234,
											"end": 9238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9234,
											"end": 9238,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9234,
											"end": 9238,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9234,
											"end": 9238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9234,
											"end": 9238,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9234,
											"end": 9238,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9234,
											"end": 9238,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9229,
											"end": 9230,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9224,
											"end": 9231,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9231,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9231,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9231,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 9224,
											"end": 9231,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 9224,
											"end": 9231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 9224,
											"end": 9231,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9224,
											"end": 9231,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 9224,
											"end": 9231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9231,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 9224,
											"end": 9231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9231,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9224,
											"end": 9231,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9231,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9224,
											"end": 9231,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9231,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9238,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9224,
											"end": 9238,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9238,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9238,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9224,
											"end": 9238,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9238,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9238,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9259,
											"end": 9263,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9259,
											"end": 9263,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9259,
											"end": 9263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9259,
											"end": 9263,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9259,
											"end": 9263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9259,
											"end": 9263,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9259,
											"end": 9263,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9259,
											"end": 9263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9259,
											"end": 9263,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9259,
											"end": 9263,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9259,
											"end": 9263,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9249,
											"end": 9253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9254,
											"end": 9255,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9249,
											"end": 9256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9249,
											"end": 9256,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9249,
											"end": 9256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9249,
											"end": 9256,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9249,
											"end": 9256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 9249,
											"end": 9256,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9249,
											"end": 9256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 9249,
											"end": 9256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 9249,
											"end": 9256,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9249,
											"end": 9256,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 9249,
											"end": 9256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9249,
											"end": 9256,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 9249,
											"end": 9256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9249,
											"end": 9256,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9249,
											"end": 9256,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9249,
											"end": 9256,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9249,
											"end": 9256,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9249,
											"end": 9256,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9249,
											"end": 9263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9249,
											"end": 9263,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9249,
											"end": 9263,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9249,
											"end": 9263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9249,
											"end": 9263,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9249,
											"end": 9263,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9249,
											"end": 9263,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9249,
											"end": 9263,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9249,
											"end": 9263,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9249,
											"end": 9263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9249,
											"end": 9263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9294,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9308,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9281,
											"end": 9308,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9308,
											"name": "PUSH",
											"source": 0,
											"value": "D06CA61F"
										},
										{
											"begin": 9309,
											"end": 9315,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9309,
											"end": 9315,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9316,
											"end": 9320,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 9281,
											"end": 9321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 9323,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9281,
											"end": 9324,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9324,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9324,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9324,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 9281,
											"end": 9324,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 9281,
											"end": 9324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 9281,
											"end": 9324,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9281,
											"end": 9324,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 9281,
											"end": 9324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9324,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 9281,
											"end": 9324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9324,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9281,
											"end": 9324,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9324,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9281,
											"end": 9324,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9324,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9324,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9274,
											"end": 9324,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9274,
											"end": 9324,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9274,
											"end": 9324,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9332,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9332,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9332,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9332,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9332,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24,
											"end": 768,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 24,
											"end": 768,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 131,
											"end": 136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 229,
											"end": 235,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 172,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 156,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 147,
											"end": 237,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 147,
											"end": 237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 257,
											"end": 262,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 286,
											"end": 292,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 272,
											"end": 293,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 320,
											"end": 324,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 313,
											"end": 318,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 309,
											"end": 325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 302,
											"end": 325,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 302,
											"end": 325,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 346,
											"end": 352,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 396,
											"end": 399,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 388,
											"end": 392,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 380,
											"end": 386,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 376,
											"end": 393,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 367,
											"end": 394,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 364,
											"end": 400,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 361,
											"end": 504,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 361,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 361,
											"end": 504,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 415,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 361,
											"end": 504,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 361,
											"end": 504,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 538,
											"end": 544,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 535,
											"end": 536,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 532,
											"end": 545,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 513,
											"end": 762,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 513,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 606,
											"end": 609,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 635,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 679,
											"end": 682,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 667,
											"end": 677,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 635,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 635,
											"end": 683,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 635,
											"end": 683,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 635,
											"end": 683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 630,
											"end": 633,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 623,
											"end": 684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 713,
											"end": 717,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 708,
											"end": 711,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 704,
											"end": 718,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 697,
											"end": 718,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 697,
											"end": 718,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 747,
											"end": 751,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 742,
											"end": 745,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 738,
											"end": 752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 731,
											"end": 752,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 731,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 573,
											"end": 762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 560,
											"end": 561,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 557,
											"end": 558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 553,
											"end": 562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 548,
											"end": 562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 548,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 513,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 513,
											"end": 762,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 517,
											"end": 531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 137,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 137,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 774,
											"end": 913,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 774,
											"end": 913,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 820,
											"end": 825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 858,
											"end": 864,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 845,
											"end": 865,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 865,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 874,
											"end": 907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 901,
											"end": 906,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 874,
											"end": 907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 874,
											"end": 907,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 874,
											"end": 907,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 874,
											"end": 907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 774,
											"end": 913,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 774,
											"end": 913,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 774,
											"end": 913,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 774,
											"end": 913,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 774,
											"end": 913,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 919,
											"end": 1062,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 919,
											"end": 1062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 976,
											"end": 981,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1007,
											"end": 1013,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1001,
											"end": 1014,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 992,
											"end": 1014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 992,
											"end": 1014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1050,
											"end": 1055,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 919,
											"end": 1062,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 919,
											"end": 1062,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 919,
											"end": 1062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 919,
											"end": 1062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 919,
											"end": 1062,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1085,
											"end": 1470,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1085,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1167,
											"end": 1172,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1216,
											"end": 1219,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1213,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1201,
											"end": 1207,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1220,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1183,
											"end": 1305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1183,
											"end": 1305,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1224,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1224,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1224,
											"end": 1303,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1224,
											"end": 1303,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1224,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1183,
											"end": 1305,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1183,
											"end": 1305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1334,
											"end": 1340,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1341,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1460,
											"end": 1463,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1458,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1445,
											"end": 1449,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1437,
											"end": 1443,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1433,
											"end": 1450,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1359,
											"end": 1464,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1359,
											"end": 1464,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1359,
											"end": 1464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1350,
											"end": 1464,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1350,
											"end": 1464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1173,
											"end": 1470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1470,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1470,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1470,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1476,
											"end": 1643,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1476,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1536,
											"end": 1541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1574,
											"end": 1580,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1581,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1581,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1581,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1590,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1631,
											"end": 1636,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1590,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1590,
											"end": 1637,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1590,
											"end": 1637,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1590,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1643,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1643,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1643,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1649,
											"end": 1816,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1649,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1709,
											"end": 1714,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1747,
											"end": 1753,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1734,
											"end": 1754,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1725,
											"end": 1754,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1725,
											"end": 1754,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1763,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1763,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 1763,
											"end": 1810,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1763,
											"end": 1810,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 1763,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1816,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1816,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1816,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1816,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1816,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1822,
											"end": 1965,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1822,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 1884,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1910,
											"end": 1916,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1904,
											"end": 1917,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1917,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1926,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1953,
											"end": 1958,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1926,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1926,
											"end": 1959,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1926,
											"end": 1959,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1926,
											"end": 1959,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1822,
											"end": 1965,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1822,
											"end": 1965,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1822,
											"end": 1965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1822,
											"end": 1965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1822,
											"end": 1965,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1971,
											"end": 2322,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1971,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2047,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2090,
											"end": 2092,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2078,
											"end": 2087,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2069,
											"end": 2076,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2088,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2061,
											"end": 2093,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2058,
											"end": 2177,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2058,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2058,
											"end": 2177,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2096,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2096,
											"end": 2175,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2096,
											"end": 2175,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2096,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2058,
											"end": 2177,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2058,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2216,
											"end": 2217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2241,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2297,
											"end": 2304,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2294,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2277,
											"end": 2286,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2273,
											"end": 2295,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2241,
											"end": 2305,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2241,
											"end": 2305,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2241,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2231,
											"end": 2305,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2231,
											"end": 2305,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2315,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 2322,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 2322,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 2322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 2322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 2322,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2328,
											"end": 2882,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2328,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2429,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2472,
											"end": 2474,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2469,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2458,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2447,
											"end": 2470,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2443,
											"end": 2475,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2619,
											"end": 2620,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2608,
											"end": 2617,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2604,
											"end": 2621,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2622,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2667,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2641,
											"end": 2647,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2638,
											"end": 2668,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2635,
											"end": 2752,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2635,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2635,
											"end": 2752,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2671,
											"end": 2750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2671,
											"end": 2750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2671,
											"end": 2750,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2671,
											"end": 2750,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2671,
											"end": 2750,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2635,
											"end": 2752,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2635,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2776,
											"end": 2865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2857,
											"end": 2864,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2854,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2837,
											"end": 2846,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2833,
											"end": 2855,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2776,
											"end": 2865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2776,
											"end": 2865,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2776,
											"end": 2865,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2776,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2865,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2569,
											"end": 2875,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2882,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2882,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2882,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2888,
											"end": 3563,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2888,
											"end": 3563,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2993,
											"end": 2999,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3001,
											"end": 3007,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3009,
											"end": 3015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3060,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3046,
											"end": 3055,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3037,
											"end": 3044,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3033,
											"end": 3056,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3029,
											"end": 3061,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3145,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 3026,
											"end": 3145,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3064,
											"end": 3143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 3064,
											"end": 3143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3064,
											"end": 3143,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3064,
											"end": 3143,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 3064,
											"end": 3143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3145,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 3026,
											"end": 3145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3184,
											"end": 3185,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3209,
											"end": 3276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 3268,
											"end": 3275,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3259,
											"end": 3265,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3257,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3266,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3209,
											"end": 3276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3209,
											"end": 3276,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3209,
											"end": 3276,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 3209,
											"end": 3276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3276,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3286,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3325,
											"end": 3327,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3351,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 3410,
											"end": 3417,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3401,
											"end": 3407,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3386,
											"end": 3408,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3351,
											"end": 3418,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3351,
											"end": 3418,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 3351,
											"end": 3418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3341,
											"end": 3418,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3341,
											"end": 3418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3467,
											"end": 3469,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3493,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 3538,
											"end": 3545,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3529,
											"end": 3535,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3518,
											"end": 3527,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3514,
											"end": 3536,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3493,
											"end": 3546,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3493,
											"end": 3546,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 3493,
											"end": 3546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3483,
											"end": 3546,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3483,
											"end": 3546,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3438,
											"end": 3556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 3563,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 3563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 3563,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 3563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 3563,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 3563,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3569,
											"end": 3920,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3569,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3639,
											"end": 3645,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3688,
											"end": 3690,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3676,
											"end": 3685,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3667,
											"end": 3674,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3663,
											"end": 3686,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3659,
											"end": 3691,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3656,
											"end": 3775,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3656,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 3656,
											"end": 3775,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3694,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 3694,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3694,
											"end": 3773,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3694,
											"end": 3773,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 3694,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3656,
											"end": 3775,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 3656,
											"end": 3775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3815,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3839,
											"end": 3903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 3895,
											"end": 3902,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3886,
											"end": 3892,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3884,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3871,
											"end": 3893,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3839,
											"end": 3903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 3839,
											"end": 3903,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3839,
											"end": 3903,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 3839,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3903,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3785,
											"end": 3913,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3569,
											"end": 3920,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3569,
											"end": 3920,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3569,
											"end": 3920,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3569,
											"end": 3920,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3569,
											"end": 3920,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3926,
											"end": 4105,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 3926,
											"end": 4105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 4005,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4016,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 4058,
											"end": 4061,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4050,
											"end": 4056,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4016,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 4016,
											"end": 4062,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4016,
											"end": 4062,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 4016,
											"end": 4062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4094,
											"end": 4098,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4089,
											"end": 4092,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4085,
											"end": 4099,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4099,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 4105,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 4105,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 4105,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 4105,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 4105,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4111,
											"end": 4219,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 4111,
											"end": 4219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4188,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 4206,
											"end": 4211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4188,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 4188,
											"end": 4212,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4188,
											"end": 4212,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 4188,
											"end": 4212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4183,
											"end": 4186,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4176,
											"end": 4213,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4111,
											"end": 4219,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4111,
											"end": 4219,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4111,
											"end": 4219,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4225,
											"end": 4343,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 4225,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4312,
											"end": 4336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 4330,
											"end": 4335,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4312,
											"end": 4336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 4312,
											"end": 4336,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4312,
											"end": 4336,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 4312,
											"end": 4336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4307,
											"end": 4310,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4300,
											"end": 4337,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4343,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4379,
											"end": 5111,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 4379,
											"end": 5111,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4498,
											"end": 4501,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4527,
											"end": 4581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 4575,
											"end": 4580,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4527,
											"end": 4581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 4527,
											"end": 4581,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4527,
											"end": 4581,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 4527,
											"end": 4581,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4597,
											"end": 4683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 4676,
											"end": 4682,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4674,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4597,
											"end": 4683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 4597,
											"end": 4683,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4597,
											"end": 4683,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 4597,
											"end": 4683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4590,
											"end": 4683,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4590,
											"end": 4683,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4707,
											"end": 4763,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 4757,
											"end": 4762,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4707,
											"end": 4763,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 4707,
											"end": 4763,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4707,
											"end": 4763,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 4707,
											"end": 4763,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4786,
											"end": 4793,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4817,
											"end": 4818,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4802,
											"end": 5086,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 4802,
											"end": 5086,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4827,
											"end": 4833,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4824,
											"end": 4825,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4821,
											"end": 4834,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4802,
											"end": 5086,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4802,
											"end": 5086,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 4802,
											"end": 5086,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4903,
											"end": 4909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4897,
											"end": 4910,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4930,
											"end": 4993,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 4989,
											"end": 4992,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4974,
											"end": 4987,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4930,
											"end": 4993,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 4930,
											"end": 4993,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4930,
											"end": 4993,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 4930,
											"end": 4993,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4923,
											"end": 4993,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 4923,
											"end": 4993,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5016,
											"end": 5076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 5069,
											"end": 5075,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5016,
											"end": 5076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 5016,
											"end": 5076,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5016,
											"end": 5076,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 5016,
											"end": 5076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5006,
											"end": 5076,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5006,
											"end": 5076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4862,
											"end": 5086,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4850,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4846,
											"end": 4847,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4837,
											"end": 4851,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4837,
											"end": 4851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4802,
											"end": 5086,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 4802,
											"end": 5086,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4802,
											"end": 5086,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 4802,
											"end": 5086,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4806,
											"end": 4820,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5102,
											"end": 5105,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5095,
											"end": 5105,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5095,
											"end": 5105,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4503,
											"end": 5111,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4503,
											"end": 5111,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4503,
											"end": 5111,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4379,
											"end": 5111,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4379,
											"end": 5111,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4379,
											"end": 5111,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4379,
											"end": 5111,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4379,
											"end": 5111,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5117,
											"end": 5235,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 5117,
											"end": 5235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 5222,
											"end": 5227,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 5204,
											"end": 5228,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5204,
											"end": 5228,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 5204,
											"end": 5228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5199,
											"end": 5202,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5229,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5117,
											"end": 5235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5117,
											"end": 5235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5117,
											"end": 5235,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5241,
											"end": 5463,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 5241,
											"end": 5463,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5334,
											"end": 5338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5372,
											"end": 5374,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5361,
											"end": 5370,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5357,
											"end": 5375,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5349,
											"end": 5375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5349,
											"end": 5375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5385,
											"end": 5456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 5453,
											"end": 5454,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5442,
											"end": 5451,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5438,
											"end": 5455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5429,
											"end": 5435,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5385,
											"end": 5456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 5385,
											"end": 5456,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5385,
											"end": 5456,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 5385,
											"end": 5456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5241,
											"end": 5463,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5241,
											"end": 5463,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5241,
											"end": 5463,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5241,
											"end": 5463,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5241,
											"end": 5463,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5469,
											"end": 5691,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 5469,
											"end": 5691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5562,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5600,
											"end": 5602,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5598,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5585,
											"end": 5603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5577,
											"end": 5603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5577,
											"end": 5603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5613,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 5681,
											"end": 5682,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5670,
											"end": 5679,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5666,
											"end": 5683,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5657,
											"end": 5663,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5613,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 5613,
											"end": 5684,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5613,
											"end": 5684,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 5613,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5469,
											"end": 5691,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5469,
											"end": 5691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5469,
											"end": 5691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5469,
											"end": 5691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5469,
											"end": 5691,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5697,
											"end": 6180,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 5697,
											"end": 6180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5868,
											"end": 5872,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5906,
											"end": 5908,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5895,
											"end": 5904,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5891,
											"end": 5909,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5883,
											"end": 5909,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5883,
											"end": 5909,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5919,
											"end": 5990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 5987,
											"end": 5988,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5976,
											"end": 5985,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5972,
											"end": 5989,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5963,
											"end": 5969,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5919,
											"end": 5990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 5919,
											"end": 5990,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5919,
											"end": 5990,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 5919,
											"end": 5990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6037,
											"end": 6046,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6031,
											"end": 6035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6027,
											"end": 6047,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6022,
											"end": 6024,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6011,
											"end": 6020,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6007,
											"end": 6025,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6000,
											"end": 6048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 6168,
											"end": 6172,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6159,
											"end": 6165,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 6065,
											"end": 6173,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6065,
											"end": 6173,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 6065,
											"end": 6173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6057,
											"end": 6173,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6057,
											"end": 6173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 6180,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 6180,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 6180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 6180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 6180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 6180,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6186,
											"end": 6315,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 6186,
											"end": 6315,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6220,
											"end": 6226,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6247,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 6247,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 6247,
											"end": 6267,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6247,
											"end": 6267,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 6247,
											"end": 6267,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6237,
											"end": 6267,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6237,
											"end": 6267,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6276,
											"end": 6309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 6304,
											"end": 6308,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6296,
											"end": 6302,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6276,
											"end": 6309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 6276,
											"end": 6309,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6276,
											"end": 6309,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 6276,
											"end": 6309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6186,
											"end": 6315,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6186,
											"end": 6315,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6186,
											"end": 6315,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6186,
											"end": 6315,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6321,
											"end": 6396,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 6321,
											"end": 6396,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6354,
											"end": 6360,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6387,
											"end": 6389,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6381,
											"end": 6390,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6371,
											"end": 6390,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6371,
											"end": 6390,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6321,
											"end": 6396,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6321,
											"end": 6396,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6402,
											"end": 6713,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 6402,
											"end": 6713,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6483,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6569,
											"end": 6587,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6561,
											"end": 6567,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6558,
											"end": 6588,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6555,
											"end": 6611,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6555,
											"end": 6611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 6555,
											"end": 6611,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6591,
											"end": 6609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 6591,
											"end": 6609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 6591,
											"end": 6609,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6591,
											"end": 6609,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 6591,
											"end": 6609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6555,
											"end": 6611,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 6555,
											"end": 6611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6641,
											"end": 6645,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6633,
											"end": 6639,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6629,
											"end": 6646,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6621,
											"end": 6646,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6621,
											"end": 6646,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6701,
											"end": 6705,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6695,
											"end": 6699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6691,
											"end": 6706,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6683,
											"end": 6706,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6683,
											"end": 6706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6402,
											"end": 6713,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6402,
											"end": 6713,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6402,
											"end": 6713,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6402,
											"end": 6713,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6719,
											"end": 6851,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 6719,
											"end": 6851,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6786,
											"end": 6790,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6809,
											"end": 6812,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6812,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6839,
											"end": 6843,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6837,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6830,
											"end": 6844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6822,
											"end": 6844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6822,
											"end": 6844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6719,
											"end": 6851,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6719,
											"end": 6851,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6719,
											"end": 6851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6719,
											"end": 6851,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6857,
											"end": 6971,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 6857,
											"end": 6971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6924,
											"end": 6930,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6958,
											"end": 6963,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6952,
											"end": 6964,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6942,
											"end": 6964,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6942,
											"end": 6964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6857,
											"end": 6971,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6857,
											"end": 6971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6857,
											"end": 6971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6857,
											"end": 6971,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6977,
											"end": 7090,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 6977,
											"end": 7090,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7047,
											"end": 7051,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7079,
											"end": 7083,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7074,
											"end": 7077,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7070,
											"end": 7084,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7062,
											"end": 7084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7062,
											"end": 7084,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6977,
											"end": 7090,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6977,
											"end": 7090,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6977,
											"end": 7090,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6977,
											"end": 7090,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7096,
											"end": 7280,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 7096,
											"end": 7280,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7195,
											"end": 7206,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7229,
											"end": 7235,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7224,
											"end": 7227,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7217,
											"end": 7236,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7269,
											"end": 7273,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7264,
											"end": 7267,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7260,
											"end": 7274,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7245,
											"end": 7274,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7245,
											"end": 7274,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7096,
											"end": 7280,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7096,
											"end": 7280,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7096,
											"end": 7280,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7096,
											"end": 7280,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7096,
											"end": 7280,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7286,
											"end": 7634,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 7286,
											"end": 7634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7326,
											"end": 7333,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7349,
											"end": 7369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 7367,
											"end": 7368,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7349,
											"end": 7369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 7349,
											"end": 7369,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7349,
											"end": 7369,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 7349,
											"end": 7369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7369,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7369,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7383,
											"end": 7403,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 7401,
											"end": 7402,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7383,
											"end": 7403,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 7383,
											"end": 7403,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7383,
											"end": 7403,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 7383,
											"end": 7403,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7571,
											"end": 7572,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7503,
											"end": 7569,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7499,
											"end": 7573,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 7496,
											"end": 7497,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7493,
											"end": 7574,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7488,
											"end": 7489,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7481,
											"end": 7490,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7474,
											"end": 7491,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7470,
											"end": 7575,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7467,
											"end": 7598,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7467,
											"end": 7598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 7467,
											"end": 7598,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 7578,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 7578,
											"end": 7596,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7578,
											"end": 7596,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 7578,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7467,
											"end": 7598,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 7467,
											"end": 7598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7627,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7623,
											"end": 7624,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7619,
											"end": 7628,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7608,
											"end": 7628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7608,
											"end": 7628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7286,
											"end": 7634,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7286,
											"end": 7634,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7286,
											"end": 7634,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7286,
											"end": 7634,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7286,
											"end": 7634,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7640,
											"end": 7736,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 7640,
											"end": 7736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7677,
											"end": 7684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7706,
											"end": 7730,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 7724,
											"end": 7729,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7706,
											"end": 7730,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 7706,
											"end": 7730,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7706,
											"end": 7730,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 7706,
											"end": 7730,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7695,
											"end": 7730,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7695,
											"end": 7730,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7640,
											"end": 7736,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7640,
											"end": 7736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7640,
											"end": 7736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7640,
											"end": 7736,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7742,
											"end": 7852,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 7742,
											"end": 7852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7800,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7822,
											"end": 7846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 7840,
											"end": 7845,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7822,
											"end": 7846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 7822,
											"end": 7846,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7822,
											"end": 7846,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 7822,
											"end": 7846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7811,
											"end": 7846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7811,
											"end": 7846,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7742,
											"end": 7852,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7742,
											"end": 7852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7742,
											"end": 7852,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7742,
											"end": 7852,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7858,
											"end": 7968,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 7858,
											"end": 7968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7909,
											"end": 7916,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7938,
											"end": 7962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 7956,
											"end": 7961,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7938,
											"end": 7962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 7938,
											"end": 7962,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7938,
											"end": 7962,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 7938,
											"end": 7962,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7927,
											"end": 7962,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7927,
											"end": 7962,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7858,
											"end": 7968,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7858,
											"end": 7968,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7858,
											"end": 7968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7858,
											"end": 7968,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7974,
											"end": 8100,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 7974,
											"end": 8100,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8011,
											"end": 8018,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8051,
											"end": 8093,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8044,
											"end": 8049,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8040,
											"end": 8094,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7974,
											"end": 8100,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7974,
											"end": 8100,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7974,
											"end": 8100,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7974,
											"end": 8100,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8106,
											"end": 8183,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 8106,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8143,
											"end": 8150,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8172,
											"end": 8177,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8106,
											"end": 8183,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8106,
											"end": 8183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8106,
											"end": 8183,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8106,
											"end": 8183,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8189,
											"end": 8470,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 8189,
											"end": 8470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8272,
											"end": 8299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 8294,
											"end": 8298,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8272,
											"end": 8299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 8272,
											"end": 8299,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8272,
											"end": 8299,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 8272,
											"end": 8299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8264,
											"end": 8270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8260,
											"end": 8300,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8402,
											"end": 8408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8390,
											"end": 8400,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8387,
											"end": 8409,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8366,
											"end": 8384,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8354,
											"end": 8364,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8351,
											"end": 8385,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8348,
											"end": 8410,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 8345,
											"end": 8433,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8345,
											"end": 8433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 8345,
											"end": 8433,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8413,
											"end": 8431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 8413,
											"end": 8431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 8413,
											"end": 8431,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8413,
											"end": 8431,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 8413,
											"end": 8431,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8345,
											"end": 8433,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 8345,
											"end": 8433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8463,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8449,
											"end": 8451,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8442,
											"end": 8464,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8232,
											"end": 8470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8189,
											"end": 8470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8189,
											"end": 8470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8189,
											"end": 8470,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8476,
											"end": 8656,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 8476,
											"end": 8656,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8524,
											"end": 8601,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8521,
											"end": 8522,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8514,
											"end": 8602,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8621,
											"end": 8625,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 8618,
											"end": 8619,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8611,
											"end": 8626,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8645,
											"end": 8649,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8642,
											"end": 8643,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8635,
											"end": 8650,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8662,
											"end": 8842,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 8662,
											"end": 8842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8710,
											"end": 8787,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8707,
											"end": 8708,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8700,
											"end": 8788,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8807,
											"end": 8811,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 8804,
											"end": 8805,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8797,
											"end": 8812,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8831,
											"end": 8835,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8828,
											"end": 8829,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8821,
											"end": 8836,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8848,
											"end": 9028,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 8848,
											"end": 9028,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8896,
											"end": 8973,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8893,
											"end": 8894,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8886,
											"end": 8974,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8993,
											"end": 8997,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 8990,
											"end": 8991,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8983,
											"end": 8998,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9017,
											"end": 9021,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9014,
											"end": 9015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9007,
											"end": 9022,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9034,
											"end": 9151,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 9034,
											"end": 9151,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9143,
											"end": 9144,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9140,
											"end": 9141,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9133,
											"end": 9145,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9157,
											"end": 9274,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 9157,
											"end": 9274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9266,
											"end": 9267,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9263,
											"end": 9264,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9256,
											"end": 9268,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9280,
											"end": 9397,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 9280,
											"end": 9397,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9389,
											"end": 9390,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9386,
											"end": 9387,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9379,
											"end": 9391,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9403,
											"end": 9520,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 9403,
											"end": 9520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9512,
											"end": 9513,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9509,
											"end": 9510,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9502,
											"end": 9514,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9526,
											"end": 9628,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 9526,
											"end": 9628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9567,
											"end": 9573,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9618,
											"end": 9620,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 9614,
											"end": 9621,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 9609,
											"end": 9611,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 9602,
											"end": 9607,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9598,
											"end": 9612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9594,
											"end": 9622,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9584,
											"end": 9622,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9584,
											"end": 9622,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9526,
											"end": 9628,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9526,
											"end": 9628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9526,
											"end": 9628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9526,
											"end": 9628,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9634,
											"end": 9756,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 9634,
											"end": 9756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9707,
											"end": 9731,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 9725,
											"end": 9730,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9707,
											"end": 9731,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 9707,
											"end": 9731,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9707,
											"end": 9731,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 9707,
											"end": 9731,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9700,
											"end": 9705,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9697,
											"end": 9732,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9687,
											"end": 9750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 9687,
											"end": 9750,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9743,
											"end": 9744,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9736,
											"end": 9748,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9687,
											"end": 9750,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 9687,
											"end": 9750,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9634,
											"end": 9756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9634,
											"end": 9756,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9762,
											"end": 9912,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 9762,
											"end": 9912,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9849,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 9881,
											"end": 9886,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9849,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 9849,
											"end": 9887,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9849,
											"end": 9887,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 9849,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9842,
											"end": 9847,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9839,
											"end": 9888,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 9829,
											"end": 9906,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9902,
											"end": 9903,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9899,
											"end": 9900,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9892,
											"end": 9904,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9906,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 9829,
											"end": 9906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9762,
											"end": 9912,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9762,
											"end": 9912,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9918,
											"end": 10068,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 9918,
											"end": 10068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10005,
											"end": 10043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 10037,
											"end": 10042,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10005,
											"end": 10043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 10005,
											"end": 10043,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10005,
											"end": 10043,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 10005,
											"end": 10043,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9998,
											"end": 10003,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10044,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9985,
											"end": 10062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 9985,
											"end": 10062,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10058,
											"end": 10059,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10055,
											"end": 10056,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10048,
											"end": 10060,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9985,
											"end": 10062,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 9985,
											"end": 10062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9918,
											"end": 10068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9918,
											"end": 10068,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10074,
											"end": 10196,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 10074,
											"end": 10196,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10147,
											"end": 10171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 10165,
											"end": 10170,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10147,
											"end": 10171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 10147,
											"end": 10171,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10147,
											"end": 10171,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 10147,
											"end": 10171,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10140,
											"end": 10145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10137,
											"end": 10172,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10127,
											"end": 10190,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 10127,
											"end": 10190,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10186,
											"end": 10187,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10183,
											"end": 10184,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10176,
											"end": 10188,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10127,
											"end": 10190,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 10127,
											"end": 10190,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10074,
											"end": 10196,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10074,
											"end": 10196,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"BUSD()": "484f4ea9",
							"CalcLpPrice(address,address,address)": "20ae0b6d",
							"WBNB()": "8dd95002"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BUSD\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"lpAddress\",\"type\":\"address\"},{\"internalType\":\"contract Router\",\"name\":\"routerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"busd\",\"type\":\"address\"}],\"name\":\"CalcLpPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WBNB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"LpUtils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0x6a0c2d1f43bb372d5bc93710958ce457ab68c96ce0543a4ce9661a64639b4b73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c70ac9a67e2c902833613f8e885efd0d5da964c1e00f623eee9f5e23575e0f9a\",\"dweb:/ipfs/QmZudRw8iRnVYLaiLo5yaJcRXZsuLwMnRGvkSmFcZvCsXB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 332,
								"contract": "contracts/LpPrice.sol:LpUtils",
								"label": "WBNB",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 335,
								"contract": "contracts/LpPrice.sol:LpUtils",
								"label": "BUSD",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 338,
								"contract": "contracts/LpPrice.sol:LpUtils",
								"label": "amount",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Router": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getAmountsOut(uint256,address[])": "d06ca61f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"Router\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0x6a0c2d1f43bb372d5bc93710958ce457ab68c96ce0543a4ce9661a64639b4b73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c70ac9a67e2c902833613f8e885efd0d5da964c1e00f623eee9f5e23575e0f9a\",\"dweb:/ipfs/QmZudRw8iRnVYLaiLo5yaJcRXZsuLwMnRGvkSmFcZvCsXB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/LpPrice.sol:251:66:\n    |\n251 |     function CalcLpPrice(IERC20 lpAddress, Router routerAddress, address busd) external view returns(uint256){\n    |                                                                  ^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 9413,
					"file": "contracts/LpPrice.sol",
					"start": 9401
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/LpPrice.sol": {
				"ast": {
					"absolutePath": "contracts/LpPrice.sol",
					"exportedSymbols": {
						"Address": [
							293
						],
						"IERC20": [
							317
						],
						"LpUtils": [
							417
						],
						"Router": [
							329
						]
					},
					"id": 418,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 293,
							"linearizedBaseContracts": [
								293
							],
							"name": "Address",
							"nameLocation": "68:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "1134:260:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 9,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4,
																"src": "1363:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 10,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1363:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1363:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1363:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 8,
												"id": 14,
												"nodeType": "Return",
												"src": "1356:30:0"
											}
										]
									},
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "83:979:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 16,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1077:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1096:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "1088:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1088:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1087:17:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "1128:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 6,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1128:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1127:6:0"
									},
									"scope": 293,
									"src": "1068:326:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "2400:246:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 27,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2427:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$293",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$293",
																				"typeString": "library Address"
																			}
																		],
																		"id": 26,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2419:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 25,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2419:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2419:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2419:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 30,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "2444:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2419:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2452:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 24,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2411:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2411:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 34,
												"nodeType": "ExpressionStatement",
												"src": "2411:73:0"
											},
											{
												"assignments": [
													36,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 36,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2503:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 49,
														"src": "2498:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 35,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2498:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 43,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2546:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 37,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "2516:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2516:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 40,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 39,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "2538:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2516:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2516:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2497:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 45,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "2568:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2577:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2560:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2560:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "2560:78:0"
											}
										]
									},
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "1402:921:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 50,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2338:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2364:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "2348:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2348:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2383:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "2375:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2375:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2347:43:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2400:0:0"
									},
									"scope": 293,
									"src": "2329:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "3497:86:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 61,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "3528:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 62,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "3536:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3542:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 60,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															67,
															87
														],
														"referencedDeclaration": 87,
														"src": "3515:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3515:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 59,
												"id": 65,
												"nodeType": "Return",
												"src": "3508:67:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "2654:748:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3417:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3438:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "3430:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3430:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3459:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "3446:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 54,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3446:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3429:35:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "3483:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 57,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3483:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3482:14:0"
									},
									"scope": 293,
									"src": "3408:175:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "3964:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 80,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "4004:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 81,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "4012:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4018:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 83,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 74,
															"src": "4021:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 79,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															107,
															157
														],
														"referencedDeclaration": 157,
														"src": "3982:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3982:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 78,
												"id": 85,
												"nodeType": "Return",
												"src": "3975:59:0"
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "3591:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3822:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3853:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3845:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3845:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3883:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3870:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 71,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3870:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3912:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3898:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 73,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3898:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3834:97:0"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3950:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 76,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3950:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3949:14:0"
									},
									"scope": 293,
									"src": "3813:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "4564:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 100,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "4604:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 101,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "4612:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 102,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "4618:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4625:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 99,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															107,
															157
														],
														"referencedDeclaration": 157,
														"src": "4582:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4582:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 98,
												"id": 105,
												"nodeType": "Return",
												"src": "4575:94:0"
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "4050:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4426:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4466:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "4458:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4458:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4496:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "4483:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 91,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4483:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4519:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "4511:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 93,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4511:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4447:84:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "4550:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 96,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4550:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4549:14:0"
									},
									"scope": 293,
									"src": "4417:260:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "5117:326:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 124,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5144:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$293",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$293",
																				"typeString": "library Address"
																			}
																		],
																		"id": 123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5136:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 122,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5136:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5136:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5136:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 127,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "5161:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5136:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5168:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 121,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5128:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5128:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "5128:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 134,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 110,
																	"src": "5239:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 133,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "5228:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5228:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5248:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 132,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5220:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5220:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 138,
												"nodeType": "ExpressionStatement",
												"src": "5220:60:0"
											},
											{
												"assignments": [
													140,
													142
												],
												"declarations": [
													{
														"constant": false,
														"id": 140,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5299:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 156,
														"src": "5294:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 139,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5294:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 142,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5321:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 156,
														"src": "5308:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 141,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5308:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 149,
												"initialValue": {
													"arguments": [
														{
															"id": 147,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "5361:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 143,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "5335:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5335:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 145,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "5354:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5335:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5335:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5293:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 151,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "5401:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 152,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "5410:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 153,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "5422:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 150,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "5384:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5384:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 120,
												"id": 155,
												"nodeType": "Return",
												"src": "5377:58:0"
											}
										]
									},
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "4685:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4942:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4982:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "4974:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4974:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5012:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "4999:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 111,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4999:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5035:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "5027:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5027:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5065:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "5051:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 115,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5051:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4963:121:0"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "5103:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 118,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5103:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5102:14:0"
									},
									"scope": 293,
									"src": "4933:510:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "5728:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 168,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "5765:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 169,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "5773:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5779:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 167,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															174,
															209
														],
														"referencedDeclaration": 209,
														"src": "5746:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5746:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 166,
												"id": 172,
												"nodeType": "Return",
												"src": "5739:80:0"
											}
										]
									},
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "5451:171:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5637:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5664:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "5656:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5656:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "5672:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5672:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5655:35:0"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "5714:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 164,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5714:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5713:14:0"
									},
									"scope": 293,
									"src": "5628:199:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "6181:233:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 188,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 177,
																	"src": "6211:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 187,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "6200:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6200:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6220:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 186,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6192:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6192:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "6192:67:0"
											},
											{
												"assignments": [
													194,
													196
												],
												"declarations": [
													{
														"constant": false,
														"id": 194,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6278:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 208,
														"src": "6273:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 193,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6273:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 196,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6300:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 208,
														"src": "6287:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 195,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6287:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 201,
												"initialValue": {
													"arguments": [
														{
															"id": 199,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "6332:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 197,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "6314:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6314:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6314:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6272:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 203,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "6372:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 204,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "6381:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 205,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "6393:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 202,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "6355:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6355:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 185,
												"id": 207,
												"nodeType": "Return",
												"src": "6348:58:0"
											}
										]
									},
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "5835:178:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6028:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6065:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "6057:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6057:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6095:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "6082:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 178,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6082:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6124:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "6110:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 180,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6110:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6046:97:0"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "6167:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 183,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6167:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6166:14:0"
									},
									"scope": 293,
									"src": "6019:395:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 225,
										"nodeType": "Block",
										"src": "6698:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 220,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "6737:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 221,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "6745:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6751:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 219,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															226,
															261
														],
														"referencedDeclaration": 261,
														"src": "6716:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6716:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 218,
												"id": 224,
												"nodeType": "Return",
												"src": "6709:84:0"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "6422:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6610:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6639:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "6631:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6631:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6660:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "6647:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 213,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6647:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6630:35:0"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "6684:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 216,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6684:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6683:14:0"
									},
									"scope": 293,
									"src": "6601:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "7154:237:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 240,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 229,
																	"src": "7184:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 239,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "7173:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7173:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 238,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7165:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7165:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 244,
												"nodeType": "ExpressionStatement",
												"src": "7165:69:0"
											},
											{
												"assignments": [
													246,
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 246,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7253:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "7248:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 245,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7248:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7275:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "7262:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 247,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7262:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 253,
												"initialValue": {
													"arguments": [
														{
															"id": 251,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "7309:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 249,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "7289:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7289:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7289:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7247:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 255,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "7349:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 256,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "7358:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 257,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "7370:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 254,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "7332:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7332:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 237,
												"id": 259,
												"nodeType": "Return",
												"src": "7325:58:0"
											}
										]
									},
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "6809:180:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7004:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7043:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "7035:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7035:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7073:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "7060:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 230,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7060:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7102:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "7088:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 232,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7088:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7024:97:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "7140:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 235,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7140:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7139:14:0"
									},
									"scope": 293,
									"src": "6995:396:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 291,
										"nodeType": "Block",
										"src": "7783:548:0",
										"statements": [
											{
												"condition": {
													"id": 273,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 264,
													"src": "7798:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 289,
													"nodeType": "Block",
													"src": "7857:467:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 277,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 266,
																		"src": "7943:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7943:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7963:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7943:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 287,
																"nodeType": "Block",
																"src": "8258:55:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 284,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 268,
																					"src": "8284:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 283,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8277:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8277:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 286,
																		"nodeType": "ExpressionStatement",
																		"src": "8277:20:0"
																	}
																]
															},
															"id": 288,
															"nodeType": "IfStatement",
															"src": "7939:374:0",
															"trueBody": {
																"id": 282,
																"nodeType": "Block",
																"src": "7966:286:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8089:148:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8112:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8141:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8135:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8135:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8116:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8185:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8189:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8181:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8181:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8202:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8174:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8174:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8174:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 266,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8141:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 266,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8189:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 281,
																		"nodeType": "InlineAssembly",
																		"src": "8080:157:0"
																	}
																]
															}
														}
													]
												},
												"id": 290,
												"nodeType": "IfStatement",
												"src": "7794:530:0",
												"trueBody": {
													"id": 276,
													"nodeType": "Block",
													"src": "7807:44:0",
													"statements": [
														{
															"expression": {
																"id": 274,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 266,
																"src": "7829:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 272,
															"id": 275,
															"nodeType": "Return",
															"src": "7822:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "7399:214:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7628:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "7655:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7655:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7691:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "7678:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 265,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7678:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7726:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "7712:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 267,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7712:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7644:101:0"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "7769:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 270,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7769:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7768:14:0"
									},
									"scope": 293,
									"src": "7619:712:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 418,
							"src": "60:8274:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 317,
							"linearizedBaseContracts": [
								317
							],
							"name": "IERC20",
							"nameLocation": "8348:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 294,
										"nodeType": "StructuredDocumentation",
										"src": "8362:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 299,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "8445:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8456:2:0"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "8482:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8482:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8481:9:0"
									},
									"scope": 317,
									"src": "8436:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0dfe1681",
									"id": 304,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "8508:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8514:2:0"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "8540:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8540:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8539:9:0"
									},
									"scope": 317,
									"src": "8499:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d21220a7",
									"id": 309,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "8566:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8572:2:0"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "8598:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8598:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8597:9:0"
									},
									"scope": 317,
									"src": "8557:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 316,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "8624:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8642:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "8634:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8633:17:0"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "8674:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8674:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8673:9:0"
									},
									"scope": 317,
									"src": "8615:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 418,
							"src": "8338:348:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 329,
							"linearizedBaseContracts": [
								329
							],
							"name": "Router",
							"nameLocation": "8700:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d06ca61f",
									"id": 328,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "8723:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "8742:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "8737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 318,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8737:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "8769:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "8752:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 320,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "8752:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 321,
													"nodeType": "ArrayTypeName",
													"src": "8752:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8736:38:0"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "8830:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "8816:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 324,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "8816:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 325,
													"nodeType": "ArrayTypeName",
													"src": "8816:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8815:23:0"
									},
									"scope": 329,
									"src": "8714:125:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 418,
							"src": "8690:152:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 417,
							"linearizedBaseContracts": [
								417
							],
							"name": "LpUtils",
							"nameLocation": "8855:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8dd95002",
									"id": 332,
									"mutability": "mutable",
									"name": "WBNB",
									"nameLocation": "8885:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 417,
									"src": "8870:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 330,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "8870:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307861653133643938396461433266306445624666343630614331313261383337433839424161376364",
										"id": 331,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8892:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "484f4ea9",
									"id": 335,
									"mutability": "mutable",
									"name": "BUSD",
									"nameLocation": "8956:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 417,
									"src": "8941:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 333,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "8941:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307837383836374262456546343466323332366246384444643139343161343433393338324546324137",
										"id": 334,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8963:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 338,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "9020:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 417,
									"src": "9012:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 336,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9012:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030303030303030303030303030303030",
										"id": 337,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9029:19:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1000000000000000000"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 385,
										"nodeType": "Block",
										"src": "9136:196:0",
										"statements": [
											{
												"assignments": [
													352
												],
												"declarations": [
													{
														"constant": false,
														"id": 352,
														"mutability": "mutable",
														"name": "path",
														"nameLocation": "9164:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 385,
														"src": "9147:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 350,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9147:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 351,
															"nodeType": "ArrayTypeName",
															"src": "9147:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 358,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "33",
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9185:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															}
														],
														"id": 355,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "9171:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 353,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9175:7:0",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 354,
															"nodeType": "ArrayTypeName",
															"src": "9175:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9171:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9147:40:0"
											},
											{
												"expression": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 359,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "9198:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 361,
														"indexExpression": {
															"hexValue": "30",
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9203:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9198:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 362,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "9208:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9198:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 364,
												"nodeType": "ExpressionStatement",
												"src": "9198:15:0"
											},
											{
												"expression": {
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 365,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "9224:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 367,
														"indexExpression": {
															"hexValue": "31",
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9229:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9224:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 368,
														"name": "WBNB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "9234:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9224:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 370,
												"nodeType": "ExpressionStatement",
												"src": "9224:14:0"
											},
											{
												"expression": {
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 371,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "9249:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 373,
														"indexExpression": {
															"hexValue": "32",
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9254:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9249:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 374,
														"name": "BUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "9259:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9249:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "9249:14:0"
											},
											{
												"expression": {
													"baseExpression": {
														"arguments": [
															{
																"id": 379,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 338,
																"src": "9309:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 380,
																"name": "path",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 352,
																"src": "9316:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															],
															"expression": {
																"id": 377,
																"name": "routerAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "9281:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Router_$329",
																	"typeString": "contract Router"
																}
															},
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getAmountsOut",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 328,
															"src": "9281:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
															}
														},
														"id": 381,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9281:40:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"id": 383,
													"indexExpression": {
														"hexValue": "32",
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9322:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9281:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 347,
												"id": 384,
												"nodeType": "Return",
												"src": "9274:50:0"
											}
										]
									},
									"id": 386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "price",
									"nameLocation": "9066:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "routerAddress",
												"nameLocation": "9079:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "9072:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_Router_$329",
													"typeString": "contract Router"
												},
												"typeName": {
													"id": 340,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 339,
														"name": "Router",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 329,
														"src": "9072:6:0"
													},
													"referencedDeclaration": 329,
													"src": "9072:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Router_$329",
														"typeString": "contract Router"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9102:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "9094:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9094:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9071:37:0"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "9131:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9131:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9130:6:0"
									},
									"scope": 417,
									"src": "9057:275:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "9445:110:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"expression": {
																						"id": 401,
																						"name": "lpAddress",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 389,
																						"src": "9485:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$317",
																							"typeString": "contract IERC20"
																						}
																					},
																					"id": 402,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "token0",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 304,
																					"src": "9485:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																						"typeString": "function () view external returns (address)"
																					}
																				},
																				"id": 403,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9485:18:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 399,
																				"name": "lpAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 389,
																				"src": "9465:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$317",
																					"typeString": "contract IERC20"
																				}
																			},
																			"id": 400,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "balanceOf",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 316,
																			"src": "9465:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																				"typeString": "function (address) view external returns (uint256)"
																			}
																		},
																		"id": 404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9465:39:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 406,
																				"name": "routerAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 392,
																				"src": "9511:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Router_$329",
																					"typeString": "contract Router"
																				}
																			},
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"expression": {
																						"id": 407,
																						"name": "lpAddress",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 389,
																						"src": "9525:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$317",
																							"typeString": "contract IERC20"
																						}
																					},
																					"id": 408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "token0",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 304,
																					"src": "9525:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																						"typeString": "function () view external returns (address)"
																					}
																				},
																				"id": 409,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9525:18:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Router_$329",
																					"typeString": "contract Router"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 405,
																			"name": "price",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 386,
																			"src": "9505:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_contract$_Router_$329_$_t_address_$returns$_t_uint256_$",
																				"typeString": "function (contract Router,address) view returns (uint256)"
																			}
																		},
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9505:39:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9465:79:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 412,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "9464:81:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 413,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "9463:84:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 398,
												"id": 414,
												"nodeType": "Return",
												"src": "9456:91:0"
											}
										]
									},
									"functionSelector": "20ae0b6d",
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "CalcLpPrice",
									"nameLocation": "9349:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "lpAddress",
												"nameLocation": "9368:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "9361:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$317",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 388,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 387,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 317,
														"src": "9361:6:0"
													},
													"referencedDeclaration": 317,
													"src": "9361:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$317",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "routerAddress",
												"nameLocation": "9386:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "9379:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_Router_$329",
													"typeString": "contract Router"
												},
												"typeName": {
													"id": 391,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 390,
														"name": "Router",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 329,
														"src": "9379:6:0"
													},
													"referencedDeclaration": 329,
													"src": "9379:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Router_$329",
														"typeString": "contract Router"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "busd",
												"nameLocation": "9409:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "9401:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9401:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9360:54:0"
									},
									"returnParameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "9437:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9437:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9436:9:0"
									},
									"scope": 417,
									"src": "9340:215:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 418,
							"src": "8846:712:0",
							"usedErrors": []
						}
					],
					"src": "33:9525:0"
				},
				"id": 0
			}
		}
	}
}